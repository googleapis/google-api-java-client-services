/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.aiplatform.v1;

/**
 * Service definition for Aiplatform (v1).
 *
 * <p>
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://cloud.google.com/vertex-ai/" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link AiplatformRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Aiplatform extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        (com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 32 ||
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION == 31 &&
        com.google.api.client.googleapis.GoogleUtils.BUGFIX_VERSION >= 1))) ||
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION >= 2,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.31.1 of google-api-client to run version " +
        "2.0.0 of the Vertex AI API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://aiplatform.googleapis.com/";

  /**
   * The default encoded mTLS root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.31
   */
  public static final String DEFAULT_MTLS_ROOT_URL = "https://aiplatform.mtls.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Aiplatform(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Aiplatform(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Datasets collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Aiplatform aiplatform = new Aiplatform(...);}
   *   {@code Aiplatform.Datasets.List request = aiplatform.datasets().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Datasets datasets() {
    return new Datasets();
  }

  /**
   * The "datasets" collection of methods.
   */
  public class Datasets {

    /**
     * Creates a Dataset.
     *
     * Create a request for the method "datasets.create".
     *
     * This request holds the parameters needed by the aiplatform server.  After setting any optional
     * parameters, call the {@link Create#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Dataset}
     * @return the request
     */
    public Create create(com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Dataset content) throws java.io.IOException {
      Create result = new Create(content);
      initialize(result);
      return result;
    }

    public class Create extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

      private static final String REST_PATH = "v1/datasets";

      /**
       * Creates a Dataset.
       *
       * Create a request for the method "datasets.create".
       *
       * This request holds the parameters needed by the the aiplatform server.  After setting any
       * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
       * <p> {@link
       * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Dataset}
       * @since 1.13
       */
      protected Create(com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Dataset content) {
        super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
      }

      @Override
      public Create set$Xgafv(java.lang.String $Xgafv) {
        return (Create) super.set$Xgafv($Xgafv);
      }

      @Override
      public Create setAccessToken(java.lang.String accessToken) {
        return (Create) super.setAccessToken(accessToken);
      }

      @Override
      public Create setAlt(java.lang.String alt) {
        return (Create) super.setAlt(alt);
      }

      @Override
      public Create setCallback(java.lang.String callback) {
        return (Create) super.setCallback(callback);
      }

      @Override
      public Create setFields(java.lang.String fields) {
        return (Create) super.setFields(fields);
      }

      @Override
      public Create setKey(java.lang.String key) {
        return (Create) super.setKey(key);
      }

      @Override
      public Create setOauthToken(java.lang.String oauthToken) {
        return (Create) super.setOauthToken(oauthToken);
      }

      @Override
      public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Create) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Create setQuotaUser(java.lang.String quotaUser) {
        return (Create) super.setQuotaUser(quotaUser);
      }

      @Override
      public Create setUploadType(java.lang.String uploadType) {
        return (Create) super.setUploadType(uploadType);
      }

      @Override
      public Create setUploadProtocol(java.lang.String uploadProtocol) {
        return (Create) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. The resource name of the Location to create the Dataset in. Format:
       * `projects/{project}/locations/{location}`
       */
      @com.google.api.client.util.Key
      private java.lang.String parent;

      /** Required. The resource name of the Location to create the Dataset in. Format:
     `projects/{project}/locations/{location}`
       */
      public java.lang.String getParent() {
        return parent;
      }

      /**
       * Required. The resource name of the Location to create the Dataset in. Format:
       * `projects/{project}/locations/{location}`
       */
      public Create setParent(java.lang.String parent) {
        this.parent = parent;
        return this;
      }

      @Override
      public Create set(String parameterName, Object value) {
        return (Create) super.set(parameterName, value);
      }
    }
    /**
     * Deletes a Dataset.
     *
     * Create a request for the method "datasets.delete".
     *
     * This request holds the parameters needed by the aiplatform server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param name Required. The resource name of the Dataset to delete. Format:
     *        `projects/{project}/locations/{location}/datasets/{dataset}`
     * @return the request
     */
    public Delete delete(java.lang.String name) throws java.io.IOException {
      Delete result = new Delete(name);
      initialize(result);
      return result;
    }

    public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

      private static final String REST_PATH = "v1/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^datasets/[^/]+$");

      /**
       * Deletes a Dataset.
       *
       * Create a request for the method "datasets.delete".
       *
       * This request holds the parameters needed by the the aiplatform server.  After setting any
       * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       * <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name Required. The resource name of the Dataset to delete. Format:
     *        `projects/{project}/locations/{location}/datasets/{dataset}`
       * @since 1.13
       */
      protected Delete(java.lang.String name) {
        super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^datasets/[^/]+$");
        }
      }

      @Override
      public Delete set$Xgafv(java.lang.String $Xgafv) {
        return (Delete) super.set$Xgafv($Xgafv);
      }

      @Override
      public Delete setAccessToken(java.lang.String accessToken) {
        return (Delete) super.setAccessToken(accessToken);
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setCallback(java.lang.String callback) {
        return (Delete) super.setCallback(callback);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUploadType(java.lang.String uploadType) {
        return (Delete) super.setUploadType(uploadType);
      }

      @Override
      public Delete setUploadProtocol(java.lang.String uploadProtocol) {
        return (Delete) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. The resource name of the Dataset to delete. Format:
       * `projects/{project}/locations/{location}/datasets/{dataset}`
       */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Required. The resource name of the Dataset to delete. Format:
     `projects/{project}/locations/{location}/datasets/{dataset}`
       */
      public java.lang.String getName() {
        return name;
      }

      /**
       * Required. The resource name of the Dataset to delete. Format:
       * `projects/{project}/locations/{location}/datasets/{dataset}`
       */
      public Delete setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^datasets/[^/]+$");
        }
        this.name = name;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Gets a Dataset.
     *
     * Create a request for the method "datasets.get".
     *
     * This request holds the parameters needed by the aiplatform server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param name Required. The name of the Dataset resource.
     * @return the request
     */
    public Get get(java.lang.String name) throws java.io.IOException {
      Get result = new Get(name);
      initialize(result);
      return result;
    }

    public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Dataset> {

      private static final String REST_PATH = "v1/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^datasets/[^/]+$");

      /**
       * Gets a Dataset.
       *
       * Create a request for the method "datasets.get".
       *
       * This request holds the parameters needed by the the aiplatform server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
       * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name Required. The name of the Dataset resource.
       * @since 1.13
       */
      protected Get(java.lang.String name) {
        super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Dataset.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^datasets/[^/]+$");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get set$Xgafv(java.lang.String $Xgafv) {
        return (Get) super.set$Xgafv($Xgafv);
      }

      @Override
      public Get setAccessToken(java.lang.String accessToken) {
        return (Get) super.setAccessToken(accessToken);
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setCallback(java.lang.String callback) {
        return (Get) super.setCallback(callback);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUploadType(java.lang.String uploadType) {
        return (Get) super.setUploadType(uploadType);
      }

      @Override
      public Get setUploadProtocol(java.lang.String uploadProtocol) {
        return (Get) super.setUploadProtocol(uploadProtocol);
      }

      /** Required. The name of the Dataset resource. */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Required. The name of the Dataset resource.
       */
      public java.lang.String getName() {
        return name;
      }

      /** Required. The name of the Dataset resource. */
      public Get setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^datasets/[^/]+$");
        }
        this.name = name;
        return this;
      }

      /** Mask specifying which fields to read. */
      @com.google.api.client.util.Key
      private String readMask;

      /** Mask specifying which fields to read.
       */
      public String getReadMask() {
        return readMask;
      }

      /** Mask specifying which fields to read. */
      public Get setReadMask(String readMask) {
        this.readMask = readMask;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Lists Datasets in a Location.
     *
     * Create a request for the method "datasets.list".
     *
     * This request holds the parameters needed by the aiplatform server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public List list() throws java.io.IOException {
      List result = new List();
      initialize(result);
      return result;
    }

    public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListDatasetsResponse> {

      private static final String REST_PATH = "v1/datasets";

      /**
       * Lists Datasets in a Location.
       *
       * Create a request for the method "datasets.list".
       *
       * This request holds the parameters needed by the the aiplatform server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
       * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected List() {
        super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListDatasetsResponse.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List set$Xgafv(java.lang.String $Xgafv) {
        return (List) super.set$Xgafv($Xgafv);
      }

      @Override
      public List setAccessToken(java.lang.String accessToken) {
        return (List) super.setAccessToken(accessToken);
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setCallback(java.lang.String callback) {
        return (List) super.setCallback(callback);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUploadType(java.lang.String uploadType) {
        return (List) super.setUploadType(uploadType);
      }

      @Override
      public List setUploadProtocol(java.lang.String uploadProtocol) {
        return (List) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * An expression for filtering the results of the request. For field names both snake_case and
       * camelCase are supported. * `display_name`: supports = and != * `metadata_schema_uri`:
       * supports = and != * `labels` supports general map functions that is: * `labels.key=value` -
       * key:value equality * `labels.key:* or labels:key - key existence * A key including a space
       * must be quoted. `labels."a key"`. Some examples: * `displayName="myDisplayName"` *
       * `labels.myKey="myValue"`
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** An expression for filtering the results of the request. For field names both snake_case and
     camelCase are supported. * `display_name`: supports = and != * `metadata_schema_uri`: supports =
     and != * `labels` supports general map functions that is: * `labels.key=value` - key:value equality
     * `labels.key:* or labels:key - key existence * A key including a space must be quoted. `labels."a
     key"`. Some examples: * `displayName="myDisplayName"` * `labels.myKey="myValue"`
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * An expression for filtering the results of the request. For field names both snake_case and
       * camelCase are supported. * `display_name`: supports = and != * `metadata_schema_uri`:
       * supports = and != * `labels` supports general map functions that is: * `labels.key=value` -
       * key:value equality * `labels.key:* or labels:key - key existence * A key including a space
       * must be quoted. `labels."a key"`. Some examples: * `displayName="myDisplayName"` *
       * `labels.myKey="myValue"`
       */
      public List setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a
       * field name for descending. Supported fields: * `display_name` * `create_time` *
       * `update_time`
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field
     name for descending. Supported fields: * `display_name` * `create_time` * `update_time`
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a
       * field name for descending. Supported fields: * `display_name` * `create_time` *
       * `update_time`
       */
      public List setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /** The standard list page size. */
      @com.google.api.client.util.Key
      private java.lang.Integer pageSize;

      /** The standard list page size.
       */
      public java.lang.Integer getPageSize() {
        return pageSize;
      }

      /** The standard list page size. */
      public List setPageSize(java.lang.Integer pageSize) {
        this.pageSize = pageSize;
        return this;
      }

      /** The standard list page token. */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** The standard list page token.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /** The standard list page token. */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      /**
       * Required. The name of the Dataset's parent resource. Format:
       * `projects/{project}/locations/{location}`
       */
      @com.google.api.client.util.Key
      private java.lang.String parent;

      /** Required. The name of the Dataset's parent resource. Format:
     `projects/{project}/locations/{location}`
       */
      public java.lang.String getParent() {
        return parent;
      }

      /**
       * Required. The name of the Dataset's parent resource. Format:
       * `projects/{project}/locations/{location}`
       */
      public List setParent(java.lang.String parent) {
        this.parent = parent;
        return this;
      }

      /** Mask specifying which fields to read. */
      @com.google.api.client.util.Key
      private String readMask;

      /** Mask specifying which fields to read.
       */
      public String getReadMask() {
        return readMask;
      }

      /** Mask specifying which fields to read. */
      public List setReadMask(String readMask) {
        this.readMask = readMask;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Updates a Dataset.
     *
     * Create a request for the method "datasets.patch".
     *
     * This request holds the parameters needed by the aiplatform server.  After setting any optional
     * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
     *
     * @param name Output only. Identifier. The resource name of the Dataset.
     * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Dataset}
     * @return the request
     */
    public Patch patch(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Dataset content) throws java.io.IOException {
      Patch result = new Patch(name, content);
      initialize(result);
      return result;
    }

    public class Patch extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Dataset> {

      private static final String REST_PATH = "v1/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^datasets/[^/]+$");

      /**
       * Updates a Dataset.
       *
       * Create a request for the method "datasets.patch".
       *
       * This request holds the parameters needed by the the aiplatform server.  After setting any
       * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       * <p> {@link
       * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name Output only. Identifier. The resource name of the Dataset.
       * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Dataset}
       * @since 1.13
       */
      protected Patch(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Dataset content) {
        super(Aiplatform.this, "PATCH", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Dataset.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^datasets/[^/]+$");
        }
      }

      @Override
      public Patch set$Xgafv(java.lang.String $Xgafv) {
        return (Patch) super.set$Xgafv($Xgafv);
      }

      @Override
      public Patch setAccessToken(java.lang.String accessToken) {
        return (Patch) super.setAccessToken(accessToken);
      }

      @Override
      public Patch setAlt(java.lang.String alt) {
        return (Patch) super.setAlt(alt);
      }

      @Override
      public Patch setCallback(java.lang.String callback) {
        return (Patch) super.setCallback(callback);
      }

      @Override
      public Patch setFields(java.lang.String fields) {
        return (Patch) super.setFields(fields);
      }

      @Override
      public Patch setKey(java.lang.String key) {
        return (Patch) super.setKey(key);
      }

      @Override
      public Patch setOauthToken(java.lang.String oauthToken) {
        return (Patch) super.setOauthToken(oauthToken);
      }

      @Override
      public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Patch) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Patch setQuotaUser(java.lang.String quotaUser) {
        return (Patch) super.setQuotaUser(quotaUser);
      }

      @Override
      public Patch setUploadType(java.lang.String uploadType) {
        return (Patch) super.setUploadType(uploadType);
      }

      @Override
      public Patch setUploadProtocol(java.lang.String uploadProtocol) {
        return (Patch) super.setUploadProtocol(uploadProtocol);
      }

      /** Output only. Identifier. The resource name of the Dataset. */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Output only. Identifier. The resource name of the Dataset.
       */
      public java.lang.String getName() {
        return name;
      }

      /** Output only. Identifier. The resource name of the Dataset. */
      public Patch setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^datasets/[^/]+$");
        }
        this.name = name;
        return this;
      }

      /**
       * Required. The update mask applies to the resource. For the `FieldMask` definition, see
       * google.protobuf.FieldMask. Updatable fields: * `display_name` * `description` * `labels`
       */
      @com.google.api.client.util.Key
      private String updateMask;

      /** Required. The update mask applies to the resource. For the `FieldMask` definition, see
     google.protobuf.FieldMask. Updatable fields: * `display_name` * `description` * `labels`
       */
      public String getUpdateMask() {
        return updateMask;
      }

      /**
       * Required. The update mask applies to the resource. For the `FieldMask` definition, see
       * google.protobuf.FieldMask. Updatable fields: * `display_name` * `description` * `labels`
       */
      public Patch setUpdateMask(String updateMask) {
        this.updateMask = updateMask;
        return this;
      }

      @Override
      public Patch set(String parameterName, Object value) {
        return (Patch) super.set(parameterName, value);
      }
    }

    /**
     * An accessor for creating requests from the DatasetVersions collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Aiplatform aiplatform = new Aiplatform(...);}
     *   {@code Aiplatform.DatasetVersions.List request = aiplatform.datasetVersions().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public DatasetVersions datasetVersions() {
      return new DatasetVersions();
    }

    /**
     * The "datasetVersions" collection of methods.
     */
    public class DatasetVersions {

      /**
       * Create a version from a Dataset.
       *
       * Create a request for the method "datasetVersions.create".
       *
       * This request holds the parameters needed by the aiplatform server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The name of the Dataset resource. Format:
       *        `projects/{project}/locations/{location}/datasets/{dataset}`
       * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1DatasetVersion}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1DatasetVersion content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

        private static final String REST_PATH = "v1/{+parent}/datasetVersions";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^datasets/[^/]+$");

        /**
         * Create a version from a Dataset.
         *
         * Create a request for the method "datasetVersions.create".
         *
         * This request holds the parameters needed by the the aiplatform server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         * <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The name of the Dataset resource. Format:
       *        `projects/{project}/locations/{location}/datasets/{dataset}`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1DatasetVersion}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1DatasetVersion content) {
          super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^datasets/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the Dataset resource. Format:
         * `projects/{project}/locations/{location}/datasets/{dataset}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The name of the Dataset resource. Format:
       `projects/{project}/locations/{location}/datasets/{dataset}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The name of the Dataset resource. Format:
         * `projects/{project}/locations/{location}/datasets/{dataset}`
         */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^datasets/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes a Dataset version.
       *
       * Create a request for the method "datasetVersions.delete".
       *
       * This request holds the parameters needed by the aiplatform server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. The resource name of the Dataset version to delete. Format:
       *        `projects/{project}/locations/{location}/datasets/{dataset}/datasetVersions/{dataset_versi
       *        on}`
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^datasets/[^/]+/datasetVersions/[^/]+$");

        /**
         * Deletes a Dataset version.
         *
         * Create a request for the method "datasetVersions.delete".
         *
         * This request holds the parameters needed by the the aiplatform server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         * <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The resource name of the Dataset version to delete. Format:
       *        `projects/{project}/locations/{location}/datasets/{dataset}/datasetVersions/{dataset_versi
       *        on}`
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^datasets/[^/]+/datasetVersions/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The resource name of the Dataset version to delete. Format: `projects/{project}
         * /locations/{location}/datasets/{dataset}/datasetVersions/{dataset_version}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The resource name of the Dataset version to delete. Format:
       `projects/{project}/locations/{location}/datasets/{dataset}/datasetVersions/{dataset_version}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The resource name of the Dataset version to delete. Format: `projects/{project}
         * /locations/{location}/datasets/{dataset}/datasetVersions/{dataset_version}`
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^datasets/[^/]+/datasetVersions/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Gets a Dataset version.
       *
       * Create a request for the method "datasetVersions.get".
       *
       * This request holds the parameters needed by the aiplatform server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. The resource name of the Dataset version to delete. Format:
       *        `projects/{project}/locations/{location}/datasets/{dataset}/datasetVersions/{dataset_versi
       *        on}`
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1DatasetVersion> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^datasets/[^/]+/datasetVersions/[^/]+$");

        /**
         * Gets a Dataset version.
         *
         * Create a request for the method "datasetVersions.get".
         *
         * This request holds the parameters needed by the the aiplatform server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The resource name of the Dataset version to delete. Format:
       *        `projects/{project}/locations/{location}/datasets/{dataset}/datasetVersions/{dataset_versi
       *        on}`
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1DatasetVersion.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^datasets/[^/]+/datasetVersions/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The resource name of the Dataset version to delete. Format: `projects/{project}
         * /locations/{location}/datasets/{dataset}/datasetVersions/{dataset_version}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The resource name of the Dataset version to delete. Format:
       `projects/{project}/locations/{location}/datasets/{dataset}/datasetVersions/{dataset_version}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The resource name of the Dataset version to delete. Format: `projects/{project}
         * /locations/{location}/datasets/{dataset}/datasetVersions/{dataset_version}`
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^datasets/[^/]+/datasetVersions/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /** Mask specifying which fields to read. */
        @com.google.api.client.util.Key
        private String readMask;

        /** Mask specifying which fields to read.
         */
        public String getReadMask() {
          return readMask;
        }

        /** Mask specifying which fields to read. */
        public Get setReadMask(String readMask) {
          this.readMask = readMask;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists DatasetVersions in a Dataset.
       *
       * Create a request for the method "datasetVersions.list".
       *
       * This request holds the parameters needed by the aiplatform server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The resource name of the Dataset to list DatasetVersions from. Format:
       *        `projects/{project}/locations/{location}/datasets/{dataset}`
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListDatasetVersionsResponse> {

        private static final String REST_PATH = "v1/{+parent}/datasetVersions";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^datasets/[^/]+$");

        /**
         * Lists DatasetVersions in a Dataset.
         *
         * Create a request for the method "datasetVersions.list".
         *
         * This request holds the parameters needed by the the aiplatform server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The resource name of the Dataset to list DatasetVersions from. Format:
       *        `projects/{project}/locations/{location}/datasets/{dataset}`
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListDatasetVersionsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^datasets/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The resource name of the Dataset to list DatasetVersions from. Format:
         * `projects/{project}/locations/{location}/datasets/{dataset}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The resource name of the Dataset to list DatasetVersions from. Format:
       `projects/{project}/locations/{location}/datasets/{dataset}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The resource name of the Dataset to list DatasetVersions from. Format:
         * `projects/{project}/locations/{location}/datasets/{dataset}`
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^datasets/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /** Optional. The standard list filter. */
        @com.google.api.client.util.Key
        private java.lang.String filter;

        /** Optional. The standard list filter.
         */
        public java.lang.String getFilter() {
          return filter;
        }

        /** Optional. The standard list filter. */
        public List setFilter(java.lang.String filter) {
          this.filter = filter;
          return this;
        }

        /**
         * Optional. A comma-separated list of fields to order by, sorted in ascending order. Use
         * "desc" after a field name for descending.
         */
        @com.google.api.client.util.Key
        private java.lang.String orderBy;

        /** Optional. A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after
       a field name for descending.
         */
        public java.lang.String getOrderBy() {
          return orderBy;
        }

        /**
         * Optional. A comma-separated list of fields to order by, sorted in ascending order. Use
         * "desc" after a field name for descending.
         */
        public List setOrderBy(java.lang.String orderBy) {
          this.orderBy = orderBy;
          return this;
        }

        /** Optional. The standard list page size. */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Optional. The standard list page size.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /** Optional. The standard list page size. */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /** Optional. The standard list page token. */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Optional. The standard list page token.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /** Optional. The standard list page token. */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        /** Optional. Mask specifying which fields to read. */
        @com.google.api.client.util.Key
        private String readMask;

        /** Optional. Mask specifying which fields to read.
         */
        public String getReadMask() {
          return readMask;
        }

        /** Optional. Mask specifying which fields to read. */
        public List setReadMask(String readMask) {
          this.readMask = readMask;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates a DatasetVersion.
       *
       * Create a request for the method "datasetVersions.patch".
       *
       * This request holds the parameters needed by the aiplatform server.  After setting any optional
       * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name Output only. Identifier. The resource name of the DatasetVersion.
       * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1DatasetVersion}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1DatasetVersion content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1DatasetVersion> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^datasets/[^/]+/datasetVersions/[^/]+$");

        /**
         * Updates a DatasetVersion.
         *
         * Create a request for the method "datasetVersions.patch".
         *
         * This request holds the parameters needed by the the aiplatform server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         * <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Output only. Identifier. The resource name of the DatasetVersion.
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1DatasetVersion}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1DatasetVersion content) {
          super(Aiplatform.this, "PATCH", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1DatasetVersion.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^datasets/[^/]+/datasetVersions/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /** Output only. Identifier. The resource name of the DatasetVersion. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Output only. Identifier. The resource name of the DatasetVersion.
         */
        public java.lang.String getName() {
          return name;
        }

        /** Output only. Identifier. The resource name of the DatasetVersion. */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^datasets/[^/]+/datasetVersions/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * Required. The update mask applies to the resource. For the `FieldMask` definition, see
         * google.protobuf.FieldMask. Updatable fields: * `display_name`
         */
        @com.google.api.client.util.Key
        private String updateMask;

        /** Required. The update mask applies to the resource. For the `FieldMask` definition, see
       google.protobuf.FieldMask. Updatable fields: * `display_name`
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /**
         * Required. The update mask applies to the resource. For the `FieldMask` definition, see
         * google.protobuf.FieldMask. Updatable fields: * `display_name`
         */
        public Patch setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }
      /**
       * Restores a dataset version.
       *
       * Create a request for the method "datasetVersions.restore".
       *
       * This request holds the parameters needed by the aiplatform server.  After setting any optional
       * parameters, call the {@link Restore#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the DatasetVersion resource. Format:
       *        `projects/{project}/locations/{location}/datasets/{dataset}/datasetVersions/{dataset_versi
       *        on}`
       * @return the request
       */
      public Restore restore(java.lang.String name) throws java.io.IOException {
        Restore result = new Restore(name);
        initialize(result);
        return result;
      }

      public class Restore extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

        private static final String REST_PATH = "v1/{+name}:restore";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^datasets/[^/]+/datasetVersions/[^/]+$");

        /**
         * Restores a dataset version.
         *
         * Create a request for the method "datasetVersions.restore".
         *
         * This request holds the parameters needed by the the aiplatform server.  After setting any
         * optional parameters, call the {@link Restore#execute()} method to invoke the remote operation.
         * <p> {@link
         * Restore#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the DatasetVersion resource. Format:
       *        `projects/{project}/locations/{location}/datasets/{dataset}/datasetVersions/{dataset_versi
       *        on}`
         * @since 1.13
         */
        protected Restore(java.lang.String name) {
          super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^datasets/[^/]+/datasetVersions/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Restore set$Xgafv(java.lang.String $Xgafv) {
          return (Restore) super.set$Xgafv($Xgafv);
        }

        @Override
        public Restore setAccessToken(java.lang.String accessToken) {
          return (Restore) super.setAccessToken(accessToken);
        }

        @Override
        public Restore setAlt(java.lang.String alt) {
          return (Restore) super.setAlt(alt);
        }

        @Override
        public Restore setCallback(java.lang.String callback) {
          return (Restore) super.setCallback(callback);
        }

        @Override
        public Restore setFields(java.lang.String fields) {
          return (Restore) super.setFields(fields);
        }

        @Override
        public Restore setKey(java.lang.String key) {
          return (Restore) super.setKey(key);
        }

        @Override
        public Restore setOauthToken(java.lang.String oauthToken) {
          return (Restore) super.setOauthToken(oauthToken);
        }

        @Override
        public Restore setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Restore) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Restore setQuotaUser(java.lang.String quotaUser) {
          return (Restore) super.setQuotaUser(quotaUser);
        }

        @Override
        public Restore setUploadType(java.lang.String uploadType) {
          return (Restore) super.setUploadType(uploadType);
        }

        @Override
        public Restore setUploadProtocol(java.lang.String uploadProtocol) {
          return (Restore) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the DatasetVersion resource. Format: `projects/{project}/locations/
         * {location}/datasets/{dataset}/datasetVersions/{dataset_version}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the DatasetVersion resource. Format:
       `projects/{project}/locations/{location}/datasets/{dataset}/datasetVersions/{dataset_version}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the DatasetVersion resource. Format: `projects/{project}/locations/
         * {location}/datasets/{dataset}/datasetVersions/{dataset_version}`
         */
        public Restore setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^datasets/[^/]+/datasetVersions/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Restore set(String parameterName, Object value) {
          return (Restore) super.set(parameterName, value);
        }
      }

    }
  }

  /**
   * An accessor for creating requests from the Endpoints collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Aiplatform aiplatform = new Aiplatform(...);}
   *   {@code Aiplatform.Endpoints.List request = aiplatform.endpoints().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Endpoints endpoints() {
    return new Endpoints();
  }

  /**
   * The "endpoints" collection of methods.
   */
  public class Endpoints {

    /**
     * Return a list of tokens based on the input text.
     *
     * Create a request for the method "endpoints.computeTokens".
     *
     * This request holds the parameters needed by the aiplatform server.  After setting any optional
     * parameters, call the {@link ComputeTokens#execute()} method to invoke the remote operation.
     *
     * @param endpoint Required. The name of the Endpoint requested to get lists of tokens and token ids.
     * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ComputeTokensRequest}
     * @return the request
     */
    public ComputeTokens computeTokens(java.lang.String endpoint, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ComputeTokensRequest content) throws java.io.IOException {
      ComputeTokens result = new ComputeTokens(endpoint, content);
      initialize(result);
      return result;
    }

    public class ComputeTokens extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ComputeTokensResponse> {

      private static final String REST_PATH = "v1/{+endpoint}:computeTokens";

      private final java.util.regex.Pattern ENDPOINT_PATTERN =
          java.util.regex.Pattern.compile("^endpoints/[^/]+$");

      /**
       * Return a list of tokens based on the input text.
       *
       * Create a request for the method "endpoints.computeTokens".
       *
       * This request holds the parameters needed by the the aiplatform server.  After setting any
       * optional parameters, call the {@link ComputeTokens#execute()} method to invoke the remote
       * operation. <p> {@link ComputeTokens#initialize(com.google.api.client.googleapis.services.Abstra
       * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
       * the constructor. </p>
       *
       * @param endpoint Required. The name of the Endpoint requested to get lists of tokens and token ids.
       * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ComputeTokensRequest}
       * @since 1.13
       */
      protected ComputeTokens(java.lang.String endpoint, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ComputeTokensRequest content) {
        super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ComputeTokensResponse.class);
        this.endpoint = com.google.api.client.util.Preconditions.checkNotNull(endpoint, "Required parameter endpoint must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ENDPOINT_PATTERN.matcher(endpoint).matches(),
              "Parameter endpoint must conform to the pattern " +
              "^endpoints/[^/]+$");
        }
      }

      @Override
      public ComputeTokens set$Xgafv(java.lang.String $Xgafv) {
        return (ComputeTokens) super.set$Xgafv($Xgafv);
      }

      @Override
      public ComputeTokens setAccessToken(java.lang.String accessToken) {
        return (ComputeTokens) super.setAccessToken(accessToken);
      }

      @Override
      public ComputeTokens setAlt(java.lang.String alt) {
        return (ComputeTokens) super.setAlt(alt);
      }

      @Override
      public ComputeTokens setCallback(java.lang.String callback) {
        return (ComputeTokens) super.setCallback(callback);
      }

      @Override
      public ComputeTokens setFields(java.lang.String fields) {
        return (ComputeTokens) super.setFields(fields);
      }

      @Override
      public ComputeTokens setKey(java.lang.String key) {
        return (ComputeTokens) super.setKey(key);
      }

      @Override
      public ComputeTokens setOauthToken(java.lang.String oauthToken) {
        return (ComputeTokens) super.setOauthToken(oauthToken);
      }

      @Override
      public ComputeTokens setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (ComputeTokens) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public ComputeTokens setQuotaUser(java.lang.String quotaUser) {
        return (ComputeTokens) super.setQuotaUser(quotaUser);
      }

      @Override
      public ComputeTokens setUploadType(java.lang.String uploadType) {
        return (ComputeTokens) super.setUploadType(uploadType);
      }

      @Override
      public ComputeTokens setUploadProtocol(java.lang.String uploadProtocol) {
        return (ComputeTokens) super.setUploadProtocol(uploadProtocol);
      }

      /** Required. The name of the Endpoint requested to get lists of tokens and token ids. */
      @com.google.api.client.util.Key
      private java.lang.String endpoint;

      /** Required. The name of the Endpoint requested to get lists of tokens and token ids.
       */
      public java.lang.String getEndpoint() {
        return endpoint;
      }

      /** Required. The name of the Endpoint requested to get lists of tokens and token ids. */
      public ComputeTokens setEndpoint(java.lang.String endpoint) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ENDPOINT_PATTERN.matcher(endpoint).matches(),
              "Parameter endpoint must conform to the pattern " +
              "^endpoints/[^/]+$");
        }
        this.endpoint = endpoint;
        return this;
      }

      @Override
      public ComputeTokens set(String parameterName, Object value) {
        return (ComputeTokens) super.set(parameterName, value);
      }
    }
    /**
     * Perform a token counting.
     *
     * Create a request for the method "endpoints.countTokens".
     *
     * This request holds the parameters needed by the aiplatform server.  After setting any optional
     * parameters, call the {@link CountTokens#execute()} method to invoke the remote operation.
     *
     * @param endpoint Required. The name of the Endpoint requested to perform token counting. Format:
     *        `projects/{project}/locations/{location}/endpoints/{endpoint}`
     * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CountTokensRequest}
     * @return the request
     */
    public CountTokens countTokens(java.lang.String endpoint, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CountTokensRequest content) throws java.io.IOException {
      CountTokens result = new CountTokens(endpoint, content);
      initialize(result);
      return result;
    }

    public class CountTokens extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CountTokensResponse> {

      private static final String REST_PATH = "v1/{+endpoint}:countTokens";

      private final java.util.regex.Pattern ENDPOINT_PATTERN =
          java.util.regex.Pattern.compile("^endpoints/[^/]+$");

      /**
       * Perform a token counting.
       *
       * Create a request for the method "endpoints.countTokens".
       *
       * This request holds the parameters needed by the the aiplatform server.  After setting any
       * optional parameters, call the {@link CountTokens#execute()} method to invoke the remote
       * operation. <p> {@link
       * CountTokens#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param endpoint Required. The name of the Endpoint requested to perform token counting. Format:
     *        `projects/{project}/locations/{location}/endpoints/{endpoint}`
       * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CountTokensRequest}
       * @since 1.13
       */
      protected CountTokens(java.lang.String endpoint, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CountTokensRequest content) {
        super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CountTokensResponse.class);
        this.endpoint = com.google.api.client.util.Preconditions.checkNotNull(endpoint, "Required parameter endpoint must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ENDPOINT_PATTERN.matcher(endpoint).matches(),
              "Parameter endpoint must conform to the pattern " +
              "^endpoints/[^/]+$");
        }
      }

      @Override
      public CountTokens set$Xgafv(java.lang.String $Xgafv) {
        return (CountTokens) super.set$Xgafv($Xgafv);
      }

      @Override
      public CountTokens setAccessToken(java.lang.String accessToken) {
        return (CountTokens) super.setAccessToken(accessToken);
      }

      @Override
      public CountTokens setAlt(java.lang.String alt) {
        return (CountTokens) super.setAlt(alt);
      }

      @Override
      public CountTokens setCallback(java.lang.String callback) {
        return (CountTokens) super.setCallback(callback);
      }

      @Override
      public CountTokens setFields(java.lang.String fields) {
        return (CountTokens) super.setFields(fields);
      }

      @Override
      public CountTokens setKey(java.lang.String key) {
        return (CountTokens) super.setKey(key);
      }

      @Override
      public CountTokens setOauthToken(java.lang.String oauthToken) {
        return (CountTokens) super.setOauthToken(oauthToken);
      }

      @Override
      public CountTokens setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (CountTokens) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public CountTokens setQuotaUser(java.lang.String quotaUser) {
        return (CountTokens) super.setQuotaUser(quotaUser);
      }

      @Override
      public CountTokens setUploadType(java.lang.String uploadType) {
        return (CountTokens) super.setUploadType(uploadType);
      }

      @Override
      public CountTokens setUploadProtocol(java.lang.String uploadProtocol) {
        return (CountTokens) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. The name of the Endpoint requested to perform token counting. Format:
       * `projects/{project}/locations/{location}/endpoints/{endpoint}`
       */
      @com.google.api.client.util.Key
      private java.lang.String endpoint;

      /** Required. The name of the Endpoint requested to perform token counting. Format:
     `projects/{project}/locations/{location}/endpoints/{endpoint}`
       */
      public java.lang.String getEndpoint() {
        return endpoint;
      }

      /**
       * Required. The name of the Endpoint requested to perform token counting. Format:
       * `projects/{project}/locations/{location}/endpoints/{endpoint}`
       */
      public CountTokens setEndpoint(java.lang.String endpoint) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ENDPOINT_PATTERN.matcher(endpoint).matches(),
              "Parameter endpoint must conform to the pattern " +
              "^endpoints/[^/]+$");
        }
        this.endpoint = endpoint;
        return this;
      }

      @Override
      public CountTokens set(String parameterName, Object value) {
        return (CountTokens) super.set(parameterName, value);
      }
    }
    /**
     * Generate content with multimodal inputs.
     *
     * Create a request for the method "endpoints.generateContent".
     *
     * This request holds the parameters needed by the aiplatform server.  After setting any optional
     * parameters, call the {@link GenerateContent#execute()} method to invoke the remote operation.
     *
     * @param model Required. The fully qualified name of the publisher model or tuned model endpoint to use. Publisher
     *        model format: `projects/{project}/locations/{location}/publishers/models` Tuned model
     *        endpoint format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
     * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1GenerateContentRequest}
     * @return the request
     */
    public GenerateContent generateContent(java.lang.String model, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1GenerateContentRequest content) throws java.io.IOException {
      GenerateContent result = new GenerateContent(model, content);
      initialize(result);
      return result;
    }

    public class GenerateContent extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1GenerateContentResponse> {

      private static final String REST_PATH = "v1/{+model}:generateContent";

      private final java.util.regex.Pattern MODEL_PATTERN =
          java.util.regex.Pattern.compile("^endpoints/[^/]+$");

      /**
       * Generate content with multimodal inputs.
       *
       * Create a request for the method "endpoints.generateContent".
       *
       * This request holds the parameters needed by the the aiplatform server.  After setting any
       * optional parameters, call the {@link GenerateContent#execute()} method to invoke the remote
       * operation. <p> {@link GenerateContent#initialize(com.google.api.client.googleapis.services.Abst
       * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
       * the constructor. </p>
       *
       * @param model Required. The fully qualified name of the publisher model or tuned model endpoint to use. Publisher
     *        model format: `projects/{project}/locations/{location}/publishers/models` Tuned model
     *        endpoint format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
       * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1GenerateContentRequest}
       * @since 1.13
       */
      protected GenerateContent(java.lang.String model, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1GenerateContentRequest content) {
        super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1GenerateContentResponse.class);
        this.model = com.google.api.client.util.Preconditions.checkNotNull(model, "Required parameter model must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(MODEL_PATTERN.matcher(model).matches(),
              "Parameter model must conform to the pattern " +
              "^endpoints/[^/]+$");
        }
      }

      @Override
      public GenerateContent set$Xgafv(java.lang.String $Xgafv) {
        return (GenerateContent) super.set$Xgafv($Xgafv);
      }

      @Override
      public GenerateContent setAccessToken(java.lang.String accessToken) {
        return (GenerateContent) super.setAccessToken(accessToken);
      }

      @Override
      public GenerateContent setAlt(java.lang.String alt) {
        return (GenerateContent) super.setAlt(alt);
      }

      @Override
      public GenerateContent setCallback(java.lang.String callback) {
        return (GenerateContent) super.setCallback(callback);
      }

      @Override
      public GenerateContent setFields(java.lang.String fields) {
        return (GenerateContent) super.setFields(fields);
      }

      @Override
      public GenerateContent setKey(java.lang.String key) {
        return (GenerateContent) super.setKey(key);
      }

      @Override
      public GenerateContent setOauthToken(java.lang.String oauthToken) {
        return (GenerateContent) super.setOauthToken(oauthToken);
      }

      @Override
      public GenerateContent setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GenerateContent) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GenerateContent setQuotaUser(java.lang.String quotaUser) {
        return (GenerateContent) super.setQuotaUser(quotaUser);
      }

      @Override
      public GenerateContent setUploadType(java.lang.String uploadType) {
        return (GenerateContent) super.setUploadType(uploadType);
      }

      @Override
      public GenerateContent setUploadProtocol(java.lang.String uploadProtocol) {
        return (GenerateContent) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. The fully qualified name of the publisher model or tuned model endpoint to use.
       * Publisher model format: `projects/{project}/locations/{location}/publishers/models` Tuned
       * model endpoint format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
       */
      @com.google.api.client.util.Key
      private java.lang.String model;

      /** Required. The fully qualified name of the publisher model or tuned model endpoint to use. Publisher
     model format: `projects/{project}/locations/{location}/publishers/models` Tuned model endpoint
     format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
       */
      public java.lang.String getModel() {
        return model;
      }

      /**
       * Required. The fully qualified name of the publisher model or tuned model endpoint to use.
       * Publisher model format: `projects/{project}/locations/{location}/publishers/models` Tuned
       * model endpoint format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
       */
      public GenerateContent setModel(java.lang.String model) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(MODEL_PATTERN.matcher(model).matches(),
              "Parameter model must conform to the pattern " +
              "^endpoints/[^/]+$");
        }
        this.model = model;
        return this;
      }

      @Override
      public GenerateContent set(String parameterName, Object value) {
        return (GenerateContent) super.set(parameterName, value);
      }
    }
    /**
     * Generate content with multimodal inputs with streaming support.
     *
     * Create a request for the method "endpoints.streamGenerateContent".
     *
     * This request holds the parameters needed by the aiplatform server.  After setting any optional
     * parameters, call the {@link StreamGenerateContent#execute()} method to invoke the remote
     * operation.
     *
     * @param model Required. The fully qualified name of the publisher model or tuned model endpoint to use. Publisher
     *        model format: `projects/{project}/locations/{location}/publishers/models` Tuned model
     *        endpoint format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
     * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1GenerateContentRequest}
     * @return the request
     */
    public StreamGenerateContent streamGenerateContent(java.lang.String model, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1GenerateContentRequest content) throws java.io.IOException {
      StreamGenerateContent result = new StreamGenerateContent(model, content);
      initialize(result);
      return result;
    }

    public class StreamGenerateContent extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1GenerateContentResponse> {

      private static final String REST_PATH = "v1/{+model}:streamGenerateContent";

      private final java.util.regex.Pattern MODEL_PATTERN =
          java.util.regex.Pattern.compile("^endpoints/[^/]+$");

      /**
       * Generate content with multimodal inputs with streaming support.
       *
       * Create a request for the method "endpoints.streamGenerateContent".
       *
       * This request holds the parameters needed by the the aiplatform server.  After setting any
       * optional parameters, call the {@link StreamGenerateContent#execute()} method to invoke the
       * remote operation. <p> {@link StreamGenerateContent#initialize(com.google.api.client.googleapis.
       * services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
       * after invoking the constructor. </p>
       *
       * @param model Required. The fully qualified name of the publisher model or tuned model endpoint to use. Publisher
     *        model format: `projects/{project}/locations/{location}/publishers/models` Tuned model
     *        endpoint format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
       * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1GenerateContentRequest}
       * @since 1.13
       */
      protected StreamGenerateContent(java.lang.String model, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1GenerateContentRequest content) {
        super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1GenerateContentResponse.class);
        this.model = com.google.api.client.util.Preconditions.checkNotNull(model, "Required parameter model must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(MODEL_PATTERN.matcher(model).matches(),
              "Parameter model must conform to the pattern " +
              "^endpoints/[^/]+$");
        }
      }

      @Override
      public StreamGenerateContent set$Xgafv(java.lang.String $Xgafv) {
        return (StreamGenerateContent) super.set$Xgafv($Xgafv);
      }

      @Override
      public StreamGenerateContent setAccessToken(java.lang.String accessToken) {
        return (StreamGenerateContent) super.setAccessToken(accessToken);
      }

      @Override
      public StreamGenerateContent setAlt(java.lang.String alt) {
        return (StreamGenerateContent) super.setAlt(alt);
      }

      @Override
      public StreamGenerateContent setCallback(java.lang.String callback) {
        return (StreamGenerateContent) super.setCallback(callback);
      }

      @Override
      public StreamGenerateContent setFields(java.lang.String fields) {
        return (StreamGenerateContent) super.setFields(fields);
      }

      @Override
      public StreamGenerateContent setKey(java.lang.String key) {
        return (StreamGenerateContent) super.setKey(key);
      }

      @Override
      public StreamGenerateContent setOauthToken(java.lang.String oauthToken) {
        return (StreamGenerateContent) super.setOauthToken(oauthToken);
      }

      @Override
      public StreamGenerateContent setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (StreamGenerateContent) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public StreamGenerateContent setQuotaUser(java.lang.String quotaUser) {
        return (StreamGenerateContent) super.setQuotaUser(quotaUser);
      }

      @Override
      public StreamGenerateContent setUploadType(java.lang.String uploadType) {
        return (StreamGenerateContent) super.setUploadType(uploadType);
      }

      @Override
      public StreamGenerateContent setUploadProtocol(java.lang.String uploadProtocol) {
        return (StreamGenerateContent) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. The fully qualified name of the publisher model or tuned model endpoint to use.
       * Publisher model format: `projects/{project}/locations/{location}/publishers/models` Tuned
       * model endpoint format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
       */
      @com.google.api.client.util.Key
      private java.lang.String model;

      /** Required. The fully qualified name of the publisher model or tuned model endpoint to use. Publisher
     model format: `projects/{project}/locations/{location}/publishers/models` Tuned model endpoint
     format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
       */
      public java.lang.String getModel() {
        return model;
      }

      /**
       * Required. The fully qualified name of the publisher model or tuned model endpoint to use.
       * Publisher model format: `projects/{project}/locations/{location}/publishers/models` Tuned
       * model endpoint format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
       */
      public StreamGenerateContent setModel(java.lang.String model) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(MODEL_PATTERN.matcher(model).matches(),
              "Parameter model must conform to the pattern " +
              "^endpoints/[^/]+$");
        }
        this.model = model;
        return this;
      }

      @Override
      public StreamGenerateContent set(String parameterName, Object value) {
        return (StreamGenerateContent) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Projects collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Aiplatform aiplatform = new Aiplatform(...);}
   *   {@code Aiplatform.Projects.List request = aiplatform.projects().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Projects projects() {
    return new Projects();
  }

  /**
   * The "projects" collection of methods.
   */
  public class Projects {

    /**
     * An accessor for creating requests from the Locations collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Aiplatform aiplatform = new Aiplatform(...);}
     *   {@code Aiplatform.Locations.List request = aiplatform.locations().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Locations locations() {
      return new Locations();
    }

    /**
     * The "locations" collection of methods.
     */
    public class Locations {

      /**
       * Evaluates instances based on a given metric.
       *
       * Create a request for the method "locations.evaluateInstances".
       *
       * This request holds the parameters needed by the aiplatform server.  After setting any optional
       * parameters, call the {@link EvaluateInstances#execute()} method to invoke the remote operation.
       *
       * @param location Required. The resource name of the Location to evaluate the instances. Format:
       *        `projects/{project}/locations/{location}`
       * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1EvaluateInstancesRequest}
       * @return the request
       */
      public EvaluateInstances evaluateInstances(java.lang.String location, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1EvaluateInstancesRequest content) throws java.io.IOException {
        EvaluateInstances result = new EvaluateInstances(location, content);
        initialize(result);
        return result;
      }

      public class EvaluateInstances extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1EvaluateInstancesResponse> {

        private static final String REST_PATH = "v1/{+location}:evaluateInstances";

        private final java.util.regex.Pattern LOCATION_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

        /**
         * Evaluates instances based on a given metric.
         *
         * Create a request for the method "locations.evaluateInstances".
         *
         * This request holds the parameters needed by the the aiplatform server.  After setting any
         * optional parameters, call the {@link EvaluateInstances#execute()} method to invoke the remote
         * operation. <p> {@link EvaluateInstances#initialize(com.google.api.client.googleapis.services.Ab
         * stractGoogleClientRequest)} must be called to initialize this instance immediately after
         * invoking the constructor. </p>
         *
         * @param location Required. The resource name of the Location to evaluate the instances. Format:
       *        `projects/{project}/locations/{location}`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1EvaluateInstancesRequest}
         * @since 1.13
         */
        protected EvaluateInstances(java.lang.String location, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1EvaluateInstancesRequest content) {
          super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1EvaluateInstancesResponse.class);
          this.location = com.google.api.client.util.Preconditions.checkNotNull(location, "Required parameter location must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(LOCATION_PATTERN.matcher(location).matches(),
                "Parameter location must conform to the pattern " +
                "^projects/[^/]+/locations/[^/]+$");
          }
        }

        @Override
        public EvaluateInstances set$Xgafv(java.lang.String $Xgafv) {
          return (EvaluateInstances) super.set$Xgafv($Xgafv);
        }

        @Override
        public EvaluateInstances setAccessToken(java.lang.String accessToken) {
          return (EvaluateInstances) super.setAccessToken(accessToken);
        }

        @Override
        public EvaluateInstances setAlt(java.lang.String alt) {
          return (EvaluateInstances) super.setAlt(alt);
        }

        @Override
        public EvaluateInstances setCallback(java.lang.String callback) {
          return (EvaluateInstances) super.setCallback(callback);
        }

        @Override
        public EvaluateInstances setFields(java.lang.String fields) {
          return (EvaluateInstances) super.setFields(fields);
        }

        @Override
        public EvaluateInstances setKey(java.lang.String key) {
          return (EvaluateInstances) super.setKey(key);
        }

        @Override
        public EvaluateInstances setOauthToken(java.lang.String oauthToken) {
          return (EvaluateInstances) super.setOauthToken(oauthToken);
        }

        @Override
        public EvaluateInstances setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (EvaluateInstances) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public EvaluateInstances setQuotaUser(java.lang.String quotaUser) {
          return (EvaluateInstances) super.setQuotaUser(quotaUser);
        }

        @Override
        public EvaluateInstances setUploadType(java.lang.String uploadType) {
          return (EvaluateInstances) super.setUploadType(uploadType);
        }

        @Override
        public EvaluateInstances setUploadProtocol(java.lang.String uploadProtocol) {
          return (EvaluateInstances) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The resource name of the Location to evaluate the instances. Format:
         * `projects/{project}/locations/{location}`
         */
        @com.google.api.client.util.Key
        private java.lang.String location;

        /** Required. The resource name of the Location to evaluate the instances. Format:
       `projects/{project}/locations/{location}`
         */
        public java.lang.String getLocation() {
          return location;
        }

        /**
         * Required. The resource name of the Location to evaluate the instances. Format:
         * `projects/{project}/locations/{location}`
         */
        public EvaluateInstances setLocation(java.lang.String location) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(LOCATION_PATTERN.matcher(location).matches(),
                "Parameter location must conform to the pattern " +
                "^projects/[^/]+/locations/[^/]+$");
          }
          this.location = location;
          return this;
        }

        @Override
        public EvaluateInstances set(String parameterName, Object value) {
          return (EvaluateInstances) super.set(parameterName, value);
        }
      }
      /**
       * Gets information about a location.
       *
       * Create a request for the method "locations.get".
       *
       * This request holds the parameters needed by the aiplatform server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Resource name for the location.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudLocationLocation> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

        /**
         * Gets information about a location.
         *
         * Create a request for the method "locations.get".
         *
         * This request holds the parameters needed by the the aiplatform server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Resource name for the location.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudLocationLocation.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/locations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /** Resource name for the location. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Resource name for the location.
         */
        public java.lang.String getName() {
          return name;
        }

        /** Resource name for the location. */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/locations/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists information about the supported locations for this service.
       *
       * Create a request for the method "locations.list".
       *
       * This request holds the parameters needed by the aiplatform server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param name The resource that owns the locations collection, if applicable.
       * @return the request
       */
      public List list(java.lang.String name) throws java.io.IOException {
        List result = new List(name);
        initialize(result);
        return result;
      }

      public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudLocationListLocationsResponse> {

        private static final String REST_PATH = "v1/{+name}/locations";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Lists information about the supported locations for this service.
         *
         * Create a request for the method "locations.list".
         *
         * This request holds the parameters needed by the the aiplatform server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The resource that owns the locations collection, if applicable.
         * @since 1.13
         */
        protected List(java.lang.String name) {
          super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudLocationListLocationsResponse.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** The resource that owns the locations collection, if applicable. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The resource that owns the locations collection, if applicable.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The resource that owns the locations collection, if applicable. */
        public List setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * A filter to narrow down results to a preferred subset. The filtering language accepts
         * strings like `"displayName=tokyo"`, and is documented in more detail in
         * [AIP-160](https://google.aip.dev/160).
         */
        @com.google.api.client.util.Key
        private java.lang.String filter;

        /** A filter to narrow down results to a preferred subset. The filtering language accepts strings like
       `"displayName=tokyo"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).
         */
        public java.lang.String getFilter() {
          return filter;
        }

        /**
         * A filter to narrow down results to a preferred subset. The filtering language accepts
         * strings like `"displayName=tokyo"`, and is documented in more detail in
         * [AIP-160](https://google.aip.dev/160).
         */
        public List setFilter(java.lang.String filter) {
          this.filter = filter;
          return this;
        }

        /** The maximum number of results to return. If not set, the service selects a default. */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The maximum number of results to return. If not set, the service selects a default.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /** The maximum number of results to return. If not set, the service selects a default. */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * A page token received from the `next_page_token` field in the response. Send that page
         * token to receive the subsequent page.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** A page token received from the `next_page_token` field in the response. Send that page token to
       receive the subsequent page.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * A page token received from the `next_page_token` field in the response. Send that page
         * token to receive the subsequent page.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the BatchPredictionJobs collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Aiplatform aiplatform = new Aiplatform(...);}
       *   {@code Aiplatform.BatchPredictionJobs.List request = aiplatform.batchPredictionJobs().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public BatchPredictionJobs batchPredictionJobs() {
        return new BatchPredictionJobs();
      }

      /**
       * The "batchPredictionJobs" collection of methods.
       */
      public class BatchPredictionJobs {

        /**
         * Cancels a BatchPredictionJob. Starts asynchronous cancellation on the BatchPredictionJob. The
         * server makes the best effort to cancel the job, but success is not guaranteed. Clients can use
         * JobService.GetBatchPredictionJob or other methods to check whether the cancellation succeeded or
         * whether the job completed despite cancellation. On a successful cancellation, the
         * BatchPredictionJob is not deleted;instead its BatchPredictionJob.state is set to `CANCELLED`. Any
         * files already outputted by the job are not deleted.
         *
         * Create a request for the method "batchPredictionJobs.cancel".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the BatchPredictionJob to cancel. Format:
         *        `projects/{project}/locations/{location}/batchPredictionJobs/{batch_prediction_job}`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CancelBatchPredictionJobRequest}
         * @return the request
         */
        public Cancel cancel(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CancelBatchPredictionJobRequest content) throws java.io.IOException {
          Cancel result = new Cancel(name, content);
          initialize(result);
          return result;
        }

        public class Cancel extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

          private static final String REST_PATH = "v1/{+name}:cancel";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/batchPredictionJobs/[^/]+$");

          /**
           * Cancels a BatchPredictionJob. Starts asynchronous cancellation on the BatchPredictionJob. The
           * server makes the best effort to cancel the job, but success is not guaranteed. Clients can use
           * JobService.GetBatchPredictionJob or other methods to check whether the cancellation succeeded
           * or whether the job completed despite cancellation. On a successful cancellation, the
           * BatchPredictionJob is not deleted;instead its BatchPredictionJob.state is set to `CANCELLED`.
           * Any files already outputted by the job are not deleted.
           *
           * Create a request for the method "batchPredictionJobs.cancel".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
           * <p> {@link
           * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the BatchPredictionJob to cancel. Format:
         *        `projects/{project}/locations/{location}/batchPredictionJobs/{batch_prediction_job}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CancelBatchPredictionJobRequest}
           * @since 1.13
           */
          protected Cancel(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CancelBatchPredictionJobRequest content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/batchPredictionJobs/[^/]+$");
            }
          }

          @Override
          public Cancel set$Xgafv(java.lang.String $Xgafv) {
            return (Cancel) super.set$Xgafv($Xgafv);
          }

          @Override
          public Cancel setAccessToken(java.lang.String accessToken) {
            return (Cancel) super.setAccessToken(accessToken);
          }

          @Override
          public Cancel setAlt(java.lang.String alt) {
            return (Cancel) super.setAlt(alt);
          }

          @Override
          public Cancel setCallback(java.lang.String callback) {
            return (Cancel) super.setCallback(callback);
          }

          @Override
          public Cancel setFields(java.lang.String fields) {
            return (Cancel) super.setFields(fields);
          }

          @Override
          public Cancel setKey(java.lang.String key) {
            return (Cancel) super.setKey(key);
          }

          @Override
          public Cancel setOauthToken(java.lang.String oauthToken) {
            return (Cancel) super.setOauthToken(oauthToken);
          }

          @Override
          public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Cancel) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Cancel setQuotaUser(java.lang.String quotaUser) {
            return (Cancel) super.setQuotaUser(quotaUser);
          }

          @Override
          public Cancel setUploadType(java.lang.String uploadType) {
            return (Cancel) super.setUploadType(uploadType);
          }

          @Override
          public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
            return (Cancel) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the BatchPredictionJob to cancel. Format:
           * `projects/{project}/locations/{location}/batchPredictionJobs/{batch_prediction_job}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the BatchPredictionJob to cancel. Format:
         `projects/{project}/locations/{location}/batchPredictionJobs/{batch_prediction_job}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the BatchPredictionJob to cancel. Format:
           * `projects/{project}/locations/{location}/batchPredictionJobs/{batch_prediction_job}`
           */
          public Cancel setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/batchPredictionJobs/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Cancel set(String parameterName, Object value) {
            return (Cancel) super.set(parameterName, value);
          }
        }
        /**
         * Creates a BatchPredictionJob. A BatchPredictionJob once created will right away be attempted to
         * start.
         *
         * Create a request for the method "batchPredictionJobs.create".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The resource name of the Location to create the BatchPredictionJob in. Format:
         *        `projects/{project}/locations/{location}`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1BatchPredictionJob}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1BatchPredictionJob content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1BatchPredictionJob> {

          private static final String REST_PATH = "v1/{+parent}/batchPredictionJobs";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Creates a BatchPredictionJob. A BatchPredictionJob once created will right away be attempted to
           * start.
           *
           * Create a request for the method "batchPredictionJobs.create".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The resource name of the Location to create the BatchPredictionJob in. Format:
         *        `projects/{project}/locations/{location}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1BatchPredictionJob}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1BatchPredictionJob content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1BatchPredictionJob.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the Location to create the BatchPredictionJob in.
           * Format: `projects/{project}/locations/{location}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The resource name of the Location to create the BatchPredictionJob in. Format:
         `projects/{project}/locations/{location}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The resource name of the Location to create the BatchPredictionJob in.
           * Format: `projects/{project}/locations/{location}`
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a BatchPredictionJob. Can only be called on jobs that already finished.
         *
         * Create a request for the method "batchPredictionJobs.delete".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the BatchPredictionJob resource to be deleted. Format:
         *        `projects/{project}/locations/{location}/batchPredictionJobs/{batch_prediction_job}`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/batchPredictionJobs/[^/]+$");

          /**
           * Deletes a BatchPredictionJob. Can only be called on jobs that already finished.
           *
           * Create a request for the method "batchPredictionJobs.delete".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the BatchPredictionJob resource to be deleted. Format:
         *        `projects/{project}/locations/{location}/batchPredictionJobs/{batch_prediction_job}`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/batchPredictionJobs/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the BatchPredictionJob resource to be deleted. Format:
           * `projects/{project}/locations/{location}/batchPredictionJobs/{batch_prediction_job}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the BatchPredictionJob resource to be deleted. Format:
         `projects/{project}/locations/{location}/batchPredictionJobs/{batch_prediction_job}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the BatchPredictionJob resource to be deleted. Format:
           * `projects/{project}/locations/{location}/batchPredictionJobs/{batch_prediction_job}`
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/batchPredictionJobs/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets a BatchPredictionJob
         *
         * Create a request for the method "batchPredictionJobs.get".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the BatchPredictionJob resource. Format:
         *        `projects/{project}/locations/{location}/batchPredictionJobs/{batch_prediction_job}`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1BatchPredictionJob> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/batchPredictionJobs/[^/]+$");

          /**
           * Gets a BatchPredictionJob
           *
           * Create a request for the method "batchPredictionJobs.get".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the BatchPredictionJob resource. Format:
         *        `projects/{project}/locations/{location}/batchPredictionJobs/{batch_prediction_job}`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1BatchPredictionJob.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/batchPredictionJobs/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the BatchPredictionJob resource. Format:
           * `projects/{project}/locations/{location}/batchPredictionJobs/{batch_prediction_job}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the BatchPredictionJob resource. Format:
         `projects/{project}/locations/{location}/batchPredictionJobs/{batch_prediction_job}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the BatchPredictionJob resource. Format:
           * `projects/{project}/locations/{location}/batchPredictionJobs/{batch_prediction_job}`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/batchPredictionJobs/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists BatchPredictionJobs in a Location.
         *
         * Create a request for the method "batchPredictionJobs.list".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The resource name of the Location to list the BatchPredictionJobs from. Format:
         *        `projects/{project}/locations/{location}`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListBatchPredictionJobsResponse> {

          private static final String REST_PATH = "v1/{+parent}/batchPredictionJobs";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists BatchPredictionJobs in a Location.
           *
           * Create a request for the method "batchPredictionJobs.list".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The resource name of the Location to list the BatchPredictionJobs from. Format:
         *        `projects/{project}/locations/{location}`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListBatchPredictionJobsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the Location to list the BatchPredictionJobs from.
           * Format: `projects/{project}/locations/{location}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The resource name of the Location to list the BatchPredictionJobs from. Format:
         `projects/{project}/locations/{location}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The resource name of the Location to list the BatchPredictionJobs from.
           * Format: `projects/{project}/locations/{location}`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * The standard list filter. Supported fields: * `display_name` supports `=`, `!=`
           * comparisons, and `:` wildcard. * `model_display_name` supports `=`, `!=` comparisons. *
           * `state` supports `=`, `!=` comparisons. * `create_time` supports `=`, `!=`,`<`,
           * `<=`,`>`, `>=` comparisons. `create_time` must be in RFC 3339 format. * `labels`
           * supports general map functions that is: `labels.key=value` - key:value equality
           * `labels.key:* - key existence Some examples of using the filter are: *
           * `state="JOB_STATE_SUCCEEDED" AND display_name:"my_job_*"` * `state!="JOB_STATE_FAILED"
           * OR display_name="my_job"` * `NOT display_name="my_job"` *
           * `create_time>"2021-05-18T00:00:00Z"` * `labels.keyA=valueA` * `labels.keyB:*`
           */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** The standard list filter. Supported fields: * `display_name` supports `=`, `!=` comparisons, and
         `:` wildcard. * `model_display_name` supports `=`, `!=` comparisons. * `state` supports `=`, `!=`
         comparisons. * `create_time` supports `=`, `!=`,`<`, `<=`,`>`, `>=` comparisons. `create_time` must
         be in RFC 3339 format. * `labels` supports general map functions that is: `labels.key=value` -
         key:value equality `labels.key:* - key existence Some examples of using the filter are: *
         `state="JOB_STATE_SUCCEEDED" AND display_name:"my_job_*"` * `state!="JOB_STATE_FAILED" OR
         display_name="my_job"` * `NOT display_name="my_job"` * `create_time>"2021-05-18T00:00:00Z"` *
         `labels.keyA=valueA` * `labels.keyB:*`
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /**
           * The standard list filter. Supported fields: * `display_name` supports `=`, `!=`
           * comparisons, and `:` wildcard. * `model_display_name` supports `=`, `!=` comparisons. *
           * `state` supports `=`, `!=` comparisons. * `create_time` supports `=`, `!=`,`<`,
           * `<=`,`>`, `>=` comparisons. `create_time` must be in RFC 3339 format. * `labels`
           * supports general map functions that is: `labels.key=value` - key:value equality
           * `labels.key:* - key existence Some examples of using the filter are: *
           * `state="JOB_STATE_SUCCEEDED" AND display_name:"my_job_*"` * `state!="JOB_STATE_FAILED"
           * OR display_name="my_job"` * `NOT display_name="my_job"` *
           * `create_time>"2021-05-18T00:00:00Z"` * `labels.keyA=valueA` * `labels.keyB:*`
           */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /** The standard list page size. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The standard list page size.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** The standard list page size. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * The standard list page token. Typically obtained via
           * ListBatchPredictionJobsResponse.next_page_token of the previous
           * JobService.ListBatchPredictionJobs call.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The standard list page token. Typically obtained via
         ListBatchPredictionJobsResponse.next_page_token of the previous JobService.ListBatchPredictionJobs
         call.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * The standard list page token. Typically obtained via
           * ListBatchPredictionJobsResponse.next_page_token of the previous
           * JobService.ListBatchPredictionJobs call.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          /** Mask specifying which fields to read. */
          @com.google.api.client.util.Key
          private String readMask;

          /** Mask specifying which fields to read.
           */
          public String getReadMask() {
            return readMask;
          }

          /** Mask specifying which fields to read. */
          public List setReadMask(String readMask) {
            this.readMask = readMask;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the CustomJobs collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Aiplatform aiplatform = new Aiplatform(...);}
       *   {@code Aiplatform.CustomJobs.List request = aiplatform.customJobs().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public CustomJobs customJobs() {
        return new CustomJobs();
      }

      /**
       * The "customJobs" collection of methods.
       */
      public class CustomJobs {

        /**
         * Cancels a CustomJob. Starts asynchronous cancellation on the CustomJob. The server makes a best
         * effort to cancel the job, but success is not guaranteed. Clients can use JobService.GetCustomJob
         * or other methods to check whether the cancellation succeeded or whether the job completed despite
         * cancellation. On successful cancellation, the CustomJob is not deleted; instead it becomes a job
         * with a CustomJob.error value with a google.rpc.Status.code of 1, corresponding to
         * `Code.CANCELLED`, and CustomJob.state is set to `CANCELLED`.
         *
         * Create a request for the method "customJobs.cancel".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the CustomJob to cancel. Format:
         *        `projects/{project}/locations/{location}/customJobs/{custom_job}`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CancelCustomJobRequest}
         * @return the request
         */
        public Cancel cancel(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CancelCustomJobRequest content) throws java.io.IOException {
          Cancel result = new Cancel(name, content);
          initialize(result);
          return result;
        }

        public class Cancel extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

          private static final String REST_PATH = "v1/{+name}:cancel";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/customJobs/[^/]+$");

          /**
           * Cancels a CustomJob. Starts asynchronous cancellation on the CustomJob. The server makes a best
           * effort to cancel the job, but success is not guaranteed. Clients can use
           * JobService.GetCustomJob or other methods to check whether the cancellation succeeded or whether
           * the job completed despite cancellation. On successful cancellation, the CustomJob is not
           * deleted; instead it becomes a job with a CustomJob.error value with a google.rpc.Status.code of
           * 1, corresponding to `Code.CANCELLED`, and CustomJob.state is set to `CANCELLED`.
           *
           * Create a request for the method "customJobs.cancel".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
           * <p> {@link
           * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the CustomJob to cancel. Format:
         *        `projects/{project}/locations/{location}/customJobs/{custom_job}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CancelCustomJobRequest}
           * @since 1.13
           */
          protected Cancel(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CancelCustomJobRequest content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/customJobs/[^/]+$");
            }
          }

          @Override
          public Cancel set$Xgafv(java.lang.String $Xgafv) {
            return (Cancel) super.set$Xgafv($Xgafv);
          }

          @Override
          public Cancel setAccessToken(java.lang.String accessToken) {
            return (Cancel) super.setAccessToken(accessToken);
          }

          @Override
          public Cancel setAlt(java.lang.String alt) {
            return (Cancel) super.setAlt(alt);
          }

          @Override
          public Cancel setCallback(java.lang.String callback) {
            return (Cancel) super.setCallback(callback);
          }

          @Override
          public Cancel setFields(java.lang.String fields) {
            return (Cancel) super.setFields(fields);
          }

          @Override
          public Cancel setKey(java.lang.String key) {
            return (Cancel) super.setKey(key);
          }

          @Override
          public Cancel setOauthToken(java.lang.String oauthToken) {
            return (Cancel) super.setOauthToken(oauthToken);
          }

          @Override
          public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Cancel) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Cancel setQuotaUser(java.lang.String quotaUser) {
            return (Cancel) super.setQuotaUser(quotaUser);
          }

          @Override
          public Cancel setUploadType(java.lang.String uploadType) {
            return (Cancel) super.setUploadType(uploadType);
          }

          @Override
          public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
            return (Cancel) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the CustomJob to cancel. Format:
           * `projects/{project}/locations/{location}/customJobs/{custom_job}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the CustomJob to cancel. Format:
         `projects/{project}/locations/{location}/customJobs/{custom_job}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the CustomJob to cancel. Format:
           * `projects/{project}/locations/{location}/customJobs/{custom_job}`
           */
          public Cancel setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/customJobs/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Cancel set(String parameterName, Object value) {
            return (Cancel) super.set(parameterName, value);
          }
        }
        /**
         * Creates a CustomJob. A created CustomJob right away will be attempted to be run.
         *
         * Create a request for the method "customJobs.create".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The resource name of the Location to create the CustomJob in. Format:
         *        `projects/{project}/locations/{location}`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CustomJob}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CustomJob content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CustomJob> {

          private static final String REST_PATH = "v1/{+parent}/customJobs";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Creates a CustomJob. A created CustomJob right away will be attempted to be run.
           *
           * Create a request for the method "customJobs.create".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The resource name of the Location to create the CustomJob in. Format:
         *        `projects/{project}/locations/{location}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CustomJob}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CustomJob content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CustomJob.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the Location to create the CustomJob in. Format:
           * `projects/{project}/locations/{location}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The resource name of the Location to create the CustomJob in. Format:
         `projects/{project}/locations/{location}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The resource name of the Location to create the CustomJob in. Format:
           * `projects/{project}/locations/{location}`
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a CustomJob.
         *
         * Create a request for the method "customJobs.delete".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the CustomJob resource to be deleted. Format:
         *        `projects/{project}/locations/{location}/customJobs/{custom_job}`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/customJobs/[^/]+$");

          /**
           * Deletes a CustomJob.
           *
           * Create a request for the method "customJobs.delete".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the CustomJob resource to be deleted. Format:
         *        `projects/{project}/locations/{location}/customJobs/{custom_job}`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/customJobs/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the CustomJob resource to be deleted. Format:
           * `projects/{project}/locations/{location}/customJobs/{custom_job}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the CustomJob resource to be deleted. Format:
         `projects/{project}/locations/{location}/customJobs/{custom_job}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the CustomJob resource to be deleted. Format:
           * `projects/{project}/locations/{location}/customJobs/{custom_job}`
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/customJobs/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets a CustomJob.
         *
         * Create a request for the method "customJobs.get".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the CustomJob resource. Format:
         *        `projects/{project}/locations/{location}/customJobs/{custom_job}`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CustomJob> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/customJobs/[^/]+$");

          /**
           * Gets a CustomJob.
           *
           * Create a request for the method "customJobs.get".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the CustomJob resource. Format:
         *        `projects/{project}/locations/{location}/customJobs/{custom_job}`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CustomJob.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/customJobs/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the CustomJob resource. Format:
           * `projects/{project}/locations/{location}/customJobs/{custom_job}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the CustomJob resource. Format:
         `projects/{project}/locations/{location}/customJobs/{custom_job}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the CustomJob resource. Format:
           * `projects/{project}/locations/{location}/customJobs/{custom_job}`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/customJobs/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists CustomJobs in a Location.
         *
         * Create a request for the method "customJobs.list".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The resource name of the Location to list the CustomJobs from. Format:
         *        `projects/{project}/locations/{location}`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListCustomJobsResponse> {

          private static final String REST_PATH = "v1/{+parent}/customJobs";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists CustomJobs in a Location.
           *
           * Create a request for the method "customJobs.list".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The resource name of the Location to list the CustomJobs from. Format:
         *        `projects/{project}/locations/{location}`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListCustomJobsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the Location to list the CustomJobs from. Format:
           * `projects/{project}/locations/{location}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The resource name of the Location to list the CustomJobs from. Format:
         `projects/{project}/locations/{location}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The resource name of the Location to list the CustomJobs from. Format:
           * `projects/{project}/locations/{location}`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * The standard list filter. Supported fields: * `display_name` supports `=`, `!=`
           * comparisons, and `:` wildcard. * `state` supports `=`, `!=` comparisons. *
           * `create_time` supports `=`, `!=`,`<`, `<=`,`>`, `>=` comparisons. `create_time` must be
           * in RFC 3339 format. * `labels` supports general map functions that is:
           * `labels.key=value` - key:value equality `labels.key:* - key existence Some examples of
           * using the filter are: * `state="JOB_STATE_SUCCEEDED" AND display_name:"my_job_*"` *
           * `state!="JOB_STATE_FAILED" OR display_name="my_job"` * `NOT display_name="my_job"` *
           * `create_time>"2021-05-18T00:00:00Z"` * `labels.keyA=valueA` * `labels.keyB:*`
           */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** The standard list filter. Supported fields: * `display_name` supports `=`, `!=` comparisons, and
         `:` wildcard. * `state` supports `=`, `!=` comparisons. * `create_time` supports `=`, `!=`,`<`,
         `<=`,`>`, `>=` comparisons. `create_time` must be in RFC 3339 format. * `labels` supports general
         map functions that is: `labels.key=value` - key:value equality `labels.key:* - key existence Some
         examples of using the filter are: * `state="JOB_STATE_SUCCEEDED" AND display_name:"my_job_*"` *
         `state!="JOB_STATE_FAILED" OR display_name="my_job"` * `NOT display_name="my_job"` *
         `create_time>"2021-05-18T00:00:00Z"` * `labels.keyA=valueA` * `labels.keyB:*`
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /**
           * The standard list filter. Supported fields: * `display_name` supports `=`, `!=`
           * comparisons, and `:` wildcard. * `state` supports `=`, `!=` comparisons. *
           * `create_time` supports `=`, `!=`,`<`, `<=`,`>`, `>=` comparisons. `create_time` must be
           * in RFC 3339 format. * `labels` supports general map functions that is:
           * `labels.key=value` - key:value equality `labels.key:* - key existence Some examples of
           * using the filter are: * `state="JOB_STATE_SUCCEEDED" AND display_name:"my_job_*"` *
           * `state!="JOB_STATE_FAILED" OR display_name="my_job"` * `NOT display_name="my_job"` *
           * `create_time>"2021-05-18T00:00:00Z"` * `labels.keyA=valueA` * `labels.keyB:*`
           */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /** The standard list page size. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The standard list page size.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** The standard list page size. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * The standard list page token. Typically obtained via
           * ListCustomJobsResponse.next_page_token of the previous JobService.ListCustomJobs call.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The standard list page token. Typically obtained via ListCustomJobsResponse.next_page_token of the
         previous JobService.ListCustomJobs call.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * The standard list page token. Typically obtained via
           * ListCustomJobsResponse.next_page_token of the previous JobService.ListCustomJobs call.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          /** Mask specifying which fields to read. */
          @com.google.api.client.util.Key
          private String readMask;

          /** Mask specifying which fields to read.
           */
          public String getReadMask() {
            return readMask;
          }

          /** Mask specifying which fields to read. */
          public List setReadMask(String readMask) {
            this.readMask = readMask;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the Operations collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Aiplatform aiplatform = new Aiplatform(...);}
         *   {@code Aiplatform.Operations.List request = aiplatform.operations().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Operations operations() {
          return new Operations();
        }

        /**
         * The "operations" collection of methods.
         */
        public class Operations {

          /**
           * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
           * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
           * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
           * methods to check whether the cancellation succeeded or whether the operation completed despite
           * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
           * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
           * `Code.CANCELLED`.
           *
           * Create a request for the method "operations.cancel".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource to be cancelled.
           * @return the request
           */
          public Cancel cancel(java.lang.String name) throws java.io.IOException {
            Cancel result = new Cancel(name);
            initialize(result);
            return result;
          }

          public class Cancel extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

            private static final String REST_PATH = "v1/{+name}:cancel";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/customJobs/[^/]+/operations/[^/]+$");

            /**
             * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
             * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
             * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
             * methods to check whether the cancellation succeeded or whether the operation completed despite
             * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
             * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
             * `Code.CANCELLED`.
             *
             * Create a request for the method "operations.cancel".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
             * <p> {@link
             * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource to be cancelled.
             * @since 1.13
             */
            protected Cancel(java.lang.String name) {
              super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/customJobs/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public Cancel set$Xgafv(java.lang.String $Xgafv) {
              return (Cancel) super.set$Xgafv($Xgafv);
            }

            @Override
            public Cancel setAccessToken(java.lang.String accessToken) {
              return (Cancel) super.setAccessToken(accessToken);
            }

            @Override
            public Cancel setAlt(java.lang.String alt) {
              return (Cancel) super.setAlt(alt);
            }

            @Override
            public Cancel setCallback(java.lang.String callback) {
              return (Cancel) super.setCallback(callback);
            }

            @Override
            public Cancel setFields(java.lang.String fields) {
              return (Cancel) super.setFields(fields);
            }

            @Override
            public Cancel setKey(java.lang.String key) {
              return (Cancel) super.setKey(key);
            }

            @Override
            public Cancel setOauthToken(java.lang.String oauthToken) {
              return (Cancel) super.setOauthToken(oauthToken);
            }

            @Override
            public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Cancel) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Cancel setQuotaUser(java.lang.String quotaUser) {
              return (Cancel) super.setQuotaUser(quotaUser);
            }

            @Override
            public Cancel setUploadType(java.lang.String uploadType) {
              return (Cancel) super.setUploadType(uploadType);
            }

            @Override
            public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
              return (Cancel) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource to be cancelled. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource to be cancelled.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource to be cancelled. */
            public Cancel setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/customJobs/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Cancel set(String parameterName, Object value) {
              return (Cancel) super.set(parameterName, value);
            }
          }
          /**
           * Deletes a long-running operation. This method indicates that the client is no longer interested
           * in the operation result. It does not cancel the operation. If the server doesn't support this
           * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.delete".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource to be deleted.
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/customJobs/[^/]+/operations/[^/]+$");

            /**
             * Deletes a long-running operation. This method indicates that the client is no longer interested
             * in the operation result. It does not cancel the operation. If the server doesn't support this
             * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.delete".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource to be deleted.
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/customJobs/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource to be deleted. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource to be deleted.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource to be deleted. */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/customJobs/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Gets the latest state of a long-running operation. Clients can use this method to poll the
           * operation result at intervals as recommended by the API service.
           *
           * Create a request for the method "operations.get".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource.
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/customJobs/[^/]+/operations/[^/]+$");

            /**
             * Gets the latest state of a long-running operation. Clients can use this method to poll the
             * operation result at intervals as recommended by the API service.
             *
             * Create a request for the method "operations.get".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource.
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/customJobs/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource. */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/customJobs/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Lists operations that match the specified filter in the request. If the server doesn't support
           * this method, it returns `UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.list".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation's parent resource.
           * @return the request
           */
          public List list(java.lang.String name) throws java.io.IOException {
            List result = new List(name);
            initialize(result);
            return result;
          }

          public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse> {

            private static final String REST_PATH = "v1/{+name}/operations";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/customJobs/[^/]+$");

            /**
             * Lists operations that match the specified filter in the request. If the server doesn't support
             * this method, it returns `UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.list".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation's parent resource.
             * @since 1.13
             */
            protected List(java.lang.String name) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/customJobs/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation's parent resource. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation's parent resource.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation's parent resource. */
            public List setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/customJobs/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /** The standard list filter. */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** The standard list filter.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /** The standard list filter. */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /** The standard list page size. */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** The standard list page size.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /** The standard list page size. */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** The standard list page token. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** The standard list page token.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** The standard list page token. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Waits until the specified long-running operation is done or reaches at most a specified timeout,
           * returning the latest state. If the operation is already done, the latest state is immediately
           * returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC
           * timeout is used. If the server does not support this method, it returns
           * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
           * the latest state before the specified timeout (including immediately), meaning even an immediate
           * response is no guarantee that the operation is done.
           *
           * Create a request for the method "operations.wait".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Wait#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource to wait on.
           * @return the request
           */
          public Wait wait(java.lang.String name) throws java.io.IOException {
            Wait result = new Wait(name);
            initialize(result);
            return result;
          }

          public class Wait extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+name}:wait";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/customJobs/[^/]+/operations/[^/]+$");

            /**
             * Waits until the specified long-running operation is done or reaches at most a specified
             * timeout, returning the latest state. If the operation is already done, the latest state is
             * immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout,
             * the HTTP/RPC timeout is used. If the server does not support this method, it returns
             * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
             * the latest state before the specified timeout (including immediately), meaning even an
             * immediate response is no guarantee that the operation is done.
             *
             * Create a request for the method "operations.wait".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Wait#execute()} method to invoke the remote operation. <p>
             * {@link Wait#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource to wait on.
             * @since 1.13
             */
            protected Wait(java.lang.String name) {
              super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/customJobs/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public Wait set$Xgafv(java.lang.String $Xgafv) {
              return (Wait) super.set$Xgafv($Xgafv);
            }

            @Override
            public Wait setAccessToken(java.lang.String accessToken) {
              return (Wait) super.setAccessToken(accessToken);
            }

            @Override
            public Wait setAlt(java.lang.String alt) {
              return (Wait) super.setAlt(alt);
            }

            @Override
            public Wait setCallback(java.lang.String callback) {
              return (Wait) super.setCallback(callback);
            }

            @Override
            public Wait setFields(java.lang.String fields) {
              return (Wait) super.setFields(fields);
            }

            @Override
            public Wait setKey(java.lang.String key) {
              return (Wait) super.setKey(key);
            }

            @Override
            public Wait setOauthToken(java.lang.String oauthToken) {
              return (Wait) super.setOauthToken(oauthToken);
            }

            @Override
            public Wait setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Wait) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Wait setQuotaUser(java.lang.String quotaUser) {
              return (Wait) super.setQuotaUser(quotaUser);
            }

            @Override
            public Wait setUploadType(java.lang.String uploadType) {
              return (Wait) super.setUploadType(uploadType);
            }

            @Override
            public Wait setUploadProtocol(java.lang.String uploadProtocol) {
              return (Wait) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource to wait on. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource to wait on.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource to wait on. */
            public Wait setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/customJobs/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * The maximum duration to wait before timing out. If left blank, the wait will be at
             * most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline
             * is also specified, the shorter one will be used.
             */
            @com.google.api.client.util.Key
            private String timeout;

            /** The maximum duration to wait before timing out. If left blank, the wait will be at most the time
           permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the
           shorter one will be used.
             */
            public String getTimeout() {
              return timeout;
            }

            /**
             * The maximum duration to wait before timing out. If left blank, the wait will be at
             * most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline
             * is also specified, the shorter one will be used.
             */
            public Wait setTimeout(String timeout) {
              this.timeout = timeout;
              return this;
            }

            @Override
            public Wait set(String parameterName, Object value) {
              return (Wait) super.set(parameterName, value);
            }
          }

        }
      }
      /**
       * An accessor for creating requests from the DataLabelingJobs collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Aiplatform aiplatform = new Aiplatform(...);}
       *   {@code Aiplatform.DataLabelingJobs.List request = aiplatform.dataLabelingJobs().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public DataLabelingJobs dataLabelingJobs() {
        return new DataLabelingJobs();
      }

      /**
       * The "dataLabelingJobs" collection of methods.
       */
      public class DataLabelingJobs {

        /**
         * Cancels a DataLabelingJob. Success of cancellation is not guaranteed.
         *
         * Create a request for the method "dataLabelingJobs.cancel".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the DataLabelingJob. Format:
         *        `projects/{project}/locations/{location}/dataLabelingJobs/{data_labeling_job}`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CancelDataLabelingJobRequest}
         * @return the request
         */
        public Cancel cancel(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CancelDataLabelingJobRequest content) throws java.io.IOException {
          Cancel result = new Cancel(name, content);
          initialize(result);
          return result;
        }

        public class Cancel extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

          private static final String REST_PATH = "v1/{+name}:cancel";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/dataLabelingJobs/[^/]+$");

          /**
           * Cancels a DataLabelingJob. Success of cancellation is not guaranteed.
           *
           * Create a request for the method "dataLabelingJobs.cancel".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
           * <p> {@link
           * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the DataLabelingJob. Format:
         *        `projects/{project}/locations/{location}/dataLabelingJobs/{data_labeling_job}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CancelDataLabelingJobRequest}
           * @since 1.13
           */
          protected Cancel(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CancelDataLabelingJobRequest content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/dataLabelingJobs/[^/]+$");
            }
          }

          @Override
          public Cancel set$Xgafv(java.lang.String $Xgafv) {
            return (Cancel) super.set$Xgafv($Xgafv);
          }

          @Override
          public Cancel setAccessToken(java.lang.String accessToken) {
            return (Cancel) super.setAccessToken(accessToken);
          }

          @Override
          public Cancel setAlt(java.lang.String alt) {
            return (Cancel) super.setAlt(alt);
          }

          @Override
          public Cancel setCallback(java.lang.String callback) {
            return (Cancel) super.setCallback(callback);
          }

          @Override
          public Cancel setFields(java.lang.String fields) {
            return (Cancel) super.setFields(fields);
          }

          @Override
          public Cancel setKey(java.lang.String key) {
            return (Cancel) super.setKey(key);
          }

          @Override
          public Cancel setOauthToken(java.lang.String oauthToken) {
            return (Cancel) super.setOauthToken(oauthToken);
          }

          @Override
          public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Cancel) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Cancel setQuotaUser(java.lang.String quotaUser) {
            return (Cancel) super.setQuotaUser(quotaUser);
          }

          @Override
          public Cancel setUploadType(java.lang.String uploadType) {
            return (Cancel) super.setUploadType(uploadType);
          }

          @Override
          public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
            return (Cancel) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the DataLabelingJob. Format:
           * `projects/{project}/locations/{location}/dataLabelingJobs/{data_labeling_job}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the DataLabelingJob. Format:
         `projects/{project}/locations/{location}/dataLabelingJobs/{data_labeling_job}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the DataLabelingJob. Format:
           * `projects/{project}/locations/{location}/dataLabelingJobs/{data_labeling_job}`
           */
          public Cancel setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/dataLabelingJobs/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Cancel set(String parameterName, Object value) {
            return (Cancel) super.set(parameterName, value);
          }
        }
        /**
         * Creates a DataLabelingJob.
         *
         * Create a request for the method "dataLabelingJobs.create".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent of the DataLabelingJob. Format: `projects/{project}/locations/{location}`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1DataLabelingJob}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1DataLabelingJob content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1DataLabelingJob> {

          private static final String REST_PATH = "v1/{+parent}/dataLabelingJobs";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Creates a DataLabelingJob.
           *
           * Create a request for the method "dataLabelingJobs.create".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent of the DataLabelingJob. Format: `projects/{project}/locations/{location}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1DataLabelingJob}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1DataLabelingJob content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1DataLabelingJob.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The parent of the DataLabelingJob. Format:
           * `projects/{project}/locations/{location}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent of the DataLabelingJob. Format: `projects/{project}/locations/{location}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The parent of the DataLabelingJob. Format:
           * `projects/{project}/locations/{location}`
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a DataLabelingJob.
         *
         * Create a request for the method "dataLabelingJobs.delete".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the DataLabelingJob to be deleted. Format:
         *        `projects/{project}/locations/{location}/dataLabelingJobs/{data_labeling_job}`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/dataLabelingJobs/[^/]+$");

          /**
           * Deletes a DataLabelingJob.
           *
           * Create a request for the method "dataLabelingJobs.delete".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the DataLabelingJob to be deleted. Format:
         *        `projects/{project}/locations/{location}/dataLabelingJobs/{data_labeling_job}`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/dataLabelingJobs/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the DataLabelingJob to be deleted. Format:
           * `projects/{project}/locations/{location}/dataLabelingJobs/{data_labeling_job}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the DataLabelingJob to be deleted. Format:
         `projects/{project}/locations/{location}/dataLabelingJobs/{data_labeling_job}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the DataLabelingJob to be deleted. Format:
           * `projects/{project}/locations/{location}/dataLabelingJobs/{data_labeling_job}`
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/dataLabelingJobs/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets a DataLabelingJob.
         *
         * Create a request for the method "dataLabelingJobs.get".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the DataLabelingJob. Format:
         *        `projects/{project}/locations/{location}/dataLabelingJobs/{data_labeling_job}`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1DataLabelingJob> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/dataLabelingJobs/[^/]+$");

          /**
           * Gets a DataLabelingJob.
           *
           * Create a request for the method "dataLabelingJobs.get".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the DataLabelingJob. Format:
         *        `projects/{project}/locations/{location}/dataLabelingJobs/{data_labeling_job}`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1DataLabelingJob.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/dataLabelingJobs/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the DataLabelingJob. Format:
           * `projects/{project}/locations/{location}/dataLabelingJobs/{data_labeling_job}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the DataLabelingJob. Format:
         `projects/{project}/locations/{location}/dataLabelingJobs/{data_labeling_job}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the DataLabelingJob. Format:
           * `projects/{project}/locations/{location}/dataLabelingJobs/{data_labeling_job}`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/dataLabelingJobs/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists DataLabelingJobs in a Location.
         *
         * Create a request for the method "dataLabelingJobs.list".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent of the DataLabelingJob. Format: `projects/{project}/locations/{location}`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListDataLabelingJobsResponse> {

          private static final String REST_PATH = "v1/{+parent}/dataLabelingJobs";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists DataLabelingJobs in a Location.
           *
           * Create a request for the method "dataLabelingJobs.list".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent of the DataLabelingJob. Format: `projects/{project}/locations/{location}`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListDataLabelingJobsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The parent of the DataLabelingJob. Format:
           * `projects/{project}/locations/{location}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent of the DataLabelingJob. Format: `projects/{project}/locations/{location}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The parent of the DataLabelingJob. Format:
           * `projects/{project}/locations/{location}`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * The standard list filter. Supported fields: * `display_name` supports `=`, `!=`
           * comparisons, and `:` wildcard. * `state` supports `=`, `!=` comparisons. *
           * `create_time` supports `=`, `!=`,`<`, `<=`,`>`, `>=` comparisons. `create_time` must be
           * in RFC 3339 format. * `labels` supports general map functions that is:
           * `labels.key=value` - key:value equality `labels.key:* - key existence Some examples of
           * using the filter are: * `state="JOB_STATE_SUCCEEDED" AND display_name:"my_job_*"` *
           * `state!="JOB_STATE_FAILED" OR display_name="my_job"` * `NOT display_name="my_job"` *
           * `create_time>"2021-05-18T00:00:00Z"` * `labels.keyA=valueA` * `labels.keyB:*`
           */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** The standard list filter. Supported fields: * `display_name` supports `=`, `!=` comparisons, and
         `:` wildcard. * `state` supports `=`, `!=` comparisons. * `create_time` supports `=`, `!=`,`<`,
         `<=`,`>`, `>=` comparisons. `create_time` must be in RFC 3339 format. * `labels` supports general
         map functions that is: `labels.key=value` - key:value equality `labels.key:* - key existence Some
         examples of using the filter are: * `state="JOB_STATE_SUCCEEDED" AND display_name:"my_job_*"` *
         `state!="JOB_STATE_FAILED" OR display_name="my_job"` * `NOT display_name="my_job"` *
         `create_time>"2021-05-18T00:00:00Z"` * `labels.keyA=valueA` * `labels.keyB:*`
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /**
           * The standard list filter. Supported fields: * `display_name` supports `=`, `!=`
           * comparisons, and `:` wildcard. * `state` supports `=`, `!=` comparisons. *
           * `create_time` supports `=`, `!=`,`<`, `<=`,`>`, `>=` comparisons. `create_time` must be
           * in RFC 3339 format. * `labels` supports general map functions that is:
           * `labels.key=value` - key:value equality `labels.key:* - key existence Some examples of
           * using the filter are: * `state="JOB_STATE_SUCCEEDED" AND display_name:"my_job_*"` *
           * `state!="JOB_STATE_FAILED" OR display_name="my_job"` * `NOT display_name="my_job"` *
           * `create_time>"2021-05-18T00:00:00Z"` * `labels.keyA=valueA` * `labels.keyB:*`
           */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /**
           * A comma-separated list of fields to order by, sorted in ascending order by default. Use
           * `desc` after a field name for descending.
           */
          @com.google.api.client.util.Key
          private java.lang.String orderBy;

          /** A comma-separated list of fields to order by, sorted in ascending order by default. Use `desc`
         after a field name for descending.
           */
          public java.lang.String getOrderBy() {
            return orderBy;
          }

          /**
           * A comma-separated list of fields to order by, sorted in ascending order by default. Use
           * `desc` after a field name for descending.
           */
          public List setOrderBy(java.lang.String orderBy) {
            this.orderBy = orderBy;
            return this;
          }

          /** The standard list page size. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The standard list page size.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** The standard list page size. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** The standard list page token. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The standard list page token.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** The standard list page token. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          /**
           * Mask specifying which fields to read. FieldMask represents a set of symbolic field
           * paths. For example, the mask can be `paths: "name"`. The "name" here is a field in
           * DataLabelingJob. If this field is not set, all fields of the DataLabelingJob are
           * returned.
           */
          @com.google.api.client.util.Key
          private String readMask;

          /** Mask specifying which fields to read. FieldMask represents a set of symbolic field paths. For
         example, the mask can be `paths: "name"`. The "name" here is a field in DataLabelingJob. If this
         field is not set, all fields of the DataLabelingJob are returned.
           */
          public String getReadMask() {
            return readMask;
          }

          /**
           * Mask specifying which fields to read. FieldMask represents a set of symbolic field
           * paths. For example, the mask can be `paths: "name"`. The "name" here is a field in
           * DataLabelingJob. If this field is not set, all fields of the DataLabelingJob are
           * returned.
           */
          public List setReadMask(String readMask) {
            this.readMask = readMask;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the Operations collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Aiplatform aiplatform = new Aiplatform(...);}
         *   {@code Aiplatform.Operations.List request = aiplatform.operations().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Operations operations() {
          return new Operations();
        }

        /**
         * The "operations" collection of methods.
         */
        public class Operations {

          /**
           * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
           * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
           * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
           * methods to check whether the cancellation succeeded or whether the operation completed despite
           * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
           * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
           * `Code.CANCELLED`.
           *
           * Create a request for the method "operations.cancel".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource to be cancelled.
           * @return the request
           */
          public Cancel cancel(java.lang.String name) throws java.io.IOException {
            Cancel result = new Cancel(name);
            initialize(result);
            return result;
          }

          public class Cancel extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

            private static final String REST_PATH = "v1/{+name}:cancel";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/dataLabelingJobs/[^/]+/operations/[^/]+$");

            /**
             * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
             * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
             * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
             * methods to check whether the cancellation succeeded or whether the operation completed despite
             * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
             * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
             * `Code.CANCELLED`.
             *
             * Create a request for the method "operations.cancel".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
             * <p> {@link
             * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource to be cancelled.
             * @since 1.13
             */
            protected Cancel(java.lang.String name) {
              super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/dataLabelingJobs/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public Cancel set$Xgafv(java.lang.String $Xgafv) {
              return (Cancel) super.set$Xgafv($Xgafv);
            }

            @Override
            public Cancel setAccessToken(java.lang.String accessToken) {
              return (Cancel) super.setAccessToken(accessToken);
            }

            @Override
            public Cancel setAlt(java.lang.String alt) {
              return (Cancel) super.setAlt(alt);
            }

            @Override
            public Cancel setCallback(java.lang.String callback) {
              return (Cancel) super.setCallback(callback);
            }

            @Override
            public Cancel setFields(java.lang.String fields) {
              return (Cancel) super.setFields(fields);
            }

            @Override
            public Cancel setKey(java.lang.String key) {
              return (Cancel) super.setKey(key);
            }

            @Override
            public Cancel setOauthToken(java.lang.String oauthToken) {
              return (Cancel) super.setOauthToken(oauthToken);
            }

            @Override
            public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Cancel) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Cancel setQuotaUser(java.lang.String quotaUser) {
              return (Cancel) super.setQuotaUser(quotaUser);
            }

            @Override
            public Cancel setUploadType(java.lang.String uploadType) {
              return (Cancel) super.setUploadType(uploadType);
            }

            @Override
            public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
              return (Cancel) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource to be cancelled. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource to be cancelled.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource to be cancelled. */
            public Cancel setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/dataLabelingJobs/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Cancel set(String parameterName, Object value) {
              return (Cancel) super.set(parameterName, value);
            }
          }
          /**
           * Deletes a long-running operation. This method indicates that the client is no longer interested
           * in the operation result. It does not cancel the operation. If the server doesn't support this
           * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.delete".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource to be deleted.
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/dataLabelingJobs/[^/]+/operations/[^/]+$");

            /**
             * Deletes a long-running operation. This method indicates that the client is no longer interested
             * in the operation result. It does not cancel the operation. If the server doesn't support this
             * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.delete".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource to be deleted.
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/dataLabelingJobs/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource to be deleted. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource to be deleted.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource to be deleted. */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/dataLabelingJobs/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Gets the latest state of a long-running operation. Clients can use this method to poll the
           * operation result at intervals as recommended by the API service.
           *
           * Create a request for the method "operations.get".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource.
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/dataLabelingJobs/[^/]+/operations/[^/]+$");

            /**
             * Gets the latest state of a long-running operation. Clients can use this method to poll the
             * operation result at intervals as recommended by the API service.
             *
             * Create a request for the method "operations.get".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource.
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/dataLabelingJobs/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource. */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/dataLabelingJobs/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Lists operations that match the specified filter in the request. If the server doesn't support
           * this method, it returns `UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.list".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation's parent resource.
           * @return the request
           */
          public List list(java.lang.String name) throws java.io.IOException {
            List result = new List(name);
            initialize(result);
            return result;
          }

          public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse> {

            private static final String REST_PATH = "v1/{+name}/operations";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/dataLabelingJobs/[^/]+$");

            /**
             * Lists operations that match the specified filter in the request. If the server doesn't support
             * this method, it returns `UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.list".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation's parent resource.
             * @since 1.13
             */
            protected List(java.lang.String name) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/dataLabelingJobs/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation's parent resource. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation's parent resource.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation's parent resource. */
            public List setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/dataLabelingJobs/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /** The standard list filter. */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** The standard list filter.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /** The standard list filter. */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /** The standard list page size. */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** The standard list page size.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /** The standard list page size. */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** The standard list page token. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** The standard list page token.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** The standard list page token. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Waits until the specified long-running operation is done or reaches at most a specified timeout,
           * returning the latest state. If the operation is already done, the latest state is immediately
           * returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC
           * timeout is used. If the server does not support this method, it returns
           * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
           * the latest state before the specified timeout (including immediately), meaning even an immediate
           * response is no guarantee that the operation is done.
           *
           * Create a request for the method "operations.wait".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Wait#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource to wait on.
           * @return the request
           */
          public Wait wait(java.lang.String name) throws java.io.IOException {
            Wait result = new Wait(name);
            initialize(result);
            return result;
          }

          public class Wait extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+name}:wait";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/dataLabelingJobs/[^/]+/operations/[^/]+$");

            /**
             * Waits until the specified long-running operation is done or reaches at most a specified
             * timeout, returning the latest state. If the operation is already done, the latest state is
             * immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout,
             * the HTTP/RPC timeout is used. If the server does not support this method, it returns
             * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
             * the latest state before the specified timeout (including immediately), meaning even an
             * immediate response is no guarantee that the operation is done.
             *
             * Create a request for the method "operations.wait".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Wait#execute()} method to invoke the remote operation. <p>
             * {@link Wait#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource to wait on.
             * @since 1.13
             */
            protected Wait(java.lang.String name) {
              super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/dataLabelingJobs/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public Wait set$Xgafv(java.lang.String $Xgafv) {
              return (Wait) super.set$Xgafv($Xgafv);
            }

            @Override
            public Wait setAccessToken(java.lang.String accessToken) {
              return (Wait) super.setAccessToken(accessToken);
            }

            @Override
            public Wait setAlt(java.lang.String alt) {
              return (Wait) super.setAlt(alt);
            }

            @Override
            public Wait setCallback(java.lang.String callback) {
              return (Wait) super.setCallback(callback);
            }

            @Override
            public Wait setFields(java.lang.String fields) {
              return (Wait) super.setFields(fields);
            }

            @Override
            public Wait setKey(java.lang.String key) {
              return (Wait) super.setKey(key);
            }

            @Override
            public Wait setOauthToken(java.lang.String oauthToken) {
              return (Wait) super.setOauthToken(oauthToken);
            }

            @Override
            public Wait setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Wait) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Wait setQuotaUser(java.lang.String quotaUser) {
              return (Wait) super.setQuotaUser(quotaUser);
            }

            @Override
            public Wait setUploadType(java.lang.String uploadType) {
              return (Wait) super.setUploadType(uploadType);
            }

            @Override
            public Wait setUploadProtocol(java.lang.String uploadProtocol) {
              return (Wait) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource to wait on. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource to wait on.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource to wait on. */
            public Wait setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/dataLabelingJobs/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * The maximum duration to wait before timing out. If left blank, the wait will be at
             * most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline
             * is also specified, the shorter one will be used.
             */
            @com.google.api.client.util.Key
            private String timeout;

            /** The maximum duration to wait before timing out. If left blank, the wait will be at most the time
           permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the
           shorter one will be used.
             */
            public String getTimeout() {
              return timeout;
            }

            /**
             * The maximum duration to wait before timing out. If left blank, the wait will be at
             * most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline
             * is also specified, the shorter one will be used.
             */
            public Wait setTimeout(String timeout) {
              this.timeout = timeout;
              return this;
            }

            @Override
            public Wait set(String parameterName, Object value) {
              return (Wait) super.set(parameterName, value);
            }
          }

        }
      }
      /**
       * An accessor for creating requests from the Datasets collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Aiplatform aiplatform = new Aiplatform(...);}
       *   {@code Aiplatform.Datasets.List request = aiplatform.datasets().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Datasets datasets() {
        return new Datasets();
      }

      /**
       * The "datasets" collection of methods.
       */
      public class Datasets {

        /**
         * Creates a Dataset.
         *
         * Create a request for the method "datasets.create".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The resource name of the Location to create the Dataset in. Format:
         *        `projects/{project}/locations/{location}`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Dataset}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Dataset content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+parent}/datasets";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Creates a Dataset.
           *
           * Create a request for the method "datasets.create".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The resource name of the Location to create the Dataset in. Format:
         *        `projects/{project}/locations/{location}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Dataset}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Dataset content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the Location to create the Dataset in. Format:
           * `projects/{project}/locations/{location}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The resource name of the Location to create the Dataset in. Format:
         `projects/{project}/locations/{location}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The resource name of the Location to create the Dataset in. Format:
           * `projects/{project}/locations/{location}`
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a Dataset.
         *
         * Create a request for the method "datasets.delete".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The resource name of the Dataset to delete. Format:
         *        `projects/{project}/locations/{location}/datasets/{dataset}`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");

          /**
           * Deletes a Dataset.
           *
           * Create a request for the method "datasets.delete".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The resource name of the Dataset to delete. Format:
         *        `projects/{project}/locations/{location}/datasets/{dataset}`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the Dataset to delete. Format:
           * `projects/{project}/locations/{location}/datasets/{dataset}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The resource name of the Dataset to delete. Format:
         `projects/{project}/locations/{location}/datasets/{dataset}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The resource name of the Dataset to delete. Format:
           * `projects/{project}/locations/{location}/datasets/{dataset}`
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Exports data from a Dataset.
         *
         * Create a request for the method "datasets.export".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Export#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the Dataset resource. Format:
         *        `projects/{project}/locations/{location}/datasets/{dataset}`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ExportDataRequest}
         * @return the request
         */
        public Export export(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ExportDataRequest content) throws java.io.IOException {
          Export result = new Export(name, content);
          initialize(result);
          return result;
        }

        public class Export extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+name}:export";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");

          /**
           * Exports data from a Dataset.
           *
           * Create a request for the method "datasets.export".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Export#execute()} method to invoke the remote operation.
           * <p> {@link
           * Export#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the Dataset resource. Format:
         *        `projects/{project}/locations/{location}/datasets/{dataset}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ExportDataRequest}
           * @since 1.13
           */
          protected Export(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ExportDataRequest content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
            }
          }

          @Override
          public Export set$Xgafv(java.lang.String $Xgafv) {
            return (Export) super.set$Xgafv($Xgafv);
          }

          @Override
          public Export setAccessToken(java.lang.String accessToken) {
            return (Export) super.setAccessToken(accessToken);
          }

          @Override
          public Export setAlt(java.lang.String alt) {
            return (Export) super.setAlt(alt);
          }

          @Override
          public Export setCallback(java.lang.String callback) {
            return (Export) super.setCallback(callback);
          }

          @Override
          public Export setFields(java.lang.String fields) {
            return (Export) super.setFields(fields);
          }

          @Override
          public Export setKey(java.lang.String key) {
            return (Export) super.setKey(key);
          }

          @Override
          public Export setOauthToken(java.lang.String oauthToken) {
            return (Export) super.setOauthToken(oauthToken);
          }

          @Override
          public Export setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Export) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Export setQuotaUser(java.lang.String quotaUser) {
            return (Export) super.setQuotaUser(quotaUser);
          }

          @Override
          public Export setUploadType(java.lang.String uploadType) {
            return (Export) super.setUploadType(uploadType);
          }

          @Override
          public Export setUploadProtocol(java.lang.String uploadProtocol) {
            return (Export) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the Dataset resource. Format:
           * `projects/{project}/locations/{location}/datasets/{dataset}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the Dataset resource. Format:
         `projects/{project}/locations/{location}/datasets/{dataset}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the Dataset resource. Format:
           * `projects/{project}/locations/{location}/datasets/{dataset}`
           */
          public Export setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Export set(String parameterName, Object value) {
            return (Export) super.set(parameterName, value);
          }
        }
        /**
         * Gets a Dataset.
         *
         * Create a request for the method "datasets.get".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the Dataset resource.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Dataset> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");

          /**
           * Gets a Dataset.
           *
           * Create a request for the method "datasets.get".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the Dataset resource.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Dataset.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The name of the Dataset resource. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the Dataset resource.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. The name of the Dataset resource. */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /** Mask specifying which fields to read. */
          @com.google.api.client.util.Key
          private String readMask;

          /** Mask specifying which fields to read.
           */
          public String getReadMask() {
            return readMask;
          }

          /** Mask specifying which fields to read. */
          public Get setReadMask(String readMask) {
            this.readMask = readMask;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Imports data into a Dataset.
         *
         * Create a request for the method "datasets.import".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link AiplatformImport#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the Dataset resource. Format:
         *        `projects/{project}/locations/{location}/datasets/{dataset}`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ImportDataRequest}
         * @return the request
         */
        public AiplatformImport aiplatformImport(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ImportDataRequest content) throws java.io.IOException {
          AiplatformImport result = new AiplatformImport(name, content);
          initialize(result);
          return result;
        }

        public class AiplatformImport extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+name}:import";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");

          /**
           * Imports data into a Dataset.
           *
           * Create a request for the method "datasets.import".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link AiplatformImport#execute()} method to invoke the remote
           * operation. <p> {@link AiplatformImport#initialize(com.google.api.client.googleapis.services.Abs
           * tractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param name Required. The name of the Dataset resource. Format:
         *        `projects/{project}/locations/{location}/datasets/{dataset}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ImportDataRequest}
           * @since 1.13
           */
          protected AiplatformImport(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ImportDataRequest content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
            }
          }

          @Override
          public AiplatformImport set$Xgafv(java.lang.String $Xgafv) {
            return (AiplatformImport) super.set$Xgafv($Xgafv);
          }

          @Override
          public AiplatformImport setAccessToken(java.lang.String accessToken) {
            return (AiplatformImport) super.setAccessToken(accessToken);
          }

          @Override
          public AiplatformImport setAlt(java.lang.String alt) {
            return (AiplatformImport) super.setAlt(alt);
          }

          @Override
          public AiplatformImport setCallback(java.lang.String callback) {
            return (AiplatformImport) super.setCallback(callback);
          }

          @Override
          public AiplatformImport setFields(java.lang.String fields) {
            return (AiplatformImport) super.setFields(fields);
          }

          @Override
          public AiplatformImport setKey(java.lang.String key) {
            return (AiplatformImport) super.setKey(key);
          }

          @Override
          public AiplatformImport setOauthToken(java.lang.String oauthToken) {
            return (AiplatformImport) super.setOauthToken(oauthToken);
          }

          @Override
          public AiplatformImport setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (AiplatformImport) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public AiplatformImport setQuotaUser(java.lang.String quotaUser) {
            return (AiplatformImport) super.setQuotaUser(quotaUser);
          }

          @Override
          public AiplatformImport setUploadType(java.lang.String uploadType) {
            return (AiplatformImport) super.setUploadType(uploadType);
          }

          @Override
          public AiplatformImport setUploadProtocol(java.lang.String uploadProtocol) {
            return (AiplatformImport) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the Dataset resource. Format:
           * `projects/{project}/locations/{location}/datasets/{dataset}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the Dataset resource. Format:
         `projects/{project}/locations/{location}/datasets/{dataset}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the Dataset resource. Format:
           * `projects/{project}/locations/{location}/datasets/{dataset}`
           */
          public AiplatformImport setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public AiplatformImport set(String parameterName, Object value) {
            return (AiplatformImport) super.set(parameterName, value);
          }
        }
        /**
         * Lists Datasets in a Location.
         *
         * Create a request for the method "datasets.list".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The name of the Dataset's parent resource. Format:
         *        `projects/{project}/locations/{location}`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListDatasetsResponse> {

          private static final String REST_PATH = "v1/{+parent}/datasets";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists Datasets in a Location.
           *
           * Create a request for the method "datasets.list".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The name of the Dataset's parent resource. Format:
         *        `projects/{project}/locations/{location}`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListDatasetsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the Dataset's parent resource. Format:
           * `projects/{project}/locations/{location}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The name of the Dataset's parent resource. Format:
         `projects/{project}/locations/{location}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The name of the Dataset's parent resource. Format:
           * `projects/{project}/locations/{location}`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * An expression for filtering the results of the request. For field names both snake_case
           * and camelCase are supported. * `display_name`: supports = and != *
           * `metadata_schema_uri`: supports = and != * `labels` supports general map functions that
           * is: * `labels.key=value` - key:value equality * `labels.key:* or labels:key - key
           * existence * A key including a space must be quoted. `labels."a key"`. Some examples: *
           * `displayName="myDisplayName"` * `labels.myKey="myValue"`
           */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** An expression for filtering the results of the request. For field names both snake_case and
         camelCase are supported. * `display_name`: supports = and != * `metadata_schema_uri`: supports =
         and != * `labels` supports general map functions that is: * `labels.key=value` - key:value equality
         * `labels.key:* or labels:key - key existence * A key including a space must be quoted. `labels."a
         key"`. Some examples: * `displayName="myDisplayName"` * `labels.myKey="myValue"`
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /**
           * An expression for filtering the results of the request. For field names both snake_case
           * and camelCase are supported. * `display_name`: supports = and != *
           * `metadata_schema_uri`: supports = and != * `labels` supports general map functions that
           * is: * `labels.key=value` - key:value equality * `labels.key:* or labels:key - key
           * existence * A key including a space must be quoted. `labels."a key"`. Some examples: *
           * `displayName="myDisplayName"` * `labels.myKey="myValue"`
           */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /**
           * A comma-separated list of fields to order by, sorted in ascending order. Use "desc"
           * after a field name for descending. Supported fields: * `display_name` * `create_time` *
           * `update_time`
           */
          @com.google.api.client.util.Key
          private java.lang.String orderBy;

          /** A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field
         name for descending. Supported fields: * `display_name` * `create_time` * `update_time`
           */
          public java.lang.String getOrderBy() {
            return orderBy;
          }

          /**
           * A comma-separated list of fields to order by, sorted in ascending order. Use "desc"
           * after a field name for descending. Supported fields: * `display_name` * `create_time` *
           * `update_time`
           */
          public List setOrderBy(java.lang.String orderBy) {
            this.orderBy = orderBy;
            return this;
          }

          /** The standard list page size. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The standard list page size.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** The standard list page size. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** The standard list page token. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The standard list page token.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** The standard list page token. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          /** Mask specifying which fields to read. */
          @com.google.api.client.util.Key
          private String readMask;

          /** Mask specifying which fields to read.
           */
          public String getReadMask() {
            return readMask;
          }

          /** Mask specifying which fields to read. */
          public List setReadMask(String readMask) {
            this.readMask = readMask;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates a Dataset.
         *
         * Create a request for the method "datasets.patch".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Output only. Identifier. The resource name of the Dataset.
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Dataset}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Dataset content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Dataset> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");

          /**
           * Updates a Dataset.
           *
           * Create a request for the method "datasets.patch".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           * <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Output only. Identifier. The resource name of the Dataset.
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Dataset}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Dataset content) {
            super(Aiplatform.this, "PATCH", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Dataset.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /** Output only. Identifier. The resource name of the Dataset. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Output only. Identifier. The resource name of the Dataset.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Output only. Identifier. The resource name of the Dataset. */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Required. The update mask applies to the resource. For the `FieldMask` definition, see
           * google.protobuf.FieldMask. Updatable fields: * `display_name` * `description` *
           * `labels`
           */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Required. The update mask applies to the resource. For the `FieldMask` definition, see
         google.protobuf.FieldMask. Updatable fields: * `display_name` * `description` * `labels`
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /**
           * Required. The update mask applies to the resource. For the `FieldMask` definition, see
           * google.protobuf.FieldMask. Updatable fields: * `display_name` * `description` *
           * `labels`
           */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }
        /**
         * Searches DataItems in a Dataset.
         *
         * Create a request for the method "datasets.searchDataItems".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link SearchDataItems#execute()} method to invoke the remote operation.
         *
         * @param dataset Required. The resource name of the Dataset from which to search DataItems. Format:
         *        `projects/{project}/locations/{location}/datasets/{dataset}`
         * @return the request
         */
        public SearchDataItems searchDataItems(java.lang.String dataset) throws java.io.IOException {
          SearchDataItems result = new SearchDataItems(dataset);
          initialize(result);
          return result;
        }

        public class SearchDataItems extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1SearchDataItemsResponse> {

          private static final String REST_PATH = "v1/{+dataset}:searchDataItems";

          private final java.util.regex.Pattern DATASET_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");

          /**
           * Searches DataItems in a Dataset.
           *
           * Create a request for the method "datasets.searchDataItems".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link SearchDataItems#execute()} method to invoke the remote
           * operation. <p> {@link SearchDataItems#initialize(com.google.api.client.googleapis.services.Abst
           * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
           * the constructor. </p>
           *
           * @param dataset Required. The resource name of the Dataset from which to search DataItems. Format:
         *        `projects/{project}/locations/{location}/datasets/{dataset}`
           * @since 1.13
           */
          protected SearchDataItems(java.lang.String dataset) {
            super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1SearchDataItemsResponse.class);
            this.dataset = com.google.api.client.util.Preconditions.checkNotNull(dataset, "Required parameter dataset must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(DATASET_PATTERN.matcher(dataset).matches(),
                  "Parameter dataset must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public SearchDataItems set$Xgafv(java.lang.String $Xgafv) {
            return (SearchDataItems) super.set$Xgafv($Xgafv);
          }

          @Override
          public SearchDataItems setAccessToken(java.lang.String accessToken) {
            return (SearchDataItems) super.setAccessToken(accessToken);
          }

          @Override
          public SearchDataItems setAlt(java.lang.String alt) {
            return (SearchDataItems) super.setAlt(alt);
          }

          @Override
          public SearchDataItems setCallback(java.lang.String callback) {
            return (SearchDataItems) super.setCallback(callback);
          }

          @Override
          public SearchDataItems setFields(java.lang.String fields) {
            return (SearchDataItems) super.setFields(fields);
          }

          @Override
          public SearchDataItems setKey(java.lang.String key) {
            return (SearchDataItems) super.setKey(key);
          }

          @Override
          public SearchDataItems setOauthToken(java.lang.String oauthToken) {
            return (SearchDataItems) super.setOauthToken(oauthToken);
          }

          @Override
          public SearchDataItems setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (SearchDataItems) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public SearchDataItems setQuotaUser(java.lang.String quotaUser) {
            return (SearchDataItems) super.setQuotaUser(quotaUser);
          }

          @Override
          public SearchDataItems setUploadType(java.lang.String uploadType) {
            return (SearchDataItems) super.setUploadType(uploadType);
          }

          @Override
          public SearchDataItems setUploadProtocol(java.lang.String uploadProtocol) {
            return (SearchDataItems) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the Dataset from which to search DataItems. Format:
           * `projects/{project}/locations/{location}/datasets/{dataset}`
           */
          @com.google.api.client.util.Key
          private java.lang.String dataset;

          /** Required. The resource name of the Dataset from which to search DataItems. Format:
         `projects/{project}/locations/{location}/datasets/{dataset}`
           */
          public java.lang.String getDataset() {
            return dataset;
          }

          /**
           * Required. The resource name of the Dataset from which to search DataItems. Format:
           * `projects/{project}/locations/{location}/datasets/{dataset}`
           */
          public SearchDataItems setDataset(java.lang.String dataset) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(DATASET_PATTERN.matcher(dataset).matches(),
                  "Parameter dataset must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
            }
            this.dataset = dataset;
            return this;
          }

          /**
           * An expression that specifies what Annotations will be returned per DataItem.
           * Annotations satisfied either of the conditions will be returned. * `annotation_spec_id`
           * - for = or !=. Must specify `saved_query_id=` - saved query id that annotations should
           * belong to.
           */
          @com.google.api.client.util.Key
          private java.util.List<java.lang.String> annotationFilters;

          /** An expression that specifies what Annotations will be returned per DataItem. Annotations satisfied
         either of the conditions will be returned. * `annotation_spec_id` - for = or !=. Must specify
         `saved_query_id=` - saved query id that annotations should belong to.
           */
          public java.util.List<java.lang.String> getAnnotationFilters() {
            return annotationFilters;
          }

          /**
           * An expression that specifies what Annotations will be returned per DataItem.
           * Annotations satisfied either of the conditions will be returned. * `annotation_spec_id`
           * - for = or !=. Must specify `saved_query_id=` - saved query id that annotations should
           * belong to.
           */
          public SearchDataItems setAnnotationFilters(java.util.List<java.lang.String> annotationFilters) {
            this.annotationFilters = annotationFilters;
            return this;
          }

          /**
           * An expression for filtering the Annotations that will be returned per DataItem. *
           * `annotation_spec_id` - for = or !=.
           */
          @com.google.api.client.util.Key
          private java.lang.String annotationsFilter;

          /** An expression for filtering the Annotations that will be returned per DataItem. *
         `annotation_spec_id` - for = or !=.
           */
          public java.lang.String getAnnotationsFilter() {
            return annotationsFilter;
          }

          /**
           * An expression for filtering the Annotations that will be returned per DataItem. *
           * `annotation_spec_id` - for = or !=.
           */
          public SearchDataItems setAnnotationsFilter(java.lang.String annotationsFilter) {
            this.annotationsFilter = annotationsFilter;
            return this;
          }

          /**
           * If set, only up to this many of Annotations will be returned per DataItemView. The
           * maximum value is 1000. If not set, the maximum value will be used.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer annotationsLimit;

          /** If set, only up to this many of Annotations will be returned per DataItemView. The maximum value is
         1000. If not set, the maximum value will be used.
           */
          public java.lang.Integer getAnnotationsLimit() {
            return annotationsLimit;
          }

          /**
           * If set, only up to this many of Annotations will be returned per DataItemView. The
           * maximum value is 1000. If not set, the maximum value will be used.
           */
          public SearchDataItems setAnnotationsLimit(java.lang.Integer annotationsLimit) {
            this.annotationsLimit = annotationsLimit;
            return this;
          }

          /**
           * An expression for filtering the DataItem that will be returned. * `data_item_id` - for
           * = or !=. * `labeled` - for = or !=. * `has_annotation(ANNOTATION_SPEC_ID)` - true only
           * for DataItem that have at least one annotation with annotation_spec_id =
           * `ANNOTATION_SPEC_ID` in the context of SavedQuery or DataLabelingJob. For example: *
           * `data_item=1` * `has_annotation(5)`
           */
          @com.google.api.client.util.Key
          private java.lang.String dataItemFilter;

          /** An expression for filtering the DataItem that will be returned. * `data_item_id` - for = or !=. *
         `labeled` - for = or !=. * `has_annotation(ANNOTATION_SPEC_ID)` - true only for DataItem that have
         at least one annotation with annotation_spec_id = `ANNOTATION_SPEC_ID` in the context of SavedQuery
         or DataLabelingJob. For example: * `data_item=1` * `has_annotation(5)`
           */
          public java.lang.String getDataItemFilter() {
            return dataItemFilter;
          }

          /**
           * An expression for filtering the DataItem that will be returned. * `data_item_id` - for
           * = or !=. * `labeled` - for = or !=. * `has_annotation(ANNOTATION_SPEC_ID)` - true only
           * for DataItem that have at least one annotation with annotation_spec_id =
           * `ANNOTATION_SPEC_ID` in the context of SavedQuery or DataLabelingJob. For example: *
           * `data_item=1` * `has_annotation(5)`
           */
          public SearchDataItems setDataItemFilter(java.lang.String dataItemFilter) {
            this.dataItemFilter = dataItemFilter;
            return this;
          }

          /**
           * The resource name of a DataLabelingJob. Format:
           * `projects/{project}/locations/{location}/dataLabelingJobs/{data_labeling_job}` If this
           * field is set, all of the search will be done in the context of this DataLabelingJob.
           */
          @com.google.api.client.util.Key
          private java.lang.String dataLabelingJob;

          /** The resource name of a DataLabelingJob. Format:
         `projects/{project}/locations/{location}/dataLabelingJobs/{data_labeling_job}` If this field is
         set, all of the search will be done in the context of this DataLabelingJob.
           */
          public java.lang.String getDataLabelingJob() {
            return dataLabelingJob;
          }

          /**
           * The resource name of a DataLabelingJob. Format:
           * `projects/{project}/locations/{location}/dataLabelingJobs/{data_labeling_job}` If this
           * field is set, all of the search will be done in the context of this DataLabelingJob.
           */
          public SearchDataItems setDataLabelingJob(java.lang.String dataLabelingJob) {
            this.dataLabelingJob = dataLabelingJob;
            return this;
          }

          /** Mask specifying which fields of DataItemView to read. */
          @com.google.api.client.util.Key
          private String fieldMask;

          /** Mask specifying which fields of DataItemView to read.
           */
          public String getFieldMask() {
            return fieldMask;
          }

          /** Mask specifying which fields of DataItemView to read. */
          public SearchDataItems setFieldMask(String fieldMask) {
            this.fieldMask = fieldMask;
            return this;
          }

          /**
           * A comma-separated list of fields to order by, sorted in ascending order. Use "desc"
           * after a field name for descending.
           */
          @com.google.api.client.util.Key
          private java.lang.String orderBy;

          /** A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field
         name for descending.
           */
          public java.lang.String getOrderBy() {
            return orderBy;
          }

          /**
           * A comma-separated list of fields to order by, sorted in ascending order. Use "desc"
           * after a field name for descending.
           */
          public SearchDataItems setOrderBy(java.lang.String orderBy) {
            this.orderBy = orderBy;
            return this;
          }

          /**
           * A comma-separated list of annotation fields to order by, sorted in ascending order. Use
           * "desc" after a field name for descending. Must also specify saved_query.
           */
          @com.google.api.client.util.Key("orderByAnnotation.orderBy")
          private java.lang.String orderByAnnotationOrderBy;

          /** A comma-separated list of annotation fields to order by, sorted in ascending order. Use "desc"
         after a field name for descending. Must also specify saved_query.
           */
          public java.lang.String getOrderByAnnotationOrderBy() {
            return orderByAnnotationOrderBy;
          }

          /**
           * A comma-separated list of annotation fields to order by, sorted in ascending order. Use
           * "desc" after a field name for descending. Must also specify saved_query.
           */
          public SearchDataItems setOrderByAnnotationOrderBy(java.lang.String orderByAnnotationOrderBy) {
            this.orderByAnnotationOrderBy = orderByAnnotationOrderBy;
            return this;
          }

          /**
           * Required. Saved query of the Annotation. Only Annotations belong to this saved query
           * will be considered for ordering.
           */
          @com.google.api.client.util.Key("orderByAnnotation.savedQuery")
          private java.lang.String orderByAnnotationSavedQuery;

          /** Required. Saved query of the Annotation. Only Annotations belong to this saved query will be
         considered for ordering.
           */
          public java.lang.String getOrderByAnnotationSavedQuery() {
            return orderByAnnotationSavedQuery;
          }

          /**
           * Required. Saved query of the Annotation. Only Annotations belong to this saved query
           * will be considered for ordering.
           */
          public SearchDataItems setOrderByAnnotationSavedQuery(java.lang.String orderByAnnotationSavedQuery) {
            this.orderByAnnotationSavedQuery = orderByAnnotationSavedQuery;
            return this;
          }

          /**
           * A comma-separated list of data item fields to order by, sorted in ascending order. Use
           * "desc" after a field name for descending.
           */
          @com.google.api.client.util.Key
          private java.lang.String orderByDataItem;

          /** A comma-separated list of data item fields to order by, sorted in ascending order. Use "desc" after
         a field name for descending.
           */
          public java.lang.String getOrderByDataItem() {
            return orderByDataItem;
          }

          /**
           * A comma-separated list of data item fields to order by, sorted in ascending order. Use
           * "desc" after a field name for descending.
           */
          public SearchDataItems setOrderByDataItem(java.lang.String orderByDataItem) {
            this.orderByDataItem = orderByDataItem;
            return this;
          }

          /**
           * Requested page size. Server may return fewer results than requested. Default and
           * maximum page size is 100.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Requested page size. Server may return fewer results than requested. Default and maximum page size
         is 100.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Requested page size. Server may return fewer results than requested. Default and
           * maximum page size is 100.
           */
          public SearchDataItems setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * A token identifying a page of results for the server to return Typically obtained via
           * SearchDataItemsResponse.next_page_token of the previous DatasetService.SearchDataItems
           * call.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** A token identifying a page of results for the server to return Typically obtained via
         SearchDataItemsResponse.next_page_token of the previous DatasetService.SearchDataItems call.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * A token identifying a page of results for the server to return Typically obtained via
           * SearchDataItemsResponse.next_page_token of the previous DatasetService.SearchDataItems
           * call.
           */
          public SearchDataItems setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          /**
           * The resource name of a SavedQuery(annotation set in UI). Format:
           * `projects/{project}/locations/{location}/datasets/{dataset}/savedQueries/{saved_query}`
           * All of the search will be done in the context of this SavedQuery.
           */
          @com.google.api.client.util.Key
          private java.lang.String savedQuery;

          /** The resource name of a SavedQuery(annotation set in UI). Format:
         `projects/{project}/locations/{location}/datasets/{dataset}/savedQueries/{saved_query}` All of the
         search will be done in the context of this SavedQuery.
           */
          public java.lang.String getSavedQuery() {
            return savedQuery;
          }

          /**
           * The resource name of a SavedQuery(annotation set in UI). Format:
           * `projects/{project}/locations/{location}/datasets/{dataset}/savedQueries/{saved_query}`
           * All of the search will be done in the context of this SavedQuery.
           */
          public SearchDataItems setSavedQuery(java.lang.String savedQuery) {
            this.savedQuery = savedQuery;
            return this;
          }

          @Override
          public SearchDataItems set(String parameterName, Object value) {
            return (SearchDataItems) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the AnnotationSpecs collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Aiplatform aiplatform = new Aiplatform(...);}
         *   {@code Aiplatform.AnnotationSpecs.List request = aiplatform.annotationSpecs().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public AnnotationSpecs annotationSpecs() {
          return new AnnotationSpecs();
        }

        /**
         * The "annotationSpecs" collection of methods.
         */
        public class AnnotationSpecs {

          /**
           * Gets an AnnotationSpec.
           *
           * Create a request for the method "annotationSpecs.get".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the AnnotationSpec resource. Format:
           *        `projects/{project}/locations/{location}/datasets/{dataset}/annotationSpecs/{annotation_sp
           *        ec}`
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1AnnotationSpec> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/annotationSpecs/[^/]+$");

            /**
             * Gets an AnnotationSpec.
             *
             * Create a request for the method "annotationSpecs.get".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the AnnotationSpec resource. Format:
           *        `projects/{project}/locations/{location}/datasets/{dataset}/annotationSpecs/{annotation_sp
           *        ec}`
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1AnnotationSpec.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/annotationSpecs/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the AnnotationSpec resource. Format: `projects/{project}/locati
             * ons/{location}/datasets/{dataset}/annotationSpecs/{annotation_spec}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the AnnotationSpec resource. Format:
           `projects/{project}/locations/{location}/datasets/{dataset}/annotationSpecs/{annotation_spec}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The name of the AnnotationSpec resource. Format: `projects/{project}/locati
             * ons/{location}/datasets/{dataset}/annotationSpecs/{annotation_spec}`
             */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/annotationSpecs/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /** Mask specifying which fields to read. */
            @com.google.api.client.util.Key
            private String readMask;

            /** Mask specifying which fields to read.
             */
            public String getReadMask() {
              return readMask;
            }

            /** Mask specifying which fields to read. */
            public Get setReadMask(String readMask) {
              this.readMask = readMask;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }

          /**
           * An accessor for creating requests from the Operations collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code Aiplatform aiplatform = new Aiplatform(...);}
           *   {@code Aiplatform.Operations.List request = aiplatform.operations().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public Operations operations() {
            return new Operations();
          }

          /**
           * The "operations" collection of methods.
           */
          public class Operations {

            /**
             * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
             * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
             * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
             * methods to check whether the cancellation succeeded or whether the operation completed despite
             * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
             * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
             * `Code.CANCELLED`.
             *
             * Create a request for the method "operations.cancel".
             *
             * This request holds the parameters needed by the aiplatform server.  After setting any optional
             * parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
             *
             * @param name The name of the operation resource to be cancelled.
             * @return the request
             */
            public Cancel cancel(java.lang.String name) throws java.io.IOException {
              Cancel result = new Cancel(name);
              initialize(result);
              return result;
            }

            public class Cancel extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

              private static final String REST_PATH = "v1/{+name}:cancel";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/annotationSpecs/[^/]+/operations/[^/]+$");

              /**
               * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
               * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
               * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
               * methods to check whether the cancellation succeeded or whether the operation completed despite
               * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
               * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
               * `Code.CANCELLED`.
               *
               * Create a request for the method "operations.cancel".
               *
               * This request holds the parameters needed by the the aiplatform server.  After setting any
               * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
               * <p> {@link
               * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The name of the operation resource to be cancelled.
               * @since 1.13
               */
              protected Cancel(java.lang.String name) {
                super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/annotationSpecs/[^/]+/operations/[^/]+$");
                }
              }

              @Override
              public Cancel set$Xgafv(java.lang.String $Xgafv) {
                return (Cancel) super.set$Xgafv($Xgafv);
              }

              @Override
              public Cancel setAccessToken(java.lang.String accessToken) {
                return (Cancel) super.setAccessToken(accessToken);
              }

              @Override
              public Cancel setAlt(java.lang.String alt) {
                return (Cancel) super.setAlt(alt);
              }

              @Override
              public Cancel setCallback(java.lang.String callback) {
                return (Cancel) super.setCallback(callback);
              }

              @Override
              public Cancel setFields(java.lang.String fields) {
                return (Cancel) super.setFields(fields);
              }

              @Override
              public Cancel setKey(java.lang.String key) {
                return (Cancel) super.setKey(key);
              }

              @Override
              public Cancel setOauthToken(java.lang.String oauthToken) {
                return (Cancel) super.setOauthToken(oauthToken);
              }

              @Override
              public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Cancel) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Cancel setQuotaUser(java.lang.String quotaUser) {
                return (Cancel) super.setQuotaUser(quotaUser);
              }

              @Override
              public Cancel setUploadType(java.lang.String uploadType) {
                return (Cancel) super.setUploadType(uploadType);
              }

              @Override
              public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
                return (Cancel) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the operation resource to be cancelled. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The name of the operation resource to be cancelled.
               */
              public java.lang.String getName() {
                return name;
              }

              /** The name of the operation resource to be cancelled. */
              public Cancel setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/annotationSpecs/[^/]+/operations/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Cancel set(String parameterName, Object value) {
                return (Cancel) super.set(parameterName, value);
              }
            }
            /**
             * Deletes a long-running operation. This method indicates that the client is no longer interested
             * in the operation result. It does not cancel the operation. If the server doesn't support this
             * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.delete".
             *
             * This request holds the parameters needed by the aiplatform server.  After setting any optional
             * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             *
             * @param name The name of the operation resource to be deleted.
             * @return the request
             */
            public Delete delete(java.lang.String name) throws java.io.IOException {
              Delete result = new Delete(name);
              initialize(result);
              return result;
            }

            public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/annotationSpecs/[^/]+/operations/[^/]+$");

              /**
               * Deletes a long-running operation. This method indicates that the client is no longer interested
               * in the operation result. It does not cancel the operation. If the server doesn't support this
               * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
               *
               * Create a request for the method "operations.delete".
               *
               * This request holds the parameters needed by the the aiplatform server.  After setting any
               * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
               * <p> {@link
               * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The name of the operation resource to be deleted.
               * @since 1.13
               */
              protected Delete(java.lang.String name) {
                super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/annotationSpecs/[^/]+/operations/[^/]+$");
                }
              }

              @Override
              public Delete set$Xgafv(java.lang.String $Xgafv) {
                return (Delete) super.set$Xgafv($Xgafv);
              }

              @Override
              public Delete setAccessToken(java.lang.String accessToken) {
                return (Delete) super.setAccessToken(accessToken);
              }

              @Override
              public Delete setAlt(java.lang.String alt) {
                return (Delete) super.setAlt(alt);
              }

              @Override
              public Delete setCallback(java.lang.String callback) {
                return (Delete) super.setCallback(callback);
              }

              @Override
              public Delete setFields(java.lang.String fields) {
                return (Delete) super.setFields(fields);
              }

              @Override
              public Delete setKey(java.lang.String key) {
                return (Delete) super.setKey(key);
              }

              @Override
              public Delete setOauthToken(java.lang.String oauthToken) {
                return (Delete) super.setOauthToken(oauthToken);
              }

              @Override
              public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Delete) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Delete setQuotaUser(java.lang.String quotaUser) {
                return (Delete) super.setQuotaUser(quotaUser);
              }

              @Override
              public Delete setUploadType(java.lang.String uploadType) {
                return (Delete) super.setUploadType(uploadType);
              }

              @Override
              public Delete setUploadProtocol(java.lang.String uploadProtocol) {
                return (Delete) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the operation resource to be deleted. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The name of the operation resource to be deleted.
               */
              public java.lang.String getName() {
                return name;
              }

              /** The name of the operation resource to be deleted. */
              public Delete setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/annotationSpecs/[^/]+/operations/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Delete set(String parameterName, Object value) {
                return (Delete) super.set(parameterName, value);
              }
            }
            /**
             * Gets the latest state of a long-running operation. Clients can use this method to poll the
             * operation result at intervals as recommended by the API service.
             *
             * Create a request for the method "operations.get".
             *
             * This request holds the parameters needed by the aiplatform server.  After setting any optional
             * parameters, call the {@link Get#execute()} method to invoke the remote operation.
             *
             * @param name The name of the operation resource.
             * @return the request
             */
            public Get get(java.lang.String name) throws java.io.IOException {
              Get result = new Get(name);
              initialize(result);
              return result;
            }

            public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/annotationSpecs/[^/]+/operations/[^/]+$");

              /**
               * Gets the latest state of a long-running operation. Clients can use this method to poll the
               * operation result at intervals as recommended by the API service.
               *
               * Create a request for the method "operations.get".
               *
               * This request holds the parameters needed by the the aiplatform server.  After setting any
               * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
               * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The name of the operation resource.
               * @since 1.13
               */
              protected Get(java.lang.String name) {
                super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/annotationSpecs/[^/]+/operations/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public Get set$Xgafv(java.lang.String $Xgafv) {
                return (Get) super.set$Xgafv($Xgafv);
              }

              @Override
              public Get setAccessToken(java.lang.String accessToken) {
                return (Get) super.setAccessToken(accessToken);
              }

              @Override
              public Get setAlt(java.lang.String alt) {
                return (Get) super.setAlt(alt);
              }

              @Override
              public Get setCallback(java.lang.String callback) {
                return (Get) super.setCallback(callback);
              }

              @Override
              public Get setFields(java.lang.String fields) {
                return (Get) super.setFields(fields);
              }

              @Override
              public Get setKey(java.lang.String key) {
                return (Get) super.setKey(key);
              }

              @Override
              public Get setOauthToken(java.lang.String oauthToken) {
                return (Get) super.setOauthToken(oauthToken);
              }

              @Override
              public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Get) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Get setQuotaUser(java.lang.String quotaUser) {
                return (Get) super.setQuotaUser(quotaUser);
              }

              @Override
              public Get setUploadType(java.lang.String uploadType) {
                return (Get) super.setUploadType(uploadType);
              }

              @Override
              public Get setUploadProtocol(java.lang.String uploadProtocol) {
                return (Get) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the operation resource. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The name of the operation resource.
               */
              public java.lang.String getName() {
                return name;
              }

              /** The name of the operation resource. */
              public Get setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/annotationSpecs/[^/]+/operations/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Get set(String parameterName, Object value) {
                return (Get) super.set(parameterName, value);
              }
            }
            /**
             * Lists operations that match the specified filter in the request. If the server doesn't support
             * this method, it returns `UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.list".
             *
             * This request holds the parameters needed by the aiplatform server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation.
             *
             * @param name The name of the operation's parent resource.
             * @return the request
             */
            public List list(java.lang.String name) throws java.io.IOException {
              List result = new List(name);
              initialize(result);
              return result;
            }

            public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse> {

              private static final String REST_PATH = "v1/{+name}/operations";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/annotationSpecs/[^/]+$");

              /**
               * Lists operations that match the specified filter in the request. If the server doesn't support
               * this method, it returns `UNIMPLEMENTED`.
               *
               * Create a request for the method "operations.list".
               *
               * This request holds the parameters needed by the the aiplatform server.  After setting any
               * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
               * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The name of the operation's parent resource.
               * @since 1.13
               */
              protected List(java.lang.String name) {
                super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/annotationSpecs/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public List set$Xgafv(java.lang.String $Xgafv) {
                return (List) super.set$Xgafv($Xgafv);
              }

              @Override
              public List setAccessToken(java.lang.String accessToken) {
                return (List) super.setAccessToken(accessToken);
              }

              @Override
              public List setAlt(java.lang.String alt) {
                return (List) super.setAlt(alt);
              }

              @Override
              public List setCallback(java.lang.String callback) {
                return (List) super.setCallback(callback);
              }

              @Override
              public List setFields(java.lang.String fields) {
                return (List) super.setFields(fields);
              }

              @Override
              public List setKey(java.lang.String key) {
                return (List) super.setKey(key);
              }

              @Override
              public List setOauthToken(java.lang.String oauthToken) {
                return (List) super.setOauthToken(oauthToken);
              }

              @Override
              public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (List) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public List setQuotaUser(java.lang.String quotaUser) {
                return (List) super.setQuotaUser(quotaUser);
              }

              @Override
              public List setUploadType(java.lang.String uploadType) {
                return (List) super.setUploadType(uploadType);
              }

              @Override
              public List setUploadProtocol(java.lang.String uploadProtocol) {
                return (List) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the operation's parent resource. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The name of the operation's parent resource.
               */
              public java.lang.String getName() {
                return name;
              }

              /** The name of the operation's parent resource. */
              public List setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/annotationSpecs/[^/]+$");
                }
                this.name = name;
                return this;
              }

              /** The standard list filter. */
              @com.google.api.client.util.Key
              private java.lang.String filter;

              /** The standard list filter.
               */
              public java.lang.String getFilter() {
                return filter;
              }

              /** The standard list filter. */
              public List setFilter(java.lang.String filter) {
                this.filter = filter;
                return this;
              }

              /** The standard list page size. */
              @com.google.api.client.util.Key
              private java.lang.Integer pageSize;

              /** The standard list page size.
               */
              public java.lang.Integer getPageSize() {
                return pageSize;
              }

              /** The standard list page size. */
              public List setPageSize(java.lang.Integer pageSize) {
                this.pageSize = pageSize;
                return this;
              }

              /** The standard list page token. */
              @com.google.api.client.util.Key
              private java.lang.String pageToken;

              /** The standard list page token.
               */
              public java.lang.String getPageToken() {
                return pageToken;
              }

              /** The standard list page token. */
              public List setPageToken(java.lang.String pageToken) {
                this.pageToken = pageToken;
                return this;
              }

              @Override
              public List set(String parameterName, Object value) {
                return (List) super.set(parameterName, value);
              }
            }
            /**
             * Waits until the specified long-running operation is done or reaches at most a specified timeout,
             * returning the latest state. If the operation is already done, the latest state is immediately
             * returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC
             * timeout is used. If the server does not support this method, it returns
             * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
             * the latest state before the specified timeout (including immediately), meaning even an immediate
             * response is no guarantee that the operation is done.
             *
             * Create a request for the method "operations.wait".
             *
             * This request holds the parameters needed by the aiplatform server.  After setting any optional
             * parameters, call the {@link Wait#execute()} method to invoke the remote operation.
             *
             * @param name The name of the operation resource to wait on.
             * @return the request
             */
            public Wait wait(java.lang.String name) throws java.io.IOException {
              Wait result = new Wait(name);
              initialize(result);
              return result;
            }

            public class Wait extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

              private static final String REST_PATH = "v1/{+name}:wait";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/annotationSpecs/[^/]+/operations/[^/]+$");

              /**
               * Waits until the specified long-running operation is done or reaches at most a specified
               * timeout, returning the latest state. If the operation is already done, the latest state is
               * immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout,
               * the HTTP/RPC timeout is used. If the server does not support this method, it returns
               * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
               * the latest state before the specified timeout (including immediately), meaning even an
               * immediate response is no guarantee that the operation is done.
               *
               * Create a request for the method "operations.wait".
               *
               * This request holds the parameters needed by the the aiplatform server.  After setting any
               * optional parameters, call the {@link Wait#execute()} method to invoke the remote operation. <p>
               * {@link Wait#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The name of the operation resource to wait on.
               * @since 1.13
               */
              protected Wait(java.lang.String name) {
                super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/annotationSpecs/[^/]+/operations/[^/]+$");
                }
              }

              @Override
              public Wait set$Xgafv(java.lang.String $Xgafv) {
                return (Wait) super.set$Xgafv($Xgafv);
              }

              @Override
              public Wait setAccessToken(java.lang.String accessToken) {
                return (Wait) super.setAccessToken(accessToken);
              }

              @Override
              public Wait setAlt(java.lang.String alt) {
                return (Wait) super.setAlt(alt);
              }

              @Override
              public Wait setCallback(java.lang.String callback) {
                return (Wait) super.setCallback(callback);
              }

              @Override
              public Wait setFields(java.lang.String fields) {
                return (Wait) super.setFields(fields);
              }

              @Override
              public Wait setKey(java.lang.String key) {
                return (Wait) super.setKey(key);
              }

              @Override
              public Wait setOauthToken(java.lang.String oauthToken) {
                return (Wait) super.setOauthToken(oauthToken);
              }

              @Override
              public Wait setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Wait) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Wait setQuotaUser(java.lang.String quotaUser) {
                return (Wait) super.setQuotaUser(quotaUser);
              }

              @Override
              public Wait setUploadType(java.lang.String uploadType) {
                return (Wait) super.setUploadType(uploadType);
              }

              @Override
              public Wait setUploadProtocol(java.lang.String uploadProtocol) {
                return (Wait) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the operation resource to wait on. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The name of the operation resource to wait on.
               */
              public java.lang.String getName() {
                return name;
              }

              /** The name of the operation resource to wait on. */
              public Wait setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/annotationSpecs/[^/]+/operations/[^/]+$");
                }
                this.name = name;
                return this;
              }

              /**
               * The maximum duration to wait before timing out. If left blank, the wait will be at
               * most the time permitted by the underlying HTTP/RPC protocol. If RPC context
               * deadline is also specified, the shorter one will be used.
               */
              @com.google.api.client.util.Key
              private String timeout;

              /** The maximum duration to wait before timing out. If left blank, the wait will be at most the time
             permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the
             shorter one will be used.
               */
              public String getTimeout() {
                return timeout;
              }

              /**
               * The maximum duration to wait before timing out. If left blank, the wait will be at
               * most the time permitted by the underlying HTTP/RPC protocol. If RPC context
               * deadline is also specified, the shorter one will be used.
               */
              public Wait setTimeout(String timeout) {
                this.timeout = timeout;
                return this;
              }

              @Override
              public Wait set(String parameterName, Object value) {
                return (Wait) super.set(parameterName, value);
              }
            }

          }
        }
        /**
         * An accessor for creating requests from the DataItems collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Aiplatform aiplatform = new Aiplatform(...);}
         *   {@code Aiplatform.DataItems.List request = aiplatform.dataItems().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public DataItems dataItems() {
          return new DataItems();
        }

        /**
         * The "dataItems" collection of methods.
         */
        public class DataItems {

          /**
           * Lists DataItems in a Dataset.
           *
           * Create a request for the method "dataItems.list".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The resource name of the Dataset to list DataItems from. Format:
           *        `projects/{project}/locations/{location}/datasets/{dataset}`
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListDataItemsResponse> {

            private static final String REST_PATH = "v1/{+parent}/dataItems";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");

            /**
             * Lists DataItems in a Dataset.
             *
             * Create a request for the method "dataItems.list".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The resource name of the Dataset to list DataItems from. Format:
           *        `projects/{project}/locations/{location}/datasets/{dataset}`
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListDataItemsResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The resource name of the Dataset to list DataItems from. Format:
             * `projects/{project}/locations/{location}/datasets/{dataset}`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The resource name of the Dataset to list DataItems from. Format:
           `projects/{project}/locations/{location}/datasets/{dataset}`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The resource name of the Dataset to list DataItems from. Format:
             * `projects/{project}/locations/{location}/datasets/{dataset}`
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /** The standard list filter. */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** The standard list filter.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /** The standard list filter. */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /**
             * A comma-separated list of fields to order by, sorted in ascending order. Use "desc"
             * after a field name for descending.
             */
            @com.google.api.client.util.Key
            private java.lang.String orderBy;

            /** A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field
           name for descending.
             */
            public java.lang.String getOrderBy() {
              return orderBy;
            }

            /**
             * A comma-separated list of fields to order by, sorted in ascending order. Use "desc"
             * after a field name for descending.
             */
            public List setOrderBy(java.lang.String orderBy) {
              this.orderBy = orderBy;
              return this;
            }

            /** The standard list page size. */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** The standard list page size.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /** The standard list page size. */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** The standard list page token. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** The standard list page token.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** The standard list page token. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            /** Mask specifying which fields to read. */
            @com.google.api.client.util.Key
            private String readMask;

            /** Mask specifying which fields to read.
             */
            public String getReadMask() {
              return readMask;
            }

            /** Mask specifying which fields to read. */
            public List setReadMask(String readMask) {
              this.readMask = readMask;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }

          /**
           * An accessor for creating requests from the Annotations collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code Aiplatform aiplatform = new Aiplatform(...);}
           *   {@code Aiplatform.Annotations.List request = aiplatform.annotations().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public Annotations annotations() {
            return new Annotations();
          }

          /**
           * The "annotations" collection of methods.
           */
          public class Annotations {

            /**
             * Lists Annotations belongs to a dataitem This RPC is only available in InternalDatasetService. It
             * is only used for exporting conversation data to CCAI Insights.
             *
             * Create a request for the method "annotations.list".
             *
             * This request holds the parameters needed by the aiplatform server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The resource name of the DataItem to list Annotations from. Format:
             *        `projects/{project}/locations/{location}/datasets/{dataset}/dataItems/{data_item}`
             * @return the request
             */
            public List list(java.lang.String parent) throws java.io.IOException {
              List result = new List(parent);
              initialize(result);
              return result;
            }

            public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListAnnotationsResponse> {

              private static final String REST_PATH = "v1/{+parent}/annotations";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dataItems/[^/]+$");

              /**
               * Lists Annotations belongs to a dataitem This RPC is only available in InternalDatasetService.
               * It is only used for exporting conversation data to CCAI Insights.
               *
               * Create a request for the method "annotations.list".
               *
               * This request holds the parameters needed by the the aiplatform server.  After setting any
               * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
               * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. The resource name of the DataItem to list Annotations from. Format:
             *        `projects/{project}/locations/{location}/datasets/{dataset}/dataItems/{data_item}`
               * @since 1.13
               */
              protected List(java.lang.String parent) {
                super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListAnnotationsResponse.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dataItems/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public List set$Xgafv(java.lang.String $Xgafv) {
                return (List) super.set$Xgafv($Xgafv);
              }

              @Override
              public List setAccessToken(java.lang.String accessToken) {
                return (List) super.setAccessToken(accessToken);
              }

              @Override
              public List setAlt(java.lang.String alt) {
                return (List) super.setAlt(alt);
              }

              @Override
              public List setCallback(java.lang.String callback) {
                return (List) super.setCallback(callback);
              }

              @Override
              public List setFields(java.lang.String fields) {
                return (List) super.setFields(fields);
              }

              @Override
              public List setKey(java.lang.String key) {
                return (List) super.setKey(key);
              }

              @Override
              public List setOauthToken(java.lang.String oauthToken) {
                return (List) super.setOauthToken(oauthToken);
              }

              @Override
              public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (List) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public List setQuotaUser(java.lang.String quotaUser) {
                return (List) super.setQuotaUser(quotaUser);
              }

              @Override
              public List setUploadType(java.lang.String uploadType) {
                return (List) super.setUploadType(uploadType);
              }

              @Override
              public List setUploadProtocol(java.lang.String uploadProtocol) {
                return (List) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The resource name of the DataItem to list Annotations from. Format:
               * `projects/{project}/locations/{location}/datasets/{dataset}/dataItems/{data_item}`
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The resource name of the DataItem to list Annotations from. Format:
             `projects/{project}/locations/{location}/datasets/{dataset}/dataItems/{data_item}`
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. The resource name of the DataItem to list Annotations from. Format:
               * `projects/{project}/locations/{location}/datasets/{dataset}/dataItems/{data_item}`
               */
              public List setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dataItems/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /** The standard list filter. */
              @com.google.api.client.util.Key
              private java.lang.String filter;

              /** The standard list filter.
               */
              public java.lang.String getFilter() {
                return filter;
              }

              /** The standard list filter. */
              public List setFilter(java.lang.String filter) {
                this.filter = filter;
                return this;
              }

              /**
               * A comma-separated list of fields to order by, sorted in ascending order. Use "desc"
               * after a field name for descending.
               */
              @com.google.api.client.util.Key
              private java.lang.String orderBy;

              /** A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field
             name for descending.
               */
              public java.lang.String getOrderBy() {
                return orderBy;
              }

              /**
               * A comma-separated list of fields to order by, sorted in ascending order. Use "desc"
               * after a field name for descending.
               */
              public List setOrderBy(java.lang.String orderBy) {
                this.orderBy = orderBy;
                return this;
              }

              /** The standard list page size. */
              @com.google.api.client.util.Key
              private java.lang.Integer pageSize;

              /** The standard list page size.
               */
              public java.lang.Integer getPageSize() {
                return pageSize;
              }

              /** The standard list page size. */
              public List setPageSize(java.lang.Integer pageSize) {
                this.pageSize = pageSize;
                return this;
              }

              /** The standard list page token. */
              @com.google.api.client.util.Key
              private java.lang.String pageToken;

              /** The standard list page token.
               */
              public java.lang.String getPageToken() {
                return pageToken;
              }

              /** The standard list page token. */
              public List setPageToken(java.lang.String pageToken) {
                this.pageToken = pageToken;
                return this;
              }

              /** Mask specifying which fields to read. */
              @com.google.api.client.util.Key
              private String readMask;

              /** Mask specifying which fields to read.
               */
              public String getReadMask() {
                return readMask;
              }

              /** Mask specifying which fields to read. */
              public List setReadMask(String readMask) {
                this.readMask = readMask;
                return this;
              }

              @Override
              public List set(String parameterName, Object value) {
                return (List) super.set(parameterName, value);
              }
            }

            /**
             * An accessor for creating requests from the Operations collection.
             *
             * <p>The typical use is:</p>
             * <pre>
             *   {@code Aiplatform aiplatform = new Aiplatform(...);}
             *   {@code Aiplatform.Operations.List request = aiplatform.operations().list(parameters ...)}
             * </pre>
             *
             * @return the resource collection
             */
            public Operations operations() {
              return new Operations();
            }

            /**
             * The "operations" collection of methods.
             */
            public class Operations {

              /**
               * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
               * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
               * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
               * methods to check whether the cancellation succeeded or whether the operation completed despite
               * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
               * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
               * `Code.CANCELLED`.
               *
               * Create a request for the method "operations.cancel".
               *
               * This request holds the parameters needed by the aiplatform server.  After setting any optional
               * parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
               *
               * @param name The name of the operation resource to be cancelled.
               * @return the request
               */
              public Cancel cancel(java.lang.String name) throws java.io.IOException {
                Cancel result = new Cancel(name);
                initialize(result);
                return result;
              }

              public class Cancel extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

                private static final String REST_PATH = "v1/{+name}:cancel";

                private final java.util.regex.Pattern NAME_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dataItems/[^/]+/annotations/[^/]+/operations/[^/]+$");

                /**
                 * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
                 * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
                 * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
                 * methods to check whether the cancellation succeeded or whether the operation completed despite
                 * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
                 * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
                 * `Code.CANCELLED`.
                 *
                 * Create a request for the method "operations.cancel".
                 *
                 * This request holds the parameters needed by the the aiplatform server.  After setting any
                 * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
                 * <p> {@link
                 * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
                 * be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param name The name of the operation resource to be cancelled.
                 * @since 1.13
                 */
                protected Cancel(java.lang.String name) {
                  super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
                  this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dataItems/[^/]+/annotations/[^/]+/operations/[^/]+$");
                  }
                }

                @Override
                public Cancel set$Xgafv(java.lang.String $Xgafv) {
                  return (Cancel) super.set$Xgafv($Xgafv);
                }

                @Override
                public Cancel setAccessToken(java.lang.String accessToken) {
                  return (Cancel) super.setAccessToken(accessToken);
                }

                @Override
                public Cancel setAlt(java.lang.String alt) {
                  return (Cancel) super.setAlt(alt);
                }

                @Override
                public Cancel setCallback(java.lang.String callback) {
                  return (Cancel) super.setCallback(callback);
                }

                @Override
                public Cancel setFields(java.lang.String fields) {
                  return (Cancel) super.setFields(fields);
                }

                @Override
                public Cancel setKey(java.lang.String key) {
                  return (Cancel) super.setKey(key);
                }

                @Override
                public Cancel setOauthToken(java.lang.String oauthToken) {
                  return (Cancel) super.setOauthToken(oauthToken);
                }

                @Override
                public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (Cancel) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public Cancel setQuotaUser(java.lang.String quotaUser) {
                  return (Cancel) super.setQuotaUser(quotaUser);
                }

                @Override
                public Cancel setUploadType(java.lang.String uploadType) {
                  return (Cancel) super.setUploadType(uploadType);
                }

                @Override
                public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
                  return (Cancel) super.setUploadProtocol(uploadProtocol);
                }

                /** The name of the operation resource to be cancelled. */
                @com.google.api.client.util.Key
                private java.lang.String name;

                /** The name of the operation resource to be cancelled.
                 */
                public java.lang.String getName() {
                  return name;
                }

                /** The name of the operation resource to be cancelled. */
                public Cancel setName(java.lang.String name) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dataItems/[^/]+/annotations/[^/]+/operations/[^/]+$");
                  }
                  this.name = name;
                  return this;
                }

                @Override
                public Cancel set(String parameterName, Object value) {
                  return (Cancel) super.set(parameterName, value);
                }
              }
              /**
               * Deletes a long-running operation. This method indicates that the client is no longer interested
               * in the operation result. It does not cancel the operation. If the server doesn't support this
               * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
               *
               * Create a request for the method "operations.delete".
               *
               * This request holds the parameters needed by the aiplatform server.  After setting any optional
               * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
               *
               * @param name The name of the operation resource to be deleted.
               * @return the request
               */
              public Delete delete(java.lang.String name) throws java.io.IOException {
                Delete result = new Delete(name);
                initialize(result);
                return result;
              }

              public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

                private static final String REST_PATH = "v1/{+name}";

                private final java.util.regex.Pattern NAME_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dataItems/[^/]+/annotations/[^/]+/operations/[^/]+$");

                /**
                 * Deletes a long-running operation. This method indicates that the client is no longer interested
                 * in the operation result. It does not cancel the operation. If the server doesn't support this
                 * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
                 *
                 * Create a request for the method "operations.delete".
                 *
                 * This request holds the parameters needed by the the aiplatform server.  After setting any
                 * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
                 * <p> {@link
                 * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
                 * be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param name The name of the operation resource to be deleted.
                 * @since 1.13
                 */
                protected Delete(java.lang.String name) {
                  super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
                  this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dataItems/[^/]+/annotations/[^/]+/operations/[^/]+$");
                  }
                }

                @Override
                public Delete set$Xgafv(java.lang.String $Xgafv) {
                  return (Delete) super.set$Xgafv($Xgafv);
                }

                @Override
                public Delete setAccessToken(java.lang.String accessToken) {
                  return (Delete) super.setAccessToken(accessToken);
                }

                @Override
                public Delete setAlt(java.lang.String alt) {
                  return (Delete) super.setAlt(alt);
                }

                @Override
                public Delete setCallback(java.lang.String callback) {
                  return (Delete) super.setCallback(callback);
                }

                @Override
                public Delete setFields(java.lang.String fields) {
                  return (Delete) super.setFields(fields);
                }

                @Override
                public Delete setKey(java.lang.String key) {
                  return (Delete) super.setKey(key);
                }

                @Override
                public Delete setOauthToken(java.lang.String oauthToken) {
                  return (Delete) super.setOauthToken(oauthToken);
                }

                @Override
                public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (Delete) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public Delete setQuotaUser(java.lang.String quotaUser) {
                  return (Delete) super.setQuotaUser(quotaUser);
                }

                @Override
                public Delete setUploadType(java.lang.String uploadType) {
                  return (Delete) super.setUploadType(uploadType);
                }

                @Override
                public Delete setUploadProtocol(java.lang.String uploadProtocol) {
                  return (Delete) super.setUploadProtocol(uploadProtocol);
                }

                /** The name of the operation resource to be deleted. */
                @com.google.api.client.util.Key
                private java.lang.String name;

                /** The name of the operation resource to be deleted.
                 */
                public java.lang.String getName() {
                  return name;
                }

                /** The name of the operation resource to be deleted. */
                public Delete setName(java.lang.String name) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dataItems/[^/]+/annotations/[^/]+/operations/[^/]+$");
                  }
                  this.name = name;
                  return this;
                }

                @Override
                public Delete set(String parameterName, Object value) {
                  return (Delete) super.set(parameterName, value);
                }
              }
              /**
               * Gets the latest state of a long-running operation. Clients can use this method to poll the
               * operation result at intervals as recommended by the API service.
               *
               * Create a request for the method "operations.get".
               *
               * This request holds the parameters needed by the aiplatform server.  After setting any optional
               * parameters, call the {@link Get#execute()} method to invoke the remote operation.
               *
               * @param name The name of the operation resource.
               * @return the request
               */
              public Get get(java.lang.String name) throws java.io.IOException {
                Get result = new Get(name);
                initialize(result);
                return result;
              }

              public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

                private static final String REST_PATH = "v1/{+name}";

                private final java.util.regex.Pattern NAME_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dataItems/[^/]+/annotations/[^/]+/operations/[^/]+$");

                /**
                 * Gets the latest state of a long-running operation. Clients can use this method to poll the
                 * operation result at intervals as recommended by the API service.
                 *
                 * Create a request for the method "operations.get".
                 *
                 * This request holds the parameters needed by the the aiplatform server.  After setting any
                 * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
                 * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
                 * must be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param name The name of the operation resource.
                 * @since 1.13
                 */
                protected Get(java.lang.String name) {
                  super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
                  this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dataItems/[^/]+/annotations/[^/]+/operations/[^/]+$");
                  }
                }

                @Override
                public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                  return super.executeUsingHead();
                }

                @Override
                public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                  return super.buildHttpRequestUsingHead();
                }

                @Override
                public Get set$Xgafv(java.lang.String $Xgafv) {
                  return (Get) super.set$Xgafv($Xgafv);
                }

                @Override
                public Get setAccessToken(java.lang.String accessToken) {
                  return (Get) super.setAccessToken(accessToken);
                }

                @Override
                public Get setAlt(java.lang.String alt) {
                  return (Get) super.setAlt(alt);
                }

                @Override
                public Get setCallback(java.lang.String callback) {
                  return (Get) super.setCallback(callback);
                }

                @Override
                public Get setFields(java.lang.String fields) {
                  return (Get) super.setFields(fields);
                }

                @Override
                public Get setKey(java.lang.String key) {
                  return (Get) super.setKey(key);
                }

                @Override
                public Get setOauthToken(java.lang.String oauthToken) {
                  return (Get) super.setOauthToken(oauthToken);
                }

                @Override
                public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (Get) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public Get setQuotaUser(java.lang.String quotaUser) {
                  return (Get) super.setQuotaUser(quotaUser);
                }

                @Override
                public Get setUploadType(java.lang.String uploadType) {
                  return (Get) super.setUploadType(uploadType);
                }

                @Override
                public Get setUploadProtocol(java.lang.String uploadProtocol) {
                  return (Get) super.setUploadProtocol(uploadProtocol);
                }

                /** The name of the operation resource. */
                @com.google.api.client.util.Key
                private java.lang.String name;

                /** The name of the operation resource.
                 */
                public java.lang.String getName() {
                  return name;
                }

                /** The name of the operation resource. */
                public Get setName(java.lang.String name) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dataItems/[^/]+/annotations/[^/]+/operations/[^/]+$");
                  }
                  this.name = name;
                  return this;
                }

                @Override
                public Get set(String parameterName, Object value) {
                  return (Get) super.set(parameterName, value);
                }
              }
              /**
               * Lists operations that match the specified filter in the request. If the server doesn't support
               * this method, it returns `UNIMPLEMENTED`.
               *
               * Create a request for the method "operations.list".
               *
               * This request holds the parameters needed by the aiplatform server.  After setting any optional
               * parameters, call the {@link List#execute()} method to invoke the remote operation.
               *
               * @param name The name of the operation's parent resource.
               * @return the request
               */
              public List list(java.lang.String name) throws java.io.IOException {
                List result = new List(name);
                initialize(result);
                return result;
              }

              public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse> {

                private static final String REST_PATH = "v1/{+name}/operations";

                private final java.util.regex.Pattern NAME_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dataItems/[^/]+/annotations/[^/]+$");

                /**
                 * Lists operations that match the specified filter in the request. If the server doesn't support
                 * this method, it returns `UNIMPLEMENTED`.
                 *
                 * Create a request for the method "operations.list".
                 *
                 * This request holds the parameters needed by the the aiplatform server.  After setting any
                 * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
                 * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
                 * must be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param name The name of the operation's parent resource.
                 * @since 1.13
                 */
                protected List(java.lang.String name) {
                  super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse.class);
                  this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dataItems/[^/]+/annotations/[^/]+$");
                  }
                }

                @Override
                public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                  return super.executeUsingHead();
                }

                @Override
                public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                  return super.buildHttpRequestUsingHead();
                }

                @Override
                public List set$Xgafv(java.lang.String $Xgafv) {
                  return (List) super.set$Xgafv($Xgafv);
                }

                @Override
                public List setAccessToken(java.lang.String accessToken) {
                  return (List) super.setAccessToken(accessToken);
                }

                @Override
                public List setAlt(java.lang.String alt) {
                  return (List) super.setAlt(alt);
                }

                @Override
                public List setCallback(java.lang.String callback) {
                  return (List) super.setCallback(callback);
                }

                @Override
                public List setFields(java.lang.String fields) {
                  return (List) super.setFields(fields);
                }

                @Override
                public List setKey(java.lang.String key) {
                  return (List) super.setKey(key);
                }

                @Override
                public List setOauthToken(java.lang.String oauthToken) {
                  return (List) super.setOauthToken(oauthToken);
                }

                @Override
                public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (List) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public List setQuotaUser(java.lang.String quotaUser) {
                  return (List) super.setQuotaUser(quotaUser);
                }

                @Override
                public List setUploadType(java.lang.String uploadType) {
                  return (List) super.setUploadType(uploadType);
                }

                @Override
                public List setUploadProtocol(java.lang.String uploadProtocol) {
                  return (List) super.setUploadProtocol(uploadProtocol);
                }

                /** The name of the operation's parent resource. */
                @com.google.api.client.util.Key
                private java.lang.String name;

                /** The name of the operation's parent resource.
                 */
                public java.lang.String getName() {
                  return name;
                }

                /** The name of the operation's parent resource. */
                public List setName(java.lang.String name) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dataItems/[^/]+/annotations/[^/]+$");
                  }
                  this.name = name;
                  return this;
                }

                /** The standard list filter. */
                @com.google.api.client.util.Key
                private java.lang.String filter;

                /** The standard list filter.
                 */
                public java.lang.String getFilter() {
                  return filter;
                }

                /** The standard list filter. */
                public List setFilter(java.lang.String filter) {
                  this.filter = filter;
                  return this;
                }

                /** The standard list page size. */
                @com.google.api.client.util.Key
                private java.lang.Integer pageSize;

                /** The standard list page size.
                 */
                public java.lang.Integer getPageSize() {
                  return pageSize;
                }

                /** The standard list page size. */
                public List setPageSize(java.lang.Integer pageSize) {
                  this.pageSize = pageSize;
                  return this;
                }

                /** The standard list page token. */
                @com.google.api.client.util.Key
                private java.lang.String pageToken;

                /** The standard list page token.
                 */
                public java.lang.String getPageToken() {
                  return pageToken;
                }

                /** The standard list page token. */
                public List setPageToken(java.lang.String pageToken) {
                  this.pageToken = pageToken;
                  return this;
                }

                @Override
                public List set(String parameterName, Object value) {
                  return (List) super.set(parameterName, value);
                }
              }
              /**
               * Waits until the specified long-running operation is done or reaches at most a specified timeout,
               * returning the latest state. If the operation is already done, the latest state is immediately
               * returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC
               * timeout is used. If the server does not support this method, it returns
               * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
               * the latest state before the specified timeout (including immediately), meaning even an immediate
               * response is no guarantee that the operation is done.
               *
               * Create a request for the method "operations.wait".
               *
               * This request holds the parameters needed by the aiplatform server.  After setting any optional
               * parameters, call the {@link Wait#execute()} method to invoke the remote operation.
               *
               * @param name The name of the operation resource to wait on.
               * @return the request
               */
              public Wait wait(java.lang.String name) throws java.io.IOException {
                Wait result = new Wait(name);
                initialize(result);
                return result;
              }

              public class Wait extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

                private static final String REST_PATH = "v1/{+name}:wait";

                private final java.util.regex.Pattern NAME_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dataItems/[^/]+/annotations/[^/]+/operations/[^/]+$");

                /**
                 * Waits until the specified long-running operation is done or reaches at most a specified
                 * timeout, returning the latest state. If the operation is already done, the latest state is
                 * immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout,
                 * the HTTP/RPC timeout is used. If the server does not support this method, it returns
                 * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
                 * the latest state before the specified timeout (including immediately), meaning even an
                 * immediate response is no guarantee that the operation is done.
                 *
                 * Create a request for the method "operations.wait".
                 *
                 * This request holds the parameters needed by the the aiplatform server.  After setting any
                 * optional parameters, call the {@link Wait#execute()} method to invoke the remote operation. <p>
                 * {@link Wait#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
                 * must be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param name The name of the operation resource to wait on.
                 * @since 1.13
                 */
                protected Wait(java.lang.String name) {
                  super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
                  this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dataItems/[^/]+/annotations/[^/]+/operations/[^/]+$");
                  }
                }

                @Override
                public Wait set$Xgafv(java.lang.String $Xgafv) {
                  return (Wait) super.set$Xgafv($Xgafv);
                }

                @Override
                public Wait setAccessToken(java.lang.String accessToken) {
                  return (Wait) super.setAccessToken(accessToken);
                }

                @Override
                public Wait setAlt(java.lang.String alt) {
                  return (Wait) super.setAlt(alt);
                }

                @Override
                public Wait setCallback(java.lang.String callback) {
                  return (Wait) super.setCallback(callback);
                }

                @Override
                public Wait setFields(java.lang.String fields) {
                  return (Wait) super.setFields(fields);
                }

                @Override
                public Wait setKey(java.lang.String key) {
                  return (Wait) super.setKey(key);
                }

                @Override
                public Wait setOauthToken(java.lang.String oauthToken) {
                  return (Wait) super.setOauthToken(oauthToken);
                }

                @Override
                public Wait setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (Wait) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public Wait setQuotaUser(java.lang.String quotaUser) {
                  return (Wait) super.setQuotaUser(quotaUser);
                }

                @Override
                public Wait setUploadType(java.lang.String uploadType) {
                  return (Wait) super.setUploadType(uploadType);
                }

                @Override
                public Wait setUploadProtocol(java.lang.String uploadProtocol) {
                  return (Wait) super.setUploadProtocol(uploadProtocol);
                }

                /** The name of the operation resource to wait on. */
                @com.google.api.client.util.Key
                private java.lang.String name;

                /** The name of the operation resource to wait on.
                 */
                public java.lang.String getName() {
                  return name;
                }

                /** The name of the operation resource to wait on. */
                public Wait setName(java.lang.String name) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dataItems/[^/]+/annotations/[^/]+/operations/[^/]+$");
                  }
                  this.name = name;
                  return this;
                }

                /**
                 * The maximum duration to wait before timing out. If left blank, the wait will be
                 * at most the time permitted by the underlying HTTP/RPC protocol. If RPC context
                 * deadline is also specified, the shorter one will be used.
                 */
                @com.google.api.client.util.Key
                private String timeout;

                /** The maximum duration to wait before timing out. If left blank, the wait will be at most the time
               permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the
               shorter one will be used.
                 */
                public String getTimeout() {
                  return timeout;
                }

                /**
                 * The maximum duration to wait before timing out. If left blank, the wait will be
                 * at most the time permitted by the underlying HTTP/RPC protocol. If RPC context
                 * deadline is also specified, the shorter one will be used.
                 */
                public Wait setTimeout(String timeout) {
                  this.timeout = timeout;
                  return this;
                }

                @Override
                public Wait set(String parameterName, Object value) {
                  return (Wait) super.set(parameterName, value);
                }
              }

            }
          }
          /**
           * An accessor for creating requests from the Operations collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code Aiplatform aiplatform = new Aiplatform(...);}
           *   {@code Aiplatform.Operations.List request = aiplatform.operations().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public Operations operations() {
            return new Operations();
          }

          /**
           * The "operations" collection of methods.
           */
          public class Operations {

            /**
             * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
             * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
             * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
             * methods to check whether the cancellation succeeded or whether the operation completed despite
             * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
             * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
             * `Code.CANCELLED`.
             *
             * Create a request for the method "operations.cancel".
             *
             * This request holds the parameters needed by the aiplatform server.  After setting any optional
             * parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
             *
             * @param name The name of the operation resource to be cancelled.
             * @return the request
             */
            public Cancel cancel(java.lang.String name) throws java.io.IOException {
              Cancel result = new Cancel(name);
              initialize(result);
              return result;
            }

            public class Cancel extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

              private static final String REST_PATH = "v1/{+name}:cancel";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dataItems/[^/]+/operations/[^/]+$");

              /**
               * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
               * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
               * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
               * methods to check whether the cancellation succeeded or whether the operation completed despite
               * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
               * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
               * `Code.CANCELLED`.
               *
               * Create a request for the method "operations.cancel".
               *
               * This request holds the parameters needed by the the aiplatform server.  After setting any
               * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
               * <p> {@link
               * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The name of the operation resource to be cancelled.
               * @since 1.13
               */
              protected Cancel(java.lang.String name) {
                super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dataItems/[^/]+/operations/[^/]+$");
                }
              }

              @Override
              public Cancel set$Xgafv(java.lang.String $Xgafv) {
                return (Cancel) super.set$Xgafv($Xgafv);
              }

              @Override
              public Cancel setAccessToken(java.lang.String accessToken) {
                return (Cancel) super.setAccessToken(accessToken);
              }

              @Override
              public Cancel setAlt(java.lang.String alt) {
                return (Cancel) super.setAlt(alt);
              }

              @Override
              public Cancel setCallback(java.lang.String callback) {
                return (Cancel) super.setCallback(callback);
              }

              @Override
              public Cancel setFields(java.lang.String fields) {
                return (Cancel) super.setFields(fields);
              }

              @Override
              public Cancel setKey(java.lang.String key) {
                return (Cancel) super.setKey(key);
              }

              @Override
              public Cancel setOauthToken(java.lang.String oauthToken) {
                return (Cancel) super.setOauthToken(oauthToken);
              }

              @Override
              public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Cancel) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Cancel setQuotaUser(java.lang.String quotaUser) {
                return (Cancel) super.setQuotaUser(quotaUser);
              }

              @Override
              public Cancel setUploadType(java.lang.String uploadType) {
                return (Cancel) super.setUploadType(uploadType);
              }

              @Override
              public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
                return (Cancel) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the operation resource to be cancelled. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The name of the operation resource to be cancelled.
               */
              public java.lang.String getName() {
                return name;
              }

              /** The name of the operation resource to be cancelled. */
              public Cancel setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dataItems/[^/]+/operations/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Cancel set(String parameterName, Object value) {
                return (Cancel) super.set(parameterName, value);
              }
            }
            /**
             * Deletes a long-running operation. This method indicates that the client is no longer interested
             * in the operation result. It does not cancel the operation. If the server doesn't support this
             * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.delete".
             *
             * This request holds the parameters needed by the aiplatform server.  After setting any optional
             * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             *
             * @param name The name of the operation resource to be deleted.
             * @return the request
             */
            public Delete delete(java.lang.String name) throws java.io.IOException {
              Delete result = new Delete(name);
              initialize(result);
              return result;
            }

            public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dataItems/[^/]+/operations/[^/]+$");

              /**
               * Deletes a long-running operation. This method indicates that the client is no longer interested
               * in the operation result. It does not cancel the operation. If the server doesn't support this
               * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
               *
               * Create a request for the method "operations.delete".
               *
               * This request holds the parameters needed by the the aiplatform server.  After setting any
               * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
               * <p> {@link
               * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The name of the operation resource to be deleted.
               * @since 1.13
               */
              protected Delete(java.lang.String name) {
                super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dataItems/[^/]+/operations/[^/]+$");
                }
              }

              @Override
              public Delete set$Xgafv(java.lang.String $Xgafv) {
                return (Delete) super.set$Xgafv($Xgafv);
              }

              @Override
              public Delete setAccessToken(java.lang.String accessToken) {
                return (Delete) super.setAccessToken(accessToken);
              }

              @Override
              public Delete setAlt(java.lang.String alt) {
                return (Delete) super.setAlt(alt);
              }

              @Override
              public Delete setCallback(java.lang.String callback) {
                return (Delete) super.setCallback(callback);
              }

              @Override
              public Delete setFields(java.lang.String fields) {
                return (Delete) super.setFields(fields);
              }

              @Override
              public Delete setKey(java.lang.String key) {
                return (Delete) super.setKey(key);
              }

              @Override
              public Delete setOauthToken(java.lang.String oauthToken) {
                return (Delete) super.setOauthToken(oauthToken);
              }

              @Override
              public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Delete) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Delete setQuotaUser(java.lang.String quotaUser) {
                return (Delete) super.setQuotaUser(quotaUser);
              }

              @Override
              public Delete setUploadType(java.lang.String uploadType) {
                return (Delete) super.setUploadType(uploadType);
              }

              @Override
              public Delete setUploadProtocol(java.lang.String uploadProtocol) {
                return (Delete) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the operation resource to be deleted. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The name of the operation resource to be deleted.
               */
              public java.lang.String getName() {
                return name;
              }

              /** The name of the operation resource to be deleted. */
              public Delete setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dataItems/[^/]+/operations/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Delete set(String parameterName, Object value) {
                return (Delete) super.set(parameterName, value);
              }
            }
            /**
             * Gets the latest state of a long-running operation. Clients can use this method to poll the
             * operation result at intervals as recommended by the API service.
             *
             * Create a request for the method "operations.get".
             *
             * This request holds the parameters needed by the aiplatform server.  After setting any optional
             * parameters, call the {@link Get#execute()} method to invoke the remote operation.
             *
             * @param name The name of the operation resource.
             * @return the request
             */
            public Get get(java.lang.String name) throws java.io.IOException {
              Get result = new Get(name);
              initialize(result);
              return result;
            }

            public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dataItems/[^/]+/operations/[^/]+$");

              /**
               * Gets the latest state of a long-running operation. Clients can use this method to poll the
               * operation result at intervals as recommended by the API service.
               *
               * Create a request for the method "operations.get".
               *
               * This request holds the parameters needed by the the aiplatform server.  After setting any
               * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
               * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The name of the operation resource.
               * @since 1.13
               */
              protected Get(java.lang.String name) {
                super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dataItems/[^/]+/operations/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public Get set$Xgafv(java.lang.String $Xgafv) {
                return (Get) super.set$Xgafv($Xgafv);
              }

              @Override
              public Get setAccessToken(java.lang.String accessToken) {
                return (Get) super.setAccessToken(accessToken);
              }

              @Override
              public Get setAlt(java.lang.String alt) {
                return (Get) super.setAlt(alt);
              }

              @Override
              public Get setCallback(java.lang.String callback) {
                return (Get) super.setCallback(callback);
              }

              @Override
              public Get setFields(java.lang.String fields) {
                return (Get) super.setFields(fields);
              }

              @Override
              public Get setKey(java.lang.String key) {
                return (Get) super.setKey(key);
              }

              @Override
              public Get setOauthToken(java.lang.String oauthToken) {
                return (Get) super.setOauthToken(oauthToken);
              }

              @Override
              public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Get) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Get setQuotaUser(java.lang.String quotaUser) {
                return (Get) super.setQuotaUser(quotaUser);
              }

              @Override
              public Get setUploadType(java.lang.String uploadType) {
                return (Get) super.setUploadType(uploadType);
              }

              @Override
              public Get setUploadProtocol(java.lang.String uploadProtocol) {
                return (Get) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the operation resource. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The name of the operation resource.
               */
              public java.lang.String getName() {
                return name;
              }

              /** The name of the operation resource. */
              public Get setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dataItems/[^/]+/operations/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Get set(String parameterName, Object value) {
                return (Get) super.set(parameterName, value);
              }
            }
            /**
             * Lists operations that match the specified filter in the request. If the server doesn't support
             * this method, it returns `UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.list".
             *
             * This request holds the parameters needed by the aiplatform server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation.
             *
             * @param name The name of the operation's parent resource.
             * @return the request
             */
            public List list(java.lang.String name) throws java.io.IOException {
              List result = new List(name);
              initialize(result);
              return result;
            }

            public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse> {

              private static final String REST_PATH = "v1/{+name}/operations";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dataItems/[^/]+$");

              /**
               * Lists operations that match the specified filter in the request. If the server doesn't support
               * this method, it returns `UNIMPLEMENTED`.
               *
               * Create a request for the method "operations.list".
               *
               * This request holds the parameters needed by the the aiplatform server.  After setting any
               * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
               * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The name of the operation's parent resource.
               * @since 1.13
               */
              protected List(java.lang.String name) {
                super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dataItems/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public List set$Xgafv(java.lang.String $Xgafv) {
                return (List) super.set$Xgafv($Xgafv);
              }

              @Override
              public List setAccessToken(java.lang.String accessToken) {
                return (List) super.setAccessToken(accessToken);
              }

              @Override
              public List setAlt(java.lang.String alt) {
                return (List) super.setAlt(alt);
              }

              @Override
              public List setCallback(java.lang.String callback) {
                return (List) super.setCallback(callback);
              }

              @Override
              public List setFields(java.lang.String fields) {
                return (List) super.setFields(fields);
              }

              @Override
              public List setKey(java.lang.String key) {
                return (List) super.setKey(key);
              }

              @Override
              public List setOauthToken(java.lang.String oauthToken) {
                return (List) super.setOauthToken(oauthToken);
              }

              @Override
              public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (List) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public List setQuotaUser(java.lang.String quotaUser) {
                return (List) super.setQuotaUser(quotaUser);
              }

              @Override
              public List setUploadType(java.lang.String uploadType) {
                return (List) super.setUploadType(uploadType);
              }

              @Override
              public List setUploadProtocol(java.lang.String uploadProtocol) {
                return (List) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the operation's parent resource. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The name of the operation's parent resource.
               */
              public java.lang.String getName() {
                return name;
              }

              /** The name of the operation's parent resource. */
              public List setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dataItems/[^/]+$");
                }
                this.name = name;
                return this;
              }

              /** The standard list filter. */
              @com.google.api.client.util.Key
              private java.lang.String filter;

              /** The standard list filter.
               */
              public java.lang.String getFilter() {
                return filter;
              }

              /** The standard list filter. */
              public List setFilter(java.lang.String filter) {
                this.filter = filter;
                return this;
              }

              /** The standard list page size. */
              @com.google.api.client.util.Key
              private java.lang.Integer pageSize;

              /** The standard list page size.
               */
              public java.lang.Integer getPageSize() {
                return pageSize;
              }

              /** The standard list page size. */
              public List setPageSize(java.lang.Integer pageSize) {
                this.pageSize = pageSize;
                return this;
              }

              /** The standard list page token. */
              @com.google.api.client.util.Key
              private java.lang.String pageToken;

              /** The standard list page token.
               */
              public java.lang.String getPageToken() {
                return pageToken;
              }

              /** The standard list page token. */
              public List setPageToken(java.lang.String pageToken) {
                this.pageToken = pageToken;
                return this;
              }

              @Override
              public List set(String parameterName, Object value) {
                return (List) super.set(parameterName, value);
              }
            }
            /**
             * Waits until the specified long-running operation is done or reaches at most a specified timeout,
             * returning the latest state. If the operation is already done, the latest state is immediately
             * returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC
             * timeout is used. If the server does not support this method, it returns
             * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
             * the latest state before the specified timeout (including immediately), meaning even an immediate
             * response is no guarantee that the operation is done.
             *
             * Create a request for the method "operations.wait".
             *
             * This request holds the parameters needed by the aiplatform server.  After setting any optional
             * parameters, call the {@link Wait#execute()} method to invoke the remote operation.
             *
             * @param name The name of the operation resource to wait on.
             * @return the request
             */
            public Wait wait(java.lang.String name) throws java.io.IOException {
              Wait result = new Wait(name);
              initialize(result);
              return result;
            }

            public class Wait extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

              private static final String REST_PATH = "v1/{+name}:wait";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dataItems/[^/]+/operations/[^/]+$");

              /**
               * Waits until the specified long-running operation is done or reaches at most a specified
               * timeout, returning the latest state. If the operation is already done, the latest state is
               * immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout,
               * the HTTP/RPC timeout is used. If the server does not support this method, it returns
               * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
               * the latest state before the specified timeout (including immediately), meaning even an
               * immediate response is no guarantee that the operation is done.
               *
               * Create a request for the method "operations.wait".
               *
               * This request holds the parameters needed by the the aiplatform server.  After setting any
               * optional parameters, call the {@link Wait#execute()} method to invoke the remote operation. <p>
               * {@link Wait#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The name of the operation resource to wait on.
               * @since 1.13
               */
              protected Wait(java.lang.String name) {
                super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dataItems/[^/]+/operations/[^/]+$");
                }
              }

              @Override
              public Wait set$Xgafv(java.lang.String $Xgafv) {
                return (Wait) super.set$Xgafv($Xgafv);
              }

              @Override
              public Wait setAccessToken(java.lang.String accessToken) {
                return (Wait) super.setAccessToken(accessToken);
              }

              @Override
              public Wait setAlt(java.lang.String alt) {
                return (Wait) super.setAlt(alt);
              }

              @Override
              public Wait setCallback(java.lang.String callback) {
                return (Wait) super.setCallback(callback);
              }

              @Override
              public Wait setFields(java.lang.String fields) {
                return (Wait) super.setFields(fields);
              }

              @Override
              public Wait setKey(java.lang.String key) {
                return (Wait) super.setKey(key);
              }

              @Override
              public Wait setOauthToken(java.lang.String oauthToken) {
                return (Wait) super.setOauthToken(oauthToken);
              }

              @Override
              public Wait setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Wait) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Wait setQuotaUser(java.lang.String quotaUser) {
                return (Wait) super.setQuotaUser(quotaUser);
              }

              @Override
              public Wait setUploadType(java.lang.String uploadType) {
                return (Wait) super.setUploadType(uploadType);
              }

              @Override
              public Wait setUploadProtocol(java.lang.String uploadProtocol) {
                return (Wait) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the operation resource to wait on. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The name of the operation resource to wait on.
               */
              public java.lang.String getName() {
                return name;
              }

              /** The name of the operation resource to wait on. */
              public Wait setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dataItems/[^/]+/operations/[^/]+$");
                }
                this.name = name;
                return this;
              }

              /**
               * The maximum duration to wait before timing out. If left blank, the wait will be at
               * most the time permitted by the underlying HTTP/RPC protocol. If RPC context
               * deadline is also specified, the shorter one will be used.
               */
              @com.google.api.client.util.Key
              private String timeout;

              /** The maximum duration to wait before timing out. If left blank, the wait will be at most the time
             permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the
             shorter one will be used.
               */
              public String getTimeout() {
                return timeout;
              }

              /**
               * The maximum duration to wait before timing out. If left blank, the wait will be at
               * most the time permitted by the underlying HTTP/RPC protocol. If RPC context
               * deadline is also specified, the shorter one will be used.
               */
              public Wait setTimeout(String timeout) {
                this.timeout = timeout;
                return this;
              }

              @Override
              public Wait set(String parameterName, Object value) {
                return (Wait) super.set(parameterName, value);
              }
            }

          }
        }
        /**
         * An accessor for creating requests from the DatasetVersions collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Aiplatform aiplatform = new Aiplatform(...);}
         *   {@code Aiplatform.DatasetVersions.List request = aiplatform.datasetVersions().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public DatasetVersions datasetVersions() {
          return new DatasetVersions();
        }

        /**
         * The "datasetVersions" collection of methods.
         */
        public class DatasetVersions {

          /**
           * Create a version from a Dataset.
           *
           * Create a request for the method "datasetVersions.create".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The name of the Dataset resource. Format:
           *        `projects/{project}/locations/{location}/datasets/{dataset}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1DatasetVersion}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1DatasetVersion content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+parent}/datasetVersions";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");

            /**
             * Create a version from a Dataset.
             *
             * Create a request for the method "datasetVersions.create".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
             * <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The name of the Dataset resource. Format:
           *        `projects/{project}/locations/{location}/datasets/{dataset}`
             * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1DatasetVersion}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1DatasetVersion content) {
              super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the Dataset resource. Format:
             * `projects/{project}/locations/{location}/datasets/{dataset}`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The name of the Dataset resource. Format:
           `projects/{project}/locations/{location}/datasets/{dataset}`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The name of the Dataset resource. Format:
             * `projects/{project}/locations/{location}/datasets/{dataset}`
             */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Deletes a Dataset version.
           *
           * Create a request for the method "datasetVersions.delete".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name Required. The resource name of the Dataset version to delete. Format:
           *        `projects/{project}/locations/{location}/datasets/{dataset}/datasetVersions/{dataset_versi
           *        on}`
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/datasetVersions/[^/]+$");

            /**
             * Deletes a Dataset version.
             *
             * Create a request for the method "datasetVersions.delete".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The resource name of the Dataset version to delete. Format:
           *        `projects/{project}/locations/{location}/datasets/{dataset}/datasetVersions/{dataset_versi
           *        on}`
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/datasetVersions/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The resource name of the Dataset version to delete. Format: `projects/{proj
             * ect}/locations/{location}/datasets/{dataset}/datasetVersions/{dataset_version}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The resource name of the Dataset version to delete. Format:
           `projects/{project}/locations/{location}/datasets/{dataset}/datasetVersions/{dataset_version}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The resource name of the Dataset version to delete. Format: `projects/{proj
             * ect}/locations/{location}/datasets/{dataset}/datasetVersions/{dataset_version}`
             */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/datasetVersions/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Gets a Dataset version.
           *
           * Create a request for the method "datasetVersions.get".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. The resource name of the Dataset version to delete. Format:
           *        `projects/{project}/locations/{location}/datasets/{dataset}/datasetVersions/{dataset_versi
           *        on}`
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1DatasetVersion> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/datasetVersions/[^/]+$");

            /**
             * Gets a Dataset version.
             *
             * Create a request for the method "datasetVersions.get".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The resource name of the Dataset version to delete. Format:
           *        `projects/{project}/locations/{location}/datasets/{dataset}/datasetVersions/{dataset_versi
           *        on}`
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1DatasetVersion.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/datasetVersions/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The resource name of the Dataset version to delete. Format: `projects/{proj
             * ect}/locations/{location}/datasets/{dataset}/datasetVersions/{dataset_version}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The resource name of the Dataset version to delete. Format:
           `projects/{project}/locations/{location}/datasets/{dataset}/datasetVersions/{dataset_version}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The resource name of the Dataset version to delete. Format: `projects/{proj
             * ect}/locations/{location}/datasets/{dataset}/datasetVersions/{dataset_version}`
             */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/datasetVersions/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /** Mask specifying which fields to read. */
            @com.google.api.client.util.Key
            private String readMask;

            /** Mask specifying which fields to read.
             */
            public String getReadMask() {
              return readMask;
            }

            /** Mask specifying which fields to read. */
            public Get setReadMask(String readMask) {
              this.readMask = readMask;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Lists DatasetVersions in a Dataset.
           *
           * Create a request for the method "datasetVersions.list".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The resource name of the Dataset to list DatasetVersions from. Format:
           *        `projects/{project}/locations/{location}/datasets/{dataset}`
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListDatasetVersionsResponse> {

            private static final String REST_PATH = "v1/{+parent}/datasetVersions";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");

            /**
             * Lists DatasetVersions in a Dataset.
             *
             * Create a request for the method "datasetVersions.list".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The resource name of the Dataset to list DatasetVersions from. Format:
           *        `projects/{project}/locations/{location}/datasets/{dataset}`
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListDatasetVersionsResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The resource name of the Dataset to list DatasetVersions from. Format:
             * `projects/{project}/locations/{location}/datasets/{dataset}`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The resource name of the Dataset to list DatasetVersions from. Format:
           `projects/{project}/locations/{location}/datasets/{dataset}`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The resource name of the Dataset to list DatasetVersions from. Format:
             * `projects/{project}/locations/{location}/datasets/{dataset}`
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /** Optional. The standard list filter. */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** Optional. The standard list filter.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /** Optional. The standard list filter. */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /**
             * Optional. A comma-separated list of fields to order by, sorted in ascending order.
             * Use "desc" after a field name for descending.
             */
            @com.google.api.client.util.Key
            private java.lang.String orderBy;

            /** Optional. A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after
           a field name for descending.
             */
            public java.lang.String getOrderBy() {
              return orderBy;
            }

            /**
             * Optional. A comma-separated list of fields to order by, sorted in ascending order.
             * Use "desc" after a field name for descending.
             */
            public List setOrderBy(java.lang.String orderBy) {
              this.orderBy = orderBy;
              return this;
            }

            /** Optional. The standard list page size. */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Optional. The standard list page size.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /** Optional. The standard list page size. */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** Optional. The standard list page token. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** Optional. The standard list page token.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** Optional. The standard list page token. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            /** Optional. Mask specifying which fields to read. */
            @com.google.api.client.util.Key
            private String readMask;

            /** Optional. Mask specifying which fields to read.
             */
            public String getReadMask() {
              return readMask;
            }

            /** Optional. Mask specifying which fields to read. */
            public List setReadMask(String readMask) {
              this.readMask = readMask;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Updates a DatasetVersion.
           *
           * Create a request for the method "datasetVersions.patch".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           *
           * @param name Output only. Identifier. The resource name of the DatasetVersion.
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1DatasetVersion}
           * @return the request
           */
          public Patch patch(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1DatasetVersion content) throws java.io.IOException {
            Patch result = new Patch(name, content);
            initialize(result);
            return result;
          }

          public class Patch extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1DatasetVersion> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/datasetVersions/[^/]+$");

            /**
             * Updates a DatasetVersion.
             *
             * Create a request for the method "datasetVersions.patch".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             * <p> {@link
             * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Output only. Identifier. The resource name of the DatasetVersion.
             * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1DatasetVersion}
             * @since 1.13
             */
            protected Patch(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1DatasetVersion content) {
              super(Aiplatform.this, "PATCH", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1DatasetVersion.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/datasetVersions/[^/]+$");
              }
            }

            @Override
            public Patch set$Xgafv(java.lang.String $Xgafv) {
              return (Patch) super.set$Xgafv($Xgafv);
            }

            @Override
            public Patch setAccessToken(java.lang.String accessToken) {
              return (Patch) super.setAccessToken(accessToken);
            }

            @Override
            public Patch setAlt(java.lang.String alt) {
              return (Patch) super.setAlt(alt);
            }

            @Override
            public Patch setCallback(java.lang.String callback) {
              return (Patch) super.setCallback(callback);
            }

            @Override
            public Patch setFields(java.lang.String fields) {
              return (Patch) super.setFields(fields);
            }

            @Override
            public Patch setKey(java.lang.String key) {
              return (Patch) super.setKey(key);
            }

            @Override
            public Patch setOauthToken(java.lang.String oauthToken) {
              return (Patch) super.setOauthToken(oauthToken);
            }

            @Override
            public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Patch) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Patch setQuotaUser(java.lang.String quotaUser) {
              return (Patch) super.setQuotaUser(quotaUser);
            }

            @Override
            public Patch setUploadType(java.lang.String uploadType) {
              return (Patch) super.setUploadType(uploadType);
            }

            @Override
            public Patch setUploadProtocol(java.lang.String uploadProtocol) {
              return (Patch) super.setUploadProtocol(uploadProtocol);
            }

            /** Output only. Identifier. The resource name of the DatasetVersion. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Output only. Identifier. The resource name of the DatasetVersion.
             */
            public java.lang.String getName() {
              return name;
            }

            /** Output only. Identifier. The resource name of the DatasetVersion. */
            public Patch setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/datasetVersions/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * Required. The update mask applies to the resource. For the `FieldMask` definition,
             * see google.protobuf.FieldMask. Updatable fields: * `display_name`
             */
            @com.google.api.client.util.Key
            private String updateMask;

            /** Required. The update mask applies to the resource. For the `FieldMask` definition, see
           google.protobuf.FieldMask. Updatable fields: * `display_name`
             */
            public String getUpdateMask() {
              return updateMask;
            }

            /**
             * Required. The update mask applies to the resource. For the `FieldMask` definition,
             * see google.protobuf.FieldMask. Updatable fields: * `display_name`
             */
            public Patch setUpdateMask(String updateMask) {
              this.updateMask = updateMask;
              return this;
            }

            @Override
            public Patch set(String parameterName, Object value) {
              return (Patch) super.set(parameterName, value);
            }
          }
          /**
           * Restores a dataset version.
           *
           * Create a request for the method "datasetVersions.restore".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Restore#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the DatasetVersion resource. Format:
           *        `projects/{project}/locations/{location}/datasets/{dataset}/datasetVersions/{dataset_versi
           *        on}`
           * @return the request
           */
          public Restore restore(java.lang.String name) throws java.io.IOException {
            Restore result = new Restore(name);
            initialize(result);
            return result;
          }

          public class Restore extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+name}:restore";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/datasetVersions/[^/]+$");

            /**
             * Restores a dataset version.
             *
             * Create a request for the method "datasetVersions.restore".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Restore#execute()} method to invoke the remote operation.
             * <p> {@link
             * Restore#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the DatasetVersion resource. Format:
           *        `projects/{project}/locations/{location}/datasets/{dataset}/datasetVersions/{dataset_versi
           *        on}`
             * @since 1.13
             */
            protected Restore(java.lang.String name) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/datasetVersions/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Restore set$Xgafv(java.lang.String $Xgafv) {
              return (Restore) super.set$Xgafv($Xgafv);
            }

            @Override
            public Restore setAccessToken(java.lang.String accessToken) {
              return (Restore) super.setAccessToken(accessToken);
            }

            @Override
            public Restore setAlt(java.lang.String alt) {
              return (Restore) super.setAlt(alt);
            }

            @Override
            public Restore setCallback(java.lang.String callback) {
              return (Restore) super.setCallback(callback);
            }

            @Override
            public Restore setFields(java.lang.String fields) {
              return (Restore) super.setFields(fields);
            }

            @Override
            public Restore setKey(java.lang.String key) {
              return (Restore) super.setKey(key);
            }

            @Override
            public Restore setOauthToken(java.lang.String oauthToken) {
              return (Restore) super.setOauthToken(oauthToken);
            }

            @Override
            public Restore setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Restore) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Restore setQuotaUser(java.lang.String quotaUser) {
              return (Restore) super.setQuotaUser(quotaUser);
            }

            @Override
            public Restore setUploadType(java.lang.String uploadType) {
              return (Restore) super.setUploadType(uploadType);
            }

            @Override
            public Restore setUploadProtocol(java.lang.String uploadProtocol) {
              return (Restore) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the DatasetVersion resource. Format: `projects/{project}/locati
             * ons/{location}/datasets/{dataset}/datasetVersions/{dataset_version}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the DatasetVersion resource. Format:
           `projects/{project}/locations/{location}/datasets/{dataset}/datasetVersions/{dataset_version}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The name of the DatasetVersion resource. Format: `projects/{project}/locati
             * ons/{location}/datasets/{dataset}/datasetVersions/{dataset_version}`
             */
            public Restore setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/datasetVersions/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Restore set(String parameterName, Object value) {
              return (Restore) super.set(parameterName, value);
            }
          }

        }
        /**
         * An accessor for creating requests from the Operations collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Aiplatform aiplatform = new Aiplatform(...);}
         *   {@code Aiplatform.Operations.List request = aiplatform.operations().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Operations operations() {
          return new Operations();
        }

        /**
         * The "operations" collection of methods.
         */
        public class Operations {

          /**
           * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
           * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
           * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
           * methods to check whether the cancellation succeeded or whether the operation completed despite
           * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
           * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
           * `Code.CANCELLED`.
           *
           * Create a request for the method "operations.cancel".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource to be cancelled.
           * @return the request
           */
          public Cancel cancel(java.lang.String name) throws java.io.IOException {
            Cancel result = new Cancel(name);
            initialize(result);
            return result;
          }

          public class Cancel extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

            private static final String REST_PATH = "v1/{+name}:cancel";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/operations/[^/]+$");

            /**
             * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
             * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
             * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
             * methods to check whether the cancellation succeeded or whether the operation completed despite
             * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
             * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
             * `Code.CANCELLED`.
             *
             * Create a request for the method "operations.cancel".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
             * <p> {@link
             * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource to be cancelled.
             * @since 1.13
             */
            protected Cancel(java.lang.String name) {
              super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public Cancel set$Xgafv(java.lang.String $Xgafv) {
              return (Cancel) super.set$Xgafv($Xgafv);
            }

            @Override
            public Cancel setAccessToken(java.lang.String accessToken) {
              return (Cancel) super.setAccessToken(accessToken);
            }

            @Override
            public Cancel setAlt(java.lang.String alt) {
              return (Cancel) super.setAlt(alt);
            }

            @Override
            public Cancel setCallback(java.lang.String callback) {
              return (Cancel) super.setCallback(callback);
            }

            @Override
            public Cancel setFields(java.lang.String fields) {
              return (Cancel) super.setFields(fields);
            }

            @Override
            public Cancel setKey(java.lang.String key) {
              return (Cancel) super.setKey(key);
            }

            @Override
            public Cancel setOauthToken(java.lang.String oauthToken) {
              return (Cancel) super.setOauthToken(oauthToken);
            }

            @Override
            public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Cancel) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Cancel setQuotaUser(java.lang.String quotaUser) {
              return (Cancel) super.setQuotaUser(quotaUser);
            }

            @Override
            public Cancel setUploadType(java.lang.String uploadType) {
              return (Cancel) super.setUploadType(uploadType);
            }

            @Override
            public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
              return (Cancel) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource to be cancelled. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource to be cancelled.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource to be cancelled. */
            public Cancel setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Cancel set(String parameterName, Object value) {
              return (Cancel) super.set(parameterName, value);
            }
          }
          /**
           * Deletes a long-running operation. This method indicates that the client is no longer interested
           * in the operation result. It does not cancel the operation. If the server doesn't support this
           * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.delete".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource to be deleted.
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/operations/[^/]+$");

            /**
             * Deletes a long-running operation. This method indicates that the client is no longer interested
             * in the operation result. It does not cancel the operation. If the server doesn't support this
             * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.delete".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource to be deleted.
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource to be deleted. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource to be deleted.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource to be deleted. */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Gets the latest state of a long-running operation. Clients can use this method to poll the
           * operation result at intervals as recommended by the API service.
           *
           * Create a request for the method "operations.get".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource.
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/operations/[^/]+$");

            /**
             * Gets the latest state of a long-running operation. Clients can use this method to poll the
             * operation result at intervals as recommended by the API service.
             *
             * Create a request for the method "operations.get".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource.
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource. */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Lists operations that match the specified filter in the request. If the server doesn't support
           * this method, it returns `UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.list".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation's parent resource.
           * @return the request
           */
          public List list(java.lang.String name) throws java.io.IOException {
            List result = new List(name);
            initialize(result);
            return result;
          }

          public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse> {

            private static final String REST_PATH = "v1/{+name}/operations";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");

            /**
             * Lists operations that match the specified filter in the request. If the server doesn't support
             * this method, it returns `UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.list".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation's parent resource.
             * @since 1.13
             */
            protected List(java.lang.String name) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation's parent resource. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation's parent resource.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation's parent resource. */
            public List setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /** The standard list filter. */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** The standard list filter.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /** The standard list filter. */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /** The standard list page size. */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** The standard list page size.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /** The standard list page size. */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** The standard list page token. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** The standard list page token.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** The standard list page token. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Waits until the specified long-running operation is done or reaches at most a specified timeout,
           * returning the latest state. If the operation is already done, the latest state is immediately
           * returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC
           * timeout is used. If the server does not support this method, it returns
           * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
           * the latest state before the specified timeout (including immediately), meaning even an immediate
           * response is no guarantee that the operation is done.
           *
           * Create a request for the method "operations.wait".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Wait#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource to wait on.
           * @return the request
           */
          public Wait wait(java.lang.String name) throws java.io.IOException {
            Wait result = new Wait(name);
            initialize(result);
            return result;
          }

          public class Wait extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+name}:wait";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/operations/[^/]+$");

            /**
             * Waits until the specified long-running operation is done or reaches at most a specified
             * timeout, returning the latest state. If the operation is already done, the latest state is
             * immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout,
             * the HTTP/RPC timeout is used. If the server does not support this method, it returns
             * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
             * the latest state before the specified timeout (including immediately), meaning even an
             * immediate response is no guarantee that the operation is done.
             *
             * Create a request for the method "operations.wait".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Wait#execute()} method to invoke the remote operation. <p>
             * {@link Wait#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource to wait on.
             * @since 1.13
             */
            protected Wait(java.lang.String name) {
              super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public Wait set$Xgafv(java.lang.String $Xgafv) {
              return (Wait) super.set$Xgafv($Xgafv);
            }

            @Override
            public Wait setAccessToken(java.lang.String accessToken) {
              return (Wait) super.setAccessToken(accessToken);
            }

            @Override
            public Wait setAlt(java.lang.String alt) {
              return (Wait) super.setAlt(alt);
            }

            @Override
            public Wait setCallback(java.lang.String callback) {
              return (Wait) super.setCallback(callback);
            }

            @Override
            public Wait setFields(java.lang.String fields) {
              return (Wait) super.setFields(fields);
            }

            @Override
            public Wait setKey(java.lang.String key) {
              return (Wait) super.setKey(key);
            }

            @Override
            public Wait setOauthToken(java.lang.String oauthToken) {
              return (Wait) super.setOauthToken(oauthToken);
            }

            @Override
            public Wait setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Wait) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Wait setQuotaUser(java.lang.String quotaUser) {
              return (Wait) super.setQuotaUser(quotaUser);
            }

            @Override
            public Wait setUploadType(java.lang.String uploadType) {
              return (Wait) super.setUploadType(uploadType);
            }

            @Override
            public Wait setUploadProtocol(java.lang.String uploadProtocol) {
              return (Wait) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource to wait on. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource to wait on.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource to wait on. */
            public Wait setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * The maximum duration to wait before timing out. If left blank, the wait will be at
             * most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline
             * is also specified, the shorter one will be used.
             */
            @com.google.api.client.util.Key
            private String timeout;

            /** The maximum duration to wait before timing out. If left blank, the wait will be at most the time
           permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the
           shorter one will be used.
             */
            public String getTimeout() {
              return timeout;
            }

            /**
             * The maximum duration to wait before timing out. If left blank, the wait will be at
             * most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline
             * is also specified, the shorter one will be used.
             */
            public Wait setTimeout(String timeout) {
              this.timeout = timeout;
              return this;
            }

            @Override
            public Wait set(String parameterName, Object value) {
              return (Wait) super.set(parameterName, value);
            }
          }

        }
        /**
         * An accessor for creating requests from the SavedQueries collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Aiplatform aiplatform = new Aiplatform(...);}
         *   {@code Aiplatform.SavedQueries.List request = aiplatform.savedQueries().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public SavedQueries savedQueries() {
          return new SavedQueries();
        }

        /**
         * The "savedQueries" collection of methods.
         */
        public class SavedQueries {

          /**
           * Deletes a SavedQuery.
           *
           * Create a request for the method "savedQueries.delete".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name Required. The resource name of the SavedQuery to delete. Format:
           *        `projects/{project}/locations/{location}/datasets/{dataset}/savedQueries/{saved_query}`
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/savedQueries/[^/]+$");

            /**
             * Deletes a SavedQuery.
             *
             * Create a request for the method "savedQueries.delete".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The resource name of the SavedQuery to delete. Format:
           *        `projects/{project}/locations/{location}/datasets/{dataset}/savedQueries/{saved_query}`
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/savedQueries/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The resource name of the SavedQuery to delete. Format: `projects/{project}/
             * locations/{location}/datasets/{dataset}/savedQueries/{saved_query}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The resource name of the SavedQuery to delete. Format:
           `projects/{project}/locations/{location}/datasets/{dataset}/savedQueries/{saved_query}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The resource name of the SavedQuery to delete. Format: `projects/{project}/
             * locations/{location}/datasets/{dataset}/savedQueries/{saved_query}`
             */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/savedQueries/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Lists SavedQueries in a Dataset.
           *
           * Create a request for the method "savedQueries.list".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The resource name of the Dataset to list SavedQueries from. Format:
           *        `projects/{project}/locations/{location}/datasets/{dataset}`
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListSavedQueriesResponse> {

            private static final String REST_PATH = "v1/{+parent}/savedQueries";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");

            /**
             * Lists SavedQueries in a Dataset.
             *
             * Create a request for the method "savedQueries.list".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The resource name of the Dataset to list SavedQueries from. Format:
           *        `projects/{project}/locations/{location}/datasets/{dataset}`
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListSavedQueriesResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The resource name of the Dataset to list SavedQueries from. Format:
             * `projects/{project}/locations/{location}/datasets/{dataset}`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The resource name of the Dataset to list SavedQueries from. Format:
           `projects/{project}/locations/{location}/datasets/{dataset}`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The resource name of the Dataset to list SavedQueries from. Format:
             * `projects/{project}/locations/{location}/datasets/{dataset}`
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /** The standard list filter. */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** The standard list filter.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /** The standard list filter. */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /**
             * A comma-separated list of fields to order by, sorted in ascending order. Use "desc"
             * after a field name for descending.
             */
            @com.google.api.client.util.Key
            private java.lang.String orderBy;

            /** A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field
           name for descending.
             */
            public java.lang.String getOrderBy() {
              return orderBy;
            }

            /**
             * A comma-separated list of fields to order by, sorted in ascending order. Use "desc"
             * after a field name for descending.
             */
            public List setOrderBy(java.lang.String orderBy) {
              this.orderBy = orderBy;
              return this;
            }

            /** The standard list page size. */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** The standard list page size.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /** The standard list page size. */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** The standard list page token. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** The standard list page token.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** The standard list page token. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            /** Mask specifying which fields to read. */
            @com.google.api.client.util.Key
            private String readMask;

            /** Mask specifying which fields to read.
             */
            public String getReadMask() {
              return readMask;
            }

            /** Mask specifying which fields to read. */
            public List setReadMask(String readMask) {
              this.readMask = readMask;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }

          /**
           * An accessor for creating requests from the Operations collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code Aiplatform aiplatform = new Aiplatform(...);}
           *   {@code Aiplatform.Operations.List request = aiplatform.operations().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public Operations operations() {
            return new Operations();
          }

          /**
           * The "operations" collection of methods.
           */
          public class Operations {

            /**
             * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
             * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
             * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
             * methods to check whether the cancellation succeeded or whether the operation completed despite
             * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
             * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
             * `Code.CANCELLED`.
             *
             * Create a request for the method "operations.cancel".
             *
             * This request holds the parameters needed by the aiplatform server.  After setting any optional
             * parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
             *
             * @param name The name of the operation resource to be cancelled.
             * @return the request
             */
            public Cancel cancel(java.lang.String name) throws java.io.IOException {
              Cancel result = new Cancel(name);
              initialize(result);
              return result;
            }

            public class Cancel extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

              private static final String REST_PATH = "v1/{+name}:cancel";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/savedQueries/[^/]+/operations/[^/]+$");

              /**
               * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
               * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
               * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
               * methods to check whether the cancellation succeeded or whether the operation completed despite
               * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
               * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
               * `Code.CANCELLED`.
               *
               * Create a request for the method "operations.cancel".
               *
               * This request holds the parameters needed by the the aiplatform server.  After setting any
               * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
               * <p> {@link
               * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The name of the operation resource to be cancelled.
               * @since 1.13
               */
              protected Cancel(java.lang.String name) {
                super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/savedQueries/[^/]+/operations/[^/]+$");
                }
              }

              @Override
              public Cancel set$Xgafv(java.lang.String $Xgafv) {
                return (Cancel) super.set$Xgafv($Xgafv);
              }

              @Override
              public Cancel setAccessToken(java.lang.String accessToken) {
                return (Cancel) super.setAccessToken(accessToken);
              }

              @Override
              public Cancel setAlt(java.lang.String alt) {
                return (Cancel) super.setAlt(alt);
              }

              @Override
              public Cancel setCallback(java.lang.String callback) {
                return (Cancel) super.setCallback(callback);
              }

              @Override
              public Cancel setFields(java.lang.String fields) {
                return (Cancel) super.setFields(fields);
              }

              @Override
              public Cancel setKey(java.lang.String key) {
                return (Cancel) super.setKey(key);
              }

              @Override
              public Cancel setOauthToken(java.lang.String oauthToken) {
                return (Cancel) super.setOauthToken(oauthToken);
              }

              @Override
              public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Cancel) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Cancel setQuotaUser(java.lang.String quotaUser) {
                return (Cancel) super.setQuotaUser(quotaUser);
              }

              @Override
              public Cancel setUploadType(java.lang.String uploadType) {
                return (Cancel) super.setUploadType(uploadType);
              }

              @Override
              public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
                return (Cancel) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the operation resource to be cancelled. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The name of the operation resource to be cancelled.
               */
              public java.lang.String getName() {
                return name;
              }

              /** The name of the operation resource to be cancelled. */
              public Cancel setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/savedQueries/[^/]+/operations/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Cancel set(String parameterName, Object value) {
                return (Cancel) super.set(parameterName, value);
              }
            }
            /**
             * Deletes a long-running operation. This method indicates that the client is no longer interested
             * in the operation result. It does not cancel the operation. If the server doesn't support this
             * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.delete".
             *
             * This request holds the parameters needed by the aiplatform server.  After setting any optional
             * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             *
             * @param name The name of the operation resource to be deleted.
             * @return the request
             */
            public Delete delete(java.lang.String name) throws java.io.IOException {
              Delete result = new Delete(name);
              initialize(result);
              return result;
            }

            public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/savedQueries/[^/]+/operations/[^/]+$");

              /**
               * Deletes a long-running operation. This method indicates that the client is no longer interested
               * in the operation result. It does not cancel the operation. If the server doesn't support this
               * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
               *
               * Create a request for the method "operations.delete".
               *
               * This request holds the parameters needed by the the aiplatform server.  After setting any
               * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
               * <p> {@link
               * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The name of the operation resource to be deleted.
               * @since 1.13
               */
              protected Delete(java.lang.String name) {
                super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/savedQueries/[^/]+/operations/[^/]+$");
                }
              }

              @Override
              public Delete set$Xgafv(java.lang.String $Xgafv) {
                return (Delete) super.set$Xgafv($Xgafv);
              }

              @Override
              public Delete setAccessToken(java.lang.String accessToken) {
                return (Delete) super.setAccessToken(accessToken);
              }

              @Override
              public Delete setAlt(java.lang.String alt) {
                return (Delete) super.setAlt(alt);
              }

              @Override
              public Delete setCallback(java.lang.String callback) {
                return (Delete) super.setCallback(callback);
              }

              @Override
              public Delete setFields(java.lang.String fields) {
                return (Delete) super.setFields(fields);
              }

              @Override
              public Delete setKey(java.lang.String key) {
                return (Delete) super.setKey(key);
              }

              @Override
              public Delete setOauthToken(java.lang.String oauthToken) {
                return (Delete) super.setOauthToken(oauthToken);
              }

              @Override
              public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Delete) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Delete setQuotaUser(java.lang.String quotaUser) {
                return (Delete) super.setQuotaUser(quotaUser);
              }

              @Override
              public Delete setUploadType(java.lang.String uploadType) {
                return (Delete) super.setUploadType(uploadType);
              }

              @Override
              public Delete setUploadProtocol(java.lang.String uploadProtocol) {
                return (Delete) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the operation resource to be deleted. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The name of the operation resource to be deleted.
               */
              public java.lang.String getName() {
                return name;
              }

              /** The name of the operation resource to be deleted. */
              public Delete setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/savedQueries/[^/]+/operations/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Delete set(String parameterName, Object value) {
                return (Delete) super.set(parameterName, value);
              }
            }
            /**
             * Gets the latest state of a long-running operation. Clients can use this method to poll the
             * operation result at intervals as recommended by the API service.
             *
             * Create a request for the method "operations.get".
             *
             * This request holds the parameters needed by the aiplatform server.  After setting any optional
             * parameters, call the {@link Get#execute()} method to invoke the remote operation.
             *
             * @param name The name of the operation resource.
             * @return the request
             */
            public Get get(java.lang.String name) throws java.io.IOException {
              Get result = new Get(name);
              initialize(result);
              return result;
            }

            public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/savedQueries/[^/]+/operations/[^/]+$");

              /**
               * Gets the latest state of a long-running operation. Clients can use this method to poll the
               * operation result at intervals as recommended by the API service.
               *
               * Create a request for the method "operations.get".
               *
               * This request holds the parameters needed by the the aiplatform server.  After setting any
               * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
               * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The name of the operation resource.
               * @since 1.13
               */
              protected Get(java.lang.String name) {
                super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/savedQueries/[^/]+/operations/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public Get set$Xgafv(java.lang.String $Xgafv) {
                return (Get) super.set$Xgafv($Xgafv);
              }

              @Override
              public Get setAccessToken(java.lang.String accessToken) {
                return (Get) super.setAccessToken(accessToken);
              }

              @Override
              public Get setAlt(java.lang.String alt) {
                return (Get) super.setAlt(alt);
              }

              @Override
              public Get setCallback(java.lang.String callback) {
                return (Get) super.setCallback(callback);
              }

              @Override
              public Get setFields(java.lang.String fields) {
                return (Get) super.setFields(fields);
              }

              @Override
              public Get setKey(java.lang.String key) {
                return (Get) super.setKey(key);
              }

              @Override
              public Get setOauthToken(java.lang.String oauthToken) {
                return (Get) super.setOauthToken(oauthToken);
              }

              @Override
              public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Get) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Get setQuotaUser(java.lang.String quotaUser) {
                return (Get) super.setQuotaUser(quotaUser);
              }

              @Override
              public Get setUploadType(java.lang.String uploadType) {
                return (Get) super.setUploadType(uploadType);
              }

              @Override
              public Get setUploadProtocol(java.lang.String uploadProtocol) {
                return (Get) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the operation resource. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The name of the operation resource.
               */
              public java.lang.String getName() {
                return name;
              }

              /** The name of the operation resource. */
              public Get setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/savedQueries/[^/]+/operations/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Get set(String parameterName, Object value) {
                return (Get) super.set(parameterName, value);
              }
            }
            /**
             * Lists operations that match the specified filter in the request. If the server doesn't support
             * this method, it returns `UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.list".
             *
             * This request holds the parameters needed by the aiplatform server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation.
             *
             * @param name The name of the operation's parent resource.
             * @return the request
             */
            public List list(java.lang.String name) throws java.io.IOException {
              List result = new List(name);
              initialize(result);
              return result;
            }

            public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse> {

              private static final String REST_PATH = "v1/{+name}/operations";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/savedQueries/[^/]+$");

              /**
               * Lists operations that match the specified filter in the request. If the server doesn't support
               * this method, it returns `UNIMPLEMENTED`.
               *
               * Create a request for the method "operations.list".
               *
               * This request holds the parameters needed by the the aiplatform server.  After setting any
               * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
               * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The name of the operation's parent resource.
               * @since 1.13
               */
              protected List(java.lang.String name) {
                super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/savedQueries/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public List set$Xgafv(java.lang.String $Xgafv) {
                return (List) super.set$Xgafv($Xgafv);
              }

              @Override
              public List setAccessToken(java.lang.String accessToken) {
                return (List) super.setAccessToken(accessToken);
              }

              @Override
              public List setAlt(java.lang.String alt) {
                return (List) super.setAlt(alt);
              }

              @Override
              public List setCallback(java.lang.String callback) {
                return (List) super.setCallback(callback);
              }

              @Override
              public List setFields(java.lang.String fields) {
                return (List) super.setFields(fields);
              }

              @Override
              public List setKey(java.lang.String key) {
                return (List) super.setKey(key);
              }

              @Override
              public List setOauthToken(java.lang.String oauthToken) {
                return (List) super.setOauthToken(oauthToken);
              }

              @Override
              public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (List) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public List setQuotaUser(java.lang.String quotaUser) {
                return (List) super.setQuotaUser(quotaUser);
              }

              @Override
              public List setUploadType(java.lang.String uploadType) {
                return (List) super.setUploadType(uploadType);
              }

              @Override
              public List setUploadProtocol(java.lang.String uploadProtocol) {
                return (List) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the operation's parent resource. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The name of the operation's parent resource.
               */
              public java.lang.String getName() {
                return name;
              }

              /** The name of the operation's parent resource. */
              public List setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/savedQueries/[^/]+$");
                }
                this.name = name;
                return this;
              }

              /** The standard list filter. */
              @com.google.api.client.util.Key
              private java.lang.String filter;

              /** The standard list filter.
               */
              public java.lang.String getFilter() {
                return filter;
              }

              /** The standard list filter. */
              public List setFilter(java.lang.String filter) {
                this.filter = filter;
                return this;
              }

              /** The standard list page size. */
              @com.google.api.client.util.Key
              private java.lang.Integer pageSize;

              /** The standard list page size.
               */
              public java.lang.Integer getPageSize() {
                return pageSize;
              }

              /** The standard list page size. */
              public List setPageSize(java.lang.Integer pageSize) {
                this.pageSize = pageSize;
                return this;
              }

              /** The standard list page token. */
              @com.google.api.client.util.Key
              private java.lang.String pageToken;

              /** The standard list page token.
               */
              public java.lang.String getPageToken() {
                return pageToken;
              }

              /** The standard list page token. */
              public List setPageToken(java.lang.String pageToken) {
                this.pageToken = pageToken;
                return this;
              }

              @Override
              public List set(String parameterName, Object value) {
                return (List) super.set(parameterName, value);
              }
            }
            /**
             * Waits until the specified long-running operation is done or reaches at most a specified timeout,
             * returning the latest state. If the operation is already done, the latest state is immediately
             * returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC
             * timeout is used. If the server does not support this method, it returns
             * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
             * the latest state before the specified timeout (including immediately), meaning even an immediate
             * response is no guarantee that the operation is done.
             *
             * Create a request for the method "operations.wait".
             *
             * This request holds the parameters needed by the aiplatform server.  After setting any optional
             * parameters, call the {@link Wait#execute()} method to invoke the remote operation.
             *
             * @param name The name of the operation resource to wait on.
             * @return the request
             */
            public Wait wait(java.lang.String name) throws java.io.IOException {
              Wait result = new Wait(name);
              initialize(result);
              return result;
            }

            public class Wait extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

              private static final String REST_PATH = "v1/{+name}:wait";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/savedQueries/[^/]+/operations/[^/]+$");

              /**
               * Waits until the specified long-running operation is done or reaches at most a specified
               * timeout, returning the latest state. If the operation is already done, the latest state is
               * immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout,
               * the HTTP/RPC timeout is used. If the server does not support this method, it returns
               * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
               * the latest state before the specified timeout (including immediately), meaning even an
               * immediate response is no guarantee that the operation is done.
               *
               * Create a request for the method "operations.wait".
               *
               * This request holds the parameters needed by the the aiplatform server.  After setting any
               * optional parameters, call the {@link Wait#execute()} method to invoke the remote operation. <p>
               * {@link Wait#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The name of the operation resource to wait on.
               * @since 1.13
               */
              protected Wait(java.lang.String name) {
                super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/savedQueries/[^/]+/operations/[^/]+$");
                }
              }

              @Override
              public Wait set$Xgafv(java.lang.String $Xgafv) {
                return (Wait) super.set$Xgafv($Xgafv);
              }

              @Override
              public Wait setAccessToken(java.lang.String accessToken) {
                return (Wait) super.setAccessToken(accessToken);
              }

              @Override
              public Wait setAlt(java.lang.String alt) {
                return (Wait) super.setAlt(alt);
              }

              @Override
              public Wait setCallback(java.lang.String callback) {
                return (Wait) super.setCallback(callback);
              }

              @Override
              public Wait setFields(java.lang.String fields) {
                return (Wait) super.setFields(fields);
              }

              @Override
              public Wait setKey(java.lang.String key) {
                return (Wait) super.setKey(key);
              }

              @Override
              public Wait setOauthToken(java.lang.String oauthToken) {
                return (Wait) super.setOauthToken(oauthToken);
              }

              @Override
              public Wait setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Wait) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Wait setQuotaUser(java.lang.String quotaUser) {
                return (Wait) super.setQuotaUser(quotaUser);
              }

              @Override
              public Wait setUploadType(java.lang.String uploadType) {
                return (Wait) super.setUploadType(uploadType);
              }

              @Override
              public Wait setUploadProtocol(java.lang.String uploadProtocol) {
                return (Wait) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the operation resource to wait on. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The name of the operation resource to wait on.
               */
              public java.lang.String getName() {
                return name;
              }

              /** The name of the operation resource to wait on. */
              public Wait setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/savedQueries/[^/]+/operations/[^/]+$");
                }
                this.name = name;
                return this;
              }

              /**
               * The maximum duration to wait before timing out. If left blank, the wait will be at
               * most the time permitted by the underlying HTTP/RPC protocol. If RPC context
               * deadline is also specified, the shorter one will be used.
               */
              @com.google.api.client.util.Key
              private String timeout;

              /** The maximum duration to wait before timing out. If left blank, the wait will be at most the time
             permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the
             shorter one will be used.
               */
              public String getTimeout() {
                return timeout;
              }

              /**
               * The maximum duration to wait before timing out. If left blank, the wait will be at
               * most the time permitted by the underlying HTTP/RPC protocol. If RPC context
               * deadline is also specified, the shorter one will be used.
               */
              public Wait setTimeout(String timeout) {
                this.timeout = timeout;
                return this;
              }

              @Override
              public Wait set(String parameterName, Object value) {
                return (Wait) super.set(parameterName, value);
              }
            }

          }
        }
      }
      /**
       * An accessor for creating requests from the DeploymentResourcePools collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Aiplatform aiplatform = new Aiplatform(...);}
       *   {@code Aiplatform.DeploymentResourcePools.List request = aiplatform.deploymentResourcePools().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public DeploymentResourcePools deploymentResourcePools() {
        return new DeploymentResourcePools();
      }

      /**
       * The "deploymentResourcePools" collection of methods.
       */
      public class DeploymentResourcePools {

        /**
         * Create a DeploymentResourcePool.
         *
         * Create a request for the method "deploymentResourcePools.create".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent location resource where this DeploymentResourcePool will be created. Format:
         *        `projects/{project}/locations/{location}`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CreateDeploymentResourcePoolRequest}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CreateDeploymentResourcePoolRequest content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+parent}/deploymentResourcePools";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Create a DeploymentResourcePool.
           *
           * Create a request for the method "deploymentResourcePools.create".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent location resource where this DeploymentResourcePool will be created. Format:
         *        `projects/{project}/locations/{location}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CreateDeploymentResourcePoolRequest}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CreateDeploymentResourcePoolRequest content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The parent location resource where this DeploymentResourcePool will be
           * created. Format: `projects/{project}/locations/{location}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent location resource where this DeploymentResourcePool will be created. Format:
         `projects/{project}/locations/{location}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The parent location resource where this DeploymentResourcePool will be
           * created. Format: `projects/{project}/locations/{location}`
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Delete a DeploymentResourcePool.
         *
         * Create a request for the method "deploymentResourcePools.delete".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the DeploymentResourcePool to delete. Format:
         *        `projects/{project}/locations/{location}/deploymentResourcePools/{deployment_resource_pool
         *        }`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/deploymentResourcePools/[^/]+$");

          /**
           * Delete a DeploymentResourcePool.
           *
           * Create a request for the method "deploymentResourcePools.delete".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the DeploymentResourcePool to delete. Format:
         *        `projects/{project}/locations/{location}/deploymentResourcePools/{deployment_resource_pool
         *        }`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/deploymentResourcePools/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the DeploymentResourcePool to delete. Format: `projects/{project}
           * /locations/{location}/deploymentResourcePools/{deployment_resource_pool}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the DeploymentResourcePool to delete. Format:
         `projects/{project}/locations/{location}/deploymentResourcePools/{deployment_resource_pool}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the DeploymentResourcePool to delete. Format: `projects/{project}
           * /locations/{location}/deploymentResourcePools/{deployment_resource_pool}`
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/deploymentResourcePools/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Get a DeploymentResourcePool.
         *
         * Create a request for the method "deploymentResourcePools.get".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the DeploymentResourcePool to retrieve. Format:
         *        `projects/{project}/locations/{location}/deploymentResourcePools/{deployment_resource_pool
         *        }`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1DeploymentResourcePool> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/deploymentResourcePools/[^/]+$");

          /**
           * Get a DeploymentResourcePool.
           *
           * Create a request for the method "deploymentResourcePools.get".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the DeploymentResourcePool to retrieve. Format:
         *        `projects/{project}/locations/{location}/deploymentResourcePools/{deployment_resource_pool
         *        }`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1DeploymentResourcePool.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/deploymentResourcePools/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the DeploymentResourcePool to retrieve. Format: `projects/{projec
           * t}/locations/{location}/deploymentResourcePools/{deployment_resource_pool}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the DeploymentResourcePool to retrieve. Format:
         `projects/{project}/locations/{location}/deploymentResourcePools/{deployment_resource_pool}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the DeploymentResourcePool to retrieve. Format: `projects/{projec
           * t}/locations/{location}/deploymentResourcePools/{deployment_resource_pool}`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/deploymentResourcePools/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * List DeploymentResourcePools in a location.
         *
         * Create a request for the method "deploymentResourcePools.list".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent Location which owns this collection of DeploymentResourcePools. Format:
         *        `projects/{project}/locations/{location}`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListDeploymentResourcePoolsResponse> {

          private static final String REST_PATH = "v1/{+parent}/deploymentResourcePools";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * List DeploymentResourcePools in a location.
           *
           * Create a request for the method "deploymentResourcePools.list".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent Location which owns this collection of DeploymentResourcePools. Format:
         *        `projects/{project}/locations/{location}`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListDeploymentResourcePoolsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The parent Location which owns this collection of DeploymentResourcePools.
           * Format: `projects/{project}/locations/{location}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent Location which owns this collection of DeploymentResourcePools. Format:
         `projects/{project}/locations/{location}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The parent Location which owns this collection of DeploymentResourcePools.
           * Format: `projects/{project}/locations/{location}`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * The maximum number of DeploymentResourcePools to return. The service may return fewer
           * than this value.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The maximum number of DeploymentResourcePools to return. The service may return fewer than this
         value.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * The maximum number of DeploymentResourcePools to return. The service may return fewer
           * than this value.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * A page token, received from a previous `ListDeploymentResourcePools` call. Provide this
           * to retrieve the subsequent page. When paginating, all other parameters provided to
           * `ListDeploymentResourcePools` must match the call that provided the page token.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** A page token, received from a previous `ListDeploymentResourcePools` call. Provide this to retrieve
         the subsequent page. When paginating, all other parameters provided to
         `ListDeploymentResourcePools` must match the call that provided the page token.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * A page token, received from a previous `ListDeploymentResourcePools` call. Provide this
           * to retrieve the subsequent page. When paginating, all other parameters provided to
           * `ListDeploymentResourcePools` must match the call that provided the page token.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Update a DeploymentResourcePool.
         *
         * Create a request for the method "deploymentResourcePools.patch".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Immutable. The resource name of the DeploymentResourcePool. Format:
         *        `projects/{project}/locations/{location}/deploymentResourcePools/{deployment_resource_pool
         *        }`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1DeploymentResourcePool}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1DeploymentResourcePool content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/deploymentResourcePools/[^/]+$");

          /**
           * Update a DeploymentResourcePool.
           *
           * Create a request for the method "deploymentResourcePools.patch".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           * <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Immutable. The resource name of the DeploymentResourcePool. Format:
         *        `projects/{project}/locations/{location}/deploymentResourcePools/{deployment_resource_pool
         *        }`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1DeploymentResourcePool}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1DeploymentResourcePool content) {
            super(Aiplatform.this, "PATCH", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/deploymentResourcePools/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Immutable. The resource name of the DeploymentResourcePool. Format: `projects/{project}
           * /locations/{location}/deploymentResourcePools/{deployment_resource_pool}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Immutable. The resource name of the DeploymentResourcePool. Format:
         `projects/{project}/locations/{location}/deploymentResourcePools/{deployment_resource_pool}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Immutable. The resource name of the DeploymentResourcePool. Format: `projects/{project}
           * /locations/{location}/deploymentResourcePools/{deployment_resource_pool}`
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/deploymentResourcePools/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /** Required. The list of fields to update. */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Required. The list of fields to update.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /** Required. The list of fields to update. */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }
        /**
         * List DeployedModels that have been deployed on this DeploymentResourcePool.
         *
         * Create a request for the method "deploymentResourcePools.queryDeployedModels".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link QueryDeployedModels#execute()} method to invoke the remote operation.
         *
         * @param deploymentResourcePool Required. The name of the target DeploymentResourcePool to query. Format:
         *        `projects/{project}/locations/{location}/deploymentResourcePools/{deployment_resource_pool
         *        }`
         * @return the request
         */
        public QueryDeployedModels queryDeployedModels(java.lang.String deploymentResourcePool) throws java.io.IOException {
          QueryDeployedModels result = new QueryDeployedModels(deploymentResourcePool);
          initialize(result);
          return result;
        }

        public class QueryDeployedModels extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1QueryDeployedModelsResponse> {

          private static final String REST_PATH = "v1/{+deploymentResourcePool}:queryDeployedModels";

          private final java.util.regex.Pattern DEPLOYMENT_RESOURCE_POOL_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/deploymentResourcePools/[^/]+$");

          /**
           * List DeployedModels that have been deployed on this DeploymentResourcePool.
           *
           * Create a request for the method "deploymentResourcePools.queryDeployedModels".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link QueryDeployedModels#execute()} method to invoke the remote
           * operation. <p> {@link QueryDeployedModels#initialize(com.google.api.client.googleapis.services.
           * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param deploymentResourcePool Required. The name of the target DeploymentResourcePool to query. Format:
         *        `projects/{project}/locations/{location}/deploymentResourcePools/{deployment_resource_pool
         *        }`
           * @since 1.13
           */
          protected QueryDeployedModels(java.lang.String deploymentResourcePool) {
            super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1QueryDeployedModelsResponse.class);
            this.deploymentResourcePool = com.google.api.client.util.Preconditions.checkNotNull(deploymentResourcePool, "Required parameter deploymentResourcePool must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(DEPLOYMENT_RESOURCE_POOL_PATTERN.matcher(deploymentResourcePool).matches(),
                  "Parameter deploymentResourcePool must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/deploymentResourcePools/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public QueryDeployedModels set$Xgafv(java.lang.String $Xgafv) {
            return (QueryDeployedModels) super.set$Xgafv($Xgafv);
          }

          @Override
          public QueryDeployedModels setAccessToken(java.lang.String accessToken) {
            return (QueryDeployedModels) super.setAccessToken(accessToken);
          }

          @Override
          public QueryDeployedModels setAlt(java.lang.String alt) {
            return (QueryDeployedModels) super.setAlt(alt);
          }

          @Override
          public QueryDeployedModels setCallback(java.lang.String callback) {
            return (QueryDeployedModels) super.setCallback(callback);
          }

          @Override
          public QueryDeployedModels setFields(java.lang.String fields) {
            return (QueryDeployedModels) super.setFields(fields);
          }

          @Override
          public QueryDeployedModels setKey(java.lang.String key) {
            return (QueryDeployedModels) super.setKey(key);
          }

          @Override
          public QueryDeployedModels setOauthToken(java.lang.String oauthToken) {
            return (QueryDeployedModels) super.setOauthToken(oauthToken);
          }

          @Override
          public QueryDeployedModels setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (QueryDeployedModels) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public QueryDeployedModels setQuotaUser(java.lang.String quotaUser) {
            return (QueryDeployedModels) super.setQuotaUser(quotaUser);
          }

          @Override
          public QueryDeployedModels setUploadType(java.lang.String uploadType) {
            return (QueryDeployedModels) super.setUploadType(uploadType);
          }

          @Override
          public QueryDeployedModels setUploadProtocol(java.lang.String uploadProtocol) {
            return (QueryDeployedModels) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the target DeploymentResourcePool to query. Format: `projects/{pr
           * oject}/locations/{location}/deploymentResourcePools/{deployment_resource_pool}`
           */
          @com.google.api.client.util.Key
          private java.lang.String deploymentResourcePool;

          /** Required. The name of the target DeploymentResourcePool to query. Format:
         `projects/{project}/locations/{location}/deploymentResourcePools/{deployment_resource_pool}`
           */
          public java.lang.String getDeploymentResourcePool() {
            return deploymentResourcePool;
          }

          /**
           * Required. The name of the target DeploymentResourcePool to query. Format: `projects/{pr
           * oject}/locations/{location}/deploymentResourcePools/{deployment_resource_pool}`
           */
          public QueryDeployedModels setDeploymentResourcePool(java.lang.String deploymentResourcePool) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(DEPLOYMENT_RESOURCE_POOL_PATTERN.matcher(deploymentResourcePool).matches(),
                  "Parameter deploymentResourcePool must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/deploymentResourcePools/[^/]+$");
            }
            this.deploymentResourcePool = deploymentResourcePool;
            return this;
          }

          /**
           * The maximum number of DeployedModels to return. The service may return fewer than this
           * value.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The maximum number of DeployedModels to return. The service may return fewer than this value.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * The maximum number of DeployedModels to return. The service may return fewer than this
           * value.
           */
          public QueryDeployedModels setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * A page token, received from a previous `QueryDeployedModels` call. Provide this to
           * retrieve the subsequent page. When paginating, all other parameters provided to
           * `QueryDeployedModels` must match the call that provided the page token.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** A page token, received from a previous `QueryDeployedModels` call. Provide this to retrieve the
         subsequent page. When paginating, all other parameters provided to `QueryDeployedModels` must match
         the call that provided the page token.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * A page token, received from a previous `QueryDeployedModels` call. Provide this to
           * retrieve the subsequent page. When paginating, all other parameters provided to
           * `QueryDeployedModels` must match the call that provided the page token.
           */
          public QueryDeployedModels setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public QueryDeployedModels set(String parameterName, Object value) {
            return (QueryDeployedModels) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the Operations collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Aiplatform aiplatform = new Aiplatform(...);}
         *   {@code Aiplatform.Operations.List request = aiplatform.operations().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Operations operations() {
          return new Operations();
        }

        /**
         * The "operations" collection of methods.
         */
        public class Operations {

          /**
           * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
           * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
           * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
           * methods to check whether the cancellation succeeded or whether the operation completed despite
           * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
           * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
           * `Code.CANCELLED`.
           *
           * Create a request for the method "operations.cancel".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource to be cancelled.
           * @return the request
           */
          public Cancel cancel(java.lang.String name) throws java.io.IOException {
            Cancel result = new Cancel(name);
            initialize(result);
            return result;
          }

          public class Cancel extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

            private static final String REST_PATH = "v1/{+name}:cancel";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/deploymentResourcePools/[^/]+/operations/[^/]+$");

            /**
             * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
             * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
             * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
             * methods to check whether the cancellation succeeded or whether the operation completed despite
             * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
             * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
             * `Code.CANCELLED`.
             *
             * Create a request for the method "operations.cancel".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
             * <p> {@link
             * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource to be cancelled.
             * @since 1.13
             */
            protected Cancel(java.lang.String name) {
              super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/deploymentResourcePools/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public Cancel set$Xgafv(java.lang.String $Xgafv) {
              return (Cancel) super.set$Xgafv($Xgafv);
            }

            @Override
            public Cancel setAccessToken(java.lang.String accessToken) {
              return (Cancel) super.setAccessToken(accessToken);
            }

            @Override
            public Cancel setAlt(java.lang.String alt) {
              return (Cancel) super.setAlt(alt);
            }

            @Override
            public Cancel setCallback(java.lang.String callback) {
              return (Cancel) super.setCallback(callback);
            }

            @Override
            public Cancel setFields(java.lang.String fields) {
              return (Cancel) super.setFields(fields);
            }

            @Override
            public Cancel setKey(java.lang.String key) {
              return (Cancel) super.setKey(key);
            }

            @Override
            public Cancel setOauthToken(java.lang.String oauthToken) {
              return (Cancel) super.setOauthToken(oauthToken);
            }

            @Override
            public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Cancel) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Cancel setQuotaUser(java.lang.String quotaUser) {
              return (Cancel) super.setQuotaUser(quotaUser);
            }

            @Override
            public Cancel setUploadType(java.lang.String uploadType) {
              return (Cancel) super.setUploadType(uploadType);
            }

            @Override
            public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
              return (Cancel) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource to be cancelled. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource to be cancelled.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource to be cancelled. */
            public Cancel setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/deploymentResourcePools/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Cancel set(String parameterName, Object value) {
              return (Cancel) super.set(parameterName, value);
            }
          }
          /**
           * Deletes a long-running operation. This method indicates that the client is no longer interested
           * in the operation result. It does not cancel the operation. If the server doesn't support this
           * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.delete".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource to be deleted.
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/deploymentResourcePools/[^/]+/operations/[^/]+$");

            /**
             * Deletes a long-running operation. This method indicates that the client is no longer interested
             * in the operation result. It does not cancel the operation. If the server doesn't support this
             * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.delete".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource to be deleted.
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/deploymentResourcePools/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource to be deleted. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource to be deleted.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource to be deleted. */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/deploymentResourcePools/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Gets the latest state of a long-running operation. Clients can use this method to poll the
           * operation result at intervals as recommended by the API service.
           *
           * Create a request for the method "operations.get".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource.
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/deploymentResourcePools/[^/]+/operations/[^/]+$");

            /**
             * Gets the latest state of a long-running operation. Clients can use this method to poll the
             * operation result at intervals as recommended by the API service.
             *
             * Create a request for the method "operations.get".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource.
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/deploymentResourcePools/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource. */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/deploymentResourcePools/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Lists operations that match the specified filter in the request. If the server doesn't support
           * this method, it returns `UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.list".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation's parent resource.
           * @return the request
           */
          public List list(java.lang.String name) throws java.io.IOException {
            List result = new List(name);
            initialize(result);
            return result;
          }

          public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse> {

            private static final String REST_PATH = "v1/{+name}/operations";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/deploymentResourcePools/[^/]+$");

            /**
             * Lists operations that match the specified filter in the request. If the server doesn't support
             * this method, it returns `UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.list".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation's parent resource.
             * @since 1.13
             */
            protected List(java.lang.String name) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/deploymentResourcePools/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation's parent resource. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation's parent resource.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation's parent resource. */
            public List setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/deploymentResourcePools/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /** The standard list filter. */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** The standard list filter.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /** The standard list filter. */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /** The standard list page size. */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** The standard list page size.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /** The standard list page size. */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** The standard list page token. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** The standard list page token.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** The standard list page token. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Waits until the specified long-running operation is done or reaches at most a specified timeout,
           * returning the latest state. If the operation is already done, the latest state is immediately
           * returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC
           * timeout is used. If the server does not support this method, it returns
           * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
           * the latest state before the specified timeout (including immediately), meaning even an immediate
           * response is no guarantee that the operation is done.
           *
           * Create a request for the method "operations.wait".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Wait#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource to wait on.
           * @return the request
           */
          public Wait wait(java.lang.String name) throws java.io.IOException {
            Wait result = new Wait(name);
            initialize(result);
            return result;
          }

          public class Wait extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+name}:wait";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/deploymentResourcePools/[^/]+/operations/[^/]+$");

            /**
             * Waits until the specified long-running operation is done or reaches at most a specified
             * timeout, returning the latest state. If the operation is already done, the latest state is
             * immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout,
             * the HTTP/RPC timeout is used. If the server does not support this method, it returns
             * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
             * the latest state before the specified timeout (including immediately), meaning even an
             * immediate response is no guarantee that the operation is done.
             *
             * Create a request for the method "operations.wait".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Wait#execute()} method to invoke the remote operation. <p>
             * {@link Wait#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource to wait on.
             * @since 1.13
             */
            protected Wait(java.lang.String name) {
              super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/deploymentResourcePools/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public Wait set$Xgafv(java.lang.String $Xgafv) {
              return (Wait) super.set$Xgafv($Xgafv);
            }

            @Override
            public Wait setAccessToken(java.lang.String accessToken) {
              return (Wait) super.setAccessToken(accessToken);
            }

            @Override
            public Wait setAlt(java.lang.String alt) {
              return (Wait) super.setAlt(alt);
            }

            @Override
            public Wait setCallback(java.lang.String callback) {
              return (Wait) super.setCallback(callback);
            }

            @Override
            public Wait setFields(java.lang.String fields) {
              return (Wait) super.setFields(fields);
            }

            @Override
            public Wait setKey(java.lang.String key) {
              return (Wait) super.setKey(key);
            }

            @Override
            public Wait setOauthToken(java.lang.String oauthToken) {
              return (Wait) super.setOauthToken(oauthToken);
            }

            @Override
            public Wait setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Wait) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Wait setQuotaUser(java.lang.String quotaUser) {
              return (Wait) super.setQuotaUser(quotaUser);
            }

            @Override
            public Wait setUploadType(java.lang.String uploadType) {
              return (Wait) super.setUploadType(uploadType);
            }

            @Override
            public Wait setUploadProtocol(java.lang.String uploadProtocol) {
              return (Wait) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource to wait on. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource to wait on.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource to wait on. */
            public Wait setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/deploymentResourcePools/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * The maximum duration to wait before timing out. If left blank, the wait will be at
             * most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline
             * is also specified, the shorter one will be used.
             */
            @com.google.api.client.util.Key
            private String timeout;

            /** The maximum duration to wait before timing out. If left blank, the wait will be at most the time
           permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the
           shorter one will be used.
             */
            public String getTimeout() {
              return timeout;
            }

            /**
             * The maximum duration to wait before timing out. If left blank, the wait will be at
             * most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline
             * is also specified, the shorter one will be used.
             */
            public Wait setTimeout(String timeout) {
              this.timeout = timeout;
              return this;
            }

            @Override
            public Wait set(String parameterName, Object value) {
              return (Wait) super.set(parameterName, value);
            }
          }

        }
      }
      /**
       * An accessor for creating requests from the Endpoints collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Aiplatform aiplatform = new Aiplatform(...);}
       *   {@code Aiplatform.Endpoints.List request = aiplatform.endpoints().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Endpoints endpoints() {
        return new Endpoints();
      }

      /**
       * The "endpoints" collection of methods.
       */
      public class Endpoints {

        /**
         * Return a list of tokens based on the input text.
         *
         * Create a request for the method "endpoints.computeTokens".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link ComputeTokens#execute()} method to invoke the remote operation.
         *
         * @param endpoint Required. The name of the Endpoint requested to get lists of tokens and token ids.
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ComputeTokensRequest}
         * @return the request
         */
        public ComputeTokens computeTokens(java.lang.String endpoint, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ComputeTokensRequest content) throws java.io.IOException {
          ComputeTokens result = new ComputeTokens(endpoint, content);
          initialize(result);
          return result;
        }

        public class ComputeTokens extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ComputeTokensResponse> {

          private static final String REST_PATH = "v1/{+endpoint}:computeTokens";

          private final java.util.regex.Pattern ENDPOINT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/endpoints/[^/]+$");

          /**
           * Return a list of tokens based on the input text.
           *
           * Create a request for the method "endpoints.computeTokens".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link ComputeTokens#execute()} method to invoke the remote
           * operation. <p> {@link ComputeTokens#initialize(com.google.api.client.googleapis.services.Abstra
           * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
           * the constructor. </p>
           *
           * @param endpoint Required. The name of the Endpoint requested to get lists of tokens and token ids.
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ComputeTokensRequest}
           * @since 1.13
           */
          protected ComputeTokens(java.lang.String endpoint, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ComputeTokensRequest content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ComputeTokensResponse.class);
            this.endpoint = com.google.api.client.util.Preconditions.checkNotNull(endpoint, "Required parameter endpoint must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(ENDPOINT_PATTERN.matcher(endpoint).matches(),
                  "Parameter endpoint must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/endpoints/[^/]+$");
            }
          }

          @Override
          public ComputeTokens set$Xgafv(java.lang.String $Xgafv) {
            return (ComputeTokens) super.set$Xgafv($Xgafv);
          }

          @Override
          public ComputeTokens setAccessToken(java.lang.String accessToken) {
            return (ComputeTokens) super.setAccessToken(accessToken);
          }

          @Override
          public ComputeTokens setAlt(java.lang.String alt) {
            return (ComputeTokens) super.setAlt(alt);
          }

          @Override
          public ComputeTokens setCallback(java.lang.String callback) {
            return (ComputeTokens) super.setCallback(callback);
          }

          @Override
          public ComputeTokens setFields(java.lang.String fields) {
            return (ComputeTokens) super.setFields(fields);
          }

          @Override
          public ComputeTokens setKey(java.lang.String key) {
            return (ComputeTokens) super.setKey(key);
          }

          @Override
          public ComputeTokens setOauthToken(java.lang.String oauthToken) {
            return (ComputeTokens) super.setOauthToken(oauthToken);
          }

          @Override
          public ComputeTokens setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (ComputeTokens) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public ComputeTokens setQuotaUser(java.lang.String quotaUser) {
            return (ComputeTokens) super.setQuotaUser(quotaUser);
          }

          @Override
          public ComputeTokens setUploadType(java.lang.String uploadType) {
            return (ComputeTokens) super.setUploadType(uploadType);
          }

          @Override
          public ComputeTokens setUploadProtocol(java.lang.String uploadProtocol) {
            return (ComputeTokens) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The name of the Endpoint requested to get lists of tokens and token ids. */
          @com.google.api.client.util.Key
          private java.lang.String endpoint;

          /** Required. The name of the Endpoint requested to get lists of tokens and token ids.
           */
          public java.lang.String getEndpoint() {
            return endpoint;
          }

          /** Required. The name of the Endpoint requested to get lists of tokens and token ids. */
          public ComputeTokens setEndpoint(java.lang.String endpoint) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(ENDPOINT_PATTERN.matcher(endpoint).matches(),
                  "Parameter endpoint must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/endpoints/[^/]+$");
            }
            this.endpoint = endpoint;
            return this;
          }

          @Override
          public ComputeTokens set(String parameterName, Object value) {
            return (ComputeTokens) super.set(parameterName, value);
          }
        }
        /**
         * Perform a token counting.
         *
         * Create a request for the method "endpoints.countTokens".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link CountTokens#execute()} method to invoke the remote operation.
         *
         * @param endpoint Required. The name of the Endpoint requested to perform token counting. Format:
         *        `projects/{project}/locations/{location}/endpoints/{endpoint}`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CountTokensRequest}
         * @return the request
         */
        public CountTokens countTokens(java.lang.String endpoint, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CountTokensRequest content) throws java.io.IOException {
          CountTokens result = new CountTokens(endpoint, content);
          initialize(result);
          return result;
        }

        public class CountTokens extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CountTokensResponse> {

          private static final String REST_PATH = "v1/{+endpoint}:countTokens";

          private final java.util.regex.Pattern ENDPOINT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/endpoints/[^/]+$");

          /**
           * Perform a token counting.
           *
           * Create a request for the method "endpoints.countTokens".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link CountTokens#execute()} method to invoke the remote
           * operation. <p> {@link
           * CountTokens#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param endpoint Required. The name of the Endpoint requested to perform token counting. Format:
         *        `projects/{project}/locations/{location}/endpoints/{endpoint}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CountTokensRequest}
           * @since 1.13
           */
          protected CountTokens(java.lang.String endpoint, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CountTokensRequest content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CountTokensResponse.class);
            this.endpoint = com.google.api.client.util.Preconditions.checkNotNull(endpoint, "Required parameter endpoint must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(ENDPOINT_PATTERN.matcher(endpoint).matches(),
                  "Parameter endpoint must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/endpoints/[^/]+$");
            }
          }

          @Override
          public CountTokens set$Xgafv(java.lang.String $Xgafv) {
            return (CountTokens) super.set$Xgafv($Xgafv);
          }

          @Override
          public CountTokens setAccessToken(java.lang.String accessToken) {
            return (CountTokens) super.setAccessToken(accessToken);
          }

          @Override
          public CountTokens setAlt(java.lang.String alt) {
            return (CountTokens) super.setAlt(alt);
          }

          @Override
          public CountTokens setCallback(java.lang.String callback) {
            return (CountTokens) super.setCallback(callback);
          }

          @Override
          public CountTokens setFields(java.lang.String fields) {
            return (CountTokens) super.setFields(fields);
          }

          @Override
          public CountTokens setKey(java.lang.String key) {
            return (CountTokens) super.setKey(key);
          }

          @Override
          public CountTokens setOauthToken(java.lang.String oauthToken) {
            return (CountTokens) super.setOauthToken(oauthToken);
          }

          @Override
          public CountTokens setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (CountTokens) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public CountTokens setQuotaUser(java.lang.String quotaUser) {
            return (CountTokens) super.setQuotaUser(quotaUser);
          }

          @Override
          public CountTokens setUploadType(java.lang.String uploadType) {
            return (CountTokens) super.setUploadType(uploadType);
          }

          @Override
          public CountTokens setUploadProtocol(java.lang.String uploadProtocol) {
            return (CountTokens) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the Endpoint requested to perform token counting. Format:
           * `projects/{project}/locations/{location}/endpoints/{endpoint}`
           */
          @com.google.api.client.util.Key
          private java.lang.String endpoint;

          /** Required. The name of the Endpoint requested to perform token counting. Format:
         `projects/{project}/locations/{location}/endpoints/{endpoint}`
           */
          public java.lang.String getEndpoint() {
            return endpoint;
          }

          /**
           * Required. The name of the Endpoint requested to perform token counting. Format:
           * `projects/{project}/locations/{location}/endpoints/{endpoint}`
           */
          public CountTokens setEndpoint(java.lang.String endpoint) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(ENDPOINT_PATTERN.matcher(endpoint).matches(),
                  "Parameter endpoint must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/endpoints/[^/]+$");
            }
            this.endpoint = endpoint;
            return this;
          }

          @Override
          public CountTokens set(String parameterName, Object value) {
            return (CountTokens) super.set(parameterName, value);
          }
        }
        /**
         * Creates an Endpoint.
         *
         * Create a request for the method "endpoints.create".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The resource name of the Location to create the Endpoint in. Format:
         *        `projects/{project}/locations/{location}`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Endpoint}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Endpoint content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+parent}/endpoints";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Creates an Endpoint.
           *
           * Create a request for the method "endpoints.create".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The resource name of the Location to create the Endpoint in. Format:
         *        `projects/{project}/locations/{location}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Endpoint}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Endpoint content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the Location to create the Endpoint in. Format:
           * `projects/{project}/locations/{location}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The resource name of the Location to create the Endpoint in. Format:
         `projects/{project}/locations/{location}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The resource name of the Location to create the Endpoint in. Format:
           * `projects/{project}/locations/{location}`
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Immutable. The ID to use for endpoint, which will become the final component of the
           * endpoint resource name. If not provided, Vertex AI will generate a value for this ID.
           * If the first character is a letter, this value may be up to 63 characters, and valid
           * characters are `[a-z0-9-]`. The last character must be a letter or number. If the first
           * character is a number, this value may be up to 9 characters, and valid characters are
           * `[0-9]` with no leading zeros. When using HTTP/JSON, this field is populated based on a
           * query string argument, such as `?endpoint_id=12345`. This is the fallback for fields
           * that are not included in either the URI or the body.
           */
          @com.google.api.client.util.Key
          private java.lang.String endpointId;

          /** Immutable. The ID to use for endpoint, which will become the final component of the endpoint
         resource name. If not provided, Vertex AI will generate a value for this ID. If the first character
         is a letter, this value may be up to 63 characters, and valid characters are `[a-z0-9-]`. The last
         character must be a letter or number. If the first character is a number, this value may be up to 9
         characters, and valid characters are `[0-9]` with no leading zeros. When using HTTP/JSON, this
         field is populated based on a query string argument, such as `?endpoint_id=12345`. This is the
         fallback for fields that are not included in either the URI or the body.
           */
          public java.lang.String getEndpointId() {
            return endpointId;
          }

          /**
           * Immutable. The ID to use for endpoint, which will become the final component of the
           * endpoint resource name. If not provided, Vertex AI will generate a value for this ID.
           * If the first character is a letter, this value may be up to 63 characters, and valid
           * characters are `[a-z0-9-]`. The last character must be a letter or number. If the first
           * character is a number, this value may be up to 9 characters, and valid characters are
           * `[0-9]` with no leading zeros. When using HTTP/JSON, this field is populated based on a
           * query string argument, such as `?endpoint_id=12345`. This is the fallback for fields
           * that are not included in either the URI or the body.
           */
          public Create setEndpointId(java.lang.String endpointId) {
            this.endpointId = endpointId;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes an Endpoint.
         *
         * Create a request for the method "endpoints.delete".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the Endpoint resource to be deleted. Format:
         *        `projects/{project}/locations/{location}/endpoints/{endpoint}`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/endpoints/[^/]+$");

          /**
           * Deletes an Endpoint.
           *
           * Create a request for the method "endpoints.delete".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the Endpoint resource to be deleted. Format:
         *        `projects/{project}/locations/{location}/endpoints/{endpoint}`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/endpoints/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the Endpoint resource to be deleted. Format:
           * `projects/{project}/locations/{location}/endpoints/{endpoint}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the Endpoint resource to be deleted. Format:
         `projects/{project}/locations/{location}/endpoints/{endpoint}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the Endpoint resource to be deleted. Format:
           * `projects/{project}/locations/{location}/endpoints/{endpoint}`
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/endpoints/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Deploys a Model into this Endpoint, creating a DeployedModel within it.
         *
         * Create a request for the method "endpoints.deployModel".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link DeployModel#execute()} method to invoke the remote operation.
         *
         * @param endpoint Required. The name of the Endpoint resource into which to deploy a Model. Format:
         *        `projects/{project}/locations/{location}/endpoints/{endpoint}`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1DeployModelRequest}
         * @return the request
         */
        public DeployModel deployModel(java.lang.String endpoint, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1DeployModelRequest content) throws java.io.IOException {
          DeployModel result = new DeployModel(endpoint, content);
          initialize(result);
          return result;
        }

        public class DeployModel extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+endpoint}:deployModel";

          private final java.util.regex.Pattern ENDPOINT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/endpoints/[^/]+$");

          /**
           * Deploys a Model into this Endpoint, creating a DeployedModel within it.
           *
           * Create a request for the method "endpoints.deployModel".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link DeployModel#execute()} method to invoke the remote
           * operation. <p> {@link
           * DeployModel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param endpoint Required. The name of the Endpoint resource into which to deploy a Model. Format:
         *        `projects/{project}/locations/{location}/endpoints/{endpoint}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1DeployModelRequest}
           * @since 1.13
           */
          protected DeployModel(java.lang.String endpoint, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1DeployModelRequest content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
            this.endpoint = com.google.api.client.util.Preconditions.checkNotNull(endpoint, "Required parameter endpoint must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(ENDPOINT_PATTERN.matcher(endpoint).matches(),
                  "Parameter endpoint must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/endpoints/[^/]+$");
            }
          }

          @Override
          public DeployModel set$Xgafv(java.lang.String $Xgafv) {
            return (DeployModel) super.set$Xgafv($Xgafv);
          }

          @Override
          public DeployModel setAccessToken(java.lang.String accessToken) {
            return (DeployModel) super.setAccessToken(accessToken);
          }

          @Override
          public DeployModel setAlt(java.lang.String alt) {
            return (DeployModel) super.setAlt(alt);
          }

          @Override
          public DeployModel setCallback(java.lang.String callback) {
            return (DeployModel) super.setCallback(callback);
          }

          @Override
          public DeployModel setFields(java.lang.String fields) {
            return (DeployModel) super.setFields(fields);
          }

          @Override
          public DeployModel setKey(java.lang.String key) {
            return (DeployModel) super.setKey(key);
          }

          @Override
          public DeployModel setOauthToken(java.lang.String oauthToken) {
            return (DeployModel) super.setOauthToken(oauthToken);
          }

          @Override
          public DeployModel setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (DeployModel) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public DeployModel setQuotaUser(java.lang.String quotaUser) {
            return (DeployModel) super.setQuotaUser(quotaUser);
          }

          @Override
          public DeployModel setUploadType(java.lang.String uploadType) {
            return (DeployModel) super.setUploadType(uploadType);
          }

          @Override
          public DeployModel setUploadProtocol(java.lang.String uploadProtocol) {
            return (DeployModel) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the Endpoint resource into which to deploy a Model. Format:
           * `projects/{project}/locations/{location}/endpoints/{endpoint}`
           */
          @com.google.api.client.util.Key
          private java.lang.String endpoint;

          /** Required. The name of the Endpoint resource into which to deploy a Model. Format:
         `projects/{project}/locations/{location}/endpoints/{endpoint}`
           */
          public java.lang.String getEndpoint() {
            return endpoint;
          }

          /**
           * Required. The name of the Endpoint resource into which to deploy a Model. Format:
           * `projects/{project}/locations/{location}/endpoints/{endpoint}`
           */
          public DeployModel setEndpoint(java.lang.String endpoint) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(ENDPOINT_PATTERN.matcher(endpoint).matches(),
                  "Parameter endpoint must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/endpoints/[^/]+$");
            }
            this.endpoint = endpoint;
            return this;
          }

          @Override
          public DeployModel set(String parameterName, Object value) {
            return (DeployModel) super.set(parameterName, value);
          }
        }
        /**
         * Perform an unary online prediction request to a gRPC model server for Vertex first-party products
         * and frameworks.
         *
         * Create a request for the method "endpoints.directPredict".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link DirectPredict#execute()} method to invoke the remote operation.
         *
         * @param endpoint Required. The name of the Endpoint requested to serve the prediction. Format:
         *        `projects/{project}/locations/{location}/endpoints/{endpoint}`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1DirectPredictRequest}
         * @return the request
         */
        public DirectPredict directPredict(java.lang.String endpoint, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1DirectPredictRequest content) throws java.io.IOException {
          DirectPredict result = new DirectPredict(endpoint, content);
          initialize(result);
          return result;
        }

        public class DirectPredict extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1DirectPredictResponse> {

          private static final String REST_PATH = "v1/{+endpoint}:directPredict";

          private final java.util.regex.Pattern ENDPOINT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/endpoints/[^/]+$");

          /**
           * Perform an unary online prediction request to a gRPC model server for Vertex first-party
           * products and frameworks.
           *
           * Create a request for the method "endpoints.directPredict".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link DirectPredict#execute()} method to invoke the remote
           * operation. <p> {@link DirectPredict#initialize(com.google.api.client.googleapis.services.Abstra
           * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
           * the constructor. </p>
           *
           * @param endpoint Required. The name of the Endpoint requested to serve the prediction. Format:
         *        `projects/{project}/locations/{location}/endpoints/{endpoint}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1DirectPredictRequest}
           * @since 1.13
           */
          protected DirectPredict(java.lang.String endpoint, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1DirectPredictRequest content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1DirectPredictResponse.class);
            this.endpoint = com.google.api.client.util.Preconditions.checkNotNull(endpoint, "Required parameter endpoint must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(ENDPOINT_PATTERN.matcher(endpoint).matches(),
                  "Parameter endpoint must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/endpoints/[^/]+$");
            }
          }

          @Override
          public DirectPredict set$Xgafv(java.lang.String $Xgafv) {
            return (DirectPredict) super.set$Xgafv($Xgafv);
          }

          @Override
          public DirectPredict setAccessToken(java.lang.String accessToken) {
            return (DirectPredict) super.setAccessToken(accessToken);
          }

          @Override
          public DirectPredict setAlt(java.lang.String alt) {
            return (DirectPredict) super.setAlt(alt);
          }

          @Override
          public DirectPredict setCallback(java.lang.String callback) {
            return (DirectPredict) super.setCallback(callback);
          }

          @Override
          public DirectPredict setFields(java.lang.String fields) {
            return (DirectPredict) super.setFields(fields);
          }

          @Override
          public DirectPredict setKey(java.lang.String key) {
            return (DirectPredict) super.setKey(key);
          }

          @Override
          public DirectPredict setOauthToken(java.lang.String oauthToken) {
            return (DirectPredict) super.setOauthToken(oauthToken);
          }

          @Override
          public DirectPredict setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (DirectPredict) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public DirectPredict setQuotaUser(java.lang.String quotaUser) {
            return (DirectPredict) super.setQuotaUser(quotaUser);
          }

          @Override
          public DirectPredict setUploadType(java.lang.String uploadType) {
            return (DirectPredict) super.setUploadType(uploadType);
          }

          @Override
          public DirectPredict setUploadProtocol(java.lang.String uploadProtocol) {
            return (DirectPredict) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the Endpoint requested to serve the prediction. Format:
           * `projects/{project}/locations/{location}/endpoints/{endpoint}`
           */
          @com.google.api.client.util.Key
          private java.lang.String endpoint;

          /** Required. The name of the Endpoint requested to serve the prediction. Format:
         `projects/{project}/locations/{location}/endpoints/{endpoint}`
           */
          public java.lang.String getEndpoint() {
            return endpoint;
          }

          /**
           * Required. The name of the Endpoint requested to serve the prediction. Format:
           * `projects/{project}/locations/{location}/endpoints/{endpoint}`
           */
          public DirectPredict setEndpoint(java.lang.String endpoint) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(ENDPOINT_PATTERN.matcher(endpoint).matches(),
                  "Parameter endpoint must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/endpoints/[^/]+$");
            }
            this.endpoint = endpoint;
            return this;
          }

          @Override
          public DirectPredict set(String parameterName, Object value) {
            return (DirectPredict) super.set(parameterName, value);
          }
        }
        /**
         * Perform an unary online prediction request to a gRPC model server for custom containers.
         *
         * Create a request for the method "endpoints.directRawPredict".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link DirectRawPredict#execute()} method to invoke the remote operation.
         *
         * @param endpoint Required. The name of the Endpoint requested to serve the prediction. Format:
         *        `projects/{project}/locations/{location}/endpoints/{endpoint}`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1DirectRawPredictRequest}
         * @return the request
         */
        public DirectRawPredict directRawPredict(java.lang.String endpoint, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1DirectRawPredictRequest content) throws java.io.IOException {
          DirectRawPredict result = new DirectRawPredict(endpoint, content);
          initialize(result);
          return result;
        }

        public class DirectRawPredict extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1DirectRawPredictResponse> {

          private static final String REST_PATH = "v1/{+endpoint}:directRawPredict";

          private final java.util.regex.Pattern ENDPOINT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/endpoints/[^/]+$");

          /**
           * Perform an unary online prediction request to a gRPC model server for custom containers.
           *
           * Create a request for the method "endpoints.directRawPredict".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link DirectRawPredict#execute()} method to invoke the remote
           * operation. <p> {@link DirectRawPredict#initialize(com.google.api.client.googleapis.services.Abs
           * tractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param endpoint Required. The name of the Endpoint requested to serve the prediction. Format:
         *        `projects/{project}/locations/{location}/endpoints/{endpoint}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1DirectRawPredictRequest}
           * @since 1.13
           */
          protected DirectRawPredict(java.lang.String endpoint, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1DirectRawPredictRequest content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1DirectRawPredictResponse.class);
            this.endpoint = com.google.api.client.util.Preconditions.checkNotNull(endpoint, "Required parameter endpoint must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(ENDPOINT_PATTERN.matcher(endpoint).matches(),
                  "Parameter endpoint must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/endpoints/[^/]+$");
            }
          }

          @Override
          public DirectRawPredict set$Xgafv(java.lang.String $Xgafv) {
            return (DirectRawPredict) super.set$Xgafv($Xgafv);
          }

          @Override
          public DirectRawPredict setAccessToken(java.lang.String accessToken) {
            return (DirectRawPredict) super.setAccessToken(accessToken);
          }

          @Override
          public DirectRawPredict setAlt(java.lang.String alt) {
            return (DirectRawPredict) super.setAlt(alt);
          }

          @Override
          public DirectRawPredict setCallback(java.lang.String callback) {
            return (DirectRawPredict) super.setCallback(callback);
          }

          @Override
          public DirectRawPredict setFields(java.lang.String fields) {
            return (DirectRawPredict) super.setFields(fields);
          }

          @Override
          public DirectRawPredict setKey(java.lang.String key) {
            return (DirectRawPredict) super.setKey(key);
          }

          @Override
          public DirectRawPredict setOauthToken(java.lang.String oauthToken) {
            return (DirectRawPredict) super.setOauthToken(oauthToken);
          }

          @Override
          public DirectRawPredict setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (DirectRawPredict) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public DirectRawPredict setQuotaUser(java.lang.String quotaUser) {
            return (DirectRawPredict) super.setQuotaUser(quotaUser);
          }

          @Override
          public DirectRawPredict setUploadType(java.lang.String uploadType) {
            return (DirectRawPredict) super.setUploadType(uploadType);
          }

          @Override
          public DirectRawPredict setUploadProtocol(java.lang.String uploadProtocol) {
            return (DirectRawPredict) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the Endpoint requested to serve the prediction. Format:
           * `projects/{project}/locations/{location}/endpoints/{endpoint}`
           */
          @com.google.api.client.util.Key
          private java.lang.String endpoint;

          /** Required. The name of the Endpoint requested to serve the prediction. Format:
         `projects/{project}/locations/{location}/endpoints/{endpoint}`
           */
          public java.lang.String getEndpoint() {
            return endpoint;
          }

          /**
           * Required. The name of the Endpoint requested to serve the prediction. Format:
           * `projects/{project}/locations/{location}/endpoints/{endpoint}`
           */
          public DirectRawPredict setEndpoint(java.lang.String endpoint) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(ENDPOINT_PATTERN.matcher(endpoint).matches(),
                  "Parameter endpoint must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/endpoints/[^/]+$");
            }
            this.endpoint = endpoint;
            return this;
          }

          @Override
          public DirectRawPredict set(String parameterName, Object value) {
            return (DirectRawPredict) super.set(parameterName, value);
          }
        }
        /**
         * Perform an online explanation. If deployed_model_id is specified, the corresponding DeployModel
         * must have explanation_spec populated. If deployed_model_id is not specified, all DeployedModels
         * must have explanation_spec populated.
         *
         * Create a request for the method "endpoints.explain".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Explain#execute()} method to invoke the remote operation.
         *
         * @param endpoint Required. The name of the Endpoint requested to serve the explanation. Format:
         *        `projects/{project}/locations/{location}/endpoints/{endpoint}`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ExplainRequest}
         * @return the request
         */
        public Explain explain(java.lang.String endpoint, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ExplainRequest content) throws java.io.IOException {
          Explain result = new Explain(endpoint, content);
          initialize(result);
          return result;
        }

        public class Explain extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ExplainResponse> {

          private static final String REST_PATH = "v1/{+endpoint}:explain";

          private final java.util.regex.Pattern ENDPOINT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/endpoints/[^/]+$");

          /**
           * Perform an online explanation. If deployed_model_id is specified, the corresponding DeployModel
           * must have explanation_spec populated. If deployed_model_id is not specified, all DeployedModels
           * must have explanation_spec populated.
           *
           * Create a request for the method "endpoints.explain".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Explain#execute()} method to invoke the remote operation.
           * <p> {@link
           * Explain#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param endpoint Required. The name of the Endpoint requested to serve the explanation. Format:
         *        `projects/{project}/locations/{location}/endpoints/{endpoint}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ExplainRequest}
           * @since 1.13
           */
          protected Explain(java.lang.String endpoint, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ExplainRequest content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ExplainResponse.class);
            this.endpoint = com.google.api.client.util.Preconditions.checkNotNull(endpoint, "Required parameter endpoint must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(ENDPOINT_PATTERN.matcher(endpoint).matches(),
                  "Parameter endpoint must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/endpoints/[^/]+$");
            }
          }

          @Override
          public Explain set$Xgafv(java.lang.String $Xgafv) {
            return (Explain) super.set$Xgafv($Xgafv);
          }

          @Override
          public Explain setAccessToken(java.lang.String accessToken) {
            return (Explain) super.setAccessToken(accessToken);
          }

          @Override
          public Explain setAlt(java.lang.String alt) {
            return (Explain) super.setAlt(alt);
          }

          @Override
          public Explain setCallback(java.lang.String callback) {
            return (Explain) super.setCallback(callback);
          }

          @Override
          public Explain setFields(java.lang.String fields) {
            return (Explain) super.setFields(fields);
          }

          @Override
          public Explain setKey(java.lang.String key) {
            return (Explain) super.setKey(key);
          }

          @Override
          public Explain setOauthToken(java.lang.String oauthToken) {
            return (Explain) super.setOauthToken(oauthToken);
          }

          @Override
          public Explain setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Explain) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Explain setQuotaUser(java.lang.String quotaUser) {
            return (Explain) super.setQuotaUser(quotaUser);
          }

          @Override
          public Explain setUploadType(java.lang.String uploadType) {
            return (Explain) super.setUploadType(uploadType);
          }

          @Override
          public Explain setUploadProtocol(java.lang.String uploadProtocol) {
            return (Explain) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the Endpoint requested to serve the explanation. Format:
           * `projects/{project}/locations/{location}/endpoints/{endpoint}`
           */
          @com.google.api.client.util.Key
          private java.lang.String endpoint;

          /** Required. The name of the Endpoint requested to serve the explanation. Format:
         `projects/{project}/locations/{location}/endpoints/{endpoint}`
           */
          public java.lang.String getEndpoint() {
            return endpoint;
          }

          /**
           * Required. The name of the Endpoint requested to serve the explanation. Format:
           * `projects/{project}/locations/{location}/endpoints/{endpoint}`
           */
          public Explain setEndpoint(java.lang.String endpoint) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(ENDPOINT_PATTERN.matcher(endpoint).matches(),
                  "Parameter endpoint must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/endpoints/[^/]+$");
            }
            this.endpoint = endpoint;
            return this;
          }

          @Override
          public Explain set(String parameterName, Object value) {
            return (Explain) super.set(parameterName, value);
          }
        }
        /**
         * Generate content with multimodal inputs.
         *
         * Create a request for the method "endpoints.generateContent".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link GenerateContent#execute()} method to invoke the remote operation.
         *
         * @param model Required. The fully qualified name of the publisher model or tuned model endpoint to use. Publisher
         *        model format: `projects/{project}/locations/{location}/publishers/models` Tuned model
         *        endpoint format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1GenerateContentRequest}
         * @return the request
         */
        public GenerateContent generateContent(java.lang.String model, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1GenerateContentRequest content) throws java.io.IOException {
          GenerateContent result = new GenerateContent(model, content);
          initialize(result);
          return result;
        }

        public class GenerateContent extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1GenerateContentResponse> {

          private static final String REST_PATH = "v1/{+model}:generateContent";

          private final java.util.regex.Pattern MODEL_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/endpoints/[^/]+$");

          /**
           * Generate content with multimodal inputs.
           *
           * Create a request for the method "endpoints.generateContent".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link GenerateContent#execute()} method to invoke the remote
           * operation. <p> {@link GenerateContent#initialize(com.google.api.client.googleapis.services.Abst
           * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
           * the constructor. </p>
           *
           * @param model Required. The fully qualified name of the publisher model or tuned model endpoint to use. Publisher
         *        model format: `projects/{project}/locations/{location}/publishers/models` Tuned model
         *        endpoint format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1GenerateContentRequest}
           * @since 1.13
           */
          protected GenerateContent(java.lang.String model, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1GenerateContentRequest content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1GenerateContentResponse.class);
            this.model = com.google.api.client.util.Preconditions.checkNotNull(model, "Required parameter model must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(MODEL_PATTERN.matcher(model).matches(),
                  "Parameter model must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/endpoints/[^/]+$");
            }
          }

          @Override
          public GenerateContent set$Xgafv(java.lang.String $Xgafv) {
            return (GenerateContent) super.set$Xgafv($Xgafv);
          }

          @Override
          public GenerateContent setAccessToken(java.lang.String accessToken) {
            return (GenerateContent) super.setAccessToken(accessToken);
          }

          @Override
          public GenerateContent setAlt(java.lang.String alt) {
            return (GenerateContent) super.setAlt(alt);
          }

          @Override
          public GenerateContent setCallback(java.lang.String callback) {
            return (GenerateContent) super.setCallback(callback);
          }

          @Override
          public GenerateContent setFields(java.lang.String fields) {
            return (GenerateContent) super.setFields(fields);
          }

          @Override
          public GenerateContent setKey(java.lang.String key) {
            return (GenerateContent) super.setKey(key);
          }

          @Override
          public GenerateContent setOauthToken(java.lang.String oauthToken) {
            return (GenerateContent) super.setOauthToken(oauthToken);
          }

          @Override
          public GenerateContent setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (GenerateContent) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public GenerateContent setQuotaUser(java.lang.String quotaUser) {
            return (GenerateContent) super.setQuotaUser(quotaUser);
          }

          @Override
          public GenerateContent setUploadType(java.lang.String uploadType) {
            return (GenerateContent) super.setUploadType(uploadType);
          }

          @Override
          public GenerateContent setUploadProtocol(java.lang.String uploadProtocol) {
            return (GenerateContent) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The fully qualified name of the publisher model or tuned model endpoint to
           * use. Publisher model format:
           * `projects/{project}/locations/{location}/publishers/models` Tuned model endpoint
           * format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
           */
          @com.google.api.client.util.Key
          private java.lang.String model;

          /** Required. The fully qualified name of the publisher model or tuned model endpoint to use. Publisher
         model format: `projects/{project}/locations/{location}/publishers/models` Tuned model endpoint
         format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
           */
          public java.lang.String getModel() {
            return model;
          }

          /**
           * Required. The fully qualified name of the publisher model or tuned model endpoint to
           * use. Publisher model format:
           * `projects/{project}/locations/{location}/publishers/models` Tuned model endpoint
           * format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
           */
          public GenerateContent setModel(java.lang.String model) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(MODEL_PATTERN.matcher(model).matches(),
                  "Parameter model must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/endpoints/[^/]+$");
            }
            this.model = model;
            return this;
          }

          @Override
          public GenerateContent set(String parameterName, Object value) {
            return (GenerateContent) super.set(parameterName, value);
          }
        }
        /**
         * Gets an Endpoint.
         *
         * Create a request for the method "endpoints.get".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the Endpoint resource. Format:
         *        `projects/{project}/locations/{location}/endpoints/{endpoint}`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Endpoint> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/endpoints/[^/]+$");

          /**
           * Gets an Endpoint.
           *
           * Create a request for the method "endpoints.get".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the Endpoint resource. Format:
         *        `projects/{project}/locations/{location}/endpoints/{endpoint}`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Endpoint.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/endpoints/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the Endpoint resource. Format:
           * `projects/{project}/locations/{location}/endpoints/{endpoint}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the Endpoint resource. Format:
         `projects/{project}/locations/{location}/endpoints/{endpoint}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the Endpoint resource. Format:
           * `projects/{project}/locations/{location}/endpoints/{endpoint}`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/endpoints/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists Endpoints in a Location.
         *
         * Create a request for the method "endpoints.list".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The resource name of the Location from which to list the Endpoints. Format:
         *        `projects/{project}/locations/{location}`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListEndpointsResponse> {

          private static final String REST_PATH = "v1/{+parent}/endpoints";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists Endpoints in a Location.
           *
           * Create a request for the method "endpoints.list".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The resource name of the Location from which to list the Endpoints. Format:
         *        `projects/{project}/locations/{location}`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListEndpointsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the Location from which to list the Endpoints. Format:
           * `projects/{project}/locations/{location}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The resource name of the Location from which to list the Endpoints. Format:
         `projects/{project}/locations/{location}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The resource name of the Location from which to list the Endpoints. Format:
           * `projects/{project}/locations/{location}`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Optional. An expression for filtering the results of the request. For field names both
           * snake_case and camelCase are supported. * `endpoint` supports `=` and `!=`. `endpoint`
           * represents the Endpoint ID, i.e. the last segment of the Endpoint's resource name. *
           * `display_name` supports `=` and `!=`. * `labels` supports general map functions that
           * is: * `labels.key=value` - key:value equality * `labels.key:*` or `labels:key` - key
           * existence * A key including a space must be quoted. `labels."a key"`. *
           * `base_model_name` only supports `=`. Some examples: * `endpoint=1` *
           * `displayName="myDisplayName"` * `labels.myKey="myValue"` * `baseModelName="text-bison"`
           */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** Optional. An expression for filtering the results of the request. For field names both snake_case
         and camelCase are supported. * `endpoint` supports `=` and `!=`. `endpoint` represents the Endpoint
         ID, i.e. the last segment of the Endpoint's resource name. * `display_name` supports `=` and `!=`.
         * `labels` supports general map functions that is: * `labels.key=value` - key:value equality *
         `labels.key:*` or `labels:key` - key existence * A key including a space must be quoted. `labels."a
         key"`. * `base_model_name` only supports `=`. Some examples: * `endpoint=1` *
         `displayName="myDisplayName"` * `labels.myKey="myValue"` * `baseModelName="text-bison"`
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /**
           * Optional. An expression for filtering the results of the request. For field names both
           * snake_case and camelCase are supported. * `endpoint` supports `=` and `!=`. `endpoint`
           * represents the Endpoint ID, i.e. the last segment of the Endpoint's resource name. *
           * `display_name` supports `=` and `!=`. * `labels` supports general map functions that
           * is: * `labels.key=value` - key:value equality * `labels.key:*` or `labels:key` - key
           * existence * A key including a space must be quoted. `labels."a key"`. *
           * `base_model_name` only supports `=`. Some examples: * `endpoint=1` *
           * `displayName="myDisplayName"` * `labels.myKey="myValue"` * `baseModelName="text-bison"`
           */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /**
           * A comma-separated list of fields to order by, sorted in ascending order. Use "desc"
           * after a field name for descending. Supported fields: * `display_name` * `create_time` *
           * `update_time` Example: `display_name, create_time desc`.
           */
          @com.google.api.client.util.Key
          private java.lang.String orderBy;

          /** A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field
         name for descending. Supported fields: * `display_name` * `create_time` * `update_time` Example:
         `display_name, create_time desc`.
           */
          public java.lang.String getOrderBy() {
            return orderBy;
          }

          /**
           * A comma-separated list of fields to order by, sorted in ascending order. Use "desc"
           * after a field name for descending. Supported fields: * `display_name` * `create_time` *
           * `update_time` Example: `display_name, create_time desc`.
           */
          public List setOrderBy(java.lang.String orderBy) {
            this.orderBy = orderBy;
            return this;
          }

          /** Optional. The standard list page size. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Optional. The standard list page size.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** Optional. The standard list page size. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * Optional. The standard list page token. Typically obtained via
           * ListEndpointsResponse.next_page_token of the previous EndpointService.ListEndpoints
           * call.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Optional. The standard list page token. Typically obtained via
         ListEndpointsResponse.next_page_token of the previous EndpointService.ListEndpoints call.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * Optional. The standard list page token. Typically obtained via
           * ListEndpointsResponse.next_page_token of the previous EndpointService.ListEndpoints
           * call.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          /** Optional. Mask specifying which fields to read. */
          @com.google.api.client.util.Key
          private String readMask;

          /** Optional. Mask specifying which fields to read.
           */
          public String getReadMask() {
            return readMask;
          }

          /** Optional. Mask specifying which fields to read. */
          public List setReadMask(String readMask) {
            this.readMask = readMask;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates an existing deployed model. Updatable fields include `min_replica_count`,
         * `max_replica_count`, `autoscaling_metric_specs`, `disable_container_logging` (v1 only), and
         * `enable_container_logging` (v1beta1 only).
         *
         * Create a request for the method "endpoints.mutateDeployedModel".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link MutateDeployedModel#execute()} method to invoke the remote operation.
         *
         * @param endpoint Required. The name of the Endpoint resource into which to mutate a DeployedModel. Format:
         *        `projects/{project}/locations/{location}/endpoints/{endpoint}`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1MutateDeployedModelRequest}
         * @return the request
         */
        public MutateDeployedModel mutateDeployedModel(java.lang.String endpoint, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1MutateDeployedModelRequest content) throws java.io.IOException {
          MutateDeployedModel result = new MutateDeployedModel(endpoint, content);
          initialize(result);
          return result;
        }

        public class MutateDeployedModel extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+endpoint}:mutateDeployedModel";

          private final java.util.regex.Pattern ENDPOINT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/endpoints/[^/]+$");

          /**
           * Updates an existing deployed model. Updatable fields include `min_replica_count`,
           * `max_replica_count`, `autoscaling_metric_specs`, `disable_container_logging` (v1 only), and
           * `enable_container_logging` (v1beta1 only).
           *
           * Create a request for the method "endpoints.mutateDeployedModel".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link MutateDeployedModel#execute()} method to invoke the remote
           * operation. <p> {@link MutateDeployedModel#initialize(com.google.api.client.googleapis.services.
           * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param endpoint Required. The name of the Endpoint resource into which to mutate a DeployedModel. Format:
         *        `projects/{project}/locations/{location}/endpoints/{endpoint}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1MutateDeployedModelRequest}
           * @since 1.13
           */
          protected MutateDeployedModel(java.lang.String endpoint, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1MutateDeployedModelRequest content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
            this.endpoint = com.google.api.client.util.Preconditions.checkNotNull(endpoint, "Required parameter endpoint must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(ENDPOINT_PATTERN.matcher(endpoint).matches(),
                  "Parameter endpoint must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/endpoints/[^/]+$");
            }
          }

          @Override
          public MutateDeployedModel set$Xgafv(java.lang.String $Xgafv) {
            return (MutateDeployedModel) super.set$Xgafv($Xgafv);
          }

          @Override
          public MutateDeployedModel setAccessToken(java.lang.String accessToken) {
            return (MutateDeployedModel) super.setAccessToken(accessToken);
          }

          @Override
          public MutateDeployedModel setAlt(java.lang.String alt) {
            return (MutateDeployedModel) super.setAlt(alt);
          }

          @Override
          public MutateDeployedModel setCallback(java.lang.String callback) {
            return (MutateDeployedModel) super.setCallback(callback);
          }

          @Override
          public MutateDeployedModel setFields(java.lang.String fields) {
            return (MutateDeployedModel) super.setFields(fields);
          }

          @Override
          public MutateDeployedModel setKey(java.lang.String key) {
            return (MutateDeployedModel) super.setKey(key);
          }

          @Override
          public MutateDeployedModel setOauthToken(java.lang.String oauthToken) {
            return (MutateDeployedModel) super.setOauthToken(oauthToken);
          }

          @Override
          public MutateDeployedModel setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (MutateDeployedModel) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public MutateDeployedModel setQuotaUser(java.lang.String quotaUser) {
            return (MutateDeployedModel) super.setQuotaUser(quotaUser);
          }

          @Override
          public MutateDeployedModel setUploadType(java.lang.String uploadType) {
            return (MutateDeployedModel) super.setUploadType(uploadType);
          }

          @Override
          public MutateDeployedModel setUploadProtocol(java.lang.String uploadProtocol) {
            return (MutateDeployedModel) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the Endpoint resource into which to mutate a DeployedModel.
           * Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
           */
          @com.google.api.client.util.Key
          private java.lang.String endpoint;

          /** Required. The name of the Endpoint resource into which to mutate a DeployedModel. Format:
         `projects/{project}/locations/{location}/endpoints/{endpoint}`
           */
          public java.lang.String getEndpoint() {
            return endpoint;
          }

          /**
           * Required. The name of the Endpoint resource into which to mutate a DeployedModel.
           * Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
           */
          public MutateDeployedModel setEndpoint(java.lang.String endpoint) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(ENDPOINT_PATTERN.matcher(endpoint).matches(),
                  "Parameter endpoint must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/endpoints/[^/]+$");
            }
            this.endpoint = endpoint;
            return this;
          }

          @Override
          public MutateDeployedModel set(String parameterName, Object value) {
            return (MutateDeployedModel) super.set(parameterName, value);
          }
        }
        /**
         * Updates an Endpoint.
         *
         * Create a request for the method "endpoints.patch".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Output only. The resource name of the Endpoint.
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Endpoint}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Endpoint content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Endpoint> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/endpoints/[^/]+$");

          /**
           * Updates an Endpoint.
           *
           * Create a request for the method "endpoints.patch".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           * <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Output only. The resource name of the Endpoint.
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Endpoint}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Endpoint content) {
            super(Aiplatform.this, "PATCH", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Endpoint.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/endpoints/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /** Output only. The resource name of the Endpoint. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Output only. The resource name of the Endpoint.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Output only. The resource name of the Endpoint. */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/endpoints/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /** Required. The update mask applies to the resource. See google.protobuf.FieldMask. */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Required. The update mask applies to the resource. See google.protobuf.FieldMask.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /** Required. The update mask applies to the resource. See google.protobuf.FieldMask. */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }
        /**
         * Perform an online prediction.
         *
         * Create a request for the method "endpoints.predict".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Predict#execute()} method to invoke the remote operation.
         *
         * @param endpoint Required. The name of the Endpoint requested to serve the prediction. Format:
         *        `projects/{project}/locations/{location}/endpoints/{endpoint}`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1PredictRequest}
         * @return the request
         */
        public Predict predict(java.lang.String endpoint, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1PredictRequest content) throws java.io.IOException {
          Predict result = new Predict(endpoint, content);
          initialize(result);
          return result;
        }

        public class Predict extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1PredictResponse> {

          private static final String REST_PATH = "v1/{+endpoint}:predict";

          private final java.util.regex.Pattern ENDPOINT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/endpoints/[^/]+$");

          /**
           * Perform an online prediction.
           *
           * Create a request for the method "endpoints.predict".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Predict#execute()} method to invoke the remote operation.
           * <p> {@link
           * Predict#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param endpoint Required. The name of the Endpoint requested to serve the prediction. Format:
         *        `projects/{project}/locations/{location}/endpoints/{endpoint}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1PredictRequest}
           * @since 1.13
           */
          protected Predict(java.lang.String endpoint, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1PredictRequest content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1PredictResponse.class);
            this.endpoint = com.google.api.client.util.Preconditions.checkNotNull(endpoint, "Required parameter endpoint must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(ENDPOINT_PATTERN.matcher(endpoint).matches(),
                  "Parameter endpoint must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/endpoints/[^/]+$");
            }
          }

          @Override
          public Predict set$Xgafv(java.lang.String $Xgafv) {
            return (Predict) super.set$Xgafv($Xgafv);
          }

          @Override
          public Predict setAccessToken(java.lang.String accessToken) {
            return (Predict) super.setAccessToken(accessToken);
          }

          @Override
          public Predict setAlt(java.lang.String alt) {
            return (Predict) super.setAlt(alt);
          }

          @Override
          public Predict setCallback(java.lang.String callback) {
            return (Predict) super.setCallback(callback);
          }

          @Override
          public Predict setFields(java.lang.String fields) {
            return (Predict) super.setFields(fields);
          }

          @Override
          public Predict setKey(java.lang.String key) {
            return (Predict) super.setKey(key);
          }

          @Override
          public Predict setOauthToken(java.lang.String oauthToken) {
            return (Predict) super.setOauthToken(oauthToken);
          }

          @Override
          public Predict setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Predict) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Predict setQuotaUser(java.lang.String quotaUser) {
            return (Predict) super.setQuotaUser(quotaUser);
          }

          @Override
          public Predict setUploadType(java.lang.String uploadType) {
            return (Predict) super.setUploadType(uploadType);
          }

          @Override
          public Predict setUploadProtocol(java.lang.String uploadProtocol) {
            return (Predict) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the Endpoint requested to serve the prediction. Format:
           * `projects/{project}/locations/{location}/endpoints/{endpoint}`
           */
          @com.google.api.client.util.Key
          private java.lang.String endpoint;

          /** Required. The name of the Endpoint requested to serve the prediction. Format:
         `projects/{project}/locations/{location}/endpoints/{endpoint}`
           */
          public java.lang.String getEndpoint() {
            return endpoint;
          }

          /**
           * Required. The name of the Endpoint requested to serve the prediction. Format:
           * `projects/{project}/locations/{location}/endpoints/{endpoint}`
           */
          public Predict setEndpoint(java.lang.String endpoint) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(ENDPOINT_PATTERN.matcher(endpoint).matches(),
                  "Parameter endpoint must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/endpoints/[^/]+$");
            }
            this.endpoint = endpoint;
            return this;
          }

          @Override
          public Predict set(String parameterName, Object value) {
            return (Predict) super.set(parameterName, value);
          }
        }
        /**
         * Perform an online prediction with an arbitrary HTTP payload. The response includes the following
         * HTTP headers: * `X-Vertex-AI-Endpoint-Id`: ID of the Endpoint that served this prediction. *
         * `X-Vertex-AI-Deployed-Model-Id`: ID of the Endpoint's DeployedModel that served this prediction.
         *
         * Create a request for the method "endpoints.rawPredict".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link RawPredict#execute()} method to invoke the remote operation.
         *
         * @param endpoint Required. The name of the Endpoint requested to serve the prediction. Format:
         *        `projects/{project}/locations/{location}/endpoints/{endpoint}`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1RawPredictRequest}
         * @return the request
         */
        public RawPredict rawPredict(java.lang.String endpoint, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1RawPredictRequest content) throws java.io.IOException {
          RawPredict result = new RawPredict(endpoint, content);
          initialize(result);
          return result;
        }

        public class RawPredict extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleApiHttpBody> {

          private static final String REST_PATH = "v1/{+endpoint}:rawPredict";

          private final java.util.regex.Pattern ENDPOINT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/endpoints/[^/]+$");

          /**
           * Perform an online prediction with an arbitrary HTTP payload. The response includes the
           * following HTTP headers: * `X-Vertex-AI-Endpoint-Id`: ID of the Endpoint that served this
           * prediction. * `X-Vertex-AI-Deployed-Model-Id`: ID of the Endpoint's DeployedModel that served
           * this prediction.
           *
           * Create a request for the method "endpoints.rawPredict".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link RawPredict#execute()} method to invoke the remote
           * operation. <p> {@link
           * RawPredict#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param endpoint Required. The name of the Endpoint requested to serve the prediction. Format:
         *        `projects/{project}/locations/{location}/endpoints/{endpoint}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1RawPredictRequest}
           * @since 1.13
           */
          protected RawPredict(java.lang.String endpoint, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1RawPredictRequest content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleApiHttpBody.class);
            this.endpoint = com.google.api.client.util.Preconditions.checkNotNull(endpoint, "Required parameter endpoint must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(ENDPOINT_PATTERN.matcher(endpoint).matches(),
                  "Parameter endpoint must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/endpoints/[^/]+$");
            }
          }

          @Override
          public RawPredict set$Xgafv(java.lang.String $Xgafv) {
            return (RawPredict) super.set$Xgafv($Xgafv);
          }

          @Override
          public RawPredict setAccessToken(java.lang.String accessToken) {
            return (RawPredict) super.setAccessToken(accessToken);
          }

          @Override
          public RawPredict setAlt(java.lang.String alt) {
            return (RawPredict) super.setAlt(alt);
          }

          @Override
          public RawPredict setCallback(java.lang.String callback) {
            return (RawPredict) super.setCallback(callback);
          }

          @Override
          public RawPredict setFields(java.lang.String fields) {
            return (RawPredict) super.setFields(fields);
          }

          @Override
          public RawPredict setKey(java.lang.String key) {
            return (RawPredict) super.setKey(key);
          }

          @Override
          public RawPredict setOauthToken(java.lang.String oauthToken) {
            return (RawPredict) super.setOauthToken(oauthToken);
          }

          @Override
          public RawPredict setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (RawPredict) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public RawPredict setQuotaUser(java.lang.String quotaUser) {
            return (RawPredict) super.setQuotaUser(quotaUser);
          }

          @Override
          public RawPredict setUploadType(java.lang.String uploadType) {
            return (RawPredict) super.setUploadType(uploadType);
          }

          @Override
          public RawPredict setUploadProtocol(java.lang.String uploadProtocol) {
            return (RawPredict) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the Endpoint requested to serve the prediction. Format:
           * `projects/{project}/locations/{location}/endpoints/{endpoint}`
           */
          @com.google.api.client.util.Key
          private java.lang.String endpoint;

          /** Required. The name of the Endpoint requested to serve the prediction. Format:
         `projects/{project}/locations/{location}/endpoints/{endpoint}`
           */
          public java.lang.String getEndpoint() {
            return endpoint;
          }

          /**
           * Required. The name of the Endpoint requested to serve the prediction. Format:
           * `projects/{project}/locations/{location}/endpoints/{endpoint}`
           */
          public RawPredict setEndpoint(java.lang.String endpoint) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(ENDPOINT_PATTERN.matcher(endpoint).matches(),
                  "Parameter endpoint must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/endpoints/[^/]+$");
            }
            this.endpoint = endpoint;
            return this;
          }

          @Override
          public RawPredict set(String parameterName, Object value) {
            return (RawPredict) super.set(parameterName, value);
          }
        }
        /**
         * Perform a server-side streaming online prediction request for Vertex LLM streaming.
         *
         * Create a request for the method "endpoints.serverStreamingPredict".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link ServerStreamingPredict#execute()} method to invoke the remote
         * operation.
         *
         * @param endpoint Required. The name of the Endpoint requested to serve the prediction. Format:
         *        `projects/{project}/locations/{location}/endpoints/{endpoint}`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1StreamingPredictRequest}
         * @return the request
         */
        public ServerStreamingPredict serverStreamingPredict(java.lang.String endpoint, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1StreamingPredictRequest content) throws java.io.IOException {
          ServerStreamingPredict result = new ServerStreamingPredict(endpoint, content);
          initialize(result);
          return result;
        }

        public class ServerStreamingPredict extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1StreamingPredictResponse> {

          private static final String REST_PATH = "v1/{+endpoint}:serverStreamingPredict";

          private final java.util.regex.Pattern ENDPOINT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/endpoints/[^/]+$");

          /**
           * Perform a server-side streaming online prediction request for Vertex LLM streaming.
           *
           * Create a request for the method "endpoints.serverStreamingPredict".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link ServerStreamingPredict#execute()} method to invoke the
           * remote operation. <p> {@link ServerStreamingPredict#initialize(com.google.api.client.googleapis
           * .services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
           * after invoking the constructor. </p>
           *
           * @param endpoint Required. The name of the Endpoint requested to serve the prediction. Format:
         *        `projects/{project}/locations/{location}/endpoints/{endpoint}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1StreamingPredictRequest}
           * @since 1.13
           */
          protected ServerStreamingPredict(java.lang.String endpoint, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1StreamingPredictRequest content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1StreamingPredictResponse.class);
            this.endpoint = com.google.api.client.util.Preconditions.checkNotNull(endpoint, "Required parameter endpoint must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(ENDPOINT_PATTERN.matcher(endpoint).matches(),
                  "Parameter endpoint must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/endpoints/[^/]+$");
            }
          }

          @Override
          public ServerStreamingPredict set$Xgafv(java.lang.String $Xgafv) {
            return (ServerStreamingPredict) super.set$Xgafv($Xgafv);
          }

          @Override
          public ServerStreamingPredict setAccessToken(java.lang.String accessToken) {
            return (ServerStreamingPredict) super.setAccessToken(accessToken);
          }

          @Override
          public ServerStreamingPredict setAlt(java.lang.String alt) {
            return (ServerStreamingPredict) super.setAlt(alt);
          }

          @Override
          public ServerStreamingPredict setCallback(java.lang.String callback) {
            return (ServerStreamingPredict) super.setCallback(callback);
          }

          @Override
          public ServerStreamingPredict setFields(java.lang.String fields) {
            return (ServerStreamingPredict) super.setFields(fields);
          }

          @Override
          public ServerStreamingPredict setKey(java.lang.String key) {
            return (ServerStreamingPredict) super.setKey(key);
          }

          @Override
          public ServerStreamingPredict setOauthToken(java.lang.String oauthToken) {
            return (ServerStreamingPredict) super.setOauthToken(oauthToken);
          }

          @Override
          public ServerStreamingPredict setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (ServerStreamingPredict) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public ServerStreamingPredict setQuotaUser(java.lang.String quotaUser) {
            return (ServerStreamingPredict) super.setQuotaUser(quotaUser);
          }

          @Override
          public ServerStreamingPredict setUploadType(java.lang.String uploadType) {
            return (ServerStreamingPredict) super.setUploadType(uploadType);
          }

          @Override
          public ServerStreamingPredict setUploadProtocol(java.lang.String uploadProtocol) {
            return (ServerStreamingPredict) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the Endpoint requested to serve the prediction. Format:
           * `projects/{project}/locations/{location}/endpoints/{endpoint}`
           */
          @com.google.api.client.util.Key
          private java.lang.String endpoint;

          /** Required. The name of the Endpoint requested to serve the prediction. Format:
         `projects/{project}/locations/{location}/endpoints/{endpoint}`
           */
          public java.lang.String getEndpoint() {
            return endpoint;
          }

          /**
           * Required. The name of the Endpoint requested to serve the prediction. Format:
           * `projects/{project}/locations/{location}/endpoints/{endpoint}`
           */
          public ServerStreamingPredict setEndpoint(java.lang.String endpoint) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(ENDPOINT_PATTERN.matcher(endpoint).matches(),
                  "Parameter endpoint must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/endpoints/[^/]+$");
            }
            this.endpoint = endpoint;
            return this;
          }

          @Override
          public ServerStreamingPredict set(String parameterName, Object value) {
            return (ServerStreamingPredict) super.set(parameterName, value);
          }
        }
        /**
         * Generate content with multimodal inputs with streaming support.
         *
         * Create a request for the method "endpoints.streamGenerateContent".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link StreamGenerateContent#execute()} method to invoke the remote
         * operation.
         *
         * @param model Required. The fully qualified name of the publisher model or tuned model endpoint to use. Publisher
         *        model format: `projects/{project}/locations/{location}/publishers/models` Tuned model
         *        endpoint format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1GenerateContentRequest}
         * @return the request
         */
        public StreamGenerateContent streamGenerateContent(java.lang.String model, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1GenerateContentRequest content) throws java.io.IOException {
          StreamGenerateContent result = new StreamGenerateContent(model, content);
          initialize(result);
          return result;
        }

        public class StreamGenerateContent extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1GenerateContentResponse> {

          private static final String REST_PATH = "v1/{+model}:streamGenerateContent";

          private final java.util.regex.Pattern MODEL_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/endpoints/[^/]+$");

          /**
           * Generate content with multimodal inputs with streaming support.
           *
           * Create a request for the method "endpoints.streamGenerateContent".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link StreamGenerateContent#execute()} method to invoke the
           * remote operation. <p> {@link StreamGenerateContent#initialize(com.google.api.client.googleapis.
           * services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
           * after invoking the constructor. </p>
           *
           * @param model Required. The fully qualified name of the publisher model or tuned model endpoint to use. Publisher
         *        model format: `projects/{project}/locations/{location}/publishers/models` Tuned model
         *        endpoint format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1GenerateContentRequest}
           * @since 1.13
           */
          protected StreamGenerateContent(java.lang.String model, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1GenerateContentRequest content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1GenerateContentResponse.class);
            this.model = com.google.api.client.util.Preconditions.checkNotNull(model, "Required parameter model must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(MODEL_PATTERN.matcher(model).matches(),
                  "Parameter model must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/endpoints/[^/]+$");
            }
          }

          @Override
          public StreamGenerateContent set$Xgafv(java.lang.String $Xgafv) {
            return (StreamGenerateContent) super.set$Xgafv($Xgafv);
          }

          @Override
          public StreamGenerateContent setAccessToken(java.lang.String accessToken) {
            return (StreamGenerateContent) super.setAccessToken(accessToken);
          }

          @Override
          public StreamGenerateContent setAlt(java.lang.String alt) {
            return (StreamGenerateContent) super.setAlt(alt);
          }

          @Override
          public StreamGenerateContent setCallback(java.lang.String callback) {
            return (StreamGenerateContent) super.setCallback(callback);
          }

          @Override
          public StreamGenerateContent setFields(java.lang.String fields) {
            return (StreamGenerateContent) super.setFields(fields);
          }

          @Override
          public StreamGenerateContent setKey(java.lang.String key) {
            return (StreamGenerateContent) super.setKey(key);
          }

          @Override
          public StreamGenerateContent setOauthToken(java.lang.String oauthToken) {
            return (StreamGenerateContent) super.setOauthToken(oauthToken);
          }

          @Override
          public StreamGenerateContent setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (StreamGenerateContent) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public StreamGenerateContent setQuotaUser(java.lang.String quotaUser) {
            return (StreamGenerateContent) super.setQuotaUser(quotaUser);
          }

          @Override
          public StreamGenerateContent setUploadType(java.lang.String uploadType) {
            return (StreamGenerateContent) super.setUploadType(uploadType);
          }

          @Override
          public StreamGenerateContent setUploadProtocol(java.lang.String uploadProtocol) {
            return (StreamGenerateContent) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The fully qualified name of the publisher model or tuned model endpoint to
           * use. Publisher model format:
           * `projects/{project}/locations/{location}/publishers/models` Tuned model endpoint
           * format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
           */
          @com.google.api.client.util.Key
          private java.lang.String model;

          /** Required. The fully qualified name of the publisher model or tuned model endpoint to use. Publisher
         model format: `projects/{project}/locations/{location}/publishers/models` Tuned model endpoint
         format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
           */
          public java.lang.String getModel() {
            return model;
          }

          /**
           * Required. The fully qualified name of the publisher model or tuned model endpoint to
           * use. Publisher model format:
           * `projects/{project}/locations/{location}/publishers/models` Tuned model endpoint
           * format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
           */
          public StreamGenerateContent setModel(java.lang.String model) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(MODEL_PATTERN.matcher(model).matches(),
                  "Parameter model must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/endpoints/[^/]+$");
            }
            this.model = model;
            return this;
          }

          @Override
          public StreamGenerateContent set(String parameterName, Object value) {
            return (StreamGenerateContent) super.set(parameterName, value);
          }
        }
        /**
         * Perform a streaming online prediction with an arbitrary HTTP payload.
         *
         * Create a request for the method "endpoints.streamRawPredict".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link StreamRawPredict#execute()} method to invoke the remote operation.
         *
         * @param endpoint Required. The name of the Endpoint requested to serve the prediction. Format:
         *        `projects/{project}/locations/{location}/endpoints/{endpoint}`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1StreamRawPredictRequest}
         * @return the request
         */
        public StreamRawPredict streamRawPredict(java.lang.String endpoint, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1StreamRawPredictRequest content) throws java.io.IOException {
          StreamRawPredict result = new StreamRawPredict(endpoint, content);
          initialize(result);
          return result;
        }

        public class StreamRawPredict extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleApiHttpBody> {

          private static final String REST_PATH = "v1/{+endpoint}:streamRawPredict";

          private final java.util.regex.Pattern ENDPOINT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/endpoints/[^/]+$");

          /**
           * Perform a streaming online prediction with an arbitrary HTTP payload.
           *
           * Create a request for the method "endpoints.streamRawPredict".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link StreamRawPredict#execute()} method to invoke the remote
           * operation. <p> {@link StreamRawPredict#initialize(com.google.api.client.googleapis.services.Abs
           * tractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param endpoint Required. The name of the Endpoint requested to serve the prediction. Format:
         *        `projects/{project}/locations/{location}/endpoints/{endpoint}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1StreamRawPredictRequest}
           * @since 1.13
           */
          protected StreamRawPredict(java.lang.String endpoint, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1StreamRawPredictRequest content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleApiHttpBody.class);
            this.endpoint = com.google.api.client.util.Preconditions.checkNotNull(endpoint, "Required parameter endpoint must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(ENDPOINT_PATTERN.matcher(endpoint).matches(),
                  "Parameter endpoint must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/endpoints/[^/]+$");
            }
          }

          @Override
          public StreamRawPredict set$Xgafv(java.lang.String $Xgafv) {
            return (StreamRawPredict) super.set$Xgafv($Xgafv);
          }

          @Override
          public StreamRawPredict setAccessToken(java.lang.String accessToken) {
            return (StreamRawPredict) super.setAccessToken(accessToken);
          }

          @Override
          public StreamRawPredict setAlt(java.lang.String alt) {
            return (StreamRawPredict) super.setAlt(alt);
          }

          @Override
          public StreamRawPredict setCallback(java.lang.String callback) {
            return (StreamRawPredict) super.setCallback(callback);
          }

          @Override
          public StreamRawPredict setFields(java.lang.String fields) {
            return (StreamRawPredict) super.setFields(fields);
          }

          @Override
          public StreamRawPredict setKey(java.lang.String key) {
            return (StreamRawPredict) super.setKey(key);
          }

          @Override
          public StreamRawPredict setOauthToken(java.lang.String oauthToken) {
            return (StreamRawPredict) super.setOauthToken(oauthToken);
          }

          @Override
          public StreamRawPredict setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (StreamRawPredict) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public StreamRawPredict setQuotaUser(java.lang.String quotaUser) {
            return (StreamRawPredict) super.setQuotaUser(quotaUser);
          }

          @Override
          public StreamRawPredict setUploadType(java.lang.String uploadType) {
            return (StreamRawPredict) super.setUploadType(uploadType);
          }

          @Override
          public StreamRawPredict setUploadProtocol(java.lang.String uploadProtocol) {
            return (StreamRawPredict) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the Endpoint requested to serve the prediction. Format:
           * `projects/{project}/locations/{location}/endpoints/{endpoint}`
           */
          @com.google.api.client.util.Key
          private java.lang.String endpoint;

          /** Required. The name of the Endpoint requested to serve the prediction. Format:
         `projects/{project}/locations/{location}/endpoints/{endpoint}`
           */
          public java.lang.String getEndpoint() {
            return endpoint;
          }

          /**
           * Required. The name of the Endpoint requested to serve the prediction. Format:
           * `projects/{project}/locations/{location}/endpoints/{endpoint}`
           */
          public StreamRawPredict setEndpoint(java.lang.String endpoint) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(ENDPOINT_PATTERN.matcher(endpoint).matches(),
                  "Parameter endpoint must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/endpoints/[^/]+$");
            }
            this.endpoint = endpoint;
            return this;
          }

          @Override
          public StreamRawPredict set(String parameterName, Object value) {
            return (StreamRawPredict) super.set(parameterName, value);
          }
        }
        /**
         * Undeploys a Model from an Endpoint, removing a DeployedModel from it, and freeing all resources
         * it's using.
         *
         * Create a request for the method "endpoints.undeployModel".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link UndeployModel#execute()} method to invoke the remote operation.
         *
         * @param endpoint Required. The name of the Endpoint resource from which to undeploy a Model. Format:
         *        `projects/{project}/locations/{location}/endpoints/{endpoint}`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1UndeployModelRequest}
         * @return the request
         */
        public UndeployModel undeployModel(java.lang.String endpoint, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1UndeployModelRequest content) throws java.io.IOException {
          UndeployModel result = new UndeployModel(endpoint, content);
          initialize(result);
          return result;
        }

        public class UndeployModel extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+endpoint}:undeployModel";

          private final java.util.regex.Pattern ENDPOINT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/endpoints/[^/]+$");

          /**
           * Undeploys a Model from an Endpoint, removing a DeployedModel from it, and freeing all resources
           * it's using.
           *
           * Create a request for the method "endpoints.undeployModel".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link UndeployModel#execute()} method to invoke the remote
           * operation. <p> {@link UndeployModel#initialize(com.google.api.client.googleapis.services.Abstra
           * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
           * the constructor. </p>
           *
           * @param endpoint Required. The name of the Endpoint resource from which to undeploy a Model. Format:
         *        `projects/{project}/locations/{location}/endpoints/{endpoint}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1UndeployModelRequest}
           * @since 1.13
           */
          protected UndeployModel(java.lang.String endpoint, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1UndeployModelRequest content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
            this.endpoint = com.google.api.client.util.Preconditions.checkNotNull(endpoint, "Required parameter endpoint must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(ENDPOINT_PATTERN.matcher(endpoint).matches(),
                  "Parameter endpoint must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/endpoints/[^/]+$");
            }
          }

          @Override
          public UndeployModel set$Xgafv(java.lang.String $Xgafv) {
            return (UndeployModel) super.set$Xgafv($Xgafv);
          }

          @Override
          public UndeployModel setAccessToken(java.lang.String accessToken) {
            return (UndeployModel) super.setAccessToken(accessToken);
          }

          @Override
          public UndeployModel setAlt(java.lang.String alt) {
            return (UndeployModel) super.setAlt(alt);
          }

          @Override
          public UndeployModel setCallback(java.lang.String callback) {
            return (UndeployModel) super.setCallback(callback);
          }

          @Override
          public UndeployModel setFields(java.lang.String fields) {
            return (UndeployModel) super.setFields(fields);
          }

          @Override
          public UndeployModel setKey(java.lang.String key) {
            return (UndeployModel) super.setKey(key);
          }

          @Override
          public UndeployModel setOauthToken(java.lang.String oauthToken) {
            return (UndeployModel) super.setOauthToken(oauthToken);
          }

          @Override
          public UndeployModel setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (UndeployModel) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public UndeployModel setQuotaUser(java.lang.String quotaUser) {
            return (UndeployModel) super.setQuotaUser(quotaUser);
          }

          @Override
          public UndeployModel setUploadType(java.lang.String uploadType) {
            return (UndeployModel) super.setUploadType(uploadType);
          }

          @Override
          public UndeployModel setUploadProtocol(java.lang.String uploadProtocol) {
            return (UndeployModel) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the Endpoint resource from which to undeploy a Model. Format:
           * `projects/{project}/locations/{location}/endpoints/{endpoint}`
           */
          @com.google.api.client.util.Key
          private java.lang.String endpoint;

          /** Required. The name of the Endpoint resource from which to undeploy a Model. Format:
         `projects/{project}/locations/{location}/endpoints/{endpoint}`
           */
          public java.lang.String getEndpoint() {
            return endpoint;
          }

          /**
           * Required. The name of the Endpoint resource from which to undeploy a Model. Format:
           * `projects/{project}/locations/{location}/endpoints/{endpoint}`
           */
          public UndeployModel setEndpoint(java.lang.String endpoint) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(ENDPOINT_PATTERN.matcher(endpoint).matches(),
                  "Parameter endpoint must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/endpoints/[^/]+$");
            }
            this.endpoint = endpoint;
            return this;
          }

          @Override
          public UndeployModel set(String parameterName, Object value) {
            return (UndeployModel) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the Operations collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Aiplatform aiplatform = new Aiplatform(...);}
         *   {@code Aiplatform.Operations.List request = aiplatform.operations().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Operations operations() {
          return new Operations();
        }

        /**
         * The "operations" collection of methods.
         */
        public class Operations {

          /**
           * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
           * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
           * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
           * methods to check whether the cancellation succeeded or whether the operation completed despite
           * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
           * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
           * `Code.CANCELLED`.
           *
           * Create a request for the method "operations.cancel".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource to be cancelled.
           * @return the request
           */
          public Cancel cancel(java.lang.String name) throws java.io.IOException {
            Cancel result = new Cancel(name);
            initialize(result);
            return result;
          }

          public class Cancel extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

            private static final String REST_PATH = "v1/{+name}:cancel";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/endpoints/[^/]+/operations/[^/]+$");

            /**
             * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
             * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
             * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
             * methods to check whether the cancellation succeeded or whether the operation completed despite
             * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
             * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
             * `Code.CANCELLED`.
             *
             * Create a request for the method "operations.cancel".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
             * <p> {@link
             * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource to be cancelled.
             * @since 1.13
             */
            protected Cancel(java.lang.String name) {
              super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/endpoints/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public Cancel set$Xgafv(java.lang.String $Xgafv) {
              return (Cancel) super.set$Xgafv($Xgafv);
            }

            @Override
            public Cancel setAccessToken(java.lang.String accessToken) {
              return (Cancel) super.setAccessToken(accessToken);
            }

            @Override
            public Cancel setAlt(java.lang.String alt) {
              return (Cancel) super.setAlt(alt);
            }

            @Override
            public Cancel setCallback(java.lang.String callback) {
              return (Cancel) super.setCallback(callback);
            }

            @Override
            public Cancel setFields(java.lang.String fields) {
              return (Cancel) super.setFields(fields);
            }

            @Override
            public Cancel setKey(java.lang.String key) {
              return (Cancel) super.setKey(key);
            }

            @Override
            public Cancel setOauthToken(java.lang.String oauthToken) {
              return (Cancel) super.setOauthToken(oauthToken);
            }

            @Override
            public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Cancel) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Cancel setQuotaUser(java.lang.String quotaUser) {
              return (Cancel) super.setQuotaUser(quotaUser);
            }

            @Override
            public Cancel setUploadType(java.lang.String uploadType) {
              return (Cancel) super.setUploadType(uploadType);
            }

            @Override
            public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
              return (Cancel) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource to be cancelled. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource to be cancelled.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource to be cancelled. */
            public Cancel setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/endpoints/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Cancel set(String parameterName, Object value) {
              return (Cancel) super.set(parameterName, value);
            }
          }
          /**
           * Deletes a long-running operation. This method indicates that the client is no longer interested
           * in the operation result. It does not cancel the operation. If the server doesn't support this
           * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.delete".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource to be deleted.
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/endpoints/[^/]+/operations/[^/]+$");

            /**
             * Deletes a long-running operation. This method indicates that the client is no longer interested
             * in the operation result. It does not cancel the operation. If the server doesn't support this
             * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.delete".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource to be deleted.
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/endpoints/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource to be deleted. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource to be deleted.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource to be deleted. */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/endpoints/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Gets the latest state of a long-running operation. Clients can use this method to poll the
           * operation result at intervals as recommended by the API service.
           *
           * Create a request for the method "operations.get".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource.
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/endpoints/[^/]+/operations/[^/]+$");

            /**
             * Gets the latest state of a long-running operation. Clients can use this method to poll the
             * operation result at intervals as recommended by the API service.
             *
             * Create a request for the method "operations.get".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource.
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/endpoints/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource. */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/endpoints/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Lists operations that match the specified filter in the request. If the server doesn't support
           * this method, it returns `UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.list".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation's parent resource.
           * @return the request
           */
          public List list(java.lang.String name) throws java.io.IOException {
            List result = new List(name);
            initialize(result);
            return result;
          }

          public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse> {

            private static final String REST_PATH = "v1/{+name}/operations";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/endpoints/[^/]+$");

            /**
             * Lists operations that match the specified filter in the request. If the server doesn't support
             * this method, it returns `UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.list".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation's parent resource.
             * @since 1.13
             */
            protected List(java.lang.String name) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/endpoints/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation's parent resource. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation's parent resource.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation's parent resource. */
            public List setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/endpoints/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /** The standard list filter. */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** The standard list filter.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /** The standard list filter. */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /** The standard list page size. */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** The standard list page size.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /** The standard list page size. */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** The standard list page token. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** The standard list page token.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** The standard list page token. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Waits until the specified long-running operation is done or reaches at most a specified timeout,
           * returning the latest state. If the operation is already done, the latest state is immediately
           * returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC
           * timeout is used. If the server does not support this method, it returns
           * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
           * the latest state before the specified timeout (including immediately), meaning even an immediate
           * response is no guarantee that the operation is done.
           *
           * Create a request for the method "operations.wait".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Wait#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource to wait on.
           * @return the request
           */
          public Wait wait(java.lang.String name) throws java.io.IOException {
            Wait result = new Wait(name);
            initialize(result);
            return result;
          }

          public class Wait extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+name}:wait";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/endpoints/[^/]+/operations/[^/]+$");

            /**
             * Waits until the specified long-running operation is done or reaches at most a specified
             * timeout, returning the latest state. If the operation is already done, the latest state is
             * immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout,
             * the HTTP/RPC timeout is used. If the server does not support this method, it returns
             * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
             * the latest state before the specified timeout (including immediately), meaning even an
             * immediate response is no guarantee that the operation is done.
             *
             * Create a request for the method "operations.wait".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Wait#execute()} method to invoke the remote operation. <p>
             * {@link Wait#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource to wait on.
             * @since 1.13
             */
            protected Wait(java.lang.String name) {
              super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/endpoints/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public Wait set$Xgafv(java.lang.String $Xgafv) {
              return (Wait) super.set$Xgafv($Xgafv);
            }

            @Override
            public Wait setAccessToken(java.lang.String accessToken) {
              return (Wait) super.setAccessToken(accessToken);
            }

            @Override
            public Wait setAlt(java.lang.String alt) {
              return (Wait) super.setAlt(alt);
            }

            @Override
            public Wait setCallback(java.lang.String callback) {
              return (Wait) super.setCallback(callback);
            }

            @Override
            public Wait setFields(java.lang.String fields) {
              return (Wait) super.setFields(fields);
            }

            @Override
            public Wait setKey(java.lang.String key) {
              return (Wait) super.setKey(key);
            }

            @Override
            public Wait setOauthToken(java.lang.String oauthToken) {
              return (Wait) super.setOauthToken(oauthToken);
            }

            @Override
            public Wait setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Wait) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Wait setQuotaUser(java.lang.String quotaUser) {
              return (Wait) super.setQuotaUser(quotaUser);
            }

            @Override
            public Wait setUploadType(java.lang.String uploadType) {
              return (Wait) super.setUploadType(uploadType);
            }

            @Override
            public Wait setUploadProtocol(java.lang.String uploadProtocol) {
              return (Wait) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource to wait on. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource to wait on.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource to wait on. */
            public Wait setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/endpoints/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * The maximum duration to wait before timing out. If left blank, the wait will be at
             * most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline
             * is also specified, the shorter one will be used.
             */
            @com.google.api.client.util.Key
            private String timeout;

            /** The maximum duration to wait before timing out. If left blank, the wait will be at most the time
           permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the
           shorter one will be used.
             */
            public String getTimeout() {
              return timeout;
            }

            /**
             * The maximum duration to wait before timing out. If left blank, the wait will be at
             * most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline
             * is also specified, the shorter one will be used.
             */
            public Wait setTimeout(String timeout) {
              this.timeout = timeout;
              return this;
            }

            @Override
            public Wait set(String parameterName, Object value) {
              return (Wait) super.set(parameterName, value);
            }
          }

        }
      }
      /**
       * An accessor for creating requests from the FeatureGroups collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Aiplatform aiplatform = new Aiplatform(...);}
       *   {@code Aiplatform.FeatureGroups.List request = aiplatform.featureGroups().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public FeatureGroups featureGroups() {
        return new FeatureGroups();
      }

      /**
       * The "featureGroups" collection of methods.
       */
      public class FeatureGroups {

        /**
         * Creates a new FeatureGroup in a given project and location.
         *
         * Create a request for the method "featureGroups.create".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The resource name of the Location to create FeatureGroups. Format:
         *        `projects/{project}/locations/{location}`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1FeatureGroup}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1FeatureGroup content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+parent}/featureGroups";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Creates a new FeatureGroup in a given project and location.
           *
           * Create a request for the method "featureGroups.create".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The resource name of the Location to create FeatureGroups. Format:
         *        `projects/{project}/locations/{location}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1FeatureGroup}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1FeatureGroup content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the Location to create FeatureGroups. Format:
           * `projects/{project}/locations/{location}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The resource name of the Location to create FeatureGroups. Format:
         `projects/{project}/locations/{location}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The resource name of the Location to create FeatureGroups. Format:
           * `projects/{project}/locations/{location}`
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Required. The ID to use for this FeatureGroup, which will become the final component of
           * the FeatureGroup's resource name. This value may be up to 128 characters, and valid
           * characters are `[a-z0-9_]`. The first character cannot be a number. The value must be
           * unique within the project and location.
           */
          @com.google.api.client.util.Key
          private java.lang.String featureGroupId;

          /** Required. The ID to use for this FeatureGroup, which will become the final component of the
         FeatureGroup's resource name. This value may be up to 128 characters, and valid characters are
         `[a-z0-9_]`. The first character cannot be a number. The value must be unique within the project
         and location.
           */
          public java.lang.String getFeatureGroupId() {
            return featureGroupId;
          }

          /**
           * Required. The ID to use for this FeatureGroup, which will become the final component of
           * the FeatureGroup's resource name. This value may be up to 128 characters, and valid
           * characters are `[a-z0-9_]`. The first character cannot be a number. The value must be
           * unique within the project and location.
           */
          public Create setFeatureGroupId(java.lang.String featureGroupId) {
            this.featureGroupId = featureGroupId;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a single FeatureGroup.
         *
         * Create a request for the method "featureGroups.delete".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the FeatureGroup to be deleted. Format:
         *        `projects/{project}/locations/{location}/featureGroups/{feature_group}`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featureGroups/[^/]+$");

          /**
           * Deletes a single FeatureGroup.
           *
           * Create a request for the method "featureGroups.delete".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the FeatureGroup to be deleted. Format:
         *        `projects/{project}/locations/{location}/featureGroups/{feature_group}`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/featureGroups/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the FeatureGroup to be deleted. Format:
           * `projects/{project}/locations/{location}/featureGroups/{feature_group}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the FeatureGroup to be deleted. Format:
         `projects/{project}/locations/{location}/featureGroups/{feature_group}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the FeatureGroup to be deleted. Format:
           * `projects/{project}/locations/{location}/featureGroups/{feature_group}`
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/featureGroups/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * If set to true, any Features under this FeatureGroup will also be deleted. (Otherwise,
           * the request will only work if the FeatureGroup has no Features.)
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean force;

          /** If set to true, any Features under this FeatureGroup will also be deleted. (Otherwise, the request
         will only work if the FeatureGroup has no Features.)
           */
          public java.lang.Boolean getForce() {
            return force;
          }

          /**
           * If set to true, any Features under this FeatureGroup will also be deleted. (Otherwise,
           * the request will only work if the FeatureGroup has no Features.)
           */
          public Delete setForce(java.lang.Boolean force) {
            this.force = force;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets details of a single FeatureGroup.
         *
         * Create a request for the method "featureGroups.get".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the FeatureGroup resource.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1FeatureGroup> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featureGroups/[^/]+$");

          /**
           * Gets details of a single FeatureGroup.
           *
           * Create a request for the method "featureGroups.get".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the FeatureGroup resource.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1FeatureGroup.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/featureGroups/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The name of the FeatureGroup resource. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the FeatureGroup resource.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. The name of the FeatureGroup resource. */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/featureGroups/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists FeatureGroups in a given project and location.
         *
         * Create a request for the method "featureGroups.list".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The resource name of the Location to list FeatureGroups. Format:
         *        `projects/{project}/locations/{location}`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListFeatureGroupsResponse> {

          private static final String REST_PATH = "v1/{+parent}/featureGroups";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists FeatureGroups in a given project and location.
           *
           * Create a request for the method "featureGroups.list".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The resource name of the Location to list FeatureGroups. Format:
         *        `projects/{project}/locations/{location}`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListFeatureGroupsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the Location to list FeatureGroups. Format:
           * `projects/{project}/locations/{location}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The resource name of the Location to list FeatureGroups. Format:
         `projects/{project}/locations/{location}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The resource name of the Location to list FeatureGroups. Format:
           * `projects/{project}/locations/{location}`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Lists the FeatureGroups that match the filter expression. The following fields are
           * supported: * `create_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons.
           * Values must be in RFC 3339 format. * `update_time`: Supports `=`, `!=`, `<`, `>`, `<=`,
           * and `>=` comparisons. Values must be in RFC 3339 format. * `labels`: Supports key-value
           * equality and key presence. Examples: * `create_time > "2020-01-01" OR update_time >
           * "2020-01-01"` FeatureGroups created or updated after 2020-01-01. * `labels.env =
           * "prod"` FeatureGroups with label "env" set to "prod".
           */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** Lists the FeatureGroups that match the filter expression. The following fields are supported: *
         `create_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. Values must be in RFC 3339
         format. * `update_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. Values must be
         in RFC 3339 format. * `labels`: Supports key-value equality and key presence. Examples: *
         `create_time > "2020-01-01" OR update_time > "2020-01-01"` FeatureGroups created or updated after
         2020-01-01. * `labels.env = "prod"` FeatureGroups with label "env" set to "prod".
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /**
           * Lists the FeatureGroups that match the filter expression. The following fields are
           * supported: * `create_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons.
           * Values must be in RFC 3339 format. * `update_time`: Supports `=`, `!=`, `<`, `>`, `<=`,
           * and `>=` comparisons. Values must be in RFC 3339 format. * `labels`: Supports key-value
           * equality and key presence. Examples: * `create_time > "2020-01-01" OR update_time >
           * "2020-01-01"` FeatureGroups created or updated after 2020-01-01. * `labels.env =
           * "prod"` FeatureGroups with label "env" set to "prod".
           */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /**
           * A comma-separated list of fields to order by, sorted in ascending order. Use "desc"
           * after a field name for descending. Supported Fields: * `create_time` * `update_time`
           */
          @com.google.api.client.util.Key
          private java.lang.String orderBy;

          /** A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field
         name for descending. Supported Fields: * `create_time` * `update_time`
           */
          public java.lang.String getOrderBy() {
            return orderBy;
          }

          /**
           * A comma-separated list of fields to order by, sorted in ascending order. Use "desc"
           * after a field name for descending. Supported Fields: * `create_time` * `update_time`
           */
          public List setOrderBy(java.lang.String orderBy) {
            this.orderBy = orderBy;
            return this;
          }

          /**
           * The maximum number of FeatureGroups to return. The service may return fewer than this
           * value. If unspecified, at most 100 FeatureGroups will be returned. The maximum value is
           * 100; any value greater than 100 will be coerced to 100.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The maximum number of FeatureGroups to return. The service may return fewer than this value. If
         unspecified, at most 100 FeatureGroups will be returned. The maximum value is 100; any value
         greater than 100 will be coerced to 100.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * The maximum number of FeatureGroups to return. The service may return fewer than this
           * value. If unspecified, at most 100 FeatureGroups will be returned. The maximum value is
           * 100; any value greater than 100 will be coerced to 100.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * A page token, received from a previous FeatureGroupAdminService.ListFeatureGroups call.
           * Provide this to retrieve the subsequent page. When paginating, all other parameters
           * provided to FeatureGroupAdminService.ListFeatureGroups must match the call that
           * provided the page token.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** A page token, received from a previous FeatureGroupAdminService.ListFeatureGroups call. Provide
         this to retrieve the subsequent page. When paginating, all other parameters provided to
         FeatureGroupAdminService.ListFeatureGroups must match the call that provided the page token.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * A page token, received from a previous FeatureGroupAdminService.ListFeatureGroups call.
           * Provide this to retrieve the subsequent page. When paginating, all other parameters
           * provided to FeatureGroupAdminService.ListFeatureGroups must match the call that
           * provided the page token.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates the parameters of a single FeatureGroup.
         *
         * Create a request for the method "featureGroups.patch".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Identifier. Name of the FeatureGroup. Format:
         *        `projects/{project}/locations/{location}/featureGroups/{featureGroup}`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1FeatureGroup}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1FeatureGroup content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featureGroups/[^/]+$");

          /**
           * Updates the parameters of a single FeatureGroup.
           *
           * Create a request for the method "featureGroups.patch".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           * <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Identifier. Name of the FeatureGroup. Format:
         *        `projects/{project}/locations/{location}/featureGroups/{featureGroup}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1FeatureGroup}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1FeatureGroup content) {
            super(Aiplatform.this, "PATCH", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/featureGroups/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Identifier. Name of the FeatureGroup. Format:
           * `projects/{project}/locations/{location}/featureGroups/{featureGroup}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Identifier. Name of the FeatureGroup. Format:
         `projects/{project}/locations/{location}/featureGroups/{featureGroup}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Identifier. Name of the FeatureGroup. Format:
           * `projects/{project}/locations/{location}/featureGroups/{featureGroup}`
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/featureGroups/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Field mask is used to specify the fields to be overwritten in the FeatureGroup resource
           * by the update. The fields specified in the update_mask are relative to the resource,
           * not the full request. A field will be overwritten if it is in the mask. If the user
           * does not provide a mask then only the non-empty fields present in the request will be
           * overwritten. Set the update_mask to `*` to override all fields. Updatable fields: *
           * `labels` * `description` * `big_query` * `big_query.entity_id_columns`
           */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Field mask is used to specify the fields to be overwritten in the FeatureGroup resource by the
         update. The fields specified in the update_mask are relative to the resource, not the full request.
         A field will be overwritten if it is in the mask. If the user does not provide a mask then only the
         non-empty fields present in the request will be overwritten. Set the update_mask to `*` to override
         all fields. Updatable fields: * `labels` * `description` * `big_query` *
         `big_query.entity_id_columns`
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /**
           * Field mask is used to specify the fields to be overwritten in the FeatureGroup resource
           * by the update. The fields specified in the update_mask are relative to the resource,
           * not the full request. A field will be overwritten if it is in the mask. If the user
           * does not provide a mask then only the non-empty fields present in the request will be
           * overwritten. Set the update_mask to `*` to override all fields. Updatable fields: *
           * `labels` * `description` * `big_query` * `big_query.entity_id_columns`
           */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the Features collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Aiplatform aiplatform = new Aiplatform(...);}
         *   {@code Aiplatform.Features.List request = aiplatform.features().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Features features() {
          return new Features();
        }

        /**
         * The "features" collection of methods.
         */
        public class Features {

          /**
           * Creates a new Feature in a given FeatureGroup.
           *
           * Create a request for the method "features.create".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The resource name of the EntityType or FeatureGroup to create a Feature. Format for
           *        entity_type as parent: `projects/{project}/locations/{location}/featurestores/{featurestor
           *        e}/entityTypes/{entity_type}` Format for feature_group as parent:
           *        `projects/{project}/locations/{location}/featureGroups/{feature_group}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Feature}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Feature content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+parent}/features";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featureGroups/[^/]+$");

            /**
             * Creates a new Feature in a given FeatureGroup.
             *
             * Create a request for the method "features.create".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
             * <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The resource name of the EntityType or FeatureGroup to create a Feature. Format for
           *        entity_type as parent: `projects/{project}/locations/{location}/featurestores/{featurestor
           *        e}/entityTypes/{entity_type}` Format for feature_group as parent:
           *        `projects/{project}/locations/{location}/featureGroups/{feature_group}`
             * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Feature}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Feature content) {
              super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featureGroups/[^/]+$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The resource name of the EntityType or FeatureGroup to create a Feature.
             * Format for entity_type as parent: `projects/{project}/locations/{location}/featuresto
             * res/{featurestore}/entityTypes/{entity_type}` Format for feature_group as parent:
             * `projects/{project}/locations/{location}/featureGroups/{feature_group}`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The resource name of the EntityType or FeatureGroup to create a Feature. Format for
           entity_type as parent:
           `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}`
           Format for feature_group as parent:
           `projects/{project}/locations/{location}/featureGroups/{feature_group}`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The resource name of the EntityType or FeatureGroup to create a Feature.
             * Format for entity_type as parent: `projects/{project}/locations/{location}/featuresto
             * res/{featurestore}/entityTypes/{entity_type}` Format for feature_group as parent:
             * `projects/{project}/locations/{location}/featureGroups/{feature_group}`
             */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featureGroups/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Required. The ID to use for the Feature, which will become the final component of the
             * Feature's resource name. This value may be up to 128 characters, and valid characters
             * are `[a-z0-9_]`. The first character cannot be a number. The value must be unique
             * within an EntityType/FeatureGroup.
             */
            @com.google.api.client.util.Key
            private java.lang.String featureId;

            /** Required. The ID to use for the Feature, which will become the final component of the Feature's
           resource name. This value may be up to 128 characters, and valid characters are `[a-z0-9_]`. The
           first character cannot be a number. The value must be unique within an EntityType/FeatureGroup.
             */
            public java.lang.String getFeatureId() {
              return featureId;
            }

            /**
             * Required. The ID to use for the Feature, which will become the final component of the
             * Feature's resource name. This value may be up to 128 characters, and valid characters
             * are `[a-z0-9_]`. The first character cannot be a number. The value must be unique
             * within an EntityType/FeatureGroup.
             */
            public Create setFeatureId(java.lang.String featureId) {
              this.featureId = featureId;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Deletes a single Feature.
           *
           * Create a request for the method "features.delete".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the Features to be deleted. Format: `projects/{project}/locations/{location}/f
           *        eaturestores/{featurestore}/entityTypes/{entity_type}/features/{feature}`
           *        `projects/{project}/locations/{location}/featureGroups/{feature_group}/features/{feature}`
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featureGroups/[^/]+/features/[^/]+$");

            /**
             * Deletes a single Feature.
             *
             * Create a request for the method "features.delete".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the Features to be deleted. Format: `projects/{project}/locations/{location}/f
           *        eaturestores/{featurestore}/entityTypes/{entity_type}/features/{feature}`
           *        `projects/{project}/locations/{location}/featureGroups/{feature_group}/features/{feature}`
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featureGroups/[^/]+/features/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the Features to be deleted. Format: `projects/{project}/locatio
             * ns/{location}/featurestores/{featurestore}/entityTypes/{entity_type}/features/{featur
             * e}` `projects/{project}/locations/{location}/featureGroups/{feature_group}/features/{
             * feature}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the Features to be deleted. Format: `projects/{project}/locations/{location}/
           featurestores/{featurestore}/entityTypes/{entity_type}/features/{feature}`
           `projects/{project}/locations/{location}/featureGroups/{feature_group}/features/{feature}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The name of the Features to be deleted. Format: `projects/{project}/locatio
             * ns/{location}/featurestores/{featurestore}/entityTypes/{entity_type}/features/{featur
             * e}` `projects/{project}/locations/{location}/featureGroups/{feature_group}/features/{
             * feature}`
             */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featureGroups/[^/]+/features/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Gets details of a single Feature.
           *
           * Create a request for the method "features.get".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the Feature resource. Format for entity_type as parent:
           *        `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_
           *        type}` Format for feature_group as parent:
           *        `projects/{project}/locations/{location}/featureGroups/{feature_group}`
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Feature> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featureGroups/[^/]+/features/[^/]+$");

            /**
             * Gets details of a single Feature.
             *
             * Create a request for the method "features.get".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the Feature resource. Format for entity_type as parent:
           *        `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_
           *        type}` Format for feature_group as parent:
           *        `projects/{project}/locations/{location}/featureGroups/{feature_group}`
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Feature.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featureGroups/[^/]+/features/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the Feature resource. Format for entity_type as parent: `projec
             * ts/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_ty
             * pe}` Format for feature_group as parent:
             * `projects/{project}/locations/{location}/featureGroups/{feature_group}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the Feature resource. Format for entity_type as parent:
           `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}`
           Format for feature_group as parent:
           `projects/{project}/locations/{location}/featureGroups/{feature_group}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The name of the Feature resource. Format for entity_type as parent: `projec
             * ts/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_ty
             * pe}` Format for feature_group as parent:
             * `projects/{project}/locations/{location}/featureGroups/{feature_group}`
             */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featureGroups/[^/]+/features/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Lists Features in a given FeatureGroup.
           *
           * Create a request for the method "features.list".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The resource name of the Location to list Features. Format for entity_type as parent:
           *        `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_
           *        type}` Format for feature_group as parent:
           *        `projects/{project}/locations/{location}/featureGroups/{feature_group}`
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListFeaturesResponse> {

            private static final String REST_PATH = "v1/{+parent}/features";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featureGroups/[^/]+$");

            /**
             * Lists Features in a given FeatureGroup.
             *
             * Create a request for the method "features.list".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The resource name of the Location to list Features. Format for entity_type as parent:
           *        `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_
           *        type}` Format for feature_group as parent:
           *        `projects/{project}/locations/{location}/featureGroups/{feature_group}`
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListFeaturesResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featureGroups/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The resource name of the Location to list Features. Format for entity_type
             * as parent: `projects/{project}/locations/{location}/featurestores/{featurestore}/enti
             * tyTypes/{entity_type}` Format for feature_group as parent:
             * `projects/{project}/locations/{location}/featureGroups/{feature_group}`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The resource name of the Location to list Features. Format for entity_type as parent:
           `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}`
           Format for feature_group as parent:
           `projects/{project}/locations/{location}/featureGroups/{feature_group}`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The resource name of the Location to list Features. Format for entity_type
             * as parent: `projects/{project}/locations/{location}/featurestores/{featurestore}/enti
             * tyTypes/{entity_type}` Format for feature_group as parent:
             * `projects/{project}/locations/{location}/featureGroups/{feature_group}`
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featureGroups/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Lists the Features that match the filter expression. The following filters are
             * supported: * `value_type`: Supports = and != comparisons. * `create_time`: Supports
             * =, !=, <, >, >=, and <= comparisons. Values must be in RFC 3339 format. *
             * `update_time`: Supports =, !=, <, >, >=, and <= comparisons. Values must be in RFC
             * 3339 format. * `labels`: Supports key-value equality as well as key presence.
             * Examples: * `value_type = DOUBLE` --> Features whose type is DOUBLE. * `create_time >
             * \"2020-01-31T15:30:00.000000Z\" OR update_time > \"2020-01-31T15:30:00.000000Z\"` -->
             * EntityTypes created or updated after 2020-01-31T15:30:00.000000Z. * `labels.active =
             * yes AND labels.env = prod` --> Features having both (active: yes) and (env: prod)
             * labels. * `labels.env: *` --> Any Feature which has a label with 'env' as the key.
             */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** Lists the Features that match the filter expression. The following filters are supported: *
           `value_type`: Supports = and != comparisons. * `create_time`: Supports =, !=, <, >, >=, and <=
           comparisons. Values must be in RFC 3339 format. * `update_time`: Supports =, !=, <, >, >=, and <=
           comparisons. Values must be in RFC 3339 format. * `labels`: Supports key-value equality as well as
           key presence. Examples: * `value_type = DOUBLE` --> Features whose type is DOUBLE. * `create_time >
           \"2020-01-31T15:30:00.000000Z\" OR update_time > \"2020-01-31T15:30:00.000000Z\"` --> EntityTypes
           created or updated after 2020-01-31T15:30:00.000000Z. * `labels.active = yes AND labels.env = prod`
           --> Features having both (active: yes) and (env: prod) labels. * `labels.env: *` --> Any Feature
           which has a label with 'env' as the key.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /**
             * Lists the Features that match the filter expression. The following filters are
             * supported: * `value_type`: Supports = and != comparisons. * `create_time`: Supports
             * =, !=, <, >, >=, and <= comparisons. Values must be in RFC 3339 format. *
             * `update_time`: Supports =, !=, <, >, >=, and <= comparisons. Values must be in RFC
             * 3339 format. * `labels`: Supports key-value equality as well as key presence.
             * Examples: * `value_type = DOUBLE` --> Features whose type is DOUBLE. * `create_time >
             * \"2020-01-31T15:30:00.000000Z\" OR update_time > \"2020-01-31T15:30:00.000000Z\"` -->
             * EntityTypes created or updated after 2020-01-31T15:30:00.000000Z. * `labels.active =
             * yes AND labels.env = prod` --> Features having both (active: yes) and (env: prod)
             * labels. * `labels.env: *` --> Any Feature which has a label with 'env' as the key.
             */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /**
             * Only applicable for Vertex AI Feature Store (Legacy). If set, return the most recent
             * ListFeaturesRequest.latest_stats_count of stats for each Feature in response. Valid
             * value is [0, 10]. If number of stats exists < ListFeaturesRequest.latest_stats_count,
             * return all existing stats.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer latestStatsCount;

            /** Only applicable for Vertex AI Feature Store (Legacy). If set, return the most recent
           ListFeaturesRequest.latest_stats_count of stats for each Feature in response. Valid value is [0,
           10]. If number of stats exists < ListFeaturesRequest.latest_stats_count, return all existing stats.
             */
            public java.lang.Integer getLatestStatsCount() {
              return latestStatsCount;
            }

            /**
             * Only applicable for Vertex AI Feature Store (Legacy). If set, return the most recent
             * ListFeaturesRequest.latest_stats_count of stats for each Feature in response. Valid
             * value is [0, 10]. If number of stats exists < ListFeaturesRequest.latest_stats_count,
             * return all existing stats.
             */
            public List setLatestStatsCount(java.lang.Integer latestStatsCount) {
              this.latestStatsCount = latestStatsCount;
              return this;
            }

            /**
             * A comma-separated list of fields to order by, sorted in ascending order. Use "desc"
             * after a field name for descending. Supported fields: * `feature_id` * `value_type`
             * (Not supported for FeatureRegistry Feature) * `create_time` * `update_time`
             */
            @com.google.api.client.util.Key
            private java.lang.String orderBy;

            /** A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field
           name for descending. Supported fields: * `feature_id` * `value_type` (Not supported for
           FeatureRegistry Feature) * `create_time` * `update_time`
             */
            public java.lang.String getOrderBy() {
              return orderBy;
            }

            /**
             * A comma-separated list of fields to order by, sorted in ascending order. Use "desc"
             * after a field name for descending. Supported fields: * `feature_id` * `value_type`
             * (Not supported for FeatureRegistry Feature) * `create_time` * `update_time`
             */
            public List setOrderBy(java.lang.String orderBy) {
              this.orderBy = orderBy;
              return this;
            }

            /**
             * The maximum number of Features to return. The service may return fewer than this
             * value. If unspecified, at most 1000 Features will be returned. The maximum value is
             * 1000; any value greater than 1000 will be coerced to 1000.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** The maximum number of Features to return. The service may return fewer than this value. If
           unspecified, at most 1000 Features will be returned. The maximum value is 1000; any value greater
           than 1000 will be coerced to 1000.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * The maximum number of Features to return. The service may return fewer than this
             * value. If unspecified, at most 1000 Features will be returned. The maximum value is
             * 1000; any value greater than 1000 will be coerced to 1000.
             */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /**
             * A page token, received from a previous FeaturestoreService.ListFeatures call or
             * FeatureRegistryService.ListFeatures call. Provide this to retrieve the subsequent
             * page. When paginating, all other parameters provided to
             * FeaturestoreService.ListFeatures or FeatureRegistryService.ListFeatures must match
             * the call that provided the page token.
             */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** A page token, received from a previous FeaturestoreService.ListFeatures call or
           FeatureRegistryService.ListFeatures call. Provide this to retrieve the subsequent page. When
           paginating, all other parameters provided to FeaturestoreService.ListFeatures or
           FeatureRegistryService.ListFeatures must match the call that provided the page token.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /**
             * A page token, received from a previous FeaturestoreService.ListFeatures call or
             * FeatureRegistryService.ListFeatures call. Provide this to retrieve the subsequent
             * page. When paginating, all other parameters provided to
             * FeaturestoreService.ListFeatures or FeatureRegistryService.ListFeatures must match
             * the call that provided the page token.
             */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            /** Mask specifying which fields to read. */
            @com.google.api.client.util.Key
            private String readMask;

            /** Mask specifying which fields to read.
             */
            public String getReadMask() {
              return readMask;
            }

            /** Mask specifying which fields to read. */
            public List setReadMask(String readMask) {
              this.readMask = readMask;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Updates the parameters of a single Feature.
           *
           * Create a request for the method "features.patch".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           *
           * @param name Immutable. Name of the Feature. Format: `projects/{project}/locations/{location}/featurestores/{feat
           *        urestore}/entityTypes/{entity_type}/features/{feature}`
           *        `projects/{project}/locations/{location}/featureGroups/{feature_group}/features/{feature}`
           *        The last part feature is assigned by the client. The feature can be up to 64 characters
           *        long and can consist only of ASCII Latin letters A-Z and a-z, underscore(_), and ASCII
           *        digits 0-9 starting with a letter. The value will be unique given an entity type.
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Feature}
           * @return the request
           */
          public Patch patch(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Feature content) throws java.io.IOException {
            Patch result = new Patch(name, content);
            initialize(result);
            return result;
          }

          public class Patch extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featureGroups/[^/]+/features/[^/]+$");

            /**
             * Updates the parameters of a single Feature.
             *
             * Create a request for the method "features.patch".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             * <p> {@link
             * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Immutable. Name of the Feature. Format: `projects/{project}/locations/{location}/featurestores/{feat
           *        urestore}/entityTypes/{entity_type}/features/{feature}`
           *        `projects/{project}/locations/{location}/featureGroups/{feature_group}/features/{feature}`
           *        The last part feature is assigned by the client. The feature can be up to 64 characters
           *        long and can consist only of ASCII Latin letters A-Z and a-z, underscore(_), and ASCII
           *        digits 0-9 starting with a letter. The value will be unique given an entity type.
             * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Feature}
             * @since 1.13
             */
            protected Patch(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Feature content) {
              super(Aiplatform.this, "PATCH", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featureGroups/[^/]+/features/[^/]+$");
              }
            }

            @Override
            public Patch set$Xgafv(java.lang.String $Xgafv) {
              return (Patch) super.set$Xgafv($Xgafv);
            }

            @Override
            public Patch setAccessToken(java.lang.String accessToken) {
              return (Patch) super.setAccessToken(accessToken);
            }

            @Override
            public Patch setAlt(java.lang.String alt) {
              return (Patch) super.setAlt(alt);
            }

            @Override
            public Patch setCallback(java.lang.String callback) {
              return (Patch) super.setCallback(callback);
            }

            @Override
            public Patch setFields(java.lang.String fields) {
              return (Patch) super.setFields(fields);
            }

            @Override
            public Patch setKey(java.lang.String key) {
              return (Patch) super.setKey(key);
            }

            @Override
            public Patch setOauthToken(java.lang.String oauthToken) {
              return (Patch) super.setOauthToken(oauthToken);
            }

            @Override
            public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Patch) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Patch setQuotaUser(java.lang.String quotaUser) {
              return (Patch) super.setQuotaUser(quotaUser);
            }

            @Override
            public Patch setUploadType(java.lang.String uploadType) {
              return (Patch) super.setUploadType(uploadType);
            }

            @Override
            public Patch setUploadProtocol(java.lang.String uploadProtocol) {
              return (Patch) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Immutable. Name of the Feature. Format: `projects/{project}/locations/{location}/feat
             * urestores/{featurestore}/entityTypes/{entity_type}/features/{feature}` `projects/{pro
             * ject}/locations/{location}/featureGroups/{feature_group}/features/{feature}` The last
             * part feature is assigned by the client. The feature can be up to 64 characters long
             * and can consist only of ASCII Latin letters A-Z and a-z, underscore(_), and ASCII
             * digits 0-9 starting with a letter. The value will be unique given an entity type.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Immutable. Name of the Feature. Format: `projects/{project}/locations/{location}/featurestores/{fea
           turestore}/entityTypes/{entity_type}/features/{feature}`
           `projects/{project}/locations/{location}/featureGroups/{feature_group}/features/{feature}` The last
           part feature is assigned by the client. The feature can be up to 64 characters long and can consist
           only of ASCII Latin letters A-Z and a-z, underscore(_), and ASCII digits 0-9 starting with a
           letter. The value will be unique given an entity type.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Immutable. Name of the Feature. Format: `projects/{project}/locations/{location}/feat
             * urestores/{featurestore}/entityTypes/{entity_type}/features/{feature}` `projects/{pro
             * ject}/locations/{location}/featureGroups/{feature_group}/features/{feature}` The last
             * part feature is assigned by the client. The feature can be up to 64 characters long
             * and can consist only of ASCII Latin letters A-Z and a-z, underscore(_), and ASCII
             * digits 0-9 starting with a letter. The value will be unique given an entity type.
             */
            public Patch setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featureGroups/[^/]+/features/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * Field mask is used to specify the fields to be overwritten in the Features resource
             * by the update. The fields specified in the update_mask are relative to the resource,
             * not the full request. A field will be overwritten if it is in the mask. If the user
             * does not provide a mask then only the non-empty fields present in the request will be
             * overwritten. Set the update_mask to `*` to override all fields. Updatable fields: *
             * `description` * `labels` * `disable_monitoring` (Not supported for
             * FeatureRegistryService Feature) * `point_of_contact` (Not supported for
             * FeaturestoreService FeatureStore)
             */
            @com.google.api.client.util.Key
            private String updateMask;

            /** Field mask is used to specify the fields to be overwritten in the Features resource by the update.
           The fields specified in the update_mask are relative to the resource, not the full request. A field
           will be overwritten if it is in the mask. If the user does not provide a mask then only the non-
           empty fields present in the request will be overwritten. Set the update_mask to `*` to override all
           fields. Updatable fields: * `description` * `labels` * `disable_monitoring` (Not supported for
           FeatureRegistryService Feature) * `point_of_contact` (Not supported for FeaturestoreService
           FeatureStore)
             */
            public String getUpdateMask() {
              return updateMask;
            }

            /**
             * Field mask is used to specify the fields to be overwritten in the Features resource
             * by the update. The fields specified in the update_mask are relative to the resource,
             * not the full request. A field will be overwritten if it is in the mask. If the user
             * does not provide a mask then only the non-empty fields present in the request will be
             * overwritten. Set the update_mask to `*` to override all fields. Updatable fields: *
             * `description` * `labels` * `disable_monitoring` (Not supported for
             * FeatureRegistryService Feature) * `point_of_contact` (Not supported for
             * FeaturestoreService FeatureStore)
             */
            public Patch setUpdateMask(String updateMask) {
              this.updateMask = updateMask;
              return this;
            }

            @Override
            public Patch set(String parameterName, Object value) {
              return (Patch) super.set(parameterName, value);
            }
          }

          /**
           * An accessor for creating requests from the Operations collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code Aiplatform aiplatform = new Aiplatform(...);}
           *   {@code Aiplatform.Operations.List request = aiplatform.operations().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public Operations operations() {
            return new Operations();
          }

          /**
           * The "operations" collection of methods.
           */
          public class Operations {

            /**
             * Deletes a long-running operation. This method indicates that the client is no longer interested
             * in the operation result. It does not cancel the operation. If the server doesn't support this
             * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.delete".
             *
             * This request holds the parameters needed by the aiplatform server.  After setting any optional
             * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             *
             * @param name The name of the operation resource to be deleted.
             * @return the request
             */
            public Delete delete(java.lang.String name) throws java.io.IOException {
              Delete result = new Delete(name);
              initialize(result);
              return result;
            }

            public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featureGroups/[^/]+/features/[^/]+/operations/[^/]+$");

              /**
               * Deletes a long-running operation. This method indicates that the client is no longer interested
               * in the operation result. It does not cancel the operation. If the server doesn't support this
               * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
               *
               * Create a request for the method "operations.delete".
               *
               * This request holds the parameters needed by the the aiplatform server.  After setting any
               * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
               * <p> {@link
               * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The name of the operation resource to be deleted.
               * @since 1.13
               */
              protected Delete(java.lang.String name) {
                super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/featureGroups/[^/]+/features/[^/]+/operations/[^/]+$");
                }
              }

              @Override
              public Delete set$Xgafv(java.lang.String $Xgafv) {
                return (Delete) super.set$Xgafv($Xgafv);
              }

              @Override
              public Delete setAccessToken(java.lang.String accessToken) {
                return (Delete) super.setAccessToken(accessToken);
              }

              @Override
              public Delete setAlt(java.lang.String alt) {
                return (Delete) super.setAlt(alt);
              }

              @Override
              public Delete setCallback(java.lang.String callback) {
                return (Delete) super.setCallback(callback);
              }

              @Override
              public Delete setFields(java.lang.String fields) {
                return (Delete) super.setFields(fields);
              }

              @Override
              public Delete setKey(java.lang.String key) {
                return (Delete) super.setKey(key);
              }

              @Override
              public Delete setOauthToken(java.lang.String oauthToken) {
                return (Delete) super.setOauthToken(oauthToken);
              }

              @Override
              public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Delete) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Delete setQuotaUser(java.lang.String quotaUser) {
                return (Delete) super.setQuotaUser(quotaUser);
              }

              @Override
              public Delete setUploadType(java.lang.String uploadType) {
                return (Delete) super.setUploadType(uploadType);
              }

              @Override
              public Delete setUploadProtocol(java.lang.String uploadProtocol) {
                return (Delete) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the operation resource to be deleted. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The name of the operation resource to be deleted.
               */
              public java.lang.String getName() {
                return name;
              }

              /** The name of the operation resource to be deleted. */
              public Delete setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/featureGroups/[^/]+/features/[^/]+/operations/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Delete set(String parameterName, Object value) {
                return (Delete) super.set(parameterName, value);
              }
            }
            /**
             * Gets the latest state of a long-running operation. Clients can use this method to poll the
             * operation result at intervals as recommended by the API service.
             *
             * Create a request for the method "operations.get".
             *
             * This request holds the parameters needed by the aiplatform server.  After setting any optional
             * parameters, call the {@link Get#execute()} method to invoke the remote operation.
             *
             * @param name The name of the operation resource.
             * @return the request
             */
            public Get get(java.lang.String name) throws java.io.IOException {
              Get result = new Get(name);
              initialize(result);
              return result;
            }

            public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featureGroups/[^/]+/features/[^/]+/operations/[^/]+$");

              /**
               * Gets the latest state of a long-running operation. Clients can use this method to poll the
               * operation result at intervals as recommended by the API service.
               *
               * Create a request for the method "operations.get".
               *
               * This request holds the parameters needed by the the aiplatform server.  After setting any
               * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
               * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The name of the operation resource.
               * @since 1.13
               */
              protected Get(java.lang.String name) {
                super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/featureGroups/[^/]+/features/[^/]+/operations/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public Get set$Xgafv(java.lang.String $Xgafv) {
                return (Get) super.set$Xgafv($Xgafv);
              }

              @Override
              public Get setAccessToken(java.lang.String accessToken) {
                return (Get) super.setAccessToken(accessToken);
              }

              @Override
              public Get setAlt(java.lang.String alt) {
                return (Get) super.setAlt(alt);
              }

              @Override
              public Get setCallback(java.lang.String callback) {
                return (Get) super.setCallback(callback);
              }

              @Override
              public Get setFields(java.lang.String fields) {
                return (Get) super.setFields(fields);
              }

              @Override
              public Get setKey(java.lang.String key) {
                return (Get) super.setKey(key);
              }

              @Override
              public Get setOauthToken(java.lang.String oauthToken) {
                return (Get) super.setOauthToken(oauthToken);
              }

              @Override
              public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Get) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Get setQuotaUser(java.lang.String quotaUser) {
                return (Get) super.setQuotaUser(quotaUser);
              }

              @Override
              public Get setUploadType(java.lang.String uploadType) {
                return (Get) super.setUploadType(uploadType);
              }

              @Override
              public Get setUploadProtocol(java.lang.String uploadProtocol) {
                return (Get) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the operation resource. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The name of the operation resource.
               */
              public java.lang.String getName() {
                return name;
              }

              /** The name of the operation resource. */
              public Get setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/featureGroups/[^/]+/features/[^/]+/operations/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Get set(String parameterName, Object value) {
                return (Get) super.set(parameterName, value);
              }
            }
            /**
             * Lists operations that match the specified filter in the request. If the server doesn't support
             * this method, it returns `UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.listWait".
             *
             * This request holds the parameters needed by the aiplatform server.  After setting any optional
             * parameters, call the {@link ListWait#execute()} method to invoke the remote operation.
             *
             * @param name The name of the operation's parent resource.
             * @return the request
             */
            public ListWait listWait(java.lang.String name) throws java.io.IOException {
              ListWait result = new ListWait(name);
              initialize(result);
              return result;
            }

            public class ListWait extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse> {

              private static final String REST_PATH = "v1/{+name}:wait";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featureGroups/[^/]+/features/[^/]+/operations/[^/]+$");

              /**
               * Lists operations that match the specified filter in the request. If the server doesn't support
               * this method, it returns `UNIMPLEMENTED`.
               *
               * Create a request for the method "operations.listWait".
               *
               * This request holds the parameters needed by the the aiplatform server.  After setting any
               * optional parameters, call the {@link ListWait#execute()} method to invoke the remote operation.
               * <p> {@link
               * ListWait#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The name of the operation's parent resource.
               * @since 1.13
               */
              protected ListWait(java.lang.String name) {
                super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/featureGroups/[^/]+/features/[^/]+/operations/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public ListWait set$Xgafv(java.lang.String $Xgafv) {
                return (ListWait) super.set$Xgafv($Xgafv);
              }

              @Override
              public ListWait setAccessToken(java.lang.String accessToken) {
                return (ListWait) super.setAccessToken(accessToken);
              }

              @Override
              public ListWait setAlt(java.lang.String alt) {
                return (ListWait) super.setAlt(alt);
              }

              @Override
              public ListWait setCallback(java.lang.String callback) {
                return (ListWait) super.setCallback(callback);
              }

              @Override
              public ListWait setFields(java.lang.String fields) {
                return (ListWait) super.setFields(fields);
              }

              @Override
              public ListWait setKey(java.lang.String key) {
                return (ListWait) super.setKey(key);
              }

              @Override
              public ListWait setOauthToken(java.lang.String oauthToken) {
                return (ListWait) super.setOauthToken(oauthToken);
              }

              @Override
              public ListWait setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (ListWait) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public ListWait setQuotaUser(java.lang.String quotaUser) {
                return (ListWait) super.setQuotaUser(quotaUser);
              }

              @Override
              public ListWait setUploadType(java.lang.String uploadType) {
                return (ListWait) super.setUploadType(uploadType);
              }

              @Override
              public ListWait setUploadProtocol(java.lang.String uploadProtocol) {
                return (ListWait) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the operation's parent resource. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The name of the operation's parent resource.
               */
              public java.lang.String getName() {
                return name;
              }

              /** The name of the operation's parent resource. */
              public ListWait setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/featureGroups/[^/]+/features/[^/]+/operations/[^/]+$");
                }
                this.name = name;
                return this;
              }

              /** The standard list filter. */
              @com.google.api.client.util.Key
              private java.lang.String filter;

              /** The standard list filter.
               */
              public java.lang.String getFilter() {
                return filter;
              }

              /** The standard list filter. */
              public ListWait setFilter(java.lang.String filter) {
                this.filter = filter;
                return this;
              }

              /** The standard list page size. */
              @com.google.api.client.util.Key
              private java.lang.Integer pageSize;

              /** The standard list page size.
               */
              public java.lang.Integer getPageSize() {
                return pageSize;
              }

              /** The standard list page size. */
              public ListWait setPageSize(java.lang.Integer pageSize) {
                this.pageSize = pageSize;
                return this;
              }

              /** The standard list page token. */
              @com.google.api.client.util.Key
              private java.lang.String pageToken;

              /** The standard list page token.
               */
              public java.lang.String getPageToken() {
                return pageToken;
              }

              /** The standard list page token. */
              public ListWait setPageToken(java.lang.String pageToken) {
                this.pageToken = pageToken;
                return this;
              }

              @Override
              public ListWait set(String parameterName, Object value) {
                return (ListWait) super.set(parameterName, value);
              }
            }
            /**
             * Waits until the specified long-running operation is done or reaches at most a specified timeout,
             * returning the latest state. If the operation is already done, the latest state is immediately
             * returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC
             * timeout is used. If the server does not support this method, it returns
             * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
             * the latest state before the specified timeout (including immediately), meaning even an immediate
             * response is no guarantee that the operation is done.
             *
             * Create a request for the method "operations.wait".
             *
             * This request holds the parameters needed by the aiplatform server.  After setting any optional
             * parameters, call the {@link Wait#execute()} method to invoke the remote operation.
             *
             * @param name The name of the operation resource to wait on.
             * @return the request
             */
            public Wait wait(java.lang.String name) throws java.io.IOException {
              Wait result = new Wait(name);
              initialize(result);
              return result;
            }

            public class Wait extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

              private static final String REST_PATH = "v1/{+name}:wait";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featureGroups/[^/]+/features/[^/]+/operations/[^/]+$");

              /**
               * Waits until the specified long-running operation is done or reaches at most a specified
               * timeout, returning the latest state. If the operation is already done, the latest state is
               * immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout,
               * the HTTP/RPC timeout is used. If the server does not support this method, it returns
               * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
               * the latest state before the specified timeout (including immediately), meaning even an
               * immediate response is no guarantee that the operation is done.
               *
               * Create a request for the method "operations.wait".
               *
               * This request holds the parameters needed by the the aiplatform server.  After setting any
               * optional parameters, call the {@link Wait#execute()} method to invoke the remote operation. <p>
               * {@link Wait#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The name of the operation resource to wait on.
               * @since 1.13
               */
              protected Wait(java.lang.String name) {
                super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/featureGroups/[^/]+/features/[^/]+/operations/[^/]+$");
                }
              }

              @Override
              public Wait set$Xgafv(java.lang.String $Xgafv) {
                return (Wait) super.set$Xgafv($Xgafv);
              }

              @Override
              public Wait setAccessToken(java.lang.String accessToken) {
                return (Wait) super.setAccessToken(accessToken);
              }

              @Override
              public Wait setAlt(java.lang.String alt) {
                return (Wait) super.setAlt(alt);
              }

              @Override
              public Wait setCallback(java.lang.String callback) {
                return (Wait) super.setCallback(callback);
              }

              @Override
              public Wait setFields(java.lang.String fields) {
                return (Wait) super.setFields(fields);
              }

              @Override
              public Wait setKey(java.lang.String key) {
                return (Wait) super.setKey(key);
              }

              @Override
              public Wait setOauthToken(java.lang.String oauthToken) {
                return (Wait) super.setOauthToken(oauthToken);
              }

              @Override
              public Wait setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Wait) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Wait setQuotaUser(java.lang.String quotaUser) {
                return (Wait) super.setQuotaUser(quotaUser);
              }

              @Override
              public Wait setUploadType(java.lang.String uploadType) {
                return (Wait) super.setUploadType(uploadType);
              }

              @Override
              public Wait setUploadProtocol(java.lang.String uploadProtocol) {
                return (Wait) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the operation resource to wait on. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The name of the operation resource to wait on.
               */
              public java.lang.String getName() {
                return name;
              }

              /** The name of the operation resource to wait on. */
              public Wait setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/featureGroups/[^/]+/features/[^/]+/operations/[^/]+$");
                }
                this.name = name;
                return this;
              }

              /**
               * The maximum duration to wait before timing out. If left blank, the wait will be at
               * most the time permitted by the underlying HTTP/RPC protocol. If RPC context
               * deadline is also specified, the shorter one will be used.
               */
              @com.google.api.client.util.Key
              private String timeout;

              /** The maximum duration to wait before timing out. If left blank, the wait will be at most the time
             permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the
             shorter one will be used.
               */
              public String getTimeout() {
                return timeout;
              }

              /**
               * The maximum duration to wait before timing out. If left blank, the wait will be at
               * most the time permitted by the underlying HTTP/RPC protocol. If RPC context
               * deadline is also specified, the shorter one will be used.
               */
              public Wait setTimeout(String timeout) {
                this.timeout = timeout;
                return this;
              }

              @Override
              public Wait set(String parameterName, Object value) {
                return (Wait) super.set(parameterName, value);
              }
            }

          }
        }
        /**
         * An accessor for creating requests from the Operations collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Aiplatform aiplatform = new Aiplatform(...);}
         *   {@code Aiplatform.Operations.List request = aiplatform.operations().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Operations operations() {
          return new Operations();
        }

        /**
         * The "operations" collection of methods.
         */
        public class Operations {

          /**
           * Deletes a long-running operation. This method indicates that the client is no longer interested
           * in the operation result. It does not cancel the operation. If the server doesn't support this
           * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.delete".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource to be deleted.
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featureGroups/[^/]+/operations/[^/]+$");

            /**
             * Deletes a long-running operation. This method indicates that the client is no longer interested
             * in the operation result. It does not cancel the operation. If the server doesn't support this
             * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.delete".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource to be deleted.
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featureGroups/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource to be deleted. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource to be deleted.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource to be deleted. */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featureGroups/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Gets the latest state of a long-running operation. Clients can use this method to poll the
           * operation result at intervals as recommended by the API service.
           *
           * Create a request for the method "operations.get".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource.
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featureGroups/[^/]+/operations/[^/]+$");

            /**
             * Gets the latest state of a long-running operation. Clients can use this method to poll the
             * operation result at intervals as recommended by the API service.
             *
             * Create a request for the method "operations.get".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource.
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featureGroups/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource. */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featureGroups/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Lists operations that match the specified filter in the request. If the server doesn't support
           * this method, it returns `UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.listWait".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link ListWait#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation's parent resource.
           * @return the request
           */
          public ListWait listWait(java.lang.String name) throws java.io.IOException {
            ListWait result = new ListWait(name);
            initialize(result);
            return result;
          }

          public class ListWait extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse> {

            private static final String REST_PATH = "v1/{+name}:wait";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featureGroups/[^/]+/operations/[^/]+$");

            /**
             * Lists operations that match the specified filter in the request. If the server doesn't support
             * this method, it returns `UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.listWait".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link ListWait#execute()} method to invoke the remote operation.
             * <p> {@link
             * ListWait#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation's parent resource.
             * @since 1.13
             */
            protected ListWait(java.lang.String name) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featureGroups/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public ListWait set$Xgafv(java.lang.String $Xgafv) {
              return (ListWait) super.set$Xgafv($Xgafv);
            }

            @Override
            public ListWait setAccessToken(java.lang.String accessToken) {
              return (ListWait) super.setAccessToken(accessToken);
            }

            @Override
            public ListWait setAlt(java.lang.String alt) {
              return (ListWait) super.setAlt(alt);
            }

            @Override
            public ListWait setCallback(java.lang.String callback) {
              return (ListWait) super.setCallback(callback);
            }

            @Override
            public ListWait setFields(java.lang.String fields) {
              return (ListWait) super.setFields(fields);
            }

            @Override
            public ListWait setKey(java.lang.String key) {
              return (ListWait) super.setKey(key);
            }

            @Override
            public ListWait setOauthToken(java.lang.String oauthToken) {
              return (ListWait) super.setOauthToken(oauthToken);
            }

            @Override
            public ListWait setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (ListWait) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public ListWait setQuotaUser(java.lang.String quotaUser) {
              return (ListWait) super.setQuotaUser(quotaUser);
            }

            @Override
            public ListWait setUploadType(java.lang.String uploadType) {
              return (ListWait) super.setUploadType(uploadType);
            }

            @Override
            public ListWait setUploadProtocol(java.lang.String uploadProtocol) {
              return (ListWait) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation's parent resource. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation's parent resource.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation's parent resource. */
            public ListWait setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featureGroups/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /** The standard list filter. */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** The standard list filter.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /** The standard list filter. */
            public ListWait setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /** The standard list page size. */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** The standard list page size.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /** The standard list page size. */
            public ListWait setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** The standard list page token. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** The standard list page token.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** The standard list page token. */
            public ListWait setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public ListWait set(String parameterName, Object value) {
              return (ListWait) super.set(parameterName, value);
            }
          }
          /**
           * Waits until the specified long-running operation is done or reaches at most a specified timeout,
           * returning the latest state. If the operation is already done, the latest state is immediately
           * returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC
           * timeout is used. If the server does not support this method, it returns
           * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
           * the latest state before the specified timeout (including immediately), meaning even an immediate
           * response is no guarantee that the operation is done.
           *
           * Create a request for the method "operations.wait".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Wait#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource to wait on.
           * @return the request
           */
          public Wait wait(java.lang.String name) throws java.io.IOException {
            Wait result = new Wait(name);
            initialize(result);
            return result;
          }

          public class Wait extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+name}:wait";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featureGroups/[^/]+/operations/[^/]+$");

            /**
             * Waits until the specified long-running operation is done or reaches at most a specified
             * timeout, returning the latest state. If the operation is already done, the latest state is
             * immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout,
             * the HTTP/RPC timeout is used. If the server does not support this method, it returns
             * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
             * the latest state before the specified timeout (including immediately), meaning even an
             * immediate response is no guarantee that the operation is done.
             *
             * Create a request for the method "operations.wait".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Wait#execute()} method to invoke the remote operation. <p>
             * {@link Wait#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource to wait on.
             * @since 1.13
             */
            protected Wait(java.lang.String name) {
              super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featureGroups/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public Wait set$Xgafv(java.lang.String $Xgafv) {
              return (Wait) super.set$Xgafv($Xgafv);
            }

            @Override
            public Wait setAccessToken(java.lang.String accessToken) {
              return (Wait) super.setAccessToken(accessToken);
            }

            @Override
            public Wait setAlt(java.lang.String alt) {
              return (Wait) super.setAlt(alt);
            }

            @Override
            public Wait setCallback(java.lang.String callback) {
              return (Wait) super.setCallback(callback);
            }

            @Override
            public Wait setFields(java.lang.String fields) {
              return (Wait) super.setFields(fields);
            }

            @Override
            public Wait setKey(java.lang.String key) {
              return (Wait) super.setKey(key);
            }

            @Override
            public Wait setOauthToken(java.lang.String oauthToken) {
              return (Wait) super.setOauthToken(oauthToken);
            }

            @Override
            public Wait setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Wait) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Wait setQuotaUser(java.lang.String quotaUser) {
              return (Wait) super.setQuotaUser(quotaUser);
            }

            @Override
            public Wait setUploadType(java.lang.String uploadType) {
              return (Wait) super.setUploadType(uploadType);
            }

            @Override
            public Wait setUploadProtocol(java.lang.String uploadProtocol) {
              return (Wait) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource to wait on. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource to wait on.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource to wait on. */
            public Wait setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featureGroups/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * The maximum duration to wait before timing out. If left blank, the wait will be at
             * most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline
             * is also specified, the shorter one will be used.
             */
            @com.google.api.client.util.Key
            private String timeout;

            /** The maximum duration to wait before timing out. If left blank, the wait will be at most the time
           permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the
           shorter one will be used.
             */
            public String getTimeout() {
              return timeout;
            }

            /**
             * The maximum duration to wait before timing out. If left blank, the wait will be at
             * most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline
             * is also specified, the shorter one will be used.
             */
            public Wait setTimeout(String timeout) {
              this.timeout = timeout;
              return this;
            }

            @Override
            public Wait set(String parameterName, Object value) {
              return (Wait) super.set(parameterName, value);
            }
          }

        }
      }
      /**
       * An accessor for creating requests from the FeatureOnlineStores collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Aiplatform aiplatform = new Aiplatform(...);}
       *   {@code Aiplatform.FeatureOnlineStores.List request = aiplatform.featureOnlineStores().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public FeatureOnlineStores featureOnlineStores() {
        return new FeatureOnlineStores();
      }

      /**
       * The "featureOnlineStores" collection of methods.
       */
      public class FeatureOnlineStores {

        /**
         * Creates a new FeatureOnlineStore in a given project and location.
         *
         * Create a request for the method "featureOnlineStores.create".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The resource name of the Location to create FeatureOnlineStores. Format:
         *        `projects/{project}/locations/{location}`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1FeatureOnlineStore}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1FeatureOnlineStore content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+parent}/featureOnlineStores";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Creates a new FeatureOnlineStore in a given project and location.
           *
           * Create a request for the method "featureOnlineStores.create".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The resource name of the Location to create FeatureOnlineStores. Format:
         *        `projects/{project}/locations/{location}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1FeatureOnlineStore}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1FeatureOnlineStore content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the Location to create FeatureOnlineStores. Format:
           * `projects/{project}/locations/{location}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The resource name of the Location to create FeatureOnlineStores. Format:
         `projects/{project}/locations/{location}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The resource name of the Location to create FeatureOnlineStores. Format:
           * `projects/{project}/locations/{location}`
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Required. The ID to use for this FeatureOnlineStore, which will become the final
           * component of the FeatureOnlineStore's resource name. This value may be up to 60
           * characters, and valid characters are `[a-z0-9_]`. The first character cannot be a
           * number. The value must be unique within the project and location.
           */
          @com.google.api.client.util.Key
          private java.lang.String featureOnlineStoreId;

          /** Required. The ID to use for this FeatureOnlineStore, which will become the final component of the
         FeatureOnlineStore's resource name. This value may be up to 60 characters, and valid characters are
         `[a-z0-9_]`. The first character cannot be a number. The value must be unique within the project
         and location.
           */
          public java.lang.String getFeatureOnlineStoreId() {
            return featureOnlineStoreId;
          }

          /**
           * Required. The ID to use for this FeatureOnlineStore, which will become the final
           * component of the FeatureOnlineStore's resource name. This value may be up to 60
           * characters, and valid characters are `[a-z0-9_]`. The first character cannot be a
           * number. The value must be unique within the project and location.
           */
          public Create setFeatureOnlineStoreId(java.lang.String featureOnlineStoreId) {
            this.featureOnlineStoreId = featureOnlineStoreId;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a single FeatureOnlineStore. The FeatureOnlineStore must not contain any FeatureViews.
         *
         * Create a request for the method "featureOnlineStores.delete".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the FeatureOnlineStore to be deleted. Format:
         *        `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+$");

          /**
           * Deletes a single FeatureOnlineStore. The FeatureOnlineStore must not contain any FeatureViews.
           *
           * Create a request for the method "featureOnlineStores.delete".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the FeatureOnlineStore to be deleted. Format:
         *        `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the FeatureOnlineStore to be deleted. Format:
           * `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the FeatureOnlineStore to be deleted. Format:
         `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the FeatureOnlineStore to be deleted. Format:
           * `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}`
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * If set to true, any FeatureViews and Features for this FeatureOnlineStore will also be
           * deleted. (Otherwise, the request will only work if the FeatureOnlineStore has no
           * FeatureViews.)
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean force;

          /** If set to true, any FeatureViews and Features for this FeatureOnlineStore will also be deleted.
         (Otherwise, the request will only work if the FeatureOnlineStore has no FeatureViews.)
           */
          public java.lang.Boolean getForce() {
            return force;
          }

          /**
           * If set to true, any FeatureViews and Features for this FeatureOnlineStore will also be
           * deleted. (Otherwise, the request will only work if the FeatureOnlineStore has no
           * FeatureViews.)
           */
          public Delete setForce(java.lang.Boolean force) {
            this.force = force;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets details of a single FeatureOnlineStore.
         *
         * Create a request for the method "featureOnlineStores.get".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the FeatureOnlineStore resource.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1FeatureOnlineStore> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+$");

          /**
           * Gets details of a single FeatureOnlineStore.
           *
           * Create a request for the method "featureOnlineStores.get".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the FeatureOnlineStore resource.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1FeatureOnlineStore.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The name of the FeatureOnlineStore resource. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the FeatureOnlineStore resource.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. The name of the FeatureOnlineStore resource. */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Gets the access control policy for a resource. Returns an empty policy if the resource exists and
         * does not have a policy set.
         *
         * Create a request for the method "featureOnlineStores.getIamPolicy".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
         * @return the request
         */
        public GetIamPolicy getIamPolicy(java.lang.String resource) throws java.io.IOException {
          GetIamPolicy result = new GetIamPolicy(resource);
          initialize(result);
          return result;
        }

        public class GetIamPolicy extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleIamV1Policy> {

          private static final String REST_PATH = "v1/{+resource}:getIamPolicy";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+$");

          /**
           * Gets the access control policy for a resource. Returns an empty policy if the resource exists
           * and does not have a policy set.
           *
           * Create a request for the method "featureOnlineStores.getIamPolicy".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
           * operation. <p> {@link
           * GetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
           * @since 1.13
           */
          protected GetIamPolicy(java.lang.String resource) {
            super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleIamV1Policy.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+$");
            }
          }

          @Override
          public GetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
            return (GetIamPolicy) super.set$Xgafv($Xgafv);
          }

          @Override
          public GetIamPolicy setAccessToken(java.lang.String accessToken) {
            return (GetIamPolicy) super.setAccessToken(accessToken);
          }

          @Override
          public GetIamPolicy setAlt(java.lang.String alt) {
            return (GetIamPolicy) super.setAlt(alt);
          }

          @Override
          public GetIamPolicy setCallback(java.lang.String callback) {
            return (GetIamPolicy) super.setCallback(callback);
          }

          @Override
          public GetIamPolicy setFields(java.lang.String fields) {
            return (GetIamPolicy) super.setFields(fields);
          }

          @Override
          public GetIamPolicy setKey(java.lang.String key) {
            return (GetIamPolicy) super.setKey(key);
          }

          @Override
          public GetIamPolicy setOauthToken(java.lang.String oauthToken) {
            return (GetIamPolicy) super.setOauthToken(oauthToken);
          }

          @Override
          public GetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (GetIamPolicy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public GetIamPolicy setQuotaUser(java.lang.String quotaUser) {
            return (GetIamPolicy) super.setQuotaUser(quotaUser);
          }

          @Override
          public GetIamPolicy setUploadType(java.lang.String uploadType) {
            return (GetIamPolicy) super.setUploadType(uploadType);
          }

          @Override
          public GetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
            return (GetIamPolicy) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy is being requested. See [Resource
         names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          public GetIamPolicy setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          /**
           * Optional. The maximum policy version that will be used to format the policy. Valid
           * values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests
           * for policies with any conditional role bindings must specify version 3. Policies with
           * no conditional role bindings may specify any valid value or leave the field unset. The
           * policy in the response might use the policy version that you specified, or it might use
           * a lower policy version. For example, if you specify version 3, but the policy has no
           * conditional role bindings, the response uses version 1. To learn which resources
           * support conditions in their IAM policies, see the [IAM
           * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
           */
          @com.google.api.client.util.Key("options.requestedPolicyVersion")
          private java.lang.Integer optionsRequestedPolicyVersion;

          /** Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1,
         and 3. Requests specifying an invalid value will be rejected. Requests for policies with any
         conditional role bindings must specify version 3. Policies with no conditional role bindings may
         specify any valid value or leave the field unset. The policy in the response might use the policy
         version that you specified, or it might use a lower policy version. For example, if you specify
         version 3, but the policy has no conditional role bindings, the response uses version 1. To learn
         which resources support conditions in their IAM policies, see the [IAM
         documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
           */
          public java.lang.Integer getOptionsRequestedPolicyVersion() {
            return optionsRequestedPolicyVersion;
          }

          /**
           * Optional. The maximum policy version that will be used to format the policy. Valid
           * values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests
           * for policies with any conditional role bindings must specify version 3. Policies with
           * no conditional role bindings may specify any valid value or leave the field unset. The
           * policy in the response might use the policy version that you specified, or it might use
           * a lower policy version. For example, if you specify version 3, but the policy has no
           * conditional role bindings, the response uses version 1. To learn which resources
           * support conditions in their IAM policies, see the [IAM
           * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
           */
          public GetIamPolicy setOptionsRequestedPolicyVersion(java.lang.Integer optionsRequestedPolicyVersion) {
            this.optionsRequestedPolicyVersion = optionsRequestedPolicyVersion;
            return this;
          }

          @Override
          public GetIamPolicy set(String parameterName, Object value) {
            return (GetIamPolicy) super.set(parameterName, value);
          }
        }
        /**
         * Lists FeatureOnlineStores in a given project and location.
         *
         * Create a request for the method "featureOnlineStores.list".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The resource name of the Location to list FeatureOnlineStores. Format:
         *        `projects/{project}/locations/{location}`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListFeatureOnlineStoresResponse> {

          private static final String REST_PATH = "v1/{+parent}/featureOnlineStores";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists FeatureOnlineStores in a given project and location.
           *
           * Create a request for the method "featureOnlineStores.list".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The resource name of the Location to list FeatureOnlineStores. Format:
         *        `projects/{project}/locations/{location}`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListFeatureOnlineStoresResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the Location to list FeatureOnlineStores. Format:
           * `projects/{project}/locations/{location}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The resource name of the Location to list FeatureOnlineStores. Format:
         `projects/{project}/locations/{location}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The resource name of the Location to list FeatureOnlineStores. Format:
           * `projects/{project}/locations/{location}`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Lists the FeatureOnlineStores that match the filter expression. The following fields
           * are supported: * `create_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=`
           * comparisons. Values must be in RFC 3339 format. * `update_time`: Supports `=`, `!=`,
           * `<`, `>`, `<=`, and `>=` comparisons. Values must be in RFC 3339 format. * `labels`:
           * Supports key-value equality and key presence. Examples: * `create_time > "2020-01-01"
           * OR update_time > "2020-01-01"` FeatureOnlineStores created or updated after 2020-01-01.
           * * `labels.env = "prod"` FeatureOnlineStores with label "env" set to "prod".
           */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** Lists the FeatureOnlineStores that match the filter expression. The following fields are supported:
         * `create_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. Values must be in RFC
         3339 format. * `update_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. Values must
         be in RFC 3339 format. * `labels`: Supports key-value equality and key presence. Examples: *
         `create_time > "2020-01-01" OR update_time > "2020-01-01"` FeatureOnlineStores created or updated
         after 2020-01-01. * `labels.env = "prod"` FeatureOnlineStores with label "env" set to "prod".
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /**
           * Lists the FeatureOnlineStores that match the filter expression. The following fields
           * are supported: * `create_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=`
           * comparisons. Values must be in RFC 3339 format. * `update_time`: Supports `=`, `!=`,
           * `<`, `>`, `<=`, and `>=` comparisons. Values must be in RFC 3339 format. * `labels`:
           * Supports key-value equality and key presence. Examples: * `create_time > "2020-01-01"
           * OR update_time > "2020-01-01"` FeatureOnlineStores created or updated after 2020-01-01.
           * * `labels.env = "prod"` FeatureOnlineStores with label "env" set to "prod".
           */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /**
           * A comma-separated list of fields to order by, sorted in ascending order. Use "desc"
           * after a field name for descending. Supported Fields: * `create_time` * `update_time`
           */
          @com.google.api.client.util.Key
          private java.lang.String orderBy;

          /** A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field
         name for descending. Supported Fields: * `create_time` * `update_time`
           */
          public java.lang.String getOrderBy() {
            return orderBy;
          }

          /**
           * A comma-separated list of fields to order by, sorted in ascending order. Use "desc"
           * after a field name for descending. Supported Fields: * `create_time` * `update_time`
           */
          public List setOrderBy(java.lang.String orderBy) {
            this.orderBy = orderBy;
            return this;
          }

          /**
           * The maximum number of FeatureOnlineStores to return. The service may return fewer than
           * this value. If unspecified, at most 100 FeatureOnlineStores will be returned. The
           * maximum value is 100; any value greater than 100 will be coerced to 100.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The maximum number of FeatureOnlineStores to return. The service may return fewer than this value.
         If unspecified, at most 100 FeatureOnlineStores will be returned. The maximum value is 100; any
         value greater than 100 will be coerced to 100.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * The maximum number of FeatureOnlineStores to return. The service may return fewer than
           * this value. If unspecified, at most 100 FeatureOnlineStores will be returned. The
           * maximum value is 100; any value greater than 100 will be coerced to 100.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * A page token, received from a previous
           * FeatureOnlineStoreAdminService.ListFeatureOnlineStores call. Provide this to retrieve
           * the subsequent page. When paginating, all other parameters provided to
           * FeatureOnlineStoreAdminService.ListFeatureOnlineStores must match the call that
           * provided the page token.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** A page token, received from a previous FeatureOnlineStoreAdminService.ListFeatureOnlineStores call.
         Provide this to retrieve the subsequent page. When paginating, all other parameters provided to
         FeatureOnlineStoreAdminService.ListFeatureOnlineStores must match the call that provided the page
         token.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * A page token, received from a previous
           * FeatureOnlineStoreAdminService.ListFeatureOnlineStores call. Provide this to retrieve
           * the subsequent page. When paginating, all other parameters provided to
           * FeatureOnlineStoreAdminService.ListFeatureOnlineStores must match the call that
           * provided the page token.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates the parameters of a single FeatureOnlineStore.
         *
         * Create a request for the method "featureOnlineStores.patch".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Identifier. Name of the FeatureOnlineStore. Format:
         *        `projects/{project}/locations/{location}/featureOnlineStores/{featureOnlineStore}`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1FeatureOnlineStore}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1FeatureOnlineStore content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+$");

          /**
           * Updates the parameters of a single FeatureOnlineStore.
           *
           * Create a request for the method "featureOnlineStores.patch".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           * <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Identifier. Name of the FeatureOnlineStore. Format:
         *        `projects/{project}/locations/{location}/featureOnlineStores/{featureOnlineStore}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1FeatureOnlineStore}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1FeatureOnlineStore content) {
            super(Aiplatform.this, "PATCH", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Identifier. Name of the FeatureOnlineStore. Format:
           * `projects/{project}/locations/{location}/featureOnlineStores/{featureOnlineStore}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Identifier. Name of the FeatureOnlineStore. Format:
         `projects/{project}/locations/{location}/featureOnlineStores/{featureOnlineStore}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Identifier. Name of the FeatureOnlineStore. Format:
           * `projects/{project}/locations/{location}/featureOnlineStores/{featureOnlineStore}`
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Field mask is used to specify the fields to be overwritten in the FeatureOnlineStore
           * resource by the update. The fields specified in the update_mask are relative to the
           * resource, not the full request. A field will be overwritten if it is in the mask. If
           * the user does not provide a mask then only the non-empty fields present in the request
           * will be overwritten. Set the update_mask to `*` to override all fields. Updatable
           * fields: * `labels` * `description` * `bigtable` * `bigtable.auto_scaling` *
           * `bigtable.enable_multi_region_replica`
           */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Field mask is used to specify the fields to be overwritten in the FeatureOnlineStore resource by
         the update. The fields specified in the update_mask are relative to the resource, not the full
         request. A field will be overwritten if it is in the mask. If the user does not provide a mask then
         only the non-empty fields present in the request will be overwritten. Set the update_mask to `*` to
         override all fields. Updatable fields: * `labels` * `description` * `bigtable` *
         `bigtable.auto_scaling` * `bigtable.enable_multi_region_replica`
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /**
           * Field mask is used to specify the fields to be overwritten in the FeatureOnlineStore
           * resource by the update. The fields specified in the update_mask are relative to the
           * resource, not the full request. A field will be overwritten if it is in the mask. If
           * the user does not provide a mask then only the non-empty fields present in the request
           * will be overwritten. Set the update_mask to `*` to override all fields. Updatable
           * fields: * `labels` * `description` * `bigtable` * `bigtable.auto_scaling` *
           * `bigtable.enable_multi_region_replica`
           */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }
        /**
         * Sets the access control policy on the specified resource. Replaces any existing policy. Can
         * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
         *
         * Create a request for the method "featureOnlineStores.setIamPolicy".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleIamV1SetIamPolicyRequest}
         * @return the request
         */
        public SetIamPolicy setIamPolicy(java.lang.String resource, com.google.api.services.aiplatform.v1.model.GoogleIamV1SetIamPolicyRequest content) throws java.io.IOException {
          SetIamPolicy result = new SetIamPolicy(resource, content);
          initialize(result);
          return result;
        }

        public class SetIamPolicy extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleIamV1Policy> {

          private static final String REST_PATH = "v1/{+resource}:setIamPolicy";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+$");

          /**
           * Sets the access control policy on the specified resource. Replaces any existing policy. Can
           * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
           *
           * Create a request for the method "featureOnlineStores.setIamPolicy".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
           * operation. <p> {@link
           * SetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleIamV1SetIamPolicyRequest}
           * @since 1.13
           */
          protected SetIamPolicy(java.lang.String resource, com.google.api.services.aiplatform.v1.model.GoogleIamV1SetIamPolicyRequest content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleIamV1Policy.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+$");
            }
          }

          @Override
          public SetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
            return (SetIamPolicy) super.set$Xgafv($Xgafv);
          }

          @Override
          public SetIamPolicy setAccessToken(java.lang.String accessToken) {
            return (SetIamPolicy) super.setAccessToken(accessToken);
          }

          @Override
          public SetIamPolicy setAlt(java.lang.String alt) {
            return (SetIamPolicy) super.setAlt(alt);
          }

          @Override
          public SetIamPolicy setCallback(java.lang.String callback) {
            return (SetIamPolicy) super.setCallback(callback);
          }

          @Override
          public SetIamPolicy setFields(java.lang.String fields) {
            return (SetIamPolicy) super.setFields(fields);
          }

          @Override
          public SetIamPolicy setKey(java.lang.String key) {
            return (SetIamPolicy) super.setKey(key);
          }

          @Override
          public SetIamPolicy setOauthToken(java.lang.String oauthToken) {
            return (SetIamPolicy) super.setOauthToken(oauthToken);
          }

          @Override
          public SetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (SetIamPolicy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public SetIamPolicy setQuotaUser(java.lang.String quotaUser) {
            return (SetIamPolicy) super.setQuotaUser(quotaUser);
          }

          @Override
          public SetIamPolicy setUploadType(java.lang.String uploadType) {
            return (SetIamPolicy) super.setUploadType(uploadType);
          }

          @Override
          public SetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
            return (SetIamPolicy) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy is being specified. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy is being specified. See [Resource
         names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy is being specified. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          public SetIamPolicy setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public SetIamPolicy set(String parameterName, Object value) {
            return (SetIamPolicy) super.set(parameterName, value);
          }
        }
        /**
         * Returns permissions that a caller has on the specified resource. If the resource does not exist,
         * this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is
         * designed to be used for building permission-aware UIs and command-line tools, not for
         * authorization checking. This operation may "fail open" without warning.
         *
         * Create a request for the method "featureOnlineStores.testIamPermissions".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
         * @return the request
         */
        public TestIamPermissions testIamPermissions(java.lang.String resource) throws java.io.IOException {
          TestIamPermissions result = new TestIamPermissions(resource);
          initialize(result);
          return result;
        }

        public class TestIamPermissions extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleIamV1TestIamPermissionsResponse> {

          private static final String REST_PATH = "v1/{+resource}:testIamPermissions";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+$");

          /**
           * Returns permissions that a caller has on the specified resource. If the resource does not
           * exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This
           * operation is designed to be used for building permission-aware UIs and command-line tools, not
           * for authorization checking. This operation may "fail open" without warning.
           *
           * Create a request for the method "featureOnlineStores.testIamPermissions".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
           * operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.services.A
           * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
           * @since 1.13
           */
          protected TestIamPermissions(java.lang.String resource) {
            super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleIamV1TestIamPermissionsResponse.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+$");
            }
          }

          @Override
          public TestIamPermissions set$Xgafv(java.lang.String $Xgafv) {
            return (TestIamPermissions) super.set$Xgafv($Xgafv);
          }

          @Override
          public TestIamPermissions setAccessToken(java.lang.String accessToken) {
            return (TestIamPermissions) super.setAccessToken(accessToken);
          }

          @Override
          public TestIamPermissions setAlt(java.lang.String alt) {
            return (TestIamPermissions) super.setAlt(alt);
          }

          @Override
          public TestIamPermissions setCallback(java.lang.String callback) {
            return (TestIamPermissions) super.setCallback(callback);
          }

          @Override
          public TestIamPermissions setFields(java.lang.String fields) {
            return (TestIamPermissions) super.setFields(fields);
          }

          @Override
          public TestIamPermissions setKey(java.lang.String key) {
            return (TestIamPermissions) super.setKey(key);
          }

          @Override
          public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
            return (TestIamPermissions) super.setOauthToken(oauthToken);
          }

          @Override
          public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
            return (TestIamPermissions) super.setQuotaUser(quotaUser);
          }

          @Override
          public TestIamPermissions setUploadType(java.lang.String uploadType) {
            return (TestIamPermissions) super.setUploadType(uploadType);
          }

          @Override
          public TestIamPermissions setUploadProtocol(java.lang.String uploadProtocol) {
            return (TestIamPermissions) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy detail is being requested. See [Resource
         names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          public TestIamPermissions setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          /**
           * The set of permissions to check for the `resource`. Permissions with wildcards (such as
           * `*` or `storage.*`) are not allowed. For more information see [IAM
           * Overview](https://cloud.google.com/iam/docs/overview#permissions).
           */
          @com.google.api.client.util.Key
          private java.util.List<java.lang.String> permissions;

          /** The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or
         `storage.*`) are not allowed. For more information see [IAM
         Overview](https://cloud.google.com/iam/docs/overview#permissions).
           */
          public java.util.List<java.lang.String> getPermissions() {
            return permissions;
          }

          /**
           * The set of permissions to check for the `resource`. Permissions with wildcards (such as
           * `*` or `storage.*`) are not allowed. For more information see [IAM
           * Overview](https://cloud.google.com/iam/docs/overview#permissions).
           */
          public TestIamPermissions setPermissions(java.util.List<java.lang.String> permissions) {
            this.permissions = permissions;
            return this;
          }

          @Override
          public TestIamPermissions set(String parameterName, Object value) {
            return (TestIamPermissions) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the FeatureViews collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Aiplatform aiplatform = new Aiplatform(...);}
         *   {@code Aiplatform.FeatureViews.List request = aiplatform.featureViews().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public FeatureViews featureViews() {
          return new FeatureViews();
        }

        /**
         * The "featureViews" collection of methods.
         */
        public class FeatureViews {

          /**
           * Creates a new FeatureView in a given FeatureOnlineStore.
           *
           * Create a request for the method "featureViews.create".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The resource name of the FeatureOnlineStore to create FeatureViews. Format:
           *        `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1FeatureView}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1FeatureView content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+parent}/featureViews";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+$");

            /**
             * Creates a new FeatureView in a given FeatureOnlineStore.
             *
             * Create a request for the method "featureViews.create".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
             * <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The resource name of the FeatureOnlineStore to create FeatureViews. Format:
           *        `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}`
             * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1FeatureView}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1FeatureView content) {
              super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The resource name of the FeatureOnlineStore to create FeatureViews. Format:
             * `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The resource name of the FeatureOnlineStore to create FeatureViews. Format:
           `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The resource name of the FeatureOnlineStore to create FeatureViews. Format:
             * `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}`
             */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Required. The ID to use for the FeatureView, which will become the final component of
             * the FeatureView's resource name. This value may be up to 60 characters, and valid
             * characters are `[a-z0-9_]`. The first character cannot be a number. The value must be
             * unique within a FeatureOnlineStore.
             */
            @com.google.api.client.util.Key
            private java.lang.String featureViewId;

            /** Required. The ID to use for the FeatureView, which will become the final component of the
           FeatureView's resource name. This value may be up to 60 characters, and valid characters are
           `[a-z0-9_]`. The first character cannot be a number. The value must be unique within a
           FeatureOnlineStore.
             */
            public java.lang.String getFeatureViewId() {
              return featureViewId;
            }

            /**
             * Required. The ID to use for the FeatureView, which will become the final component of
             * the FeatureView's resource name. This value may be up to 60 characters, and valid
             * characters are `[a-z0-9_]`. The first character cannot be a number. The value must be
             * unique within a FeatureOnlineStore.
             */
            public Create setFeatureViewId(java.lang.String featureViewId) {
              this.featureViewId = featureViewId;
              return this;
            }

            /**
             * Immutable. If set to true, one on demand sync will be run immediately, regardless
             * whether the FeatureView.sync_config is configured or not.
             */
            @com.google.api.client.util.Key
            private java.lang.Boolean runSyncImmediately;

            /** Immutable. If set to true, one on demand sync will be run immediately, regardless whether the
           FeatureView.sync_config is configured or not.
             */
            public java.lang.Boolean getRunSyncImmediately() {
              return runSyncImmediately;
            }

            /**
             * Immutable. If set to true, one on demand sync will be run immediately, regardless
             * whether the FeatureView.sync_config is configured or not.
             */
            public Create setRunSyncImmediately(java.lang.Boolean runSyncImmediately) {
              this.runSyncImmediately = runSyncImmediately;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Deletes a single FeatureView.
           *
           * Create a request for the method "featureViews.delete".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the FeatureView to be deleted. Format: `projects/{project}/locations/{location
           *        }/featureOnlineStores/{feature_online_store}/featureViews/{feature_view}`
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+/featureViews/[^/]+$");

            /**
             * Deletes a single FeatureView.
             *
             * Create a request for the method "featureViews.delete".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the FeatureView to be deleted. Format: `projects/{project}/locations/{location
           *        }/featureOnlineStores/{feature_online_store}/featureViews/{feature_view}`
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+/featureViews/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the FeatureView to be deleted. Format: `projects/{project}/loca
             * tions/{location}/featureOnlineStores/{feature_online_store}/featureViews/{feature_vie
             * w}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the FeatureView to be deleted. Format: `projects/{project}/locations/{locatio
           n}/featureOnlineStores/{feature_online_store}/featureViews/{feature_view}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The name of the FeatureView to be deleted. Format: `projects/{project}/loca
             * tions/{location}/featureOnlineStores/{feature_online_store}/featureViews/{feature_vie
             * w}`
             */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+/featureViews/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Fetch feature values under a FeatureView.
           *
           * Create a request for the method "featureViews.fetchFeatureValues".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link FetchFeatureValues#execute()} method to invoke the remote operation.
           *
           * @param featureView Required. FeatureView resource format `projects/{project}/locations/{location}/featureOnlineStores/{
           *        featureOnlineStore}/featureViews/{featureView}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1FetchFeatureValuesRequest}
           * @return the request
           */
          public FetchFeatureValues fetchFeatureValues(java.lang.String featureView, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1FetchFeatureValuesRequest content) throws java.io.IOException {
            FetchFeatureValues result = new FetchFeatureValues(featureView, content);
            initialize(result);
            return result;
          }

          public class FetchFeatureValues extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1FetchFeatureValuesResponse> {

            private static final String REST_PATH = "v1/{+featureView}:fetchFeatureValues";

            private final java.util.regex.Pattern FEATURE_VIEW_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+/featureViews/[^/]+$");

            /**
             * Fetch feature values under a FeatureView.
             *
             * Create a request for the method "featureViews.fetchFeatureValues".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link FetchFeatureValues#execute()} method to invoke the remote
             * operation. <p> {@link FetchFeatureValues#initialize(com.google.api.client.googleapis.services.A
             * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
             * invoking the constructor. </p>
             *
             * @param featureView Required. FeatureView resource format `projects/{project}/locations/{location}/featureOnlineStores/{
           *        featureOnlineStore}/featureViews/{featureView}`
             * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1FetchFeatureValuesRequest}
             * @since 1.13
             */
            protected FetchFeatureValues(java.lang.String featureView, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1FetchFeatureValuesRequest content) {
              super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1FetchFeatureValuesResponse.class);
              this.featureView = com.google.api.client.util.Preconditions.checkNotNull(featureView, "Required parameter featureView must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(FEATURE_VIEW_PATTERN.matcher(featureView).matches(),
                    "Parameter featureView must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+/featureViews/[^/]+$");
              }
            }

            @Override
            public FetchFeatureValues set$Xgafv(java.lang.String $Xgafv) {
              return (FetchFeatureValues) super.set$Xgafv($Xgafv);
            }

            @Override
            public FetchFeatureValues setAccessToken(java.lang.String accessToken) {
              return (FetchFeatureValues) super.setAccessToken(accessToken);
            }

            @Override
            public FetchFeatureValues setAlt(java.lang.String alt) {
              return (FetchFeatureValues) super.setAlt(alt);
            }

            @Override
            public FetchFeatureValues setCallback(java.lang.String callback) {
              return (FetchFeatureValues) super.setCallback(callback);
            }

            @Override
            public FetchFeatureValues setFields(java.lang.String fields) {
              return (FetchFeatureValues) super.setFields(fields);
            }

            @Override
            public FetchFeatureValues setKey(java.lang.String key) {
              return (FetchFeatureValues) super.setKey(key);
            }

            @Override
            public FetchFeatureValues setOauthToken(java.lang.String oauthToken) {
              return (FetchFeatureValues) super.setOauthToken(oauthToken);
            }

            @Override
            public FetchFeatureValues setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (FetchFeatureValues) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public FetchFeatureValues setQuotaUser(java.lang.String quotaUser) {
              return (FetchFeatureValues) super.setQuotaUser(quotaUser);
            }

            @Override
            public FetchFeatureValues setUploadType(java.lang.String uploadType) {
              return (FetchFeatureValues) super.setUploadType(uploadType);
            }

            @Override
            public FetchFeatureValues setUploadProtocol(java.lang.String uploadProtocol) {
              return (FetchFeatureValues) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. FeatureView resource format `projects/{project}/locations/{location}/featur
             * eOnlineStores/{featureOnlineStore}/featureViews/{featureView}`
             */
            @com.google.api.client.util.Key
            private java.lang.String featureView;

            /** Required. FeatureView resource format `projects/{project}/locations/{location}/featureOnlineStores/
           {featureOnlineStore}/featureViews/{featureView}`
             */
            public java.lang.String getFeatureView() {
              return featureView;
            }

            /**
             * Required. FeatureView resource format `projects/{project}/locations/{location}/featur
             * eOnlineStores/{featureOnlineStore}/featureViews/{featureView}`
             */
            public FetchFeatureValues setFeatureView(java.lang.String featureView) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(FEATURE_VIEW_PATTERN.matcher(featureView).matches(),
                    "Parameter featureView must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+/featureViews/[^/]+$");
              }
              this.featureView = featureView;
              return this;
            }

            @Override
            public FetchFeatureValues set(String parameterName, Object value) {
              return (FetchFeatureValues) super.set(parameterName, value);
            }
          }
          /**
           * Gets details of a single FeatureView.
           *
           * Create a request for the method "featureViews.get".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the FeatureView resource. Format: `projects/{project}/locations/{location}/fea
           *        tureOnlineStores/{feature_online_store}/featureViews/{feature_view}`
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1FeatureView> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+/featureViews/[^/]+$");

            /**
             * Gets details of a single FeatureView.
             *
             * Create a request for the method "featureViews.get".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the FeatureView resource. Format: `projects/{project}/locations/{location}/fea
           *        tureOnlineStores/{feature_online_store}/featureViews/{feature_view}`
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1FeatureView.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+/featureViews/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the FeatureView resource. Format: `projects/{project}/locations
             * /{location}/featureOnlineStores/{feature_online_store}/featureViews/{feature_view}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the FeatureView resource. Format: `projects/{project}/locations/{location}/fe
           atureOnlineStores/{feature_online_store}/featureViews/{feature_view}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The name of the FeatureView resource. Format: `projects/{project}/locations
             * /{location}/featureOnlineStores/{feature_online_store}/featureViews/{feature_view}`
             */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+/featureViews/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Gets the access control policy for a resource. Returns an empty policy if the resource exists and
           * does not have a policy set.
           *
           * Create a request for the method "featureViews.getIamPolicy".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote operation.
           *
           * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
           * @return the request
           */
          public GetIamPolicy getIamPolicy(java.lang.String resource) throws java.io.IOException {
            GetIamPolicy result = new GetIamPolicy(resource);
            initialize(result);
            return result;
          }

          public class GetIamPolicy extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleIamV1Policy> {

            private static final String REST_PATH = "v1/{+resource}:getIamPolicy";

            private final java.util.regex.Pattern RESOURCE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+/featureViews/[^/]+$");

            /**
             * Gets the access control policy for a resource. Returns an empty policy if the resource exists
             * and does not have a policy set.
             *
             * Create a request for the method "featureViews.getIamPolicy".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
             * operation. <p> {@link
             * GetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
             * @since 1.13
             */
            protected GetIamPolicy(java.lang.String resource) {
              super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleIamV1Policy.class);
              this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+/featureViews/[^/]+$");
              }
            }

            @Override
            public GetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
              return (GetIamPolicy) super.set$Xgafv($Xgafv);
            }

            @Override
            public GetIamPolicy setAccessToken(java.lang.String accessToken) {
              return (GetIamPolicy) super.setAccessToken(accessToken);
            }

            @Override
            public GetIamPolicy setAlt(java.lang.String alt) {
              return (GetIamPolicy) super.setAlt(alt);
            }

            @Override
            public GetIamPolicy setCallback(java.lang.String callback) {
              return (GetIamPolicy) super.setCallback(callback);
            }

            @Override
            public GetIamPolicy setFields(java.lang.String fields) {
              return (GetIamPolicy) super.setFields(fields);
            }

            @Override
            public GetIamPolicy setKey(java.lang.String key) {
              return (GetIamPolicy) super.setKey(key);
            }

            @Override
            public GetIamPolicy setOauthToken(java.lang.String oauthToken) {
              return (GetIamPolicy) super.setOauthToken(oauthToken);
            }

            @Override
            public GetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (GetIamPolicy) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public GetIamPolicy setQuotaUser(java.lang.String quotaUser) {
              return (GetIamPolicy) super.setQuotaUser(quotaUser);
            }

            @Override
            public GetIamPolicy setUploadType(java.lang.String uploadType) {
              return (GetIamPolicy) super.setUploadType(uploadType);
            }

            @Override
            public GetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
              return (GetIamPolicy) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * REQUIRED: The resource for which the policy is being requested. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            @com.google.api.client.util.Key
            private java.lang.String resource;

            /** REQUIRED: The resource for which the policy is being requested. See [Resource
           names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
           field.
             */
            public java.lang.String getResource() {
              return resource;
            }

            /**
             * REQUIRED: The resource for which the policy is being requested. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            public GetIamPolicy setResource(java.lang.String resource) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+/featureViews/[^/]+$");
              }
              this.resource = resource;
              return this;
            }

            /**
             * Optional. The maximum policy version that will be used to format the policy. Valid
             * values are 0, 1, and 3. Requests specifying an invalid value will be rejected.
             * Requests for policies with any conditional role bindings must specify version 3.
             * Policies with no conditional role bindings may specify any valid value or leave the
             * field unset. The policy in the response might use the policy version that you
             * specified, or it might use a lower policy version. For example, if you specify
             * version 3, but the policy has no conditional role bindings, the response uses version
             * 1. To learn which resources support conditions in their IAM policies, see the [IAM
             * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
             */
            @com.google.api.client.util.Key("options.requestedPolicyVersion")
            private java.lang.Integer optionsRequestedPolicyVersion;

            /** Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1,
           and 3. Requests specifying an invalid value will be rejected. Requests for policies with any
           conditional role bindings must specify version 3. Policies with no conditional role bindings may
           specify any valid value or leave the field unset. The policy in the response might use the policy
           version that you specified, or it might use a lower policy version. For example, if you specify
           version 3, but the policy has no conditional role bindings, the response uses version 1. To learn
           which resources support conditions in their IAM policies, see the [IAM
           documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
             */
            public java.lang.Integer getOptionsRequestedPolicyVersion() {
              return optionsRequestedPolicyVersion;
            }

            /**
             * Optional. The maximum policy version that will be used to format the policy. Valid
             * values are 0, 1, and 3. Requests specifying an invalid value will be rejected.
             * Requests for policies with any conditional role bindings must specify version 3.
             * Policies with no conditional role bindings may specify any valid value or leave the
             * field unset. The policy in the response might use the policy version that you
             * specified, or it might use a lower policy version. For example, if you specify
             * version 3, but the policy has no conditional role bindings, the response uses version
             * 1. To learn which resources support conditions in their IAM policies, see the [IAM
             * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
             */
            public GetIamPolicy setOptionsRequestedPolicyVersion(java.lang.Integer optionsRequestedPolicyVersion) {
              this.optionsRequestedPolicyVersion = optionsRequestedPolicyVersion;
              return this;
            }

            @Override
            public GetIamPolicy set(String parameterName, Object value) {
              return (GetIamPolicy) super.set(parameterName, value);
            }
          }
          /**
           * Lists FeatureViews in a given FeatureOnlineStore.
           *
           * Create a request for the method "featureViews.list".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The resource name of the FeatureOnlineStore to list FeatureViews. Format:
           *        `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}`
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListFeatureViewsResponse> {

            private static final String REST_PATH = "v1/{+parent}/featureViews";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+$");

            /**
             * Lists FeatureViews in a given FeatureOnlineStore.
             *
             * Create a request for the method "featureViews.list".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The resource name of the FeatureOnlineStore to list FeatureViews. Format:
           *        `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}`
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListFeatureViewsResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The resource name of the FeatureOnlineStore to list FeatureViews. Format:
             * `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The resource name of the FeatureOnlineStore to list FeatureViews. Format:
           `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The resource name of the FeatureOnlineStore to list FeatureViews. Format:
             * `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}`
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Lists the FeatureViews that match the filter expression. The following filters are
             * supported: * `create_time`: Supports `=`, `!=`, `<`, `>`, `>=`, and `<=` comparisons.
             * Values must be in RFC 3339 format. * `update_time`: Supports `=`, `!=`, `<`, `>`,
             * `>=`, and `<=` comparisons. Values must be in RFC 3339 format. * `labels`: Supports
             * key-value equality as well as key presence. Examples: * `create_time >
             * \"2020-01-31T15:30:00.000000Z\" OR update_time > \"2020-01-31T15:30:00.000000Z\"` -->
             * FeatureViews created or updated after 2020-01-31T15:30:00.000000Z. * `labels.active =
             * yes AND labels.env = prod` --> FeatureViews having both (active: yes) and (env: prod)
             * labels. * `labels.env: *` --> Any FeatureView which has a label with 'env' as the
             * key.
             */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** Lists the FeatureViews that match the filter expression. The following filters are supported: *
           `create_time`: Supports `=`, `!=`, `<`, `>`, `>=`, and `<=` comparisons. Values must be in RFC 3339
           format. * `update_time`: Supports `=`, `!=`, `<`, `>`, `>=`, and `<=` comparisons. Values must be
           in RFC 3339 format. * `labels`: Supports key-value equality as well as key presence. Examples: *
           `create_time > \"2020-01-31T15:30:00.000000Z\" OR update_time > \"2020-01-31T15:30:00.000000Z\"`
           --> FeatureViews created or updated after 2020-01-31T15:30:00.000000Z. * `labels.active = yes AND
           labels.env = prod` --> FeatureViews having both (active: yes) and (env: prod) labels. *
           `labels.env: *` --> Any FeatureView which has a label with 'env' as the key.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /**
             * Lists the FeatureViews that match the filter expression. The following filters are
             * supported: * `create_time`: Supports `=`, `!=`, `<`, `>`, `>=`, and `<=` comparisons.
             * Values must be in RFC 3339 format. * `update_time`: Supports `=`, `!=`, `<`, `>`,
             * `>=`, and `<=` comparisons. Values must be in RFC 3339 format. * `labels`: Supports
             * key-value equality as well as key presence. Examples: * `create_time >
             * \"2020-01-31T15:30:00.000000Z\" OR update_time > \"2020-01-31T15:30:00.000000Z\"` -->
             * FeatureViews created or updated after 2020-01-31T15:30:00.000000Z. * `labels.active =
             * yes AND labels.env = prod` --> FeatureViews having both (active: yes) and (env: prod)
             * labels. * `labels.env: *` --> Any FeatureView which has a label with 'env' as the
             * key.
             */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /**
             * A comma-separated list of fields to order by, sorted in ascending order. Use "desc"
             * after a field name for descending. Supported fields: * `feature_view_id` *
             * `create_time` * `update_time`
             */
            @com.google.api.client.util.Key
            private java.lang.String orderBy;

            /** A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field
           name for descending. Supported fields: * `feature_view_id` * `create_time` * `update_time`
             */
            public java.lang.String getOrderBy() {
              return orderBy;
            }

            /**
             * A comma-separated list of fields to order by, sorted in ascending order. Use "desc"
             * after a field name for descending. Supported fields: * `feature_view_id` *
             * `create_time` * `update_time`
             */
            public List setOrderBy(java.lang.String orderBy) {
              this.orderBy = orderBy;
              return this;
            }

            /**
             * The maximum number of FeatureViews to return. The service may return fewer than this
             * value. If unspecified, at most 1000 FeatureViews will be returned. The maximum value
             * is 1000; any value greater than 1000 will be coerced to 1000.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** The maximum number of FeatureViews to return. The service may return fewer than this value. If
           unspecified, at most 1000 FeatureViews will be returned. The maximum value is 1000; any value
           greater than 1000 will be coerced to 1000.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * The maximum number of FeatureViews to return. The service may return fewer than this
             * value. If unspecified, at most 1000 FeatureViews will be returned. The maximum value
             * is 1000; any value greater than 1000 will be coerced to 1000.
             */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /**
             * A page token, received from a previous
             * FeatureOnlineStoreAdminService.ListFeatureViews call. Provide this to retrieve the
             * subsequent page. When paginating, all other parameters provided to
             * FeatureOnlineStoreAdminService.ListFeatureViews must match the call that provided the
             * page token.
             */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** A page token, received from a previous FeatureOnlineStoreAdminService.ListFeatureViews call.
           Provide this to retrieve the subsequent page. When paginating, all other parameters provided to
           FeatureOnlineStoreAdminService.ListFeatureViews must match the call that provided the page token.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /**
             * A page token, received from a previous
             * FeatureOnlineStoreAdminService.ListFeatureViews call. Provide this to retrieve the
             * subsequent page. When paginating, all other parameters provided to
             * FeatureOnlineStoreAdminService.ListFeatureViews must match the call that provided the
             * page token.
             */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Updates the parameters of a single FeatureView.
           *
           * Create a request for the method "featureViews.patch".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           *
           * @param name Identifier. Name of the FeatureView. Format: `projects/{project}/locations/{location}/featureOnlineS
           *        tores/{feature_online_store}/featureViews/{feature_view}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1FeatureView}
           * @return the request
           */
          public Patch patch(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1FeatureView content) throws java.io.IOException {
            Patch result = new Patch(name, content);
            initialize(result);
            return result;
          }

          public class Patch extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+/featureViews/[^/]+$");

            /**
             * Updates the parameters of a single FeatureView.
             *
             * Create a request for the method "featureViews.patch".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             * <p> {@link
             * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Identifier. Name of the FeatureView. Format: `projects/{project}/locations/{location}/featureOnlineS
           *        tores/{feature_online_store}/featureViews/{feature_view}`
             * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1FeatureView}
             * @since 1.13
             */
            protected Patch(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1FeatureView content) {
              super(Aiplatform.this, "PATCH", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+/featureViews/[^/]+$");
              }
            }

            @Override
            public Patch set$Xgafv(java.lang.String $Xgafv) {
              return (Patch) super.set$Xgafv($Xgafv);
            }

            @Override
            public Patch setAccessToken(java.lang.String accessToken) {
              return (Patch) super.setAccessToken(accessToken);
            }

            @Override
            public Patch setAlt(java.lang.String alt) {
              return (Patch) super.setAlt(alt);
            }

            @Override
            public Patch setCallback(java.lang.String callback) {
              return (Patch) super.setCallback(callback);
            }

            @Override
            public Patch setFields(java.lang.String fields) {
              return (Patch) super.setFields(fields);
            }

            @Override
            public Patch setKey(java.lang.String key) {
              return (Patch) super.setKey(key);
            }

            @Override
            public Patch setOauthToken(java.lang.String oauthToken) {
              return (Patch) super.setOauthToken(oauthToken);
            }

            @Override
            public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Patch) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Patch setQuotaUser(java.lang.String quotaUser) {
              return (Patch) super.setQuotaUser(quotaUser);
            }

            @Override
            public Patch setUploadType(java.lang.String uploadType) {
              return (Patch) super.setUploadType(uploadType);
            }

            @Override
            public Patch setUploadProtocol(java.lang.String uploadProtocol) {
              return (Patch) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Identifier. Name of the FeatureView. Format: `projects/{project}/locations/{location}
             * /featureOnlineStores/{feature_online_store}/featureViews/{feature_view}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Identifier. Name of the FeatureView. Format: `projects/{project}/locations/{location}/featureOnline
           Stores/{feature_online_store}/featureViews/{feature_view}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Identifier. Name of the FeatureView. Format: `projects/{project}/locations/{location}
             * /featureOnlineStores/{feature_online_store}/featureViews/{feature_view}`
             */
            public Patch setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+/featureViews/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * Field mask is used to specify the fields to be overwritten in the FeatureView
             * resource by the update. The fields specified in the update_mask are relative to the
             * resource, not the full request. A field will be overwritten if it is in the mask. If
             * the user does not provide a mask then only the non-empty fields present in the
             * request will be overwritten. Set the update_mask to `*` to override all fields.
             * Updatable fields: * `labels` * `service_agent_type` * `big_query_source` *
             * `big_query_source.uri` * `big_query_source.entity_id_columns` *
             * `feature_registry_source` * `feature_registry_source.feature_groups` * `sync_config`
             * * `sync_config.cron`
             */
            @com.google.api.client.util.Key
            private String updateMask;

            /** Field mask is used to specify the fields to be overwritten in the FeatureView resource by the
           update. The fields specified in the update_mask are relative to the resource, not the full request.
           A field will be overwritten if it is in the mask. If the user does not provide a mask then only the
           non-empty fields present in the request will be overwritten. Set the update_mask to `*` to override
           all fields. Updatable fields: * `labels` * `service_agent_type` * `big_query_source` *
           `big_query_source.uri` * `big_query_source.entity_id_columns` * `feature_registry_source` *
           `feature_registry_source.feature_groups` * `sync_config` * `sync_config.cron`
             */
            public String getUpdateMask() {
              return updateMask;
            }

            /**
             * Field mask is used to specify the fields to be overwritten in the FeatureView
             * resource by the update. The fields specified in the update_mask are relative to the
             * resource, not the full request. A field will be overwritten if it is in the mask. If
             * the user does not provide a mask then only the non-empty fields present in the
             * request will be overwritten. Set the update_mask to `*` to override all fields.
             * Updatable fields: * `labels` * `service_agent_type` * `big_query_source` *
             * `big_query_source.uri` * `big_query_source.entity_id_columns` *
             * `feature_registry_source` * `feature_registry_source.feature_groups` * `sync_config`
             * * `sync_config.cron`
             */
            public Patch setUpdateMask(String updateMask) {
              this.updateMask = updateMask;
              return this;
            }

            @Override
            public Patch set(String parameterName, Object value) {
              return (Patch) super.set(parameterName, value);
            }
          }
          /**
           * Search the nearest entities under a FeatureView. Search only works for indexable feature view; if
           * a feature view isn't indexable, returns Invalid argument response.
           *
           * Create a request for the method "featureViews.searchNearestEntities".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link SearchNearestEntities#execute()} method to invoke the remote
           * operation.
           *
           * @param featureView Required. FeatureView resource format `projects/{project}/locations/{location}/featureOnlineStores/{
           *        featureOnlineStore}/featureViews/{featureView}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1SearchNearestEntitiesRequest}
           * @return the request
           */
          public SearchNearestEntities searchNearestEntities(java.lang.String featureView, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1SearchNearestEntitiesRequest content) throws java.io.IOException {
            SearchNearestEntities result = new SearchNearestEntities(featureView, content);
            initialize(result);
            return result;
          }

          public class SearchNearestEntities extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1SearchNearestEntitiesResponse> {

            private static final String REST_PATH = "v1/{+featureView}:searchNearestEntities";

            private final java.util.regex.Pattern FEATURE_VIEW_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+/featureViews/[^/]+$");

            /**
             * Search the nearest entities under a FeatureView. Search only works for indexable feature view;
             * if a feature view isn't indexable, returns Invalid argument response.
             *
             * Create a request for the method "featureViews.searchNearestEntities".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link SearchNearestEntities#execute()} method to invoke the
             * remote operation. <p> {@link SearchNearestEntities#initialize(com.google.api.client.googleapis.
             * services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
             * after invoking the constructor. </p>
             *
             * @param featureView Required. FeatureView resource format `projects/{project}/locations/{location}/featureOnlineStores/{
           *        featureOnlineStore}/featureViews/{featureView}`
             * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1SearchNearestEntitiesRequest}
             * @since 1.13
             */
            protected SearchNearestEntities(java.lang.String featureView, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1SearchNearestEntitiesRequest content) {
              super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1SearchNearestEntitiesResponse.class);
              this.featureView = com.google.api.client.util.Preconditions.checkNotNull(featureView, "Required parameter featureView must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(FEATURE_VIEW_PATTERN.matcher(featureView).matches(),
                    "Parameter featureView must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+/featureViews/[^/]+$");
              }
            }

            @Override
            public SearchNearestEntities set$Xgafv(java.lang.String $Xgafv) {
              return (SearchNearestEntities) super.set$Xgafv($Xgafv);
            }

            @Override
            public SearchNearestEntities setAccessToken(java.lang.String accessToken) {
              return (SearchNearestEntities) super.setAccessToken(accessToken);
            }

            @Override
            public SearchNearestEntities setAlt(java.lang.String alt) {
              return (SearchNearestEntities) super.setAlt(alt);
            }

            @Override
            public SearchNearestEntities setCallback(java.lang.String callback) {
              return (SearchNearestEntities) super.setCallback(callback);
            }

            @Override
            public SearchNearestEntities setFields(java.lang.String fields) {
              return (SearchNearestEntities) super.setFields(fields);
            }

            @Override
            public SearchNearestEntities setKey(java.lang.String key) {
              return (SearchNearestEntities) super.setKey(key);
            }

            @Override
            public SearchNearestEntities setOauthToken(java.lang.String oauthToken) {
              return (SearchNearestEntities) super.setOauthToken(oauthToken);
            }

            @Override
            public SearchNearestEntities setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (SearchNearestEntities) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public SearchNearestEntities setQuotaUser(java.lang.String quotaUser) {
              return (SearchNearestEntities) super.setQuotaUser(quotaUser);
            }

            @Override
            public SearchNearestEntities setUploadType(java.lang.String uploadType) {
              return (SearchNearestEntities) super.setUploadType(uploadType);
            }

            @Override
            public SearchNearestEntities setUploadProtocol(java.lang.String uploadProtocol) {
              return (SearchNearestEntities) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. FeatureView resource format `projects/{project}/locations/{location}/featur
             * eOnlineStores/{featureOnlineStore}/featureViews/{featureView}`
             */
            @com.google.api.client.util.Key
            private java.lang.String featureView;

            /** Required. FeatureView resource format `projects/{project}/locations/{location}/featureOnlineStores/
           {featureOnlineStore}/featureViews/{featureView}`
             */
            public java.lang.String getFeatureView() {
              return featureView;
            }

            /**
             * Required. FeatureView resource format `projects/{project}/locations/{location}/featur
             * eOnlineStores/{featureOnlineStore}/featureViews/{featureView}`
             */
            public SearchNearestEntities setFeatureView(java.lang.String featureView) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(FEATURE_VIEW_PATTERN.matcher(featureView).matches(),
                    "Parameter featureView must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+/featureViews/[^/]+$");
              }
              this.featureView = featureView;
              return this;
            }

            @Override
            public SearchNearestEntities set(String parameterName, Object value) {
              return (SearchNearestEntities) super.set(parameterName, value);
            }
          }
          /**
           * Sets the access control policy on the specified resource. Replaces any existing policy. Can
           * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
           *
           * Create a request for the method "featureViews.setIamPolicy".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote operation.
           *
           * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleIamV1SetIamPolicyRequest}
           * @return the request
           */
          public SetIamPolicy setIamPolicy(java.lang.String resource, com.google.api.services.aiplatform.v1.model.GoogleIamV1SetIamPolicyRequest content) throws java.io.IOException {
            SetIamPolicy result = new SetIamPolicy(resource, content);
            initialize(result);
            return result;
          }

          public class SetIamPolicy extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleIamV1Policy> {

            private static final String REST_PATH = "v1/{+resource}:setIamPolicy";

            private final java.util.regex.Pattern RESOURCE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+/featureViews/[^/]+$");

            /**
             * Sets the access control policy on the specified resource. Replaces any existing policy. Can
             * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
             *
             * Create a request for the method "featureViews.setIamPolicy".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
             * operation. <p> {@link
             * SetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
             * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleIamV1SetIamPolicyRequest}
             * @since 1.13
             */
            protected SetIamPolicy(java.lang.String resource, com.google.api.services.aiplatform.v1.model.GoogleIamV1SetIamPolicyRequest content) {
              super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleIamV1Policy.class);
              this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+/featureViews/[^/]+$");
              }
            }

            @Override
            public SetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
              return (SetIamPolicy) super.set$Xgafv($Xgafv);
            }

            @Override
            public SetIamPolicy setAccessToken(java.lang.String accessToken) {
              return (SetIamPolicy) super.setAccessToken(accessToken);
            }

            @Override
            public SetIamPolicy setAlt(java.lang.String alt) {
              return (SetIamPolicy) super.setAlt(alt);
            }

            @Override
            public SetIamPolicy setCallback(java.lang.String callback) {
              return (SetIamPolicy) super.setCallback(callback);
            }

            @Override
            public SetIamPolicy setFields(java.lang.String fields) {
              return (SetIamPolicy) super.setFields(fields);
            }

            @Override
            public SetIamPolicy setKey(java.lang.String key) {
              return (SetIamPolicy) super.setKey(key);
            }

            @Override
            public SetIamPolicy setOauthToken(java.lang.String oauthToken) {
              return (SetIamPolicy) super.setOauthToken(oauthToken);
            }

            @Override
            public SetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (SetIamPolicy) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public SetIamPolicy setQuotaUser(java.lang.String quotaUser) {
              return (SetIamPolicy) super.setQuotaUser(quotaUser);
            }

            @Override
            public SetIamPolicy setUploadType(java.lang.String uploadType) {
              return (SetIamPolicy) super.setUploadType(uploadType);
            }

            @Override
            public SetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
              return (SetIamPolicy) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * REQUIRED: The resource for which the policy is being specified. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            @com.google.api.client.util.Key
            private java.lang.String resource;

            /** REQUIRED: The resource for which the policy is being specified. See [Resource
           names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
           field.
             */
            public java.lang.String getResource() {
              return resource;
            }

            /**
             * REQUIRED: The resource for which the policy is being specified. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            public SetIamPolicy setResource(java.lang.String resource) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+/featureViews/[^/]+$");
              }
              this.resource = resource;
              return this;
            }

            @Override
            public SetIamPolicy set(String parameterName, Object value) {
              return (SetIamPolicy) super.set(parameterName, value);
            }
          }
          /**
           * Triggers on-demand sync for the FeatureView.
           *
           * Create a request for the method "featureViews.sync".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Sync#execute()} method to invoke the remote operation.
           *
           * @param featureView Required. Format: `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store
           *        }/featureViews/{feature_view}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1SyncFeatureViewRequest}
           * @return the request
           */
          public Sync sync(java.lang.String featureView, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1SyncFeatureViewRequest content) throws java.io.IOException {
            Sync result = new Sync(featureView, content);
            initialize(result);
            return result;
          }

          public class Sync extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1SyncFeatureViewResponse> {

            private static final String REST_PATH = "v1/{+featureView}:sync";

            private final java.util.regex.Pattern FEATURE_VIEW_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+/featureViews/[^/]+$");

            /**
             * Triggers on-demand sync for the FeatureView.
             *
             * Create a request for the method "featureViews.sync".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Sync#execute()} method to invoke the remote operation. <p>
             * {@link Sync#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param featureView Required. Format: `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store
           *        }/featureViews/{feature_view}`
             * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1SyncFeatureViewRequest}
             * @since 1.13
             */
            protected Sync(java.lang.String featureView, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1SyncFeatureViewRequest content) {
              super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1SyncFeatureViewResponse.class);
              this.featureView = com.google.api.client.util.Preconditions.checkNotNull(featureView, "Required parameter featureView must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(FEATURE_VIEW_PATTERN.matcher(featureView).matches(),
                    "Parameter featureView must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+/featureViews/[^/]+$");
              }
            }

            @Override
            public Sync set$Xgafv(java.lang.String $Xgafv) {
              return (Sync) super.set$Xgafv($Xgafv);
            }

            @Override
            public Sync setAccessToken(java.lang.String accessToken) {
              return (Sync) super.setAccessToken(accessToken);
            }

            @Override
            public Sync setAlt(java.lang.String alt) {
              return (Sync) super.setAlt(alt);
            }

            @Override
            public Sync setCallback(java.lang.String callback) {
              return (Sync) super.setCallback(callback);
            }

            @Override
            public Sync setFields(java.lang.String fields) {
              return (Sync) super.setFields(fields);
            }

            @Override
            public Sync setKey(java.lang.String key) {
              return (Sync) super.setKey(key);
            }

            @Override
            public Sync setOauthToken(java.lang.String oauthToken) {
              return (Sync) super.setOauthToken(oauthToken);
            }

            @Override
            public Sync setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Sync) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Sync setQuotaUser(java.lang.String quotaUser) {
              return (Sync) super.setQuotaUser(quotaUser);
            }

            @Override
            public Sync setUploadType(java.lang.String uploadType) {
              return (Sync) super.setUploadType(uploadType);
            }

            @Override
            public Sync setUploadProtocol(java.lang.String uploadProtocol) {
              return (Sync) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Format: `projects/{project}/locations/{location}/featureOnlineStores/{featu
             * re_online_store}/featureViews/{feature_view}`
             */
            @com.google.api.client.util.Key
            private java.lang.String featureView;

            /** Required. Format: `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_stor
           e}/featureViews/{feature_view}`
             */
            public java.lang.String getFeatureView() {
              return featureView;
            }

            /**
             * Required. Format: `projects/{project}/locations/{location}/featureOnlineStores/{featu
             * re_online_store}/featureViews/{feature_view}`
             */
            public Sync setFeatureView(java.lang.String featureView) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(FEATURE_VIEW_PATTERN.matcher(featureView).matches(),
                    "Parameter featureView must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+/featureViews/[^/]+$");
              }
              this.featureView = featureView;
              return this;
            }

            @Override
            public Sync set(String parameterName, Object value) {
              return (Sync) super.set(parameterName, value);
            }
          }
          /**
           * Returns permissions that a caller has on the specified resource. If the resource does not exist,
           * this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is
           * designed to be used for building permission-aware UIs and command-line tools, not for
           * authorization checking. This operation may "fail open" without warning.
           *
           * Create a request for the method "featureViews.testIamPermissions".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote operation.
           *
           * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
           * @return the request
           */
          public TestIamPermissions testIamPermissions(java.lang.String resource) throws java.io.IOException {
            TestIamPermissions result = new TestIamPermissions(resource);
            initialize(result);
            return result;
          }

          public class TestIamPermissions extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleIamV1TestIamPermissionsResponse> {

            private static final String REST_PATH = "v1/{+resource}:testIamPermissions";

            private final java.util.regex.Pattern RESOURCE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+/featureViews/[^/]+$");

            /**
             * Returns permissions that a caller has on the specified resource. If the resource does not
             * exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This
             * operation is designed to be used for building permission-aware UIs and command-line tools, not
             * for authorization checking. This operation may "fail open" without warning.
             *
             * Create a request for the method "featureViews.testIamPermissions".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
             * operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.services.A
             * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
             * invoking the constructor. </p>
             *
             * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
             * @since 1.13
             */
            protected TestIamPermissions(java.lang.String resource) {
              super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleIamV1TestIamPermissionsResponse.class);
              this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+/featureViews/[^/]+$");
              }
            }

            @Override
            public TestIamPermissions set$Xgafv(java.lang.String $Xgafv) {
              return (TestIamPermissions) super.set$Xgafv($Xgafv);
            }

            @Override
            public TestIamPermissions setAccessToken(java.lang.String accessToken) {
              return (TestIamPermissions) super.setAccessToken(accessToken);
            }

            @Override
            public TestIamPermissions setAlt(java.lang.String alt) {
              return (TestIamPermissions) super.setAlt(alt);
            }

            @Override
            public TestIamPermissions setCallback(java.lang.String callback) {
              return (TestIamPermissions) super.setCallback(callback);
            }

            @Override
            public TestIamPermissions setFields(java.lang.String fields) {
              return (TestIamPermissions) super.setFields(fields);
            }

            @Override
            public TestIamPermissions setKey(java.lang.String key) {
              return (TestIamPermissions) super.setKey(key);
            }

            @Override
            public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
              return (TestIamPermissions) super.setOauthToken(oauthToken);
            }

            @Override
            public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
              return (TestIamPermissions) super.setQuotaUser(quotaUser);
            }

            @Override
            public TestIamPermissions setUploadType(java.lang.String uploadType) {
              return (TestIamPermissions) super.setUploadType(uploadType);
            }

            @Override
            public TestIamPermissions setUploadProtocol(java.lang.String uploadProtocol) {
              return (TestIamPermissions) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * REQUIRED: The resource for which the policy detail is being requested. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            @com.google.api.client.util.Key
            private java.lang.String resource;

            /** REQUIRED: The resource for which the policy detail is being requested. See [Resource
           names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
           field.
             */
            public java.lang.String getResource() {
              return resource;
            }

            /**
             * REQUIRED: The resource for which the policy detail is being requested. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            public TestIamPermissions setResource(java.lang.String resource) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+/featureViews/[^/]+$");
              }
              this.resource = resource;
              return this;
            }

            /**
             * The set of permissions to check for the `resource`. Permissions with wildcards (such
             * as `*` or `storage.*`) are not allowed. For more information see [IAM
             * Overview](https://cloud.google.com/iam/docs/overview#permissions).
             */
            @com.google.api.client.util.Key
            private java.util.List<java.lang.String> permissions;

            /** The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or
           `storage.*`) are not allowed. For more information see [IAM
           Overview](https://cloud.google.com/iam/docs/overview#permissions).
             */
            public java.util.List<java.lang.String> getPermissions() {
              return permissions;
            }

            /**
             * The set of permissions to check for the `resource`. Permissions with wildcards (such
             * as `*` or `storage.*`) are not allowed. For more information see [IAM
             * Overview](https://cloud.google.com/iam/docs/overview#permissions).
             */
            public TestIamPermissions setPermissions(java.util.List<java.lang.String> permissions) {
              this.permissions = permissions;
              return this;
            }

            @Override
            public TestIamPermissions set(String parameterName, Object value) {
              return (TestIamPermissions) super.set(parameterName, value);
            }
          }

          /**
           * An accessor for creating requests from the FeatureViewSyncs collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code Aiplatform aiplatform = new Aiplatform(...);}
           *   {@code Aiplatform.FeatureViewSyncs.List request = aiplatform.featureViewSyncs().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public FeatureViewSyncs featureViewSyncs() {
            return new FeatureViewSyncs();
          }

          /**
           * The "featureViewSyncs" collection of methods.
           */
          public class FeatureViewSyncs {

            /**
             * Gets details of a single FeatureViewSync.
             *
             * Create a request for the method "featureViewSyncs.get".
             *
             * This request holds the parameters needed by the aiplatform server.  After setting any optional
             * parameters, call the {@link Get#execute()} method to invoke the remote operation.
             *
             * @param name Required. The name of the FeatureViewSync resource. Format: `projects/{project}/locations/{location}
             *        /featureOnlineStores/{feature_online_store}/featureViews/{feature_view}/featureViewSyncs/{
             *        feature_view_sync}`
             * @return the request
             */
            public Get get(java.lang.String name) throws java.io.IOException {
              Get result = new Get(name);
              initialize(result);
              return result;
            }

            public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1FeatureViewSync> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+/featureViews/[^/]+/featureViewSyncs/[^/]+$");

              /**
               * Gets details of a single FeatureViewSync.
               *
               * Create a request for the method "featureViewSyncs.get".
               *
               * This request holds the parameters needed by the the aiplatform server.  After setting any
               * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
               * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The name of the FeatureViewSync resource. Format: `projects/{project}/locations/{location}
             *        /featureOnlineStores/{feature_online_store}/featureViews/{feature_view}/featureViewSyncs/{
             *        feature_view_sync}`
               * @since 1.13
               */
              protected Get(java.lang.String name) {
                super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1FeatureViewSync.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+/featureViews/[^/]+/featureViewSyncs/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public Get set$Xgafv(java.lang.String $Xgafv) {
                return (Get) super.set$Xgafv($Xgafv);
              }

              @Override
              public Get setAccessToken(java.lang.String accessToken) {
                return (Get) super.setAccessToken(accessToken);
              }

              @Override
              public Get setAlt(java.lang.String alt) {
                return (Get) super.setAlt(alt);
              }

              @Override
              public Get setCallback(java.lang.String callback) {
                return (Get) super.setCallback(callback);
              }

              @Override
              public Get setFields(java.lang.String fields) {
                return (Get) super.setFields(fields);
              }

              @Override
              public Get setKey(java.lang.String key) {
                return (Get) super.setKey(key);
              }

              @Override
              public Get setOauthToken(java.lang.String oauthToken) {
                return (Get) super.setOauthToken(oauthToken);
              }

              @Override
              public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Get) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Get setQuotaUser(java.lang.String quotaUser) {
                return (Get) super.setQuotaUser(quotaUser);
              }

              @Override
              public Get setUploadType(java.lang.String uploadType) {
                return (Get) super.setUploadType(uploadType);
              }

              @Override
              public Get setUploadProtocol(java.lang.String uploadProtocol) {
                return (Get) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The name of the FeatureViewSync resource. Format: `projects/{project}/loc
               * ations/{location}/featureOnlineStores/{feature_online_store}/featureViews/{feature_
               * view}/featureViewSyncs/{feature_view_sync}`
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The name of the FeatureViewSync resource. Format: `projects/{project}/locations/{location
             }/featureOnlineStores/{feature_online_store}/featureViews/{feature_view}/featureViewSyncs/{feature_
             view_sync}`
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Required. The name of the FeatureViewSync resource. Format: `projects/{project}/loc
               * ations/{location}/featureOnlineStores/{feature_online_store}/featureViews/{feature_
               * view}/featureViewSyncs/{feature_view_sync}`
               */
              public Get setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+/featureViews/[^/]+/featureViewSyncs/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Get set(String parameterName, Object value) {
                return (Get) super.set(parameterName, value);
              }
            }
            /**
             * Lists FeatureViewSyncs in a given FeatureView.
             *
             * Create a request for the method "featureViewSyncs.list".
             *
             * This request holds the parameters needed by the aiplatform server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The resource name of the FeatureView to list FeatureViewSyncs. Format: `projects/{project}
             *        /locations/{location}/featureOnlineStores/{feature_online_store}/featureViews/{feature_vie
             *        w}`
             * @return the request
             */
            public List list(java.lang.String parent) throws java.io.IOException {
              List result = new List(parent);
              initialize(result);
              return result;
            }

            public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListFeatureViewSyncsResponse> {

              private static final String REST_PATH = "v1/{+parent}/featureViewSyncs";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+/featureViews/[^/]+$");

              /**
               * Lists FeatureViewSyncs in a given FeatureView.
               *
               * Create a request for the method "featureViewSyncs.list".
               *
               * This request holds the parameters needed by the the aiplatform server.  After setting any
               * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
               * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. The resource name of the FeatureView to list FeatureViewSyncs. Format: `projects/{project}
             *        /locations/{location}/featureOnlineStores/{feature_online_store}/featureViews/{feature_vie
             *        w}`
               * @since 1.13
               */
              protected List(java.lang.String parent) {
                super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListFeatureViewSyncsResponse.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+/featureViews/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public List set$Xgafv(java.lang.String $Xgafv) {
                return (List) super.set$Xgafv($Xgafv);
              }

              @Override
              public List setAccessToken(java.lang.String accessToken) {
                return (List) super.setAccessToken(accessToken);
              }

              @Override
              public List setAlt(java.lang.String alt) {
                return (List) super.setAlt(alt);
              }

              @Override
              public List setCallback(java.lang.String callback) {
                return (List) super.setCallback(callback);
              }

              @Override
              public List setFields(java.lang.String fields) {
                return (List) super.setFields(fields);
              }

              @Override
              public List setKey(java.lang.String key) {
                return (List) super.setKey(key);
              }

              @Override
              public List setOauthToken(java.lang.String oauthToken) {
                return (List) super.setOauthToken(oauthToken);
              }

              @Override
              public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (List) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public List setQuotaUser(java.lang.String quotaUser) {
                return (List) super.setQuotaUser(quotaUser);
              }

              @Override
              public List setUploadType(java.lang.String uploadType) {
                return (List) super.setUploadType(uploadType);
              }

              @Override
              public List setUploadProtocol(java.lang.String uploadProtocol) {
                return (List) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The resource name of the FeatureView to list FeatureViewSyncs. Format: `p
               * rojects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}/f
               * eatureViews/{feature_view}`
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The resource name of the FeatureView to list FeatureViewSyncs. Format: `projects/{project
             }/locations/{location}/featureOnlineStores/{feature_online_store}/featureViews/{feature_view}`
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. The resource name of the FeatureView to list FeatureViewSyncs. Format: `p
               * rojects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}/f
               * eatureViews/{feature_view}`
               */
              public List setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+/featureViews/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /**
               * Lists the FeatureViewSyncs that match the filter expression. The following filters
               * are supported: * `create_time`: Supports `=`, `!=`, `<`, `>`, `>=`, and `<=`
               * comparisons. Values must be in RFC 3339 format. Examples: * `create_time >
               * \"2020-01-31T15:30:00.000000Z\"` --> FeatureViewSyncs created after
               * 2020-01-31T15:30:00.000000Z.
               */
              @com.google.api.client.util.Key
              private java.lang.String filter;

              /** Lists the FeatureViewSyncs that match the filter expression. The following filters are supported: *
             `create_time`: Supports `=`, `!=`, `<`, `>`, `>=`, and `<=` comparisons. Values must be in RFC 3339
             format. Examples: * `create_time > \"2020-01-31T15:30:00.000000Z\"` --> FeatureViewSyncs created
             after 2020-01-31T15:30:00.000000Z.
               */
              public java.lang.String getFilter() {
                return filter;
              }

              /**
               * Lists the FeatureViewSyncs that match the filter expression. The following filters
               * are supported: * `create_time`: Supports `=`, `!=`, `<`, `>`, `>=`, and `<=`
               * comparisons. Values must be in RFC 3339 format. Examples: * `create_time >
               * \"2020-01-31T15:30:00.000000Z\"` --> FeatureViewSyncs created after
               * 2020-01-31T15:30:00.000000Z.
               */
              public List setFilter(java.lang.String filter) {
                this.filter = filter;
                return this;
              }

              /**
               * A comma-separated list of fields to order by, sorted in ascending order. Use "desc"
               * after a field name for descending. Supported fields: * `create_time`
               */
              @com.google.api.client.util.Key
              private java.lang.String orderBy;

              /** A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field
             name for descending. Supported fields: * `create_time`
               */
              public java.lang.String getOrderBy() {
                return orderBy;
              }

              /**
               * A comma-separated list of fields to order by, sorted in ascending order. Use "desc"
               * after a field name for descending. Supported fields: * `create_time`
               */
              public List setOrderBy(java.lang.String orderBy) {
                this.orderBy = orderBy;
                return this;
              }

              /**
               * The maximum number of FeatureViewSyncs to return. The service may return fewer than
               * this value. If unspecified, at most 1000 FeatureViewSyncs will be returned. The
               * maximum value is 1000; any value greater than 1000 will be coerced to 1000.
               */
              @com.google.api.client.util.Key
              private java.lang.Integer pageSize;

              /** The maximum number of FeatureViewSyncs to return. The service may return fewer than this value. If
             unspecified, at most 1000 FeatureViewSyncs will be returned. The maximum value is 1000; any value
             greater than 1000 will be coerced to 1000.
               */
              public java.lang.Integer getPageSize() {
                return pageSize;
              }

              /**
               * The maximum number of FeatureViewSyncs to return. The service may return fewer than
               * this value. If unspecified, at most 1000 FeatureViewSyncs will be returned. The
               * maximum value is 1000; any value greater than 1000 will be coerced to 1000.
               */
              public List setPageSize(java.lang.Integer pageSize) {
                this.pageSize = pageSize;
                return this;
              }

              /**
               * A page token, received from a previous
               * FeatureOnlineStoreAdminService.ListFeatureViewSyncs call. Provide this to retrieve
               * the subsequent page. When paginating, all other parameters provided to
               * FeatureOnlineStoreAdminService.ListFeatureViewSyncs must match the call that
               * provided the page token.
               */
              @com.google.api.client.util.Key
              private java.lang.String pageToken;

              /** A page token, received from a previous FeatureOnlineStoreAdminService.ListFeatureViewSyncs call.
             Provide this to retrieve the subsequent page. When paginating, all other parameters provided to
             FeatureOnlineStoreAdminService.ListFeatureViewSyncs must match the call that provided the page
             token.
               */
              public java.lang.String getPageToken() {
                return pageToken;
              }

              /**
               * A page token, received from a previous
               * FeatureOnlineStoreAdminService.ListFeatureViewSyncs call. Provide this to retrieve
               * the subsequent page. When paginating, all other parameters provided to
               * FeatureOnlineStoreAdminService.ListFeatureViewSyncs must match the call that
               * provided the page token.
               */
              public List setPageToken(java.lang.String pageToken) {
                this.pageToken = pageToken;
                return this;
              }

              @Override
              public List set(String parameterName, Object value) {
                return (List) super.set(parameterName, value);
              }
            }

          }
          /**
           * An accessor for creating requests from the Operations collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code Aiplatform aiplatform = new Aiplatform(...);}
           *   {@code Aiplatform.Operations.List request = aiplatform.operations().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public Operations operations() {
            return new Operations();
          }

          /**
           * The "operations" collection of methods.
           */
          public class Operations {

            /**
             * Deletes a long-running operation. This method indicates that the client is no longer interested
             * in the operation result. It does not cancel the operation. If the server doesn't support this
             * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.delete".
             *
             * This request holds the parameters needed by the aiplatform server.  After setting any optional
             * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             *
             * @param name The name of the operation resource to be deleted.
             * @return the request
             */
            public Delete delete(java.lang.String name) throws java.io.IOException {
              Delete result = new Delete(name);
              initialize(result);
              return result;
            }

            public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+/featureViews/[^/]+/operations/[^/]+$");

              /**
               * Deletes a long-running operation. This method indicates that the client is no longer interested
               * in the operation result. It does not cancel the operation. If the server doesn't support this
               * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
               *
               * Create a request for the method "operations.delete".
               *
               * This request holds the parameters needed by the the aiplatform server.  After setting any
               * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
               * <p> {@link
               * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The name of the operation resource to be deleted.
               * @since 1.13
               */
              protected Delete(java.lang.String name) {
                super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+/featureViews/[^/]+/operations/[^/]+$");
                }
              }

              @Override
              public Delete set$Xgafv(java.lang.String $Xgafv) {
                return (Delete) super.set$Xgafv($Xgafv);
              }

              @Override
              public Delete setAccessToken(java.lang.String accessToken) {
                return (Delete) super.setAccessToken(accessToken);
              }

              @Override
              public Delete setAlt(java.lang.String alt) {
                return (Delete) super.setAlt(alt);
              }

              @Override
              public Delete setCallback(java.lang.String callback) {
                return (Delete) super.setCallback(callback);
              }

              @Override
              public Delete setFields(java.lang.String fields) {
                return (Delete) super.setFields(fields);
              }

              @Override
              public Delete setKey(java.lang.String key) {
                return (Delete) super.setKey(key);
              }

              @Override
              public Delete setOauthToken(java.lang.String oauthToken) {
                return (Delete) super.setOauthToken(oauthToken);
              }

              @Override
              public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Delete) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Delete setQuotaUser(java.lang.String quotaUser) {
                return (Delete) super.setQuotaUser(quotaUser);
              }

              @Override
              public Delete setUploadType(java.lang.String uploadType) {
                return (Delete) super.setUploadType(uploadType);
              }

              @Override
              public Delete setUploadProtocol(java.lang.String uploadProtocol) {
                return (Delete) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the operation resource to be deleted. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The name of the operation resource to be deleted.
               */
              public java.lang.String getName() {
                return name;
              }

              /** The name of the operation resource to be deleted. */
              public Delete setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+/featureViews/[^/]+/operations/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Delete set(String parameterName, Object value) {
                return (Delete) super.set(parameterName, value);
              }
            }
            /**
             * Gets the latest state of a long-running operation. Clients can use this method to poll the
             * operation result at intervals as recommended by the API service.
             *
             * Create a request for the method "operations.get".
             *
             * This request holds the parameters needed by the aiplatform server.  After setting any optional
             * parameters, call the {@link Get#execute()} method to invoke the remote operation.
             *
             * @param name The name of the operation resource.
             * @return the request
             */
            public Get get(java.lang.String name) throws java.io.IOException {
              Get result = new Get(name);
              initialize(result);
              return result;
            }

            public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+/featureViews/[^/]+/operations/[^/]+$");

              /**
               * Gets the latest state of a long-running operation. Clients can use this method to poll the
               * operation result at intervals as recommended by the API service.
               *
               * Create a request for the method "operations.get".
               *
               * This request holds the parameters needed by the the aiplatform server.  After setting any
               * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
               * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The name of the operation resource.
               * @since 1.13
               */
              protected Get(java.lang.String name) {
                super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+/featureViews/[^/]+/operations/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public Get set$Xgafv(java.lang.String $Xgafv) {
                return (Get) super.set$Xgafv($Xgafv);
              }

              @Override
              public Get setAccessToken(java.lang.String accessToken) {
                return (Get) super.setAccessToken(accessToken);
              }

              @Override
              public Get setAlt(java.lang.String alt) {
                return (Get) super.setAlt(alt);
              }

              @Override
              public Get setCallback(java.lang.String callback) {
                return (Get) super.setCallback(callback);
              }

              @Override
              public Get setFields(java.lang.String fields) {
                return (Get) super.setFields(fields);
              }

              @Override
              public Get setKey(java.lang.String key) {
                return (Get) super.setKey(key);
              }

              @Override
              public Get setOauthToken(java.lang.String oauthToken) {
                return (Get) super.setOauthToken(oauthToken);
              }

              @Override
              public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Get) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Get setQuotaUser(java.lang.String quotaUser) {
                return (Get) super.setQuotaUser(quotaUser);
              }

              @Override
              public Get setUploadType(java.lang.String uploadType) {
                return (Get) super.setUploadType(uploadType);
              }

              @Override
              public Get setUploadProtocol(java.lang.String uploadProtocol) {
                return (Get) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the operation resource. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The name of the operation resource.
               */
              public java.lang.String getName() {
                return name;
              }

              /** The name of the operation resource. */
              public Get setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+/featureViews/[^/]+/operations/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Get set(String parameterName, Object value) {
                return (Get) super.set(parameterName, value);
              }
            }
            /**
             * Lists operations that match the specified filter in the request. If the server doesn't support
             * this method, it returns `UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.listWait".
             *
             * This request holds the parameters needed by the aiplatform server.  After setting any optional
             * parameters, call the {@link ListWait#execute()} method to invoke the remote operation.
             *
             * @param name The name of the operation's parent resource.
             * @return the request
             */
            public ListWait listWait(java.lang.String name) throws java.io.IOException {
              ListWait result = new ListWait(name);
              initialize(result);
              return result;
            }

            public class ListWait extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse> {

              private static final String REST_PATH = "v1/{+name}:wait";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+/featureViews/[^/]+/operations/[^/]+$");

              /**
               * Lists operations that match the specified filter in the request. If the server doesn't support
               * this method, it returns `UNIMPLEMENTED`.
               *
               * Create a request for the method "operations.listWait".
               *
               * This request holds the parameters needed by the the aiplatform server.  After setting any
               * optional parameters, call the {@link ListWait#execute()} method to invoke the remote operation.
               * <p> {@link
               * ListWait#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The name of the operation's parent resource.
               * @since 1.13
               */
              protected ListWait(java.lang.String name) {
                super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+/featureViews/[^/]+/operations/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public ListWait set$Xgafv(java.lang.String $Xgafv) {
                return (ListWait) super.set$Xgafv($Xgafv);
              }

              @Override
              public ListWait setAccessToken(java.lang.String accessToken) {
                return (ListWait) super.setAccessToken(accessToken);
              }

              @Override
              public ListWait setAlt(java.lang.String alt) {
                return (ListWait) super.setAlt(alt);
              }

              @Override
              public ListWait setCallback(java.lang.String callback) {
                return (ListWait) super.setCallback(callback);
              }

              @Override
              public ListWait setFields(java.lang.String fields) {
                return (ListWait) super.setFields(fields);
              }

              @Override
              public ListWait setKey(java.lang.String key) {
                return (ListWait) super.setKey(key);
              }

              @Override
              public ListWait setOauthToken(java.lang.String oauthToken) {
                return (ListWait) super.setOauthToken(oauthToken);
              }

              @Override
              public ListWait setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (ListWait) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public ListWait setQuotaUser(java.lang.String quotaUser) {
                return (ListWait) super.setQuotaUser(quotaUser);
              }

              @Override
              public ListWait setUploadType(java.lang.String uploadType) {
                return (ListWait) super.setUploadType(uploadType);
              }

              @Override
              public ListWait setUploadProtocol(java.lang.String uploadProtocol) {
                return (ListWait) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the operation's parent resource. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The name of the operation's parent resource.
               */
              public java.lang.String getName() {
                return name;
              }

              /** The name of the operation's parent resource. */
              public ListWait setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+/featureViews/[^/]+/operations/[^/]+$");
                }
                this.name = name;
                return this;
              }

              /** The standard list filter. */
              @com.google.api.client.util.Key
              private java.lang.String filter;

              /** The standard list filter.
               */
              public java.lang.String getFilter() {
                return filter;
              }

              /** The standard list filter. */
              public ListWait setFilter(java.lang.String filter) {
                this.filter = filter;
                return this;
              }

              /** The standard list page size. */
              @com.google.api.client.util.Key
              private java.lang.Integer pageSize;

              /** The standard list page size.
               */
              public java.lang.Integer getPageSize() {
                return pageSize;
              }

              /** The standard list page size. */
              public ListWait setPageSize(java.lang.Integer pageSize) {
                this.pageSize = pageSize;
                return this;
              }

              /** The standard list page token. */
              @com.google.api.client.util.Key
              private java.lang.String pageToken;

              /** The standard list page token.
               */
              public java.lang.String getPageToken() {
                return pageToken;
              }

              /** The standard list page token. */
              public ListWait setPageToken(java.lang.String pageToken) {
                this.pageToken = pageToken;
                return this;
              }

              @Override
              public ListWait set(String parameterName, Object value) {
                return (ListWait) super.set(parameterName, value);
              }
            }
            /**
             * Waits until the specified long-running operation is done or reaches at most a specified timeout,
             * returning the latest state. If the operation is already done, the latest state is immediately
             * returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC
             * timeout is used. If the server does not support this method, it returns
             * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
             * the latest state before the specified timeout (including immediately), meaning even an immediate
             * response is no guarantee that the operation is done.
             *
             * Create a request for the method "operations.wait".
             *
             * This request holds the parameters needed by the aiplatform server.  After setting any optional
             * parameters, call the {@link Wait#execute()} method to invoke the remote operation.
             *
             * @param name The name of the operation resource to wait on.
             * @return the request
             */
            public Wait wait(java.lang.String name) throws java.io.IOException {
              Wait result = new Wait(name);
              initialize(result);
              return result;
            }

            public class Wait extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

              private static final String REST_PATH = "v1/{+name}:wait";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+/featureViews/[^/]+/operations/[^/]+$");

              /**
               * Waits until the specified long-running operation is done or reaches at most a specified
               * timeout, returning the latest state. If the operation is already done, the latest state is
               * immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout,
               * the HTTP/RPC timeout is used. If the server does not support this method, it returns
               * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
               * the latest state before the specified timeout (including immediately), meaning even an
               * immediate response is no guarantee that the operation is done.
               *
               * Create a request for the method "operations.wait".
               *
               * This request holds the parameters needed by the the aiplatform server.  After setting any
               * optional parameters, call the {@link Wait#execute()} method to invoke the remote operation. <p>
               * {@link Wait#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The name of the operation resource to wait on.
               * @since 1.13
               */
              protected Wait(java.lang.String name) {
                super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+/featureViews/[^/]+/operations/[^/]+$");
                }
              }

              @Override
              public Wait set$Xgafv(java.lang.String $Xgafv) {
                return (Wait) super.set$Xgafv($Xgafv);
              }

              @Override
              public Wait setAccessToken(java.lang.String accessToken) {
                return (Wait) super.setAccessToken(accessToken);
              }

              @Override
              public Wait setAlt(java.lang.String alt) {
                return (Wait) super.setAlt(alt);
              }

              @Override
              public Wait setCallback(java.lang.String callback) {
                return (Wait) super.setCallback(callback);
              }

              @Override
              public Wait setFields(java.lang.String fields) {
                return (Wait) super.setFields(fields);
              }

              @Override
              public Wait setKey(java.lang.String key) {
                return (Wait) super.setKey(key);
              }

              @Override
              public Wait setOauthToken(java.lang.String oauthToken) {
                return (Wait) super.setOauthToken(oauthToken);
              }

              @Override
              public Wait setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Wait) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Wait setQuotaUser(java.lang.String quotaUser) {
                return (Wait) super.setQuotaUser(quotaUser);
              }

              @Override
              public Wait setUploadType(java.lang.String uploadType) {
                return (Wait) super.setUploadType(uploadType);
              }

              @Override
              public Wait setUploadProtocol(java.lang.String uploadProtocol) {
                return (Wait) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the operation resource to wait on. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The name of the operation resource to wait on.
               */
              public java.lang.String getName() {
                return name;
              }

              /** The name of the operation resource to wait on. */
              public Wait setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+/featureViews/[^/]+/operations/[^/]+$");
                }
                this.name = name;
                return this;
              }

              /**
               * The maximum duration to wait before timing out. If left blank, the wait will be at
               * most the time permitted by the underlying HTTP/RPC protocol. If RPC context
               * deadline is also specified, the shorter one will be used.
               */
              @com.google.api.client.util.Key
              private String timeout;

              /** The maximum duration to wait before timing out. If left blank, the wait will be at most the time
             permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the
             shorter one will be used.
               */
              public String getTimeout() {
                return timeout;
              }

              /**
               * The maximum duration to wait before timing out. If left blank, the wait will be at
               * most the time permitted by the underlying HTTP/RPC protocol. If RPC context
               * deadline is also specified, the shorter one will be used.
               */
              public Wait setTimeout(String timeout) {
                this.timeout = timeout;
                return this;
              }

              @Override
              public Wait set(String parameterName, Object value) {
                return (Wait) super.set(parameterName, value);
              }
            }

          }
        }
        /**
         * An accessor for creating requests from the Operations collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Aiplatform aiplatform = new Aiplatform(...);}
         *   {@code Aiplatform.Operations.List request = aiplatform.operations().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Operations operations() {
          return new Operations();
        }

        /**
         * The "operations" collection of methods.
         */
        public class Operations {

          /**
           * Deletes a long-running operation. This method indicates that the client is no longer interested
           * in the operation result. It does not cancel the operation. If the server doesn't support this
           * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.delete".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource to be deleted.
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+/operations/[^/]+$");

            /**
             * Deletes a long-running operation. This method indicates that the client is no longer interested
             * in the operation result. It does not cancel the operation. If the server doesn't support this
             * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.delete".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource to be deleted.
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource to be deleted. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource to be deleted.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource to be deleted. */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Gets the latest state of a long-running operation. Clients can use this method to poll the
           * operation result at intervals as recommended by the API service.
           *
           * Create a request for the method "operations.get".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource.
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+/operations/[^/]+$");

            /**
             * Gets the latest state of a long-running operation. Clients can use this method to poll the
             * operation result at intervals as recommended by the API service.
             *
             * Create a request for the method "operations.get".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource.
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource. */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Lists operations that match the specified filter in the request. If the server doesn't support
           * this method, it returns `UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.listWait".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link ListWait#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation's parent resource.
           * @return the request
           */
          public ListWait listWait(java.lang.String name) throws java.io.IOException {
            ListWait result = new ListWait(name);
            initialize(result);
            return result;
          }

          public class ListWait extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse> {

            private static final String REST_PATH = "v1/{+name}:wait";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+/operations/[^/]+$");

            /**
             * Lists operations that match the specified filter in the request. If the server doesn't support
             * this method, it returns `UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.listWait".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link ListWait#execute()} method to invoke the remote operation.
             * <p> {@link
             * ListWait#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation's parent resource.
             * @since 1.13
             */
            protected ListWait(java.lang.String name) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public ListWait set$Xgafv(java.lang.String $Xgafv) {
              return (ListWait) super.set$Xgafv($Xgafv);
            }

            @Override
            public ListWait setAccessToken(java.lang.String accessToken) {
              return (ListWait) super.setAccessToken(accessToken);
            }

            @Override
            public ListWait setAlt(java.lang.String alt) {
              return (ListWait) super.setAlt(alt);
            }

            @Override
            public ListWait setCallback(java.lang.String callback) {
              return (ListWait) super.setCallback(callback);
            }

            @Override
            public ListWait setFields(java.lang.String fields) {
              return (ListWait) super.setFields(fields);
            }

            @Override
            public ListWait setKey(java.lang.String key) {
              return (ListWait) super.setKey(key);
            }

            @Override
            public ListWait setOauthToken(java.lang.String oauthToken) {
              return (ListWait) super.setOauthToken(oauthToken);
            }

            @Override
            public ListWait setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (ListWait) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public ListWait setQuotaUser(java.lang.String quotaUser) {
              return (ListWait) super.setQuotaUser(quotaUser);
            }

            @Override
            public ListWait setUploadType(java.lang.String uploadType) {
              return (ListWait) super.setUploadType(uploadType);
            }

            @Override
            public ListWait setUploadProtocol(java.lang.String uploadProtocol) {
              return (ListWait) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation's parent resource. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation's parent resource.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation's parent resource. */
            public ListWait setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /** The standard list filter. */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** The standard list filter.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /** The standard list filter. */
            public ListWait setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /** The standard list page size. */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** The standard list page size.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /** The standard list page size. */
            public ListWait setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** The standard list page token. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** The standard list page token.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** The standard list page token. */
            public ListWait setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public ListWait set(String parameterName, Object value) {
              return (ListWait) super.set(parameterName, value);
            }
          }
          /**
           * Waits until the specified long-running operation is done or reaches at most a specified timeout,
           * returning the latest state. If the operation is already done, the latest state is immediately
           * returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC
           * timeout is used. If the server does not support this method, it returns
           * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
           * the latest state before the specified timeout (including immediately), meaning even an immediate
           * response is no guarantee that the operation is done.
           *
           * Create a request for the method "operations.wait".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Wait#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource to wait on.
           * @return the request
           */
          public Wait wait(java.lang.String name) throws java.io.IOException {
            Wait result = new Wait(name);
            initialize(result);
            return result;
          }

          public class Wait extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+name}:wait";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+/operations/[^/]+$");

            /**
             * Waits until the specified long-running operation is done or reaches at most a specified
             * timeout, returning the latest state. If the operation is already done, the latest state is
             * immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout,
             * the HTTP/RPC timeout is used. If the server does not support this method, it returns
             * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
             * the latest state before the specified timeout (including immediately), meaning even an
             * immediate response is no guarantee that the operation is done.
             *
             * Create a request for the method "operations.wait".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Wait#execute()} method to invoke the remote operation. <p>
             * {@link Wait#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource to wait on.
             * @since 1.13
             */
            protected Wait(java.lang.String name) {
              super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public Wait set$Xgafv(java.lang.String $Xgafv) {
              return (Wait) super.set$Xgafv($Xgafv);
            }

            @Override
            public Wait setAccessToken(java.lang.String accessToken) {
              return (Wait) super.setAccessToken(accessToken);
            }

            @Override
            public Wait setAlt(java.lang.String alt) {
              return (Wait) super.setAlt(alt);
            }

            @Override
            public Wait setCallback(java.lang.String callback) {
              return (Wait) super.setCallback(callback);
            }

            @Override
            public Wait setFields(java.lang.String fields) {
              return (Wait) super.setFields(fields);
            }

            @Override
            public Wait setKey(java.lang.String key) {
              return (Wait) super.setKey(key);
            }

            @Override
            public Wait setOauthToken(java.lang.String oauthToken) {
              return (Wait) super.setOauthToken(oauthToken);
            }

            @Override
            public Wait setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Wait) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Wait setQuotaUser(java.lang.String quotaUser) {
              return (Wait) super.setQuotaUser(quotaUser);
            }

            @Override
            public Wait setUploadType(java.lang.String uploadType) {
              return (Wait) super.setUploadType(uploadType);
            }

            @Override
            public Wait setUploadProtocol(java.lang.String uploadProtocol) {
              return (Wait) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource to wait on. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource to wait on.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource to wait on. */
            public Wait setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * The maximum duration to wait before timing out. If left blank, the wait will be at
             * most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline
             * is also specified, the shorter one will be used.
             */
            @com.google.api.client.util.Key
            private String timeout;

            /** The maximum duration to wait before timing out. If left blank, the wait will be at most the time
           permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the
           shorter one will be used.
             */
            public String getTimeout() {
              return timeout;
            }

            /**
             * The maximum duration to wait before timing out. If left blank, the wait will be at
             * most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline
             * is also specified, the shorter one will be used.
             */
            public Wait setTimeout(String timeout) {
              this.timeout = timeout;
              return this;
            }

            @Override
            public Wait set(String parameterName, Object value) {
              return (Wait) super.set(parameterName, value);
            }
          }

        }
      }
      /**
       * An accessor for creating requests from the Featurestores collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Aiplatform aiplatform = new Aiplatform(...);}
       *   {@code Aiplatform.Featurestores.List request = aiplatform.featurestores().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Featurestores featurestores() {
        return new Featurestores();
      }

      /**
       * The "featurestores" collection of methods.
       */
      public class Featurestores {

        /**
         * Batch reads Feature values from a Featurestore. This API enables batch reading Feature values,
         * where each read instance in the batch may read Feature values of entities from one or more
         * EntityTypes. Point-in-time correctness is guaranteed for Feature values of each read instance as
         * of each instance's read timestamp.
         *
         * Create a request for the method "featurestores.batchReadFeatureValues".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link BatchReadFeatureValues#execute()} method to invoke the remote
         * operation.
         *
         * @param featurestore Required. The resource name of the Featurestore from which to query Feature values. Format:
         *        `projects/{project}/locations/{location}/featurestores/{featurestore}`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1BatchReadFeatureValuesRequest}
         * @return the request
         */
        public BatchReadFeatureValues batchReadFeatureValues(java.lang.String featurestore, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1BatchReadFeatureValuesRequest content) throws java.io.IOException {
          BatchReadFeatureValues result = new BatchReadFeatureValues(featurestore, content);
          initialize(result);
          return result;
        }

        public class BatchReadFeatureValues extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+featurestore}:batchReadFeatureValues";

          private final java.util.regex.Pattern FEATURESTORE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featurestores/[^/]+$");

          /**
           * Batch reads Feature values from a Featurestore. This API enables batch reading Feature values,
           * where each read instance in the batch may read Feature values of entities from one or more
           * EntityTypes. Point-in-time correctness is guaranteed for Feature values of each read instance
           * as of each instance's read timestamp.
           *
           * Create a request for the method "featurestores.batchReadFeatureValues".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link BatchReadFeatureValues#execute()} method to invoke the
           * remote operation. <p> {@link BatchReadFeatureValues#initialize(com.google.api.client.googleapis
           * .services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
           * after invoking the constructor. </p>
           *
           * @param featurestore Required. The resource name of the Featurestore from which to query Feature values. Format:
         *        `projects/{project}/locations/{location}/featurestores/{featurestore}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1BatchReadFeatureValuesRequest}
           * @since 1.13
           */
          protected BatchReadFeatureValues(java.lang.String featurestore, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1BatchReadFeatureValuesRequest content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
            this.featurestore = com.google.api.client.util.Preconditions.checkNotNull(featurestore, "Required parameter featurestore must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(FEATURESTORE_PATTERN.matcher(featurestore).matches(),
                  "Parameter featurestore must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+$");
            }
          }

          @Override
          public BatchReadFeatureValues set$Xgafv(java.lang.String $Xgafv) {
            return (BatchReadFeatureValues) super.set$Xgafv($Xgafv);
          }

          @Override
          public BatchReadFeatureValues setAccessToken(java.lang.String accessToken) {
            return (BatchReadFeatureValues) super.setAccessToken(accessToken);
          }

          @Override
          public BatchReadFeatureValues setAlt(java.lang.String alt) {
            return (BatchReadFeatureValues) super.setAlt(alt);
          }

          @Override
          public BatchReadFeatureValues setCallback(java.lang.String callback) {
            return (BatchReadFeatureValues) super.setCallback(callback);
          }

          @Override
          public BatchReadFeatureValues setFields(java.lang.String fields) {
            return (BatchReadFeatureValues) super.setFields(fields);
          }

          @Override
          public BatchReadFeatureValues setKey(java.lang.String key) {
            return (BatchReadFeatureValues) super.setKey(key);
          }

          @Override
          public BatchReadFeatureValues setOauthToken(java.lang.String oauthToken) {
            return (BatchReadFeatureValues) super.setOauthToken(oauthToken);
          }

          @Override
          public BatchReadFeatureValues setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (BatchReadFeatureValues) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public BatchReadFeatureValues setQuotaUser(java.lang.String quotaUser) {
            return (BatchReadFeatureValues) super.setQuotaUser(quotaUser);
          }

          @Override
          public BatchReadFeatureValues setUploadType(java.lang.String uploadType) {
            return (BatchReadFeatureValues) super.setUploadType(uploadType);
          }

          @Override
          public BatchReadFeatureValues setUploadProtocol(java.lang.String uploadProtocol) {
            return (BatchReadFeatureValues) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the Featurestore from which to query Feature values.
           * Format: `projects/{project}/locations/{location}/featurestores/{featurestore}`
           */
          @com.google.api.client.util.Key
          private java.lang.String featurestore;

          /** Required. The resource name of the Featurestore from which to query Feature values. Format:
         `projects/{project}/locations/{location}/featurestores/{featurestore}`
           */
          public java.lang.String getFeaturestore() {
            return featurestore;
          }

          /**
           * Required. The resource name of the Featurestore from which to query Feature values.
           * Format: `projects/{project}/locations/{location}/featurestores/{featurestore}`
           */
          public BatchReadFeatureValues setFeaturestore(java.lang.String featurestore) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(FEATURESTORE_PATTERN.matcher(featurestore).matches(),
                  "Parameter featurestore must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+$");
            }
            this.featurestore = featurestore;
            return this;
          }

          @Override
          public BatchReadFeatureValues set(String parameterName, Object value) {
            return (BatchReadFeatureValues) super.set(parameterName, value);
          }
        }
        /**
         * Creates a new Featurestore in a given project and location.
         *
         * Create a request for the method "featurestores.create".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The resource name of the Location to create Featurestores. Format:
         *        `projects/{project}/locations/{location}`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Featurestore}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Featurestore content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+parent}/featurestores";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Creates a new Featurestore in a given project and location.
           *
           * Create a request for the method "featurestores.create".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The resource name of the Location to create Featurestores. Format:
         *        `projects/{project}/locations/{location}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Featurestore}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Featurestore content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the Location to create Featurestores. Format:
           * `projects/{project}/locations/{location}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The resource name of the Location to create Featurestores. Format:
         `projects/{project}/locations/{location}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The resource name of the Location to create Featurestores. Format:
           * `projects/{project}/locations/{location}`
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Required. The ID to use for this Featurestore, which will become the final component of
           * the Featurestore's resource name. This value may be up to 60 characters, and valid
           * characters are `[a-z0-9_]`. The first character cannot be a number. The value must be
           * unique within the project and location.
           */
          @com.google.api.client.util.Key
          private java.lang.String featurestoreId;

          /** Required. The ID to use for this Featurestore, which will become the final component of the
         Featurestore's resource name. This value may be up to 60 characters, and valid characters are
         `[a-z0-9_]`. The first character cannot be a number. The value must be unique within the project
         and location.
           */
          public java.lang.String getFeaturestoreId() {
            return featurestoreId;
          }

          /**
           * Required. The ID to use for this Featurestore, which will become the final component of
           * the Featurestore's resource name. This value may be up to 60 characters, and valid
           * characters are `[a-z0-9_]`. The first character cannot be a number. The value must be
           * unique within the project and location.
           */
          public Create setFeaturestoreId(java.lang.String featurestoreId) {
            this.featurestoreId = featurestoreId;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a single Featurestore. The Featurestore must not contain any EntityTypes or `force` must
         * be set to true for the request to succeed.
         *
         * Create a request for the method "featurestores.delete".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the Featurestore to be deleted. Format:
         *        `projects/{project}/locations/{location}/featurestores/{featurestore}`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featurestores/[^/]+$");

          /**
           * Deletes a single Featurestore. The Featurestore must not contain any EntityTypes or `force`
           * must be set to true for the request to succeed.
           *
           * Create a request for the method "featurestores.delete".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the Featurestore to be deleted. Format:
         *        `projects/{project}/locations/{location}/featurestores/{featurestore}`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the Featurestore to be deleted. Format:
           * `projects/{project}/locations/{location}/featurestores/{featurestore}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the Featurestore to be deleted. Format:
         `projects/{project}/locations/{location}/featurestores/{featurestore}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the Featurestore to be deleted. Format:
           * `projects/{project}/locations/{location}/featurestores/{featurestore}`
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * If set to true, any EntityTypes and Features for this Featurestore will also be
           * deleted. (Otherwise, the request will only work if the Featurestore has no
           * EntityTypes.)
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean force;

          /** If set to true, any EntityTypes and Features for this Featurestore will also be deleted.
         (Otherwise, the request will only work if the Featurestore has no EntityTypes.)
           */
          public java.lang.Boolean getForce() {
            return force;
          }

          /**
           * If set to true, any EntityTypes and Features for this Featurestore will also be
           * deleted. (Otherwise, the request will only work if the Featurestore has no
           * EntityTypes.)
           */
          public Delete setForce(java.lang.Boolean force) {
            this.force = force;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets details of a single Featurestore.
         *
         * Create a request for the method "featurestores.get".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the Featurestore resource.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Featurestore> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featurestores/[^/]+$");

          /**
           * Gets details of a single Featurestore.
           *
           * Create a request for the method "featurestores.get".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the Featurestore resource.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Featurestore.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The name of the Featurestore resource. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the Featurestore resource.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. The name of the Featurestore resource. */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Gets the access control policy for a resource. Returns an empty policy if the resource exists and
         * does not have a policy set.
         *
         * Create a request for the method "featurestores.getIamPolicy".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
         * @return the request
         */
        public GetIamPolicy getIamPolicy(java.lang.String resource) throws java.io.IOException {
          GetIamPolicy result = new GetIamPolicy(resource);
          initialize(result);
          return result;
        }

        public class GetIamPolicy extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleIamV1Policy> {

          private static final String REST_PATH = "v1/{+resource}:getIamPolicy";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featurestores/[^/]+$");

          /**
           * Gets the access control policy for a resource. Returns an empty policy if the resource exists
           * and does not have a policy set.
           *
           * Create a request for the method "featurestores.getIamPolicy".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
           * operation. <p> {@link
           * GetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
           * @since 1.13
           */
          protected GetIamPolicy(java.lang.String resource) {
            super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleIamV1Policy.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+$");
            }
          }

          @Override
          public GetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
            return (GetIamPolicy) super.set$Xgafv($Xgafv);
          }

          @Override
          public GetIamPolicy setAccessToken(java.lang.String accessToken) {
            return (GetIamPolicy) super.setAccessToken(accessToken);
          }

          @Override
          public GetIamPolicy setAlt(java.lang.String alt) {
            return (GetIamPolicy) super.setAlt(alt);
          }

          @Override
          public GetIamPolicy setCallback(java.lang.String callback) {
            return (GetIamPolicy) super.setCallback(callback);
          }

          @Override
          public GetIamPolicy setFields(java.lang.String fields) {
            return (GetIamPolicy) super.setFields(fields);
          }

          @Override
          public GetIamPolicy setKey(java.lang.String key) {
            return (GetIamPolicy) super.setKey(key);
          }

          @Override
          public GetIamPolicy setOauthToken(java.lang.String oauthToken) {
            return (GetIamPolicy) super.setOauthToken(oauthToken);
          }

          @Override
          public GetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (GetIamPolicy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public GetIamPolicy setQuotaUser(java.lang.String quotaUser) {
            return (GetIamPolicy) super.setQuotaUser(quotaUser);
          }

          @Override
          public GetIamPolicy setUploadType(java.lang.String uploadType) {
            return (GetIamPolicy) super.setUploadType(uploadType);
          }

          @Override
          public GetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
            return (GetIamPolicy) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy is being requested. See [Resource
         names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          public GetIamPolicy setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          /**
           * Optional. The maximum policy version that will be used to format the policy. Valid
           * values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests
           * for policies with any conditional role bindings must specify version 3. Policies with
           * no conditional role bindings may specify any valid value or leave the field unset. The
           * policy in the response might use the policy version that you specified, or it might use
           * a lower policy version. For example, if you specify version 3, but the policy has no
           * conditional role bindings, the response uses version 1. To learn which resources
           * support conditions in their IAM policies, see the [IAM
           * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
           */
          @com.google.api.client.util.Key("options.requestedPolicyVersion")
          private java.lang.Integer optionsRequestedPolicyVersion;

          /** Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1,
         and 3. Requests specifying an invalid value will be rejected. Requests for policies with any
         conditional role bindings must specify version 3. Policies with no conditional role bindings may
         specify any valid value or leave the field unset. The policy in the response might use the policy
         version that you specified, or it might use a lower policy version. For example, if you specify
         version 3, but the policy has no conditional role bindings, the response uses version 1. To learn
         which resources support conditions in their IAM policies, see the [IAM
         documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
           */
          public java.lang.Integer getOptionsRequestedPolicyVersion() {
            return optionsRequestedPolicyVersion;
          }

          /**
           * Optional. The maximum policy version that will be used to format the policy. Valid
           * values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests
           * for policies with any conditional role bindings must specify version 3. Policies with
           * no conditional role bindings may specify any valid value or leave the field unset. The
           * policy in the response might use the policy version that you specified, or it might use
           * a lower policy version. For example, if you specify version 3, but the policy has no
           * conditional role bindings, the response uses version 1. To learn which resources
           * support conditions in their IAM policies, see the [IAM
           * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
           */
          public GetIamPolicy setOptionsRequestedPolicyVersion(java.lang.Integer optionsRequestedPolicyVersion) {
            this.optionsRequestedPolicyVersion = optionsRequestedPolicyVersion;
            return this;
          }

          @Override
          public GetIamPolicy set(String parameterName, Object value) {
            return (GetIamPolicy) super.set(parameterName, value);
          }
        }
        /**
         * Lists Featurestores in a given project and location.
         *
         * Create a request for the method "featurestores.list".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The resource name of the Location to list Featurestores. Format:
         *        `projects/{project}/locations/{location}`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListFeaturestoresResponse> {

          private static final String REST_PATH = "v1/{+parent}/featurestores";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists Featurestores in a given project and location.
           *
           * Create a request for the method "featurestores.list".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The resource name of the Location to list Featurestores. Format:
         *        `projects/{project}/locations/{location}`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListFeaturestoresResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the Location to list Featurestores. Format:
           * `projects/{project}/locations/{location}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The resource name of the Location to list Featurestores. Format:
         `projects/{project}/locations/{location}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The resource name of the Location to list Featurestores. Format:
           * `projects/{project}/locations/{location}`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Lists the featurestores that match the filter expression. The following fields are
           * supported: * `create_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons.
           * Values must be in RFC 3339 format. * `update_time`: Supports `=`, `!=`, `<`, `>`, `<=`,
           * and `>=` comparisons. Values must be in RFC 3339 format. *
           * `online_serving_config.fixed_node_count`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=`
           * comparisons. * `labels`: Supports key-value equality and key presence. Examples: *
           * `create_time > "2020-01-01" OR update_time > "2020-01-01"` Featurestores created or
           * updated after 2020-01-01. * `labels.env = "prod"` Featurestores with label "env" set to
           * "prod".
           */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** Lists the featurestores that match the filter expression. The following fields are supported: *
         `create_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. Values must be in RFC 3339
         format. * `update_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. Values must be
         in RFC 3339 format. * `online_serving_config.fixed_node_count`: Supports `=`, `!=`, `<`, `>`, `<=`,
         and `>=` comparisons. * `labels`: Supports key-value equality and key presence. Examples: *
         `create_time > "2020-01-01" OR update_time > "2020-01-01"` Featurestores created or updated after
         2020-01-01. * `labels.env = "prod"` Featurestores with label "env" set to "prod".
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /**
           * Lists the featurestores that match the filter expression. The following fields are
           * supported: * `create_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons.
           * Values must be in RFC 3339 format. * `update_time`: Supports `=`, `!=`, `<`, `>`, `<=`,
           * and `>=` comparisons. Values must be in RFC 3339 format. *
           * `online_serving_config.fixed_node_count`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=`
           * comparisons. * `labels`: Supports key-value equality and key presence. Examples: *
           * `create_time > "2020-01-01" OR update_time > "2020-01-01"` Featurestores created or
           * updated after 2020-01-01. * `labels.env = "prod"` Featurestores with label "env" set to
           * "prod".
           */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /**
           * A comma-separated list of fields to order by, sorted in ascending order. Use "desc"
           * after a field name for descending. Supported Fields: * `create_time` * `update_time` *
           * `online_serving_config.fixed_node_count`
           */
          @com.google.api.client.util.Key
          private java.lang.String orderBy;

          /** A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field
         name for descending. Supported Fields: * `create_time` * `update_time` *
         `online_serving_config.fixed_node_count`
           */
          public java.lang.String getOrderBy() {
            return orderBy;
          }

          /**
           * A comma-separated list of fields to order by, sorted in ascending order. Use "desc"
           * after a field name for descending. Supported Fields: * `create_time` * `update_time` *
           * `online_serving_config.fixed_node_count`
           */
          public List setOrderBy(java.lang.String orderBy) {
            this.orderBy = orderBy;
            return this;
          }

          /**
           * The maximum number of Featurestores to return. The service may return fewer than this
           * value. If unspecified, at most 100 Featurestores will be returned. The maximum value is
           * 100; any value greater than 100 will be coerced to 100.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The maximum number of Featurestores to return. The service may return fewer than this value. If
         unspecified, at most 100 Featurestores will be returned. The maximum value is 100; any value
         greater than 100 will be coerced to 100.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * The maximum number of Featurestores to return. The service may return fewer than this
           * value. If unspecified, at most 100 Featurestores will be returned. The maximum value is
           * 100; any value greater than 100 will be coerced to 100.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * A page token, received from a previous FeaturestoreService.ListFeaturestores call.
           * Provide this to retrieve the subsequent page. When paginating, all other parameters
           * provided to FeaturestoreService.ListFeaturestores must match the call that provided the
           * page token.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** A page token, received from a previous FeaturestoreService.ListFeaturestores call. Provide this to
         retrieve the subsequent page. When paginating, all other parameters provided to
         FeaturestoreService.ListFeaturestores must match the call that provided the page token.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * A page token, received from a previous FeaturestoreService.ListFeaturestores call.
           * Provide this to retrieve the subsequent page. When paginating, all other parameters
           * provided to FeaturestoreService.ListFeaturestores must match the call that provided the
           * page token.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          /** Mask specifying which fields to read. */
          @com.google.api.client.util.Key
          private String readMask;

          /** Mask specifying which fields to read.
           */
          public String getReadMask() {
            return readMask;
          }

          /** Mask specifying which fields to read. */
          public List setReadMask(String readMask) {
            this.readMask = readMask;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates the parameters of a single Featurestore.
         *
         * Create a request for the method "featurestores.patch".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Output only. Name of the Featurestore. Format:
         *        `projects/{project}/locations/{location}/featurestores/{featurestore}`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Featurestore}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Featurestore content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featurestores/[^/]+$");

          /**
           * Updates the parameters of a single Featurestore.
           *
           * Create a request for the method "featurestores.patch".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           * <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Output only. Name of the Featurestore. Format:
         *        `projects/{project}/locations/{location}/featurestores/{featurestore}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Featurestore}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Featurestore content) {
            super(Aiplatform.this, "PATCH", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Output only. Name of the Featurestore. Format:
           * `projects/{project}/locations/{location}/featurestores/{featurestore}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Output only. Name of the Featurestore. Format:
         `projects/{project}/locations/{location}/featurestores/{featurestore}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Output only. Name of the Featurestore. Format:
           * `projects/{project}/locations/{location}/featurestores/{featurestore}`
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Field mask is used to specify the fields to be overwritten in the Featurestore resource
           * by the update. The fields specified in the update_mask are relative to the resource,
           * not the full request. A field will be overwritten if it is in the mask. If the user
           * does not provide a mask then only the non-empty fields present in the request will be
           * overwritten. Set the update_mask to `*` to override all fields. Updatable fields: *
           * `labels` * `online_serving_config.fixed_node_count` * `online_serving_config.scaling` *
           * `online_storage_ttl_days`
           */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Field mask is used to specify the fields to be overwritten in the Featurestore resource by the
         update. The fields specified in the update_mask are relative to the resource, not the full request.
         A field will be overwritten if it is in the mask. If the user does not provide a mask then only the
         non-empty fields present in the request will be overwritten. Set the update_mask to `*` to override
         all fields. Updatable fields: * `labels` * `online_serving_config.fixed_node_count` *
         `online_serving_config.scaling` * `online_storage_ttl_days`
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /**
           * Field mask is used to specify the fields to be overwritten in the Featurestore resource
           * by the update. The fields specified in the update_mask are relative to the resource,
           * not the full request. A field will be overwritten if it is in the mask. If the user
           * does not provide a mask then only the non-empty fields present in the request will be
           * overwritten. Set the update_mask to `*` to override all fields. Updatable fields: *
           * `labels` * `online_serving_config.fixed_node_count` * `online_serving_config.scaling` *
           * `online_storage_ttl_days`
           */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }
        /**
         * Searches Features matching a query in a given project.
         *
         * Create a request for the method "featurestores.searchFeatures".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link SearchFeatures#execute()} method to invoke the remote operation.
         *
         * @param location Required. The resource name of the Location to search Features. Format:
         *        `projects/{project}/locations/{location}`
         * @return the request
         */
        public SearchFeatures searchFeatures(java.lang.String location) throws java.io.IOException {
          SearchFeatures result = new SearchFeatures(location);
          initialize(result);
          return result;
        }

        public class SearchFeatures extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1SearchFeaturesResponse> {

          private static final String REST_PATH = "v1/{+location}/featurestores:searchFeatures";

          private final java.util.regex.Pattern LOCATION_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Searches Features matching a query in a given project.
           *
           * Create a request for the method "featurestores.searchFeatures".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link SearchFeatures#execute()} method to invoke the remote
           * operation. <p> {@link SearchFeatures#initialize(com.google.api.client.googleapis.services.Abstr
           * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
           * the constructor. </p>
           *
           * @param location Required. The resource name of the Location to search Features. Format:
         *        `projects/{project}/locations/{location}`
           * @since 1.13
           */
          protected SearchFeatures(java.lang.String location) {
            super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1SearchFeaturesResponse.class);
            this.location = com.google.api.client.util.Preconditions.checkNotNull(location, "Required parameter location must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(LOCATION_PATTERN.matcher(location).matches(),
                  "Parameter location must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public SearchFeatures set$Xgafv(java.lang.String $Xgafv) {
            return (SearchFeatures) super.set$Xgafv($Xgafv);
          }

          @Override
          public SearchFeatures setAccessToken(java.lang.String accessToken) {
            return (SearchFeatures) super.setAccessToken(accessToken);
          }

          @Override
          public SearchFeatures setAlt(java.lang.String alt) {
            return (SearchFeatures) super.setAlt(alt);
          }

          @Override
          public SearchFeatures setCallback(java.lang.String callback) {
            return (SearchFeatures) super.setCallback(callback);
          }

          @Override
          public SearchFeatures setFields(java.lang.String fields) {
            return (SearchFeatures) super.setFields(fields);
          }

          @Override
          public SearchFeatures setKey(java.lang.String key) {
            return (SearchFeatures) super.setKey(key);
          }

          @Override
          public SearchFeatures setOauthToken(java.lang.String oauthToken) {
            return (SearchFeatures) super.setOauthToken(oauthToken);
          }

          @Override
          public SearchFeatures setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (SearchFeatures) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public SearchFeatures setQuotaUser(java.lang.String quotaUser) {
            return (SearchFeatures) super.setQuotaUser(quotaUser);
          }

          @Override
          public SearchFeatures setUploadType(java.lang.String uploadType) {
            return (SearchFeatures) super.setUploadType(uploadType);
          }

          @Override
          public SearchFeatures setUploadProtocol(java.lang.String uploadProtocol) {
            return (SearchFeatures) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the Location to search Features. Format:
           * `projects/{project}/locations/{location}`
           */
          @com.google.api.client.util.Key
          private java.lang.String location;

          /** Required. The resource name of the Location to search Features. Format:
         `projects/{project}/locations/{location}`
           */
          public java.lang.String getLocation() {
            return location;
          }

          /**
           * Required. The resource name of the Location to search Features. Format:
           * `projects/{project}/locations/{location}`
           */
          public SearchFeatures setLocation(java.lang.String location) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(LOCATION_PATTERN.matcher(location).matches(),
                  "Parameter location must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.location = location;
            return this;
          }

          /**
           * The maximum number of Features to return. The service may return fewer than this value.
           * If unspecified, at most 100 Features will be returned. The maximum value is 100; any
           * value greater than 100 will be coerced to 100.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The maximum number of Features to return. The service may return fewer than this value. If
         unspecified, at most 100 Features will be returned. The maximum value is 100; any value greater
         than 100 will be coerced to 100.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * The maximum number of Features to return. The service may return fewer than this value.
           * If unspecified, at most 100 Features will be returned. The maximum value is 100; any
           * value greater than 100 will be coerced to 100.
           */
          public SearchFeatures setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * A page token, received from a previous FeaturestoreService.SearchFeatures call. Provide
           * this to retrieve the subsequent page. When paginating, all other parameters provided to
           * FeaturestoreService.SearchFeatures, except `page_size`, must match the call that
           * provided the page token.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** A page token, received from a previous FeaturestoreService.SearchFeatures call. Provide this to
         retrieve the subsequent page. When paginating, all other parameters provided to
         FeaturestoreService.SearchFeatures, except `page_size`, must match the call that provided the page
         token.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * A page token, received from a previous FeaturestoreService.SearchFeatures call. Provide
           * this to retrieve the subsequent page. When paginating, all other parameters provided to
           * FeaturestoreService.SearchFeatures, except `page_size`, must match the call that
           * provided the page token.
           */
          public SearchFeatures setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          /**
           * Query string that is a conjunction of field-restricted queries and/or field-restricted
           * filters. Field-restricted queries and filters can be combined using `AND` to form a
           * conjunction. A field query is in the form FIELD:QUERY. This implicitly checks if QUERY
           * exists as a substring within Feature's FIELD. The QUERY and the FIELD are converted to
           * a sequence of words (i.e. tokens) for comparison. This is done by: * Removing
           * leading/trailing whitespace and tokenizing the search value. Characters that are not
           * one of alphanumeric `[a-zA-Z0-9]`, underscore `_`, or asterisk `*` are treated as
           * delimiters for tokens. `*` is treated as a wildcard that matches characters within a
           * token. * Ignoring case. * Prepending an asterisk to the first and appending an asterisk
           * to the last token in QUERY. A QUERY must be either a singular token or a phrase. A
           * phrase is one or multiple words enclosed in double quotation marks ("). With phrases,
           * the order of the words is important. Words in the phrase must be matching in order and
           * consecutively. Supported FIELDs for field-restricted queries: * `feature_id` *
           * `description` * `entity_type_id` Examples: * `feature_id: foo` --> Matches a Feature
           * with ID containing the substring `foo` (eg. `foo`, `foofeature`, `barfoo`). *
           * `feature_id: foo*feature` --> Matches a Feature with ID containing the substring
           * `foo*feature` (eg. `foobarfeature`). * `feature_id: foo AND description: bar` -->
           * Matches a Feature with ID containing the substring `foo` and description containing the
           * substring `bar`. Besides field queries, the following exact-match filters are
           * supported. The exact-match filters do not support wildcards. Unlike field-restricted
           * queries, exact-match filters are case-sensitive. * `feature_id`: Supports =
           * comparisons. * `description`: Supports = comparisons. Multi-token filters should be
           * enclosed in quotes. * `entity_type_id`: Supports = comparisons. * `value_type`:
           * Supports = and != comparisons. * `labels`: Supports key-value equality as well as key
           * presence. * `featurestore_id`: Supports = comparisons. Examples: * `description = "foo
           * bar"` --> Any Feature with description exactly equal to `foo bar` * `value_type =
           * DOUBLE` --> Features whose type is DOUBLE. * `labels.active = yes AND labels.env =
           * prod` --> Features having both (active: yes) and (env: prod) labels. * `labels.env: *`
           * --> Any Feature which has a label with `env` as the key.
           */
          @com.google.api.client.util.Key
          private java.lang.String query;

          /** Query string that is a conjunction of field-restricted queries and/or field-restricted filters.
         Field-restricted queries and filters can be combined using `AND` to form a conjunction. A field
         query is in the form FIELD:QUERY. This implicitly checks if QUERY exists as a substring within
         Feature's FIELD. The QUERY and the FIELD are converted to a sequence of words (i.e. tokens) for
         comparison. This is done by: * Removing leading/trailing whitespace and tokenizing the search
         value. Characters that are not one of alphanumeric `[a-zA-Z0-9]`, underscore `_`, or asterisk `*`
         are treated as delimiters for tokens. `*` is treated as a wildcard that matches characters within a
         token. * Ignoring case. * Prepending an asterisk to the first and appending an asterisk to the last
         token in QUERY. A QUERY must be either a singular token or a phrase. A phrase is one or multiple
         words enclosed in double quotation marks ("). With phrases, the order of the words is important.
         Words in the phrase must be matching in order and consecutively. Supported FIELDs for field-
         restricted queries: * `feature_id` * `description` * `entity_type_id` Examples: * `feature_id: foo`
         --> Matches a Feature with ID containing the substring `foo` (eg. `foo`, `foofeature`, `barfoo`). *
         `feature_id: foo*feature` --> Matches a Feature with ID containing the substring `foo*feature` (eg.
         `foobarfeature`). * `feature_id: foo AND description: bar` --> Matches a Feature with ID containing
         the substring `foo` and description containing the substring `bar`. Besides field queries, the
         following exact-match filters are supported. The exact-match filters do not support wildcards.
         Unlike field-restricted queries, exact-match filters are case-sensitive. * `feature_id`: Supports =
         comparisons. * `description`: Supports = comparisons. Multi-token filters should be enclosed in
         quotes. * `entity_type_id`: Supports = comparisons. * `value_type`: Supports = and != comparisons.
         * `labels`: Supports key-value equality as well as key presence. * `featurestore_id`: Supports =
         comparisons. Examples: * `description = "foo bar"` --> Any Feature with description exactly equal
         to `foo bar` * `value_type = DOUBLE` --> Features whose type is DOUBLE. * `labels.active = yes AND
         labels.env = prod` --> Features having both (active: yes) and (env: prod) labels. * `labels.env: *`
         --> Any Feature which has a label with `env` as the key.
           */
          public java.lang.String getQuery() {
            return query;
          }

          /**
           * Query string that is a conjunction of field-restricted queries and/or field-restricted
           * filters. Field-restricted queries and filters can be combined using `AND` to form a
           * conjunction. A field query is in the form FIELD:QUERY. This implicitly checks if QUERY
           * exists as a substring within Feature's FIELD. The QUERY and the FIELD are converted to
           * a sequence of words (i.e. tokens) for comparison. This is done by: * Removing
           * leading/trailing whitespace and tokenizing the search value. Characters that are not
           * one of alphanumeric `[a-zA-Z0-9]`, underscore `_`, or asterisk `*` are treated as
           * delimiters for tokens. `*` is treated as a wildcard that matches characters within a
           * token. * Ignoring case. * Prepending an asterisk to the first and appending an asterisk
           * to the last token in QUERY. A QUERY must be either a singular token or a phrase. A
           * phrase is one or multiple words enclosed in double quotation marks ("). With phrases,
           * the order of the words is important. Words in the phrase must be matching in order and
           * consecutively. Supported FIELDs for field-restricted queries: * `feature_id` *
           * `description` * `entity_type_id` Examples: * `feature_id: foo` --> Matches a Feature
           * with ID containing the substring `foo` (eg. `foo`, `foofeature`, `barfoo`). *
           * `feature_id: foo*feature` --> Matches a Feature with ID containing the substring
           * `foo*feature` (eg. `foobarfeature`). * `feature_id: foo AND description: bar` -->
           * Matches a Feature with ID containing the substring `foo` and description containing the
           * substring `bar`. Besides field queries, the following exact-match filters are
           * supported. The exact-match filters do not support wildcards. Unlike field-restricted
           * queries, exact-match filters are case-sensitive. * `feature_id`: Supports =
           * comparisons. * `description`: Supports = comparisons. Multi-token filters should be
           * enclosed in quotes. * `entity_type_id`: Supports = comparisons. * `value_type`:
           * Supports = and != comparisons. * `labels`: Supports key-value equality as well as key
           * presence. * `featurestore_id`: Supports = comparisons. Examples: * `description = "foo
           * bar"` --> Any Feature with description exactly equal to `foo bar` * `value_type =
           * DOUBLE` --> Features whose type is DOUBLE. * `labels.active = yes AND labels.env =
           * prod` --> Features having both (active: yes) and (env: prod) labels. * `labels.env: *`
           * --> Any Feature which has a label with `env` as the key.
           */
          public SearchFeatures setQuery(java.lang.String query) {
            this.query = query;
            return this;
          }

          @Override
          public SearchFeatures set(String parameterName, Object value) {
            return (SearchFeatures) super.set(parameterName, value);
          }
        }
        /**
         * Sets the access control policy on the specified resource. Replaces any existing policy. Can
         * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
         *
         * Create a request for the method "featurestores.setIamPolicy".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleIamV1SetIamPolicyRequest}
         * @return the request
         */
        public SetIamPolicy setIamPolicy(java.lang.String resource, com.google.api.services.aiplatform.v1.model.GoogleIamV1SetIamPolicyRequest content) throws java.io.IOException {
          SetIamPolicy result = new SetIamPolicy(resource, content);
          initialize(result);
          return result;
        }

        public class SetIamPolicy extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleIamV1Policy> {

          private static final String REST_PATH = "v1/{+resource}:setIamPolicy";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featurestores/[^/]+$");

          /**
           * Sets the access control policy on the specified resource. Replaces any existing policy. Can
           * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
           *
           * Create a request for the method "featurestores.setIamPolicy".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
           * operation. <p> {@link
           * SetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleIamV1SetIamPolicyRequest}
           * @since 1.13
           */
          protected SetIamPolicy(java.lang.String resource, com.google.api.services.aiplatform.v1.model.GoogleIamV1SetIamPolicyRequest content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleIamV1Policy.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+$");
            }
          }

          @Override
          public SetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
            return (SetIamPolicy) super.set$Xgafv($Xgafv);
          }

          @Override
          public SetIamPolicy setAccessToken(java.lang.String accessToken) {
            return (SetIamPolicy) super.setAccessToken(accessToken);
          }

          @Override
          public SetIamPolicy setAlt(java.lang.String alt) {
            return (SetIamPolicy) super.setAlt(alt);
          }

          @Override
          public SetIamPolicy setCallback(java.lang.String callback) {
            return (SetIamPolicy) super.setCallback(callback);
          }

          @Override
          public SetIamPolicy setFields(java.lang.String fields) {
            return (SetIamPolicy) super.setFields(fields);
          }

          @Override
          public SetIamPolicy setKey(java.lang.String key) {
            return (SetIamPolicy) super.setKey(key);
          }

          @Override
          public SetIamPolicy setOauthToken(java.lang.String oauthToken) {
            return (SetIamPolicy) super.setOauthToken(oauthToken);
          }

          @Override
          public SetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (SetIamPolicy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public SetIamPolicy setQuotaUser(java.lang.String quotaUser) {
            return (SetIamPolicy) super.setQuotaUser(quotaUser);
          }

          @Override
          public SetIamPolicy setUploadType(java.lang.String uploadType) {
            return (SetIamPolicy) super.setUploadType(uploadType);
          }

          @Override
          public SetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
            return (SetIamPolicy) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy is being specified. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy is being specified. See [Resource
         names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy is being specified. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          public SetIamPolicy setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public SetIamPolicy set(String parameterName, Object value) {
            return (SetIamPolicy) super.set(parameterName, value);
          }
        }
        /**
         * Returns permissions that a caller has on the specified resource. If the resource does not exist,
         * this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is
         * designed to be used for building permission-aware UIs and command-line tools, not for
         * authorization checking. This operation may "fail open" without warning.
         *
         * Create a request for the method "featurestores.testIamPermissions".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
         * @return the request
         */
        public TestIamPermissions testIamPermissions(java.lang.String resource) throws java.io.IOException {
          TestIamPermissions result = new TestIamPermissions(resource);
          initialize(result);
          return result;
        }

        public class TestIamPermissions extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleIamV1TestIamPermissionsResponse> {

          private static final String REST_PATH = "v1/{+resource}:testIamPermissions";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featurestores/[^/]+$");

          /**
           * Returns permissions that a caller has on the specified resource. If the resource does not
           * exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This
           * operation is designed to be used for building permission-aware UIs and command-line tools, not
           * for authorization checking. This operation may "fail open" without warning.
           *
           * Create a request for the method "featurestores.testIamPermissions".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
           * operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.services.A
           * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
           * @since 1.13
           */
          protected TestIamPermissions(java.lang.String resource) {
            super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleIamV1TestIamPermissionsResponse.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+$");
            }
          }

          @Override
          public TestIamPermissions set$Xgafv(java.lang.String $Xgafv) {
            return (TestIamPermissions) super.set$Xgafv($Xgafv);
          }

          @Override
          public TestIamPermissions setAccessToken(java.lang.String accessToken) {
            return (TestIamPermissions) super.setAccessToken(accessToken);
          }

          @Override
          public TestIamPermissions setAlt(java.lang.String alt) {
            return (TestIamPermissions) super.setAlt(alt);
          }

          @Override
          public TestIamPermissions setCallback(java.lang.String callback) {
            return (TestIamPermissions) super.setCallback(callback);
          }

          @Override
          public TestIamPermissions setFields(java.lang.String fields) {
            return (TestIamPermissions) super.setFields(fields);
          }

          @Override
          public TestIamPermissions setKey(java.lang.String key) {
            return (TestIamPermissions) super.setKey(key);
          }

          @Override
          public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
            return (TestIamPermissions) super.setOauthToken(oauthToken);
          }

          @Override
          public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
            return (TestIamPermissions) super.setQuotaUser(quotaUser);
          }

          @Override
          public TestIamPermissions setUploadType(java.lang.String uploadType) {
            return (TestIamPermissions) super.setUploadType(uploadType);
          }

          @Override
          public TestIamPermissions setUploadProtocol(java.lang.String uploadProtocol) {
            return (TestIamPermissions) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy detail is being requested. See [Resource
         names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          public TestIamPermissions setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          /**
           * The set of permissions to check for the `resource`. Permissions with wildcards (such as
           * `*` or `storage.*`) are not allowed. For more information see [IAM
           * Overview](https://cloud.google.com/iam/docs/overview#permissions).
           */
          @com.google.api.client.util.Key
          private java.util.List<java.lang.String> permissions;

          /** The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or
         `storage.*`) are not allowed. For more information see [IAM
         Overview](https://cloud.google.com/iam/docs/overview#permissions).
           */
          public java.util.List<java.lang.String> getPermissions() {
            return permissions;
          }

          /**
           * The set of permissions to check for the `resource`. Permissions with wildcards (such as
           * `*` or `storage.*`) are not allowed. For more information see [IAM
           * Overview](https://cloud.google.com/iam/docs/overview#permissions).
           */
          public TestIamPermissions setPermissions(java.util.List<java.lang.String> permissions) {
            this.permissions = permissions;
            return this;
          }

          @Override
          public TestIamPermissions set(String parameterName, Object value) {
            return (TestIamPermissions) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the EntityTypes collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Aiplatform aiplatform = new Aiplatform(...);}
         *   {@code Aiplatform.EntityTypes.List request = aiplatform.entityTypes().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public EntityTypes entityTypes() {
          return new EntityTypes();
        }

        /**
         * The "entityTypes" collection of methods.
         */
        public class EntityTypes {

          /**
           * Creates a new EntityType in a given Featurestore.
           *
           * Create a request for the method "entityTypes.create".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The resource name of the Featurestore to create EntityTypes. Format:
           *        `projects/{project}/locations/{location}/featurestores/{featurestore}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1EntityType}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1EntityType content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+parent}/entityTypes";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featurestores/[^/]+$");

            /**
             * Creates a new EntityType in a given Featurestore.
             *
             * Create a request for the method "entityTypes.create".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
             * <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The resource name of the Featurestore to create EntityTypes. Format:
           *        `projects/{project}/locations/{location}/featurestores/{featurestore}`
             * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1EntityType}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1EntityType content) {
              super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The resource name of the Featurestore to create EntityTypes. Format:
             * `projects/{project}/locations/{location}/featurestores/{featurestore}`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The resource name of the Featurestore to create EntityTypes. Format:
           `projects/{project}/locations/{location}/featurestores/{featurestore}`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The resource name of the Featurestore to create EntityTypes. Format:
             * `projects/{project}/locations/{location}/featurestores/{featurestore}`
             */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Required. The ID to use for the EntityType, which will become the final component of
             * the EntityType's resource name. This value may be up to 60 characters, and valid
             * characters are `[a-z0-9_]`. The first character cannot be a number. The value must be
             * unique within a featurestore.
             */
            @com.google.api.client.util.Key
            private java.lang.String entityTypeId;

            /** Required. The ID to use for the EntityType, which will become the final component of the
           EntityType's resource name. This value may be up to 60 characters, and valid characters are
           `[a-z0-9_]`. The first character cannot be a number. The value must be unique within a
           featurestore.
             */
            public java.lang.String getEntityTypeId() {
              return entityTypeId;
            }

            /**
             * Required. The ID to use for the EntityType, which will become the final component of
             * the EntityType's resource name. This value may be up to 60 characters, and valid
             * characters are `[a-z0-9_]`. The first character cannot be a number. The value must be
             * unique within a featurestore.
             */
            public Create setEntityTypeId(java.lang.String entityTypeId) {
              this.entityTypeId = entityTypeId;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Deletes a single EntityType. The EntityType must not have any Features or `force` must be set to
           * true for the request to succeed.
           *
           * Create a request for the method "entityTypes.delete".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the EntityType to be deleted. Format:
           *        `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_
           *        type}`
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+$");

            /**
             * Deletes a single EntityType. The EntityType must not have any Features or `force` must be set
             * to true for the request to succeed.
             *
             * Create a request for the method "entityTypes.delete".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the EntityType to be deleted. Format:
           *        `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_
           *        type}`
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the EntityType to be deleted. Format: `projects/{project}/locat
             * ions/{location}/featurestores/{featurestore}/entityTypes/{entity_type}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the EntityType to be deleted. Format:
           `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The name of the EntityType to be deleted. Format: `projects/{project}/locat
             * ions/{location}/featurestores/{featurestore}/entityTypes/{entity_type}`
             */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * If set to true, any Features for this EntityType will also be deleted. (Otherwise,
             * the request will only work if the EntityType has no Features.)
             */
            @com.google.api.client.util.Key
            private java.lang.Boolean force;

            /** If set to true, any Features for this EntityType will also be deleted. (Otherwise, the request will
           only work if the EntityType has no Features.)
             */
            public java.lang.Boolean getForce() {
              return force;
            }

            /**
             * If set to true, any Features for this EntityType will also be deleted. (Otherwise,
             * the request will only work if the EntityType has no Features.)
             */
            public Delete setForce(java.lang.Boolean force) {
              this.force = force;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Delete Feature values from Featurestore. The progress of the deletion is tracked by the returned
           * operation. The deleted feature values are guaranteed to be invisible to subsequent read
           * operations after the operation is marked as successfully done. If a delete feature values
           * operation fails, the feature values returned from reads and exports may be inconsistent. If
           * consistency is required, the caller must retry the same delete request again and wait till the
           * new operation returned is marked as successfully done.
           *
           * Create a request for the method "entityTypes.deleteFeatureValues".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link DeleteFeatureValues#execute()} method to invoke the remote operation.
           *
           * @param entityType Required. The resource name of the EntityType grouping the Features for which values are being
           *        deleted from. Format: `projects/{project}/locations/{location}/featurestores/{featurestore
           *        }/entityTypes/{entityType}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1DeleteFeatureValuesRequest}
           * @return the request
           */
          public DeleteFeatureValues deleteFeatureValues(java.lang.String entityType, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1DeleteFeatureValuesRequest content) throws java.io.IOException {
            DeleteFeatureValues result = new DeleteFeatureValues(entityType, content);
            initialize(result);
            return result;
          }

          public class DeleteFeatureValues extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+entityType}:deleteFeatureValues";

            private final java.util.regex.Pattern ENTITY_TYPE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+$");

            /**
             * Delete Feature values from Featurestore. The progress of the deletion is tracked by the
             * returned operation. The deleted feature values are guaranteed to be invisible to subsequent
             * read operations after the operation is marked as successfully done. If a delete feature values
             * operation fails, the feature values returned from reads and exports may be inconsistent. If
             * consistency is required, the caller must retry the same delete request again and wait till the
             * new operation returned is marked as successfully done.
             *
             * Create a request for the method "entityTypes.deleteFeatureValues".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link DeleteFeatureValues#execute()} method to invoke the remote
             * operation. <p> {@link DeleteFeatureValues#initialize(com.google.api.client.googleapis.services.
             * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
             * invoking the constructor. </p>
             *
             * @param entityType Required. The resource name of the EntityType grouping the Features for which values are being
           *        deleted from. Format: `projects/{project}/locations/{location}/featurestores/{featurestore
           *        }/entityTypes/{entityType}`
             * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1DeleteFeatureValuesRequest}
             * @since 1.13
             */
            protected DeleteFeatureValues(java.lang.String entityType, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1DeleteFeatureValuesRequest content) {
              super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
              this.entityType = com.google.api.client.util.Preconditions.checkNotNull(entityType, "Required parameter entityType must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(ENTITY_TYPE_PATTERN.matcher(entityType).matches(),
                    "Parameter entityType must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+$");
              }
            }

            @Override
            public DeleteFeatureValues set$Xgafv(java.lang.String $Xgafv) {
              return (DeleteFeatureValues) super.set$Xgafv($Xgafv);
            }

            @Override
            public DeleteFeatureValues setAccessToken(java.lang.String accessToken) {
              return (DeleteFeatureValues) super.setAccessToken(accessToken);
            }

            @Override
            public DeleteFeatureValues setAlt(java.lang.String alt) {
              return (DeleteFeatureValues) super.setAlt(alt);
            }

            @Override
            public DeleteFeatureValues setCallback(java.lang.String callback) {
              return (DeleteFeatureValues) super.setCallback(callback);
            }

            @Override
            public DeleteFeatureValues setFields(java.lang.String fields) {
              return (DeleteFeatureValues) super.setFields(fields);
            }

            @Override
            public DeleteFeatureValues setKey(java.lang.String key) {
              return (DeleteFeatureValues) super.setKey(key);
            }

            @Override
            public DeleteFeatureValues setOauthToken(java.lang.String oauthToken) {
              return (DeleteFeatureValues) super.setOauthToken(oauthToken);
            }

            @Override
            public DeleteFeatureValues setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (DeleteFeatureValues) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public DeleteFeatureValues setQuotaUser(java.lang.String quotaUser) {
              return (DeleteFeatureValues) super.setQuotaUser(quotaUser);
            }

            @Override
            public DeleteFeatureValues setUploadType(java.lang.String uploadType) {
              return (DeleteFeatureValues) super.setUploadType(uploadType);
            }

            @Override
            public DeleteFeatureValues setUploadProtocol(java.lang.String uploadProtocol) {
              return (DeleteFeatureValues) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The resource name of the EntityType grouping the Features for which values
             * are being deleted from. Format: `projects/{project}/locations/{location}/featurestore
             * s/{featurestore}/entityTypes/{entityType}`
             */
            @com.google.api.client.util.Key
            private java.lang.String entityType;

            /** Required. The resource name of the EntityType grouping the Features for which values are being
           deleted from. Format:
           `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entityType}`
             */
            public java.lang.String getEntityType() {
              return entityType;
            }

            /**
             * Required. The resource name of the EntityType grouping the Features for which values
             * are being deleted from. Format: `projects/{project}/locations/{location}/featurestore
             * s/{featurestore}/entityTypes/{entityType}`
             */
            public DeleteFeatureValues setEntityType(java.lang.String entityType) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(ENTITY_TYPE_PATTERN.matcher(entityType).matches(),
                    "Parameter entityType must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+$");
              }
              this.entityType = entityType;
              return this;
            }

            @Override
            public DeleteFeatureValues set(String parameterName, Object value) {
              return (DeleteFeatureValues) super.set(parameterName, value);
            }
          }
          /**
           * Exports Feature values from all the entities of a target EntityType.
           *
           * Create a request for the method "entityTypes.exportFeatureValues".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link ExportFeatureValues#execute()} method to invoke the remote operation.
           *
           * @param entityType Required. The resource name of the EntityType from which to export Feature values. Format:
           *        `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_
           *        type}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ExportFeatureValuesRequest}
           * @return the request
           */
          public ExportFeatureValues exportFeatureValues(java.lang.String entityType, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ExportFeatureValuesRequest content) throws java.io.IOException {
            ExportFeatureValues result = new ExportFeatureValues(entityType, content);
            initialize(result);
            return result;
          }

          public class ExportFeatureValues extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+entityType}:exportFeatureValues";

            private final java.util.regex.Pattern ENTITY_TYPE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+$");

            /**
             * Exports Feature values from all the entities of a target EntityType.
             *
             * Create a request for the method "entityTypes.exportFeatureValues".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link ExportFeatureValues#execute()} method to invoke the remote
             * operation. <p> {@link ExportFeatureValues#initialize(com.google.api.client.googleapis.services.
             * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
             * invoking the constructor. </p>
             *
             * @param entityType Required. The resource name of the EntityType from which to export Feature values. Format:
           *        `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_
           *        type}`
             * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ExportFeatureValuesRequest}
             * @since 1.13
             */
            protected ExportFeatureValues(java.lang.String entityType, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ExportFeatureValuesRequest content) {
              super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
              this.entityType = com.google.api.client.util.Preconditions.checkNotNull(entityType, "Required parameter entityType must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(ENTITY_TYPE_PATTERN.matcher(entityType).matches(),
                    "Parameter entityType must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+$");
              }
            }

            @Override
            public ExportFeatureValues set$Xgafv(java.lang.String $Xgafv) {
              return (ExportFeatureValues) super.set$Xgafv($Xgafv);
            }

            @Override
            public ExportFeatureValues setAccessToken(java.lang.String accessToken) {
              return (ExportFeatureValues) super.setAccessToken(accessToken);
            }

            @Override
            public ExportFeatureValues setAlt(java.lang.String alt) {
              return (ExportFeatureValues) super.setAlt(alt);
            }

            @Override
            public ExportFeatureValues setCallback(java.lang.String callback) {
              return (ExportFeatureValues) super.setCallback(callback);
            }

            @Override
            public ExportFeatureValues setFields(java.lang.String fields) {
              return (ExportFeatureValues) super.setFields(fields);
            }

            @Override
            public ExportFeatureValues setKey(java.lang.String key) {
              return (ExportFeatureValues) super.setKey(key);
            }

            @Override
            public ExportFeatureValues setOauthToken(java.lang.String oauthToken) {
              return (ExportFeatureValues) super.setOauthToken(oauthToken);
            }

            @Override
            public ExportFeatureValues setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (ExportFeatureValues) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public ExportFeatureValues setQuotaUser(java.lang.String quotaUser) {
              return (ExportFeatureValues) super.setQuotaUser(quotaUser);
            }

            @Override
            public ExportFeatureValues setUploadType(java.lang.String uploadType) {
              return (ExportFeatureValues) super.setUploadType(uploadType);
            }

            @Override
            public ExportFeatureValues setUploadProtocol(java.lang.String uploadProtocol) {
              return (ExportFeatureValues) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The resource name of the EntityType from which to export Feature values.
             * Format: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityT
             * ypes/{entity_type}`
             */
            @com.google.api.client.util.Key
            private java.lang.String entityType;

            /** Required. The resource name of the EntityType from which to export Feature values. Format:
           `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}`
             */
            public java.lang.String getEntityType() {
              return entityType;
            }

            /**
             * Required. The resource name of the EntityType from which to export Feature values.
             * Format: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityT
             * ypes/{entity_type}`
             */
            public ExportFeatureValues setEntityType(java.lang.String entityType) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(ENTITY_TYPE_PATTERN.matcher(entityType).matches(),
                    "Parameter entityType must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+$");
              }
              this.entityType = entityType;
              return this;
            }

            @Override
            public ExportFeatureValues set(String parameterName, Object value) {
              return (ExportFeatureValues) super.set(parameterName, value);
            }
          }
          /**
           * Gets details of a single EntityType.
           *
           * Create a request for the method "entityTypes.get".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the EntityType resource. Format:
           *        `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_
           *        type}`
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1EntityType> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+$");

            /**
             * Gets details of a single EntityType.
             *
             * Create a request for the method "entityTypes.get".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the EntityType resource. Format:
           *        `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_
           *        type}`
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1EntityType.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the EntityType resource. Format: `projects/{project}/locations/
             * {location}/featurestores/{featurestore}/entityTypes/{entity_type}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the EntityType resource. Format:
           `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The name of the EntityType resource. Format: `projects/{project}/locations/
             * {location}/featurestores/{featurestore}/entityTypes/{entity_type}`
             */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Gets the access control policy for a resource. Returns an empty policy if the resource exists and
           * does not have a policy set.
           *
           * Create a request for the method "entityTypes.getIamPolicy".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote operation.
           *
           * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
           * @return the request
           */
          public GetIamPolicy getIamPolicy(java.lang.String resource) throws java.io.IOException {
            GetIamPolicy result = new GetIamPolicy(resource);
            initialize(result);
            return result;
          }

          public class GetIamPolicy extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleIamV1Policy> {

            private static final String REST_PATH = "v1/{+resource}:getIamPolicy";

            private final java.util.regex.Pattern RESOURCE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+$");

            /**
             * Gets the access control policy for a resource. Returns an empty policy if the resource exists
             * and does not have a policy set.
             *
             * Create a request for the method "entityTypes.getIamPolicy".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
             * operation. <p> {@link
             * GetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
             * @since 1.13
             */
            protected GetIamPolicy(java.lang.String resource) {
              super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleIamV1Policy.class);
              this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+$");
              }
            }

            @Override
            public GetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
              return (GetIamPolicy) super.set$Xgafv($Xgafv);
            }

            @Override
            public GetIamPolicy setAccessToken(java.lang.String accessToken) {
              return (GetIamPolicy) super.setAccessToken(accessToken);
            }

            @Override
            public GetIamPolicy setAlt(java.lang.String alt) {
              return (GetIamPolicy) super.setAlt(alt);
            }

            @Override
            public GetIamPolicy setCallback(java.lang.String callback) {
              return (GetIamPolicy) super.setCallback(callback);
            }

            @Override
            public GetIamPolicy setFields(java.lang.String fields) {
              return (GetIamPolicy) super.setFields(fields);
            }

            @Override
            public GetIamPolicy setKey(java.lang.String key) {
              return (GetIamPolicy) super.setKey(key);
            }

            @Override
            public GetIamPolicy setOauthToken(java.lang.String oauthToken) {
              return (GetIamPolicy) super.setOauthToken(oauthToken);
            }

            @Override
            public GetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (GetIamPolicy) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public GetIamPolicy setQuotaUser(java.lang.String quotaUser) {
              return (GetIamPolicy) super.setQuotaUser(quotaUser);
            }

            @Override
            public GetIamPolicy setUploadType(java.lang.String uploadType) {
              return (GetIamPolicy) super.setUploadType(uploadType);
            }

            @Override
            public GetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
              return (GetIamPolicy) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * REQUIRED: The resource for which the policy is being requested. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            @com.google.api.client.util.Key
            private java.lang.String resource;

            /** REQUIRED: The resource for which the policy is being requested. See [Resource
           names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
           field.
             */
            public java.lang.String getResource() {
              return resource;
            }

            /**
             * REQUIRED: The resource for which the policy is being requested. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            public GetIamPolicy setResource(java.lang.String resource) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+$");
              }
              this.resource = resource;
              return this;
            }

            /**
             * Optional. The maximum policy version that will be used to format the policy. Valid
             * values are 0, 1, and 3. Requests specifying an invalid value will be rejected.
             * Requests for policies with any conditional role bindings must specify version 3.
             * Policies with no conditional role bindings may specify any valid value or leave the
             * field unset. The policy in the response might use the policy version that you
             * specified, or it might use a lower policy version. For example, if you specify
             * version 3, but the policy has no conditional role bindings, the response uses version
             * 1. To learn which resources support conditions in their IAM policies, see the [IAM
             * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
             */
            @com.google.api.client.util.Key("options.requestedPolicyVersion")
            private java.lang.Integer optionsRequestedPolicyVersion;

            /** Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1,
           and 3. Requests specifying an invalid value will be rejected. Requests for policies with any
           conditional role bindings must specify version 3. Policies with no conditional role bindings may
           specify any valid value or leave the field unset. The policy in the response might use the policy
           version that you specified, or it might use a lower policy version. For example, if you specify
           version 3, but the policy has no conditional role bindings, the response uses version 1. To learn
           which resources support conditions in their IAM policies, see the [IAM
           documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
             */
            public java.lang.Integer getOptionsRequestedPolicyVersion() {
              return optionsRequestedPolicyVersion;
            }

            /**
             * Optional. The maximum policy version that will be used to format the policy. Valid
             * values are 0, 1, and 3. Requests specifying an invalid value will be rejected.
             * Requests for policies with any conditional role bindings must specify version 3.
             * Policies with no conditional role bindings may specify any valid value or leave the
             * field unset. The policy in the response might use the policy version that you
             * specified, or it might use a lower policy version. For example, if you specify
             * version 3, but the policy has no conditional role bindings, the response uses version
             * 1. To learn which resources support conditions in their IAM policies, see the [IAM
             * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
             */
            public GetIamPolicy setOptionsRequestedPolicyVersion(java.lang.Integer optionsRequestedPolicyVersion) {
              this.optionsRequestedPolicyVersion = optionsRequestedPolicyVersion;
              return this;
            }

            @Override
            public GetIamPolicy set(String parameterName, Object value) {
              return (GetIamPolicy) super.set(parameterName, value);
            }
          }
          /**
           * Imports Feature values into the Featurestore from a source storage. The progress of the import is
           * tracked by the returned operation. The imported features are guaranteed to be visible to
           * subsequent read operations after the operation is marked as successfully done. If an import
           * operation fails, the Feature values returned from reads and exports may be inconsistent. If
           * consistency is required, the caller must retry the same import request again and wait till the
           * new operation returned is marked as successfully done. There are also scenarios where the caller
           * can cause inconsistency. - Source data for import contains multiple distinct Feature values for
           * the same entity ID and timestamp. - Source is modified during an import. This includes adding,
           * updating, or removing source data and/or metadata. Examples of updating metadata include but are
           * not limited to changing storage location, storage class, or retention policy. - Online serving
           * cluster is under-provisioned.
           *
           * Create a request for the method "entityTypes.importFeatureValues".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link ImportFeatureValues#execute()} method to invoke the remote operation.
           *
           * @param entityType Required. The resource name of the EntityType grouping the Features for which values are being
           *        imported. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}/en
           *        tityTypes/{entityType}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ImportFeatureValuesRequest}
           * @return the request
           */
          public ImportFeatureValues importFeatureValues(java.lang.String entityType, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ImportFeatureValuesRequest content) throws java.io.IOException {
            ImportFeatureValues result = new ImportFeatureValues(entityType, content);
            initialize(result);
            return result;
          }

          public class ImportFeatureValues extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+entityType}:importFeatureValues";

            private final java.util.regex.Pattern ENTITY_TYPE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+$");

            /**
             * Imports Feature values into the Featurestore from a source storage. The progress of the import
             * is tracked by the returned operation. The imported features are guaranteed to be visible to
             * subsequent read operations after the operation is marked as successfully done. If an import
             * operation fails, the Feature values returned from reads and exports may be inconsistent. If
             * consistency is required, the caller must retry the same import request again and wait till the
             * new operation returned is marked as successfully done. There are also scenarios where the
             * caller can cause inconsistency. - Source data for import contains multiple distinct Feature
             * values for the same entity ID and timestamp. - Source is modified during an import. This
             * includes adding, updating, or removing source data and/or metadata. Examples of updating
             * metadata include but are not limited to changing storage location, storage class, or retention
             * policy. - Online serving cluster is under-provisioned.
             *
             * Create a request for the method "entityTypes.importFeatureValues".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link ImportFeatureValues#execute()} method to invoke the remote
             * operation. <p> {@link ImportFeatureValues#initialize(com.google.api.client.googleapis.services.
             * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
             * invoking the constructor. </p>
             *
             * @param entityType Required. The resource name of the EntityType grouping the Features for which values are being
           *        imported. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}/en
           *        tityTypes/{entityType}`
             * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ImportFeatureValuesRequest}
             * @since 1.13
             */
            protected ImportFeatureValues(java.lang.String entityType, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ImportFeatureValuesRequest content) {
              super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
              this.entityType = com.google.api.client.util.Preconditions.checkNotNull(entityType, "Required parameter entityType must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(ENTITY_TYPE_PATTERN.matcher(entityType).matches(),
                    "Parameter entityType must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+$");
              }
            }

            @Override
            public ImportFeatureValues set$Xgafv(java.lang.String $Xgafv) {
              return (ImportFeatureValues) super.set$Xgafv($Xgafv);
            }

            @Override
            public ImportFeatureValues setAccessToken(java.lang.String accessToken) {
              return (ImportFeatureValues) super.setAccessToken(accessToken);
            }

            @Override
            public ImportFeatureValues setAlt(java.lang.String alt) {
              return (ImportFeatureValues) super.setAlt(alt);
            }

            @Override
            public ImportFeatureValues setCallback(java.lang.String callback) {
              return (ImportFeatureValues) super.setCallback(callback);
            }

            @Override
            public ImportFeatureValues setFields(java.lang.String fields) {
              return (ImportFeatureValues) super.setFields(fields);
            }

            @Override
            public ImportFeatureValues setKey(java.lang.String key) {
              return (ImportFeatureValues) super.setKey(key);
            }

            @Override
            public ImportFeatureValues setOauthToken(java.lang.String oauthToken) {
              return (ImportFeatureValues) super.setOauthToken(oauthToken);
            }

            @Override
            public ImportFeatureValues setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (ImportFeatureValues) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public ImportFeatureValues setQuotaUser(java.lang.String quotaUser) {
              return (ImportFeatureValues) super.setQuotaUser(quotaUser);
            }

            @Override
            public ImportFeatureValues setUploadType(java.lang.String uploadType) {
              return (ImportFeatureValues) super.setUploadType(uploadType);
            }

            @Override
            public ImportFeatureValues setUploadProtocol(java.lang.String uploadProtocol) {
              return (ImportFeatureValues) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The resource name of the EntityType grouping the Features for which values
             * are being imported. Format: `projects/{project}/locations/{location}/featurestores/{f
             * eaturestore}/entityTypes/{entityType}`
             */
            @com.google.api.client.util.Key
            private java.lang.String entityType;

            /** Required. The resource name of the EntityType grouping the Features for which values are being
           imported. Format:
           `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entityType}`
             */
            public java.lang.String getEntityType() {
              return entityType;
            }

            /**
             * Required. The resource name of the EntityType grouping the Features for which values
             * are being imported. Format: `projects/{project}/locations/{location}/featurestores/{f
             * eaturestore}/entityTypes/{entityType}`
             */
            public ImportFeatureValues setEntityType(java.lang.String entityType) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(ENTITY_TYPE_PATTERN.matcher(entityType).matches(),
                    "Parameter entityType must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+$");
              }
              this.entityType = entityType;
              return this;
            }

            @Override
            public ImportFeatureValues set(String parameterName, Object value) {
              return (ImportFeatureValues) super.set(parameterName, value);
            }
          }
          /**
           * Lists EntityTypes in a given Featurestore.
           *
           * Create a request for the method "entityTypes.list".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The resource name of the Featurestore to list EntityTypes. Format:
           *        `projects/{project}/locations/{location}/featurestores/{featurestore}`
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListEntityTypesResponse> {

            private static final String REST_PATH = "v1/{+parent}/entityTypes";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featurestores/[^/]+$");

            /**
             * Lists EntityTypes in a given Featurestore.
             *
             * Create a request for the method "entityTypes.list".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The resource name of the Featurestore to list EntityTypes. Format:
           *        `projects/{project}/locations/{location}/featurestores/{featurestore}`
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListEntityTypesResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The resource name of the Featurestore to list EntityTypes. Format:
             * `projects/{project}/locations/{location}/featurestores/{featurestore}`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The resource name of the Featurestore to list EntityTypes. Format:
           `projects/{project}/locations/{location}/featurestores/{featurestore}`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The resource name of the Featurestore to list EntityTypes. Format:
             * `projects/{project}/locations/{location}/featurestores/{featurestore}`
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Lists the EntityTypes that match the filter expression. The following filters are
             * supported: * `create_time`: Supports `=`, `!=`, `<`, `>`, `>=`, and `<=` comparisons.
             * Values must be in RFC 3339 format. * `update_time`: Supports `=`, `!=`, `<`, `>`,
             * `>=`, and `<=` comparisons. Values must be in RFC 3339 format. * `labels`: Supports
             * key-value equality as well as key presence. Examples: * `create_time >
             * \"2020-01-31T15:30:00.000000Z\" OR update_time > \"2020-01-31T15:30:00.000000Z\"` -->
             * EntityTypes created or updated after 2020-01-31T15:30:00.000000Z. * `labels.active =
             * yes AND labels.env = prod` --> EntityTypes having both (active: yes) and (env: prod)
             * labels. * `labels.env: *` --> Any EntityType which has a label with 'env' as the key.
             */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** Lists the EntityTypes that match the filter expression. The following filters are supported: *
           `create_time`: Supports `=`, `!=`, `<`, `>`, `>=`, and `<=` comparisons. Values must be in RFC 3339
           format. * `update_time`: Supports `=`, `!=`, `<`, `>`, `>=`, and `<=` comparisons. Values must be
           in RFC 3339 format. * `labels`: Supports key-value equality as well as key presence. Examples: *
           `create_time > \"2020-01-31T15:30:00.000000Z\" OR update_time > \"2020-01-31T15:30:00.000000Z\"`
           --> EntityTypes created or updated after 2020-01-31T15:30:00.000000Z. * `labels.active = yes AND
           labels.env = prod` --> EntityTypes having both (active: yes) and (env: prod) labels. * `labels.env:
           *` --> Any EntityType which has a label with 'env' as the key.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /**
             * Lists the EntityTypes that match the filter expression. The following filters are
             * supported: * `create_time`: Supports `=`, `!=`, `<`, `>`, `>=`, and `<=` comparisons.
             * Values must be in RFC 3339 format. * `update_time`: Supports `=`, `!=`, `<`, `>`,
             * `>=`, and `<=` comparisons. Values must be in RFC 3339 format. * `labels`: Supports
             * key-value equality as well as key presence. Examples: * `create_time >
             * \"2020-01-31T15:30:00.000000Z\" OR update_time > \"2020-01-31T15:30:00.000000Z\"` -->
             * EntityTypes created or updated after 2020-01-31T15:30:00.000000Z. * `labels.active =
             * yes AND labels.env = prod` --> EntityTypes having both (active: yes) and (env: prod)
             * labels. * `labels.env: *` --> Any EntityType which has a label with 'env' as the key.
             */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /**
             * A comma-separated list of fields to order by, sorted in ascending order. Use "desc"
             * after a field name for descending. Supported fields: * `entity_type_id` *
             * `create_time` * `update_time`
             */
            @com.google.api.client.util.Key
            private java.lang.String orderBy;

            /** A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field
           name for descending. Supported fields: * `entity_type_id` * `create_time` * `update_time`
             */
            public java.lang.String getOrderBy() {
              return orderBy;
            }

            /**
             * A comma-separated list of fields to order by, sorted in ascending order. Use "desc"
             * after a field name for descending. Supported fields: * `entity_type_id` *
             * `create_time` * `update_time`
             */
            public List setOrderBy(java.lang.String orderBy) {
              this.orderBy = orderBy;
              return this;
            }

            /**
             * The maximum number of EntityTypes to return. The service may return fewer than this
             * value. If unspecified, at most 1000 EntityTypes will be returned. The maximum value
             * is 1000; any value greater than 1000 will be coerced to 1000.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** The maximum number of EntityTypes to return. The service may return fewer than this value. If
           unspecified, at most 1000 EntityTypes will be returned. The maximum value is 1000; any value
           greater than 1000 will be coerced to 1000.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * The maximum number of EntityTypes to return. The service may return fewer than this
             * value. If unspecified, at most 1000 EntityTypes will be returned. The maximum value
             * is 1000; any value greater than 1000 will be coerced to 1000.
             */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /**
             * A page token, received from a previous FeaturestoreService.ListEntityTypes call.
             * Provide this to retrieve the subsequent page. When paginating, all other parameters
             * provided to FeaturestoreService.ListEntityTypes must match the call that provided the
             * page token.
             */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** A page token, received from a previous FeaturestoreService.ListEntityTypes call. Provide this to
           retrieve the subsequent page. When paginating, all other parameters provided to
           FeaturestoreService.ListEntityTypes must match the call that provided the page token.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /**
             * A page token, received from a previous FeaturestoreService.ListEntityTypes call.
             * Provide this to retrieve the subsequent page. When paginating, all other parameters
             * provided to FeaturestoreService.ListEntityTypes must match the call that provided the
             * page token.
             */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            /** Mask specifying which fields to read. */
            @com.google.api.client.util.Key
            private String readMask;

            /** Mask specifying which fields to read.
             */
            public String getReadMask() {
              return readMask;
            }

            /** Mask specifying which fields to read. */
            public List setReadMask(String readMask) {
              this.readMask = readMask;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Updates the parameters of a single EntityType.
           *
           * Create a request for the method "entityTypes.patch".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           *
           * @param name Immutable. Name of the EntityType. Format:
           *        `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_
           *        type}` The last part entity_type is assigned by the client. The entity_type can be up to
           *        64 characters long and can consist only of ASCII Latin letters A-Z and a-z and
           *        underscore(_), and ASCII digits 0-9 starting with a letter. The value will be unique given
           *        a featurestore.
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1EntityType}
           * @return the request
           */
          public Patch patch(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1EntityType content) throws java.io.IOException {
            Patch result = new Patch(name, content);
            initialize(result);
            return result;
          }

          public class Patch extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1EntityType> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+$");

            /**
             * Updates the parameters of a single EntityType.
             *
             * Create a request for the method "entityTypes.patch".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             * <p> {@link
             * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Immutable. Name of the EntityType. Format:
           *        `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_
           *        type}` The last part entity_type is assigned by the client. The entity_type can be up to
           *        64 characters long and can consist only of ASCII Latin letters A-Z and a-z and
           *        underscore(_), and ASCII digits 0-9 starting with a letter. The value will be unique given
           *        a featurestore.
             * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1EntityType}
             * @since 1.13
             */
            protected Patch(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1EntityType content) {
              super(Aiplatform.this, "PATCH", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1EntityType.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+$");
              }
            }

            @Override
            public Patch set$Xgafv(java.lang.String $Xgafv) {
              return (Patch) super.set$Xgafv($Xgafv);
            }

            @Override
            public Patch setAccessToken(java.lang.String accessToken) {
              return (Patch) super.setAccessToken(accessToken);
            }

            @Override
            public Patch setAlt(java.lang.String alt) {
              return (Patch) super.setAlt(alt);
            }

            @Override
            public Patch setCallback(java.lang.String callback) {
              return (Patch) super.setCallback(callback);
            }

            @Override
            public Patch setFields(java.lang.String fields) {
              return (Patch) super.setFields(fields);
            }

            @Override
            public Patch setKey(java.lang.String key) {
              return (Patch) super.setKey(key);
            }

            @Override
            public Patch setOauthToken(java.lang.String oauthToken) {
              return (Patch) super.setOauthToken(oauthToken);
            }

            @Override
            public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Patch) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Patch setQuotaUser(java.lang.String quotaUser) {
              return (Patch) super.setQuotaUser(quotaUser);
            }

            @Override
            public Patch setUploadType(java.lang.String uploadType) {
              return (Patch) super.setUploadType(uploadType);
            }

            @Override
            public Patch setUploadProtocol(java.lang.String uploadProtocol) {
              return (Patch) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Immutable. Name of the EntityType. Format: `projects/{project}/locations/{location}/f
             * eaturestores/{featurestore}/entityTypes/{entity_type}` The last part entity_type is
             * assigned by the client. The entity_type can be up to 64 characters long and can
             * consist only of ASCII Latin letters A-Z and a-z and underscore(_), and ASCII digits
             * 0-9 starting with a letter. The value will be unique given a featurestore.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Immutable. Name of the EntityType. Format:
           `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}`
           The last part entity_type is assigned by the client. The entity_type can be up to 64 characters
           long and can consist only of ASCII Latin letters A-Z and a-z and underscore(_), and ASCII digits
           0-9 starting with a letter. The value will be unique given a featurestore.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Immutable. Name of the EntityType. Format: `projects/{project}/locations/{location}/f
             * eaturestores/{featurestore}/entityTypes/{entity_type}` The last part entity_type is
             * assigned by the client. The entity_type can be up to 64 characters long and can
             * consist only of ASCII Latin letters A-Z and a-z and underscore(_), and ASCII digits
             * 0-9 starting with a letter. The value will be unique given a featurestore.
             */
            public Patch setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * Field mask is used to specify the fields to be overwritten in the EntityType resource
             * by the update. The fields specified in the update_mask are relative to the resource,
             * not the full request. A field will be overwritten if it is in the mask. If the user
             * does not provide a mask then only the non-empty fields present in the request will be
             * overwritten. Set the update_mask to `*` to override all fields. Updatable fields: *
             * `description` * `labels` * `monitoring_config.snapshot_analysis.disabled` *
             * `monitoring_config.snapshot_analysis.monitoring_interval_days` *
             * `monitoring_config.snapshot_analysis.staleness_days` *
             * `monitoring_config.import_features_analysis.state` *
             * `monitoring_config.import_features_analysis.anomaly_detection_baseline` *
             * `monitoring_config.numerical_threshold_config.value` *
             * `monitoring_config.categorical_threshold_config.value` * `offline_storage_ttl_days`
             */
            @com.google.api.client.util.Key
            private String updateMask;

            /** Field mask is used to specify the fields to be overwritten in the EntityType resource by the
           update. The fields specified in the update_mask are relative to the resource, not the full request.
           A field will be overwritten if it is in the mask. If the user does not provide a mask then only the
           non-empty fields present in the request will be overwritten. Set the update_mask to `*` to override
           all fields. Updatable fields: * `description` * `labels` *
           `monitoring_config.snapshot_analysis.disabled` *
           `monitoring_config.snapshot_analysis.monitoring_interval_days` *
           `monitoring_config.snapshot_analysis.staleness_days` *
           `monitoring_config.import_features_analysis.state` *
           `monitoring_config.import_features_analysis.anomaly_detection_baseline` *
           `monitoring_config.numerical_threshold_config.value` *
           `monitoring_config.categorical_threshold_config.value` * `offline_storage_ttl_days`
             */
            public String getUpdateMask() {
              return updateMask;
            }

            /**
             * Field mask is used to specify the fields to be overwritten in the EntityType resource
             * by the update. The fields specified in the update_mask are relative to the resource,
             * not the full request. A field will be overwritten if it is in the mask. If the user
             * does not provide a mask then only the non-empty fields present in the request will be
             * overwritten. Set the update_mask to `*` to override all fields. Updatable fields: *
             * `description` * `labels` * `monitoring_config.snapshot_analysis.disabled` *
             * `monitoring_config.snapshot_analysis.monitoring_interval_days` *
             * `monitoring_config.snapshot_analysis.staleness_days` *
             * `monitoring_config.import_features_analysis.state` *
             * `monitoring_config.import_features_analysis.anomaly_detection_baseline` *
             * `monitoring_config.numerical_threshold_config.value` *
             * `monitoring_config.categorical_threshold_config.value` * `offline_storage_ttl_days`
             */
            public Patch setUpdateMask(String updateMask) {
              this.updateMask = updateMask;
              return this;
            }

            @Override
            public Patch set(String parameterName, Object value) {
              return (Patch) super.set(parameterName, value);
            }
          }
          /**
           * Reads Feature values of a specific entity of an EntityType. For reading feature values of
           * multiple entities of an EntityType, please use StreamingReadFeatureValues.
           *
           * Create a request for the method "entityTypes.readFeatureValues".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link ReadFeatureValues#execute()} method to invoke the remote operation.
           *
           * @param entityType Required. The resource name of the EntityType for the entity being read. Value format:
           *        `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entityT
           *        ype}`. For example, for a machine learning model predicting user clicks on a website, an
           *        EntityType ID could be `user`.
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ReadFeatureValuesRequest}
           * @return the request
           */
          public ReadFeatureValues readFeatureValues(java.lang.String entityType, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ReadFeatureValuesRequest content) throws java.io.IOException {
            ReadFeatureValues result = new ReadFeatureValues(entityType, content);
            initialize(result);
            return result;
          }

          public class ReadFeatureValues extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ReadFeatureValuesResponse> {

            private static final String REST_PATH = "v1/{+entityType}:readFeatureValues";

            private final java.util.regex.Pattern ENTITY_TYPE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+$");

            /**
             * Reads Feature values of a specific entity of an EntityType. For reading feature values of
             * multiple entities of an EntityType, please use StreamingReadFeatureValues.
             *
             * Create a request for the method "entityTypes.readFeatureValues".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link ReadFeatureValues#execute()} method to invoke the remote
             * operation. <p> {@link ReadFeatureValues#initialize(com.google.api.client.googleapis.services.Ab
             * stractGoogleClientRequest)} must be called to initialize this instance immediately after
             * invoking the constructor. </p>
             *
             * @param entityType Required. The resource name of the EntityType for the entity being read. Value format:
           *        `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entityT
           *        ype}`. For example, for a machine learning model predicting user clicks on a website, an
           *        EntityType ID could be `user`.
             * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ReadFeatureValuesRequest}
             * @since 1.13
             */
            protected ReadFeatureValues(java.lang.String entityType, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ReadFeatureValuesRequest content) {
              super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ReadFeatureValuesResponse.class);
              this.entityType = com.google.api.client.util.Preconditions.checkNotNull(entityType, "Required parameter entityType must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(ENTITY_TYPE_PATTERN.matcher(entityType).matches(),
                    "Parameter entityType must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+$");
              }
            }

            @Override
            public ReadFeatureValues set$Xgafv(java.lang.String $Xgafv) {
              return (ReadFeatureValues) super.set$Xgafv($Xgafv);
            }

            @Override
            public ReadFeatureValues setAccessToken(java.lang.String accessToken) {
              return (ReadFeatureValues) super.setAccessToken(accessToken);
            }

            @Override
            public ReadFeatureValues setAlt(java.lang.String alt) {
              return (ReadFeatureValues) super.setAlt(alt);
            }

            @Override
            public ReadFeatureValues setCallback(java.lang.String callback) {
              return (ReadFeatureValues) super.setCallback(callback);
            }

            @Override
            public ReadFeatureValues setFields(java.lang.String fields) {
              return (ReadFeatureValues) super.setFields(fields);
            }

            @Override
            public ReadFeatureValues setKey(java.lang.String key) {
              return (ReadFeatureValues) super.setKey(key);
            }

            @Override
            public ReadFeatureValues setOauthToken(java.lang.String oauthToken) {
              return (ReadFeatureValues) super.setOauthToken(oauthToken);
            }

            @Override
            public ReadFeatureValues setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (ReadFeatureValues) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public ReadFeatureValues setQuotaUser(java.lang.String quotaUser) {
              return (ReadFeatureValues) super.setQuotaUser(quotaUser);
            }

            @Override
            public ReadFeatureValues setUploadType(java.lang.String uploadType) {
              return (ReadFeatureValues) super.setUploadType(uploadType);
            }

            @Override
            public ReadFeatureValues setUploadProtocol(java.lang.String uploadProtocol) {
              return (ReadFeatureValues) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The resource name of the EntityType for the entity being read. Value
             * format: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityT
             * ypes/{entityType}`. For example, for a machine learning model predicting user clicks
             * on a website, an EntityType ID could be `user`.
             */
            @com.google.api.client.util.Key
            private java.lang.String entityType;

            /** Required. The resource name of the EntityType for the entity being read. Value format:
           `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entityType}`.
           For example, for a machine learning model predicting user clicks on a website, an EntityType ID
           could be `user`.
             */
            public java.lang.String getEntityType() {
              return entityType;
            }

            /**
             * Required. The resource name of the EntityType for the entity being read. Value
             * format: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityT
             * ypes/{entityType}`. For example, for a machine learning model predicting user clicks
             * on a website, an EntityType ID could be `user`.
             */
            public ReadFeatureValues setEntityType(java.lang.String entityType) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(ENTITY_TYPE_PATTERN.matcher(entityType).matches(),
                    "Parameter entityType must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+$");
              }
              this.entityType = entityType;
              return this;
            }

            @Override
            public ReadFeatureValues set(String parameterName, Object value) {
              return (ReadFeatureValues) super.set(parameterName, value);
            }
          }
          /**
           * Sets the access control policy on the specified resource. Replaces any existing policy. Can
           * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
           *
           * Create a request for the method "entityTypes.setIamPolicy".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote operation.
           *
           * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleIamV1SetIamPolicyRequest}
           * @return the request
           */
          public SetIamPolicy setIamPolicy(java.lang.String resource, com.google.api.services.aiplatform.v1.model.GoogleIamV1SetIamPolicyRequest content) throws java.io.IOException {
            SetIamPolicy result = new SetIamPolicy(resource, content);
            initialize(result);
            return result;
          }

          public class SetIamPolicy extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleIamV1Policy> {

            private static final String REST_PATH = "v1/{+resource}:setIamPolicy";

            private final java.util.regex.Pattern RESOURCE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+$");

            /**
             * Sets the access control policy on the specified resource. Replaces any existing policy. Can
             * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
             *
             * Create a request for the method "entityTypes.setIamPolicy".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
             * operation. <p> {@link
             * SetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
             * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleIamV1SetIamPolicyRequest}
             * @since 1.13
             */
            protected SetIamPolicy(java.lang.String resource, com.google.api.services.aiplatform.v1.model.GoogleIamV1SetIamPolicyRequest content) {
              super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleIamV1Policy.class);
              this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+$");
              }
            }

            @Override
            public SetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
              return (SetIamPolicy) super.set$Xgafv($Xgafv);
            }

            @Override
            public SetIamPolicy setAccessToken(java.lang.String accessToken) {
              return (SetIamPolicy) super.setAccessToken(accessToken);
            }

            @Override
            public SetIamPolicy setAlt(java.lang.String alt) {
              return (SetIamPolicy) super.setAlt(alt);
            }

            @Override
            public SetIamPolicy setCallback(java.lang.String callback) {
              return (SetIamPolicy) super.setCallback(callback);
            }

            @Override
            public SetIamPolicy setFields(java.lang.String fields) {
              return (SetIamPolicy) super.setFields(fields);
            }

            @Override
            public SetIamPolicy setKey(java.lang.String key) {
              return (SetIamPolicy) super.setKey(key);
            }

            @Override
            public SetIamPolicy setOauthToken(java.lang.String oauthToken) {
              return (SetIamPolicy) super.setOauthToken(oauthToken);
            }

            @Override
            public SetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (SetIamPolicy) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public SetIamPolicy setQuotaUser(java.lang.String quotaUser) {
              return (SetIamPolicy) super.setQuotaUser(quotaUser);
            }

            @Override
            public SetIamPolicy setUploadType(java.lang.String uploadType) {
              return (SetIamPolicy) super.setUploadType(uploadType);
            }

            @Override
            public SetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
              return (SetIamPolicy) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * REQUIRED: The resource for which the policy is being specified. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            @com.google.api.client.util.Key
            private java.lang.String resource;

            /** REQUIRED: The resource for which the policy is being specified. See [Resource
           names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
           field.
             */
            public java.lang.String getResource() {
              return resource;
            }

            /**
             * REQUIRED: The resource for which the policy is being specified. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            public SetIamPolicy setResource(java.lang.String resource) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+$");
              }
              this.resource = resource;
              return this;
            }

            @Override
            public SetIamPolicy set(String parameterName, Object value) {
              return (SetIamPolicy) super.set(parameterName, value);
            }
          }
          /**
           * Reads Feature values for multiple entities. Depending on their size, data for different entities
           * may be broken up across multiple responses.
           *
           * Create a request for the method "entityTypes.streamingReadFeatureValues".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link StreamingReadFeatureValues#execute()} method to invoke the remote
           * operation.
           *
           * @param entityType Required. The resource name of the entities' type. Value format:
           *        `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entityT
           *        ype}`. For example, for a machine learning model predicting user clicks on a website, an
           *        EntityType ID could be `user`.
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1StreamingReadFeatureValuesRequest}
           * @return the request
           */
          public StreamingReadFeatureValues streamingReadFeatureValues(java.lang.String entityType, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1StreamingReadFeatureValuesRequest content) throws java.io.IOException {
            StreamingReadFeatureValues result = new StreamingReadFeatureValues(entityType, content);
            initialize(result);
            return result;
          }

          public class StreamingReadFeatureValues extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ReadFeatureValuesResponse> {

            private static final String REST_PATH = "v1/{+entityType}:streamingReadFeatureValues";

            private final java.util.regex.Pattern ENTITY_TYPE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+$");

            /**
             * Reads Feature values for multiple entities. Depending on their size, data for different
             * entities may be broken up across multiple responses.
             *
             * Create a request for the method "entityTypes.streamingReadFeatureValues".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link StreamingReadFeatureValues#execute()} method to invoke the
             * remote operation. <p> {@link StreamingReadFeatureValues#initialize(com.google.api.client.google
             * apis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
             * immediately after invoking the constructor. </p>
             *
             * @param entityType Required. The resource name of the entities' type. Value format:
           *        `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entityT
           *        ype}`. For example, for a machine learning model predicting user clicks on a website, an
           *        EntityType ID could be `user`.
             * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1StreamingReadFeatureValuesRequest}
             * @since 1.13
             */
            protected StreamingReadFeatureValues(java.lang.String entityType, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1StreamingReadFeatureValuesRequest content) {
              super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ReadFeatureValuesResponse.class);
              this.entityType = com.google.api.client.util.Preconditions.checkNotNull(entityType, "Required parameter entityType must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(ENTITY_TYPE_PATTERN.matcher(entityType).matches(),
                    "Parameter entityType must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+$");
              }
            }

            @Override
            public StreamingReadFeatureValues set$Xgafv(java.lang.String $Xgafv) {
              return (StreamingReadFeatureValues) super.set$Xgafv($Xgafv);
            }

            @Override
            public StreamingReadFeatureValues setAccessToken(java.lang.String accessToken) {
              return (StreamingReadFeatureValues) super.setAccessToken(accessToken);
            }

            @Override
            public StreamingReadFeatureValues setAlt(java.lang.String alt) {
              return (StreamingReadFeatureValues) super.setAlt(alt);
            }

            @Override
            public StreamingReadFeatureValues setCallback(java.lang.String callback) {
              return (StreamingReadFeatureValues) super.setCallback(callback);
            }

            @Override
            public StreamingReadFeatureValues setFields(java.lang.String fields) {
              return (StreamingReadFeatureValues) super.setFields(fields);
            }

            @Override
            public StreamingReadFeatureValues setKey(java.lang.String key) {
              return (StreamingReadFeatureValues) super.setKey(key);
            }

            @Override
            public StreamingReadFeatureValues setOauthToken(java.lang.String oauthToken) {
              return (StreamingReadFeatureValues) super.setOauthToken(oauthToken);
            }

            @Override
            public StreamingReadFeatureValues setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (StreamingReadFeatureValues) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public StreamingReadFeatureValues setQuotaUser(java.lang.String quotaUser) {
              return (StreamingReadFeatureValues) super.setQuotaUser(quotaUser);
            }

            @Override
            public StreamingReadFeatureValues setUploadType(java.lang.String uploadType) {
              return (StreamingReadFeatureValues) super.setUploadType(uploadType);
            }

            @Override
            public StreamingReadFeatureValues setUploadProtocol(java.lang.String uploadProtocol) {
              return (StreamingReadFeatureValues) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The resource name of the entities' type. Value format: `projects/{project}/
             * locations/{location}/featurestores/{featurestore}/entityTypes/{entityType}`. For
             * example, for a machine learning model predicting user clicks on a website, an
             * EntityType ID could be `user`.
             */
            @com.google.api.client.util.Key
            private java.lang.String entityType;

            /** Required. The resource name of the entities' type. Value format:
           `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entityType}`.
           For example, for a machine learning model predicting user clicks on a website, an EntityType ID
           could be `user`.
             */
            public java.lang.String getEntityType() {
              return entityType;
            }

            /**
             * Required. The resource name of the entities' type. Value format: `projects/{project}/
             * locations/{location}/featurestores/{featurestore}/entityTypes/{entityType}`. For
             * example, for a machine learning model predicting user clicks on a website, an
             * EntityType ID could be `user`.
             */
            public StreamingReadFeatureValues setEntityType(java.lang.String entityType) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(ENTITY_TYPE_PATTERN.matcher(entityType).matches(),
                    "Parameter entityType must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+$");
              }
              this.entityType = entityType;
              return this;
            }

            @Override
            public StreamingReadFeatureValues set(String parameterName, Object value) {
              return (StreamingReadFeatureValues) super.set(parameterName, value);
            }
          }
          /**
           * Returns permissions that a caller has on the specified resource. If the resource does not exist,
           * this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is
           * designed to be used for building permission-aware UIs and command-line tools, not for
           * authorization checking. This operation may "fail open" without warning.
           *
           * Create a request for the method "entityTypes.testIamPermissions".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote operation.
           *
           * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
           * @return the request
           */
          public TestIamPermissions testIamPermissions(java.lang.String resource) throws java.io.IOException {
            TestIamPermissions result = new TestIamPermissions(resource);
            initialize(result);
            return result;
          }

          public class TestIamPermissions extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleIamV1TestIamPermissionsResponse> {

            private static final String REST_PATH = "v1/{+resource}:testIamPermissions";

            private final java.util.regex.Pattern RESOURCE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+$");

            /**
             * Returns permissions that a caller has on the specified resource. If the resource does not
             * exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This
             * operation is designed to be used for building permission-aware UIs and command-line tools, not
             * for authorization checking. This operation may "fail open" without warning.
             *
             * Create a request for the method "entityTypes.testIamPermissions".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
             * operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.services.A
             * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
             * invoking the constructor. </p>
             *
             * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
             * @since 1.13
             */
            protected TestIamPermissions(java.lang.String resource) {
              super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleIamV1TestIamPermissionsResponse.class);
              this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+$");
              }
            }

            @Override
            public TestIamPermissions set$Xgafv(java.lang.String $Xgafv) {
              return (TestIamPermissions) super.set$Xgafv($Xgafv);
            }

            @Override
            public TestIamPermissions setAccessToken(java.lang.String accessToken) {
              return (TestIamPermissions) super.setAccessToken(accessToken);
            }

            @Override
            public TestIamPermissions setAlt(java.lang.String alt) {
              return (TestIamPermissions) super.setAlt(alt);
            }

            @Override
            public TestIamPermissions setCallback(java.lang.String callback) {
              return (TestIamPermissions) super.setCallback(callback);
            }

            @Override
            public TestIamPermissions setFields(java.lang.String fields) {
              return (TestIamPermissions) super.setFields(fields);
            }

            @Override
            public TestIamPermissions setKey(java.lang.String key) {
              return (TestIamPermissions) super.setKey(key);
            }

            @Override
            public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
              return (TestIamPermissions) super.setOauthToken(oauthToken);
            }

            @Override
            public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
              return (TestIamPermissions) super.setQuotaUser(quotaUser);
            }

            @Override
            public TestIamPermissions setUploadType(java.lang.String uploadType) {
              return (TestIamPermissions) super.setUploadType(uploadType);
            }

            @Override
            public TestIamPermissions setUploadProtocol(java.lang.String uploadProtocol) {
              return (TestIamPermissions) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * REQUIRED: The resource for which the policy detail is being requested. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            @com.google.api.client.util.Key
            private java.lang.String resource;

            /** REQUIRED: The resource for which the policy detail is being requested. See [Resource
           names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
           field.
             */
            public java.lang.String getResource() {
              return resource;
            }

            /**
             * REQUIRED: The resource for which the policy detail is being requested. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            public TestIamPermissions setResource(java.lang.String resource) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+$");
              }
              this.resource = resource;
              return this;
            }

            /**
             * The set of permissions to check for the `resource`. Permissions with wildcards (such
             * as `*` or `storage.*`) are not allowed. For more information see [IAM
             * Overview](https://cloud.google.com/iam/docs/overview#permissions).
             */
            @com.google.api.client.util.Key
            private java.util.List<java.lang.String> permissions;

            /** The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or
           `storage.*`) are not allowed. For more information see [IAM
           Overview](https://cloud.google.com/iam/docs/overview#permissions).
             */
            public java.util.List<java.lang.String> getPermissions() {
              return permissions;
            }

            /**
             * The set of permissions to check for the `resource`. Permissions with wildcards (such
             * as `*` or `storage.*`) are not allowed. For more information see [IAM
             * Overview](https://cloud.google.com/iam/docs/overview#permissions).
             */
            public TestIamPermissions setPermissions(java.util.List<java.lang.String> permissions) {
              this.permissions = permissions;
              return this;
            }

            @Override
            public TestIamPermissions set(String parameterName, Object value) {
              return (TestIamPermissions) super.set(parameterName, value);
            }
          }
          /**
           * Writes Feature values of one or more entities of an EntityType. The Feature values are merged
           * into existing entities if any. The Feature values to be written must have timestamp within the
           * online storage retention.
           *
           * Create a request for the method "entityTypes.writeFeatureValues".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link WriteFeatureValues#execute()} method to invoke the remote operation.
           *
           * @param entityType Required. The resource name of the EntityType for the entities being written. Value format:
           *        `projects/{project}/locations/{location}/featurestores/
           *        {featurestore}/entityTypes/{entityType}`. For example, for a machine learning model
           *        predicting user clicks on a website, an EntityType ID could be `user`.
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1WriteFeatureValuesRequest}
           * @return the request
           */
          public WriteFeatureValues writeFeatureValues(java.lang.String entityType, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1WriteFeatureValuesRequest content) throws java.io.IOException {
            WriteFeatureValues result = new WriteFeatureValues(entityType, content);
            initialize(result);
            return result;
          }

          public class WriteFeatureValues extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1WriteFeatureValuesResponse> {

            private static final String REST_PATH = "v1/{+entityType}:writeFeatureValues";

            private final java.util.regex.Pattern ENTITY_TYPE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+$");

            /**
             * Writes Feature values of one or more entities of an EntityType. The Feature values are merged
             * into existing entities if any. The Feature values to be written must have timestamp within the
             * online storage retention.
             *
             * Create a request for the method "entityTypes.writeFeatureValues".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link WriteFeatureValues#execute()} method to invoke the remote
             * operation. <p> {@link WriteFeatureValues#initialize(com.google.api.client.googleapis.services.A
             * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
             * invoking the constructor. </p>
             *
             * @param entityType Required. The resource name of the EntityType for the entities being written. Value format:
           *        `projects/{project}/locations/{location}/featurestores/
           *        {featurestore}/entityTypes/{entityType}`. For example, for a machine learning model
           *        predicting user clicks on a website, an EntityType ID could be `user`.
             * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1WriteFeatureValuesRequest}
             * @since 1.13
             */
            protected WriteFeatureValues(java.lang.String entityType, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1WriteFeatureValuesRequest content) {
              super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1WriteFeatureValuesResponse.class);
              this.entityType = com.google.api.client.util.Preconditions.checkNotNull(entityType, "Required parameter entityType must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(ENTITY_TYPE_PATTERN.matcher(entityType).matches(),
                    "Parameter entityType must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+$");
              }
            }

            @Override
            public WriteFeatureValues set$Xgafv(java.lang.String $Xgafv) {
              return (WriteFeatureValues) super.set$Xgafv($Xgafv);
            }

            @Override
            public WriteFeatureValues setAccessToken(java.lang.String accessToken) {
              return (WriteFeatureValues) super.setAccessToken(accessToken);
            }

            @Override
            public WriteFeatureValues setAlt(java.lang.String alt) {
              return (WriteFeatureValues) super.setAlt(alt);
            }

            @Override
            public WriteFeatureValues setCallback(java.lang.String callback) {
              return (WriteFeatureValues) super.setCallback(callback);
            }

            @Override
            public WriteFeatureValues setFields(java.lang.String fields) {
              return (WriteFeatureValues) super.setFields(fields);
            }

            @Override
            public WriteFeatureValues setKey(java.lang.String key) {
              return (WriteFeatureValues) super.setKey(key);
            }

            @Override
            public WriteFeatureValues setOauthToken(java.lang.String oauthToken) {
              return (WriteFeatureValues) super.setOauthToken(oauthToken);
            }

            @Override
            public WriteFeatureValues setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (WriteFeatureValues) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public WriteFeatureValues setQuotaUser(java.lang.String quotaUser) {
              return (WriteFeatureValues) super.setQuotaUser(quotaUser);
            }

            @Override
            public WriteFeatureValues setUploadType(java.lang.String uploadType) {
              return (WriteFeatureValues) super.setUploadType(uploadType);
            }

            @Override
            public WriteFeatureValues setUploadProtocol(java.lang.String uploadProtocol) {
              return (WriteFeatureValues) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The resource name of the EntityType for the entities being written. Value
             * format: `projects/{project}/locations/{location}/featurestores/
             * {featurestore}/entityTypes/{entityType}`. For example, for a machine learning model
             * predicting user clicks on a website, an EntityType ID could be `user`.
             */
            @com.google.api.client.util.Key
            private java.lang.String entityType;

            /** Required. The resource name of the EntityType for the entities being written. Value format:
           `projects/{project}/locations/{location}/featurestores/ {featurestore}/entityTypes/{entityType}`.
           For example, for a machine learning model predicting user clicks on a website, an EntityType ID
           could be `user`.
             */
            public java.lang.String getEntityType() {
              return entityType;
            }

            /**
             * Required. The resource name of the EntityType for the entities being written. Value
             * format: `projects/{project}/locations/{location}/featurestores/
             * {featurestore}/entityTypes/{entityType}`. For example, for a machine learning model
             * predicting user clicks on a website, an EntityType ID could be `user`.
             */
            public WriteFeatureValues setEntityType(java.lang.String entityType) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(ENTITY_TYPE_PATTERN.matcher(entityType).matches(),
                    "Parameter entityType must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+$");
              }
              this.entityType = entityType;
              return this;
            }

            @Override
            public WriteFeatureValues set(String parameterName, Object value) {
              return (WriteFeatureValues) super.set(parameterName, value);
            }
          }

          /**
           * An accessor for creating requests from the Features collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code Aiplatform aiplatform = new Aiplatform(...);}
           *   {@code Aiplatform.Features.List request = aiplatform.features().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public Features features() {
            return new Features();
          }

          /**
           * The "features" collection of methods.
           */
          public class Features {

            /**
             * Creates a batch of Features in a given EntityType.
             *
             * Create a request for the method "features.batchCreate".
             *
             * This request holds the parameters needed by the aiplatform server.  After setting any optional
             * parameters, call the {@link BatchCreate#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The resource name of the EntityType to create the batch of Features under. Format:
             *        `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_
             *        type}`
             * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1BatchCreateFeaturesRequest}
             * @return the request
             */
            public BatchCreate batchCreate(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1BatchCreateFeaturesRequest content) throws java.io.IOException {
              BatchCreate result = new BatchCreate(parent, content);
              initialize(result);
              return result;
            }

            public class BatchCreate extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

              private static final String REST_PATH = "v1/{+parent}/features:batchCreate";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+$");

              /**
               * Creates a batch of Features in a given EntityType.
               *
               * Create a request for the method "features.batchCreate".
               *
               * This request holds the parameters needed by the the aiplatform server.  After setting any
               * optional parameters, call the {@link BatchCreate#execute()} method to invoke the remote
               * operation. <p> {@link
               * BatchCreate#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. The resource name of the EntityType to create the batch of Features under. Format:
             *        `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_
             *        type}`
               * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1BatchCreateFeaturesRequest}
               * @since 1.13
               */
              protected BatchCreate(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1BatchCreateFeaturesRequest content) {
                super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+$");
                }
              }

              @Override
              public BatchCreate set$Xgafv(java.lang.String $Xgafv) {
                return (BatchCreate) super.set$Xgafv($Xgafv);
              }

              @Override
              public BatchCreate setAccessToken(java.lang.String accessToken) {
                return (BatchCreate) super.setAccessToken(accessToken);
              }

              @Override
              public BatchCreate setAlt(java.lang.String alt) {
                return (BatchCreate) super.setAlt(alt);
              }

              @Override
              public BatchCreate setCallback(java.lang.String callback) {
                return (BatchCreate) super.setCallback(callback);
              }

              @Override
              public BatchCreate setFields(java.lang.String fields) {
                return (BatchCreate) super.setFields(fields);
              }

              @Override
              public BatchCreate setKey(java.lang.String key) {
                return (BatchCreate) super.setKey(key);
              }

              @Override
              public BatchCreate setOauthToken(java.lang.String oauthToken) {
                return (BatchCreate) super.setOauthToken(oauthToken);
              }

              @Override
              public BatchCreate setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (BatchCreate) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public BatchCreate setQuotaUser(java.lang.String quotaUser) {
                return (BatchCreate) super.setQuotaUser(quotaUser);
              }

              @Override
              public BatchCreate setUploadType(java.lang.String uploadType) {
                return (BatchCreate) super.setUploadType(uploadType);
              }

              @Override
              public BatchCreate setUploadProtocol(java.lang.String uploadProtocol) {
                return (BatchCreate) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The resource name of the EntityType to create the batch of Features
               * under. Format: `projects/{project}/locations/{location}/featurestores/{featurestore
               * }/entityTypes/{entity_type}`
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The resource name of the EntityType to create the batch of Features under. Format:
             `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}`
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. The resource name of the EntityType to create the batch of Features
               * under. Format: `projects/{project}/locations/{location}/featurestores/{featurestore
               * }/entityTypes/{entity_type}`
               */
              public BatchCreate setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              @Override
              public BatchCreate set(String parameterName, Object value) {
                return (BatchCreate) super.set(parameterName, value);
              }
            }
            /**
             * Creates a new Feature in a given EntityType.
             *
             * Create a request for the method "features.create".
             *
             * This request holds the parameters needed by the aiplatform server.  After setting any optional
             * parameters, call the {@link Create#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The resource name of the EntityType or FeatureGroup to create a Feature. Format for
             *        entity_type as parent: `projects/{project}/locations/{location}/featurestores/{featurestor
             *        e}/entityTypes/{entity_type}` Format for feature_group as parent:
             *        `projects/{project}/locations/{location}/featureGroups/{feature_group}`
             * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Feature}
             * @return the request
             */
            public Create create(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Feature content) throws java.io.IOException {
              Create result = new Create(parent, content);
              initialize(result);
              return result;
            }

            public class Create extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

              private static final String REST_PATH = "v1/{+parent}/features";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+$");

              /**
               * Creates a new Feature in a given EntityType.
               *
               * Create a request for the method "features.create".
               *
               * This request holds the parameters needed by the the aiplatform server.  After setting any
               * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
               * <p> {@link
               * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. The resource name of the EntityType or FeatureGroup to create a Feature. Format for
             *        entity_type as parent: `projects/{project}/locations/{location}/featurestores/{featurestor
             *        e}/entityTypes/{entity_type}` Format for feature_group as parent:
             *        `projects/{project}/locations/{location}/featureGroups/{feature_group}`
               * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Feature}
               * @since 1.13
               */
              protected Create(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Feature content) {
                super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+$");
                }
              }

              @Override
              public Create set$Xgafv(java.lang.String $Xgafv) {
                return (Create) super.set$Xgafv($Xgafv);
              }

              @Override
              public Create setAccessToken(java.lang.String accessToken) {
                return (Create) super.setAccessToken(accessToken);
              }

              @Override
              public Create setAlt(java.lang.String alt) {
                return (Create) super.setAlt(alt);
              }

              @Override
              public Create setCallback(java.lang.String callback) {
                return (Create) super.setCallback(callback);
              }

              @Override
              public Create setFields(java.lang.String fields) {
                return (Create) super.setFields(fields);
              }

              @Override
              public Create setKey(java.lang.String key) {
                return (Create) super.setKey(key);
              }

              @Override
              public Create setOauthToken(java.lang.String oauthToken) {
                return (Create) super.setOauthToken(oauthToken);
              }

              @Override
              public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Create) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Create setQuotaUser(java.lang.String quotaUser) {
                return (Create) super.setQuotaUser(quotaUser);
              }

              @Override
              public Create setUploadType(java.lang.String uploadType) {
                return (Create) super.setUploadType(uploadType);
              }

              @Override
              public Create setUploadProtocol(java.lang.String uploadProtocol) {
                return (Create) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The resource name of the EntityType or FeatureGroup to create a Feature.
               * Format for entity_type as parent: `projects/{project}/locations/{location}/features
               * tores/{featurestore}/entityTypes/{entity_type}` Format for feature_group as parent:
               * `projects/{project}/locations/{location}/featureGroups/{feature_group}`
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The resource name of the EntityType or FeatureGroup to create a Feature. Format for
             entity_type as parent:
             `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}`
             Format for feature_group as parent:
             `projects/{project}/locations/{location}/featureGroups/{feature_group}`
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. The resource name of the EntityType or FeatureGroup to create a Feature.
               * Format for entity_type as parent: `projects/{project}/locations/{location}/features
               * tores/{featurestore}/entityTypes/{entity_type}` Format for feature_group as parent:
               * `projects/{project}/locations/{location}/featureGroups/{feature_group}`
               */
              public Create setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /**
               * Required. The ID to use for the Feature, which will become the final component of
               * the Feature's resource name. This value may be up to 128 characters, and valid
               * characters are `[a-z0-9_]`. The first character cannot be a number. The value must
               * be unique within an EntityType/FeatureGroup.
               */
              @com.google.api.client.util.Key
              private java.lang.String featureId;

              /** Required. The ID to use for the Feature, which will become the final component of the Feature's
             resource name. This value may be up to 128 characters, and valid characters are `[a-z0-9_]`. The
             first character cannot be a number. The value must be unique within an EntityType/FeatureGroup.
               */
              public java.lang.String getFeatureId() {
                return featureId;
              }

              /**
               * Required. The ID to use for the Feature, which will become the final component of
               * the Feature's resource name. This value may be up to 128 characters, and valid
               * characters are `[a-z0-9_]`. The first character cannot be a number. The value must
               * be unique within an EntityType/FeatureGroup.
               */
              public Create setFeatureId(java.lang.String featureId) {
                this.featureId = featureId;
                return this;
              }

              @Override
              public Create set(String parameterName, Object value) {
                return (Create) super.set(parameterName, value);
              }
            }
            /**
             * Deletes a single Feature.
             *
             * Create a request for the method "features.delete".
             *
             * This request holds the parameters needed by the aiplatform server.  After setting any optional
             * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             *
             * @param name Required. The name of the Features to be deleted. Format: `projects/{project}/locations/{location}/f
             *        eaturestores/{featurestore}/entityTypes/{entity_type}/features/{feature}`
             *        `projects/{project}/locations/{location}/featureGroups/{feature_group}/features/{feature}`
             * @return the request
             */
            public Delete delete(java.lang.String name) throws java.io.IOException {
              Delete result = new Delete(name);
              initialize(result);
              return result;
            }

            public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+/features/[^/]+$");

              /**
               * Deletes a single Feature.
               *
               * Create a request for the method "features.delete".
               *
               * This request holds the parameters needed by the the aiplatform server.  After setting any
               * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
               * <p> {@link
               * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The name of the Features to be deleted. Format: `projects/{project}/locations/{location}/f
             *        eaturestores/{featurestore}/entityTypes/{entity_type}/features/{feature}`
             *        `projects/{project}/locations/{location}/featureGroups/{feature_group}/features/{feature}`
               * @since 1.13
               */
              protected Delete(java.lang.String name) {
                super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+/features/[^/]+$");
                }
              }

              @Override
              public Delete set$Xgafv(java.lang.String $Xgafv) {
                return (Delete) super.set$Xgafv($Xgafv);
              }

              @Override
              public Delete setAccessToken(java.lang.String accessToken) {
                return (Delete) super.setAccessToken(accessToken);
              }

              @Override
              public Delete setAlt(java.lang.String alt) {
                return (Delete) super.setAlt(alt);
              }

              @Override
              public Delete setCallback(java.lang.String callback) {
                return (Delete) super.setCallback(callback);
              }

              @Override
              public Delete setFields(java.lang.String fields) {
                return (Delete) super.setFields(fields);
              }

              @Override
              public Delete setKey(java.lang.String key) {
                return (Delete) super.setKey(key);
              }

              @Override
              public Delete setOauthToken(java.lang.String oauthToken) {
                return (Delete) super.setOauthToken(oauthToken);
              }

              @Override
              public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Delete) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Delete setQuotaUser(java.lang.String quotaUser) {
                return (Delete) super.setQuotaUser(quotaUser);
              }

              @Override
              public Delete setUploadType(java.lang.String uploadType) {
                return (Delete) super.setUploadType(uploadType);
              }

              @Override
              public Delete setUploadProtocol(java.lang.String uploadProtocol) {
                return (Delete) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The name of the Features to be deleted. Format: `projects/{project}/locat
               * ions/{location}/featurestores/{featurestore}/entityTypes/{entity_type}/features/{fe
               * ature}` `projects/{project}/locations/{location}/featureGroups/{feature_group}/feat
               * ures/{feature}`
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The name of the Features to be deleted. Format: `projects/{project}/locations/{location}/
             featurestores/{featurestore}/entityTypes/{entity_type}/features/{feature}`
             `projects/{project}/locations/{location}/featureGroups/{feature_group}/features/{feature}`
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Required. The name of the Features to be deleted. Format: `projects/{project}/locat
               * ions/{location}/featurestores/{featurestore}/entityTypes/{entity_type}/features/{fe
               * ature}` `projects/{project}/locations/{location}/featureGroups/{feature_group}/feat
               * ures/{feature}`
               */
              public Delete setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+/features/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Delete set(String parameterName, Object value) {
                return (Delete) super.set(parameterName, value);
              }
            }
            /**
             * Gets details of a single Feature.
             *
             * Create a request for the method "features.get".
             *
             * This request holds the parameters needed by the aiplatform server.  After setting any optional
             * parameters, call the {@link Get#execute()} method to invoke the remote operation.
             *
             * @param name Required. The name of the Feature resource. Format for entity_type as parent:
             *        `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_
             *        type}` Format for feature_group as parent:
             *        `projects/{project}/locations/{location}/featureGroups/{feature_group}`
             * @return the request
             */
            public Get get(java.lang.String name) throws java.io.IOException {
              Get result = new Get(name);
              initialize(result);
              return result;
            }

            public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Feature> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+/features/[^/]+$");

              /**
               * Gets details of a single Feature.
               *
               * Create a request for the method "features.get".
               *
               * This request holds the parameters needed by the the aiplatform server.  After setting any
               * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
               * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The name of the Feature resource. Format for entity_type as parent:
             *        `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_
             *        type}` Format for feature_group as parent:
             *        `projects/{project}/locations/{location}/featureGroups/{feature_group}`
               * @since 1.13
               */
              protected Get(java.lang.String name) {
                super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Feature.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+/features/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public Get set$Xgafv(java.lang.String $Xgafv) {
                return (Get) super.set$Xgafv($Xgafv);
              }

              @Override
              public Get setAccessToken(java.lang.String accessToken) {
                return (Get) super.setAccessToken(accessToken);
              }

              @Override
              public Get setAlt(java.lang.String alt) {
                return (Get) super.setAlt(alt);
              }

              @Override
              public Get setCallback(java.lang.String callback) {
                return (Get) super.setCallback(callback);
              }

              @Override
              public Get setFields(java.lang.String fields) {
                return (Get) super.setFields(fields);
              }

              @Override
              public Get setKey(java.lang.String key) {
                return (Get) super.setKey(key);
              }

              @Override
              public Get setOauthToken(java.lang.String oauthToken) {
                return (Get) super.setOauthToken(oauthToken);
              }

              @Override
              public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Get) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Get setQuotaUser(java.lang.String quotaUser) {
                return (Get) super.setQuotaUser(quotaUser);
              }

              @Override
              public Get setUploadType(java.lang.String uploadType) {
                return (Get) super.setUploadType(uploadType);
              }

              @Override
              public Get setUploadProtocol(java.lang.String uploadProtocol) {
                return (Get) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The name of the Feature resource. Format for entity_type as parent: `proj
               * ects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entit
               * y_type}` Format for feature_group as parent:
               * `projects/{project}/locations/{location}/featureGroups/{feature_group}`
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The name of the Feature resource. Format for entity_type as parent:
             `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}`
             Format for feature_group as parent:
             `projects/{project}/locations/{location}/featureGroups/{feature_group}`
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Required. The name of the Feature resource. Format for entity_type as parent: `proj
               * ects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entit
               * y_type}` Format for feature_group as parent:
               * `projects/{project}/locations/{location}/featureGroups/{feature_group}`
               */
              public Get setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+/features/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Get set(String parameterName, Object value) {
                return (Get) super.set(parameterName, value);
              }
            }
            /**
             * Lists Features in a given EntityType.
             *
             * Create a request for the method "features.list".
             *
             * This request holds the parameters needed by the aiplatform server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The resource name of the Location to list Features. Format for entity_type as parent:
             *        `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_
             *        type}` Format for feature_group as parent:
             *        `projects/{project}/locations/{location}/featureGroups/{feature_group}`
             * @return the request
             */
            public List list(java.lang.String parent) throws java.io.IOException {
              List result = new List(parent);
              initialize(result);
              return result;
            }

            public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListFeaturesResponse> {

              private static final String REST_PATH = "v1/{+parent}/features";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+$");

              /**
               * Lists Features in a given EntityType.
               *
               * Create a request for the method "features.list".
               *
               * This request holds the parameters needed by the the aiplatform server.  After setting any
               * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
               * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. The resource name of the Location to list Features. Format for entity_type as parent:
             *        `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_
             *        type}` Format for feature_group as parent:
             *        `projects/{project}/locations/{location}/featureGroups/{feature_group}`
               * @since 1.13
               */
              protected List(java.lang.String parent) {
                super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListFeaturesResponse.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public List set$Xgafv(java.lang.String $Xgafv) {
                return (List) super.set$Xgafv($Xgafv);
              }

              @Override
              public List setAccessToken(java.lang.String accessToken) {
                return (List) super.setAccessToken(accessToken);
              }

              @Override
              public List setAlt(java.lang.String alt) {
                return (List) super.setAlt(alt);
              }

              @Override
              public List setCallback(java.lang.String callback) {
                return (List) super.setCallback(callback);
              }

              @Override
              public List setFields(java.lang.String fields) {
                return (List) super.setFields(fields);
              }

              @Override
              public List setKey(java.lang.String key) {
                return (List) super.setKey(key);
              }

              @Override
              public List setOauthToken(java.lang.String oauthToken) {
                return (List) super.setOauthToken(oauthToken);
              }

              @Override
              public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (List) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public List setQuotaUser(java.lang.String quotaUser) {
                return (List) super.setQuotaUser(quotaUser);
              }

              @Override
              public List setUploadType(java.lang.String uploadType) {
                return (List) super.setUploadType(uploadType);
              }

              @Override
              public List setUploadProtocol(java.lang.String uploadProtocol) {
                return (List) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The resource name of the Location to list Features. Format for
               * entity_type as parent: `projects/{project}/locations/{location}/featurestores/{feat
               * urestore}/entityTypes/{entity_type}` Format for feature_group as parent:
               * `projects/{project}/locations/{location}/featureGroups/{feature_group}`
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The resource name of the Location to list Features. Format for entity_type as parent:
             `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}`
             Format for feature_group as parent:
             `projects/{project}/locations/{location}/featureGroups/{feature_group}`
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. The resource name of the Location to list Features. Format for
               * entity_type as parent: `projects/{project}/locations/{location}/featurestores/{feat
               * urestore}/entityTypes/{entity_type}` Format for feature_group as parent:
               * `projects/{project}/locations/{location}/featureGroups/{feature_group}`
               */
              public List setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /**
               * Lists the Features that match the filter expression. The following filters are
               * supported: * `value_type`: Supports = and != comparisons. * `create_time`: Supports
               * =, !=, <, >, >=, and <= comparisons. Values must be in RFC 3339 format. *
               * `update_time`: Supports =, !=, <, >, >=, and <= comparisons. Values must be in RFC
               * 3339 format. * `labels`: Supports key-value equality as well as key presence.
               * Examples: * `value_type = DOUBLE` --> Features whose type is DOUBLE. * `create_time
               * > \"2020-01-31T15:30:00.000000Z\" OR update_time > \"2020-01-31T15:30:00.000000Z\"`
               * --> EntityTypes created or updated after 2020-01-31T15:30:00.000000Z. *
               * `labels.active = yes AND labels.env = prod` --> Features having both (active: yes)
               * and (env: prod) labels. * `labels.env: *` --> Any Feature which has a label with
               * 'env' as the key.
               */
              @com.google.api.client.util.Key
              private java.lang.String filter;

              /** Lists the Features that match the filter expression. The following filters are supported: *
             `value_type`: Supports = and != comparisons. * `create_time`: Supports =, !=, <, >, >=, and <=
             comparisons. Values must be in RFC 3339 format. * `update_time`: Supports =, !=, <, >, >=, and <=
             comparisons. Values must be in RFC 3339 format. * `labels`: Supports key-value equality as well as
             key presence. Examples: * `value_type = DOUBLE` --> Features whose type is DOUBLE. * `create_time >
             \"2020-01-31T15:30:00.000000Z\" OR update_time > \"2020-01-31T15:30:00.000000Z\"` --> EntityTypes
             created or updated after 2020-01-31T15:30:00.000000Z. * `labels.active = yes AND labels.env = prod`
             --> Features having both (active: yes) and (env: prod) labels. * `labels.env: *` --> Any Feature
             which has a label with 'env' as the key.
               */
              public java.lang.String getFilter() {
                return filter;
              }

              /**
               * Lists the Features that match the filter expression. The following filters are
               * supported: * `value_type`: Supports = and != comparisons. * `create_time`: Supports
               * =, !=, <, >, >=, and <= comparisons. Values must be in RFC 3339 format. *
               * `update_time`: Supports =, !=, <, >, >=, and <= comparisons. Values must be in RFC
               * 3339 format. * `labels`: Supports key-value equality as well as key presence.
               * Examples: * `value_type = DOUBLE` --> Features whose type is DOUBLE. * `create_time
               * > \"2020-01-31T15:30:00.000000Z\" OR update_time > \"2020-01-31T15:30:00.000000Z\"`
               * --> EntityTypes created or updated after 2020-01-31T15:30:00.000000Z. *
               * `labels.active = yes AND labels.env = prod` --> Features having both (active: yes)
               * and (env: prod) labels. * `labels.env: *` --> Any Feature which has a label with
               * 'env' as the key.
               */
              public List setFilter(java.lang.String filter) {
                this.filter = filter;
                return this;
              }

              /**
               * Only applicable for Vertex AI Feature Store (Legacy). If set, return the most
               * recent ListFeaturesRequest.latest_stats_count of stats for each Feature in
               * response. Valid value is [0, 10]. If number of stats exists <
               * ListFeaturesRequest.latest_stats_count, return all existing stats.
               */
              @com.google.api.client.util.Key
              private java.lang.Integer latestStatsCount;

              /** Only applicable for Vertex AI Feature Store (Legacy). If set, return the most recent
             ListFeaturesRequest.latest_stats_count of stats for each Feature in response. Valid value is [0,
             10]. If number of stats exists < ListFeaturesRequest.latest_stats_count, return all existing stats.
               */
              public java.lang.Integer getLatestStatsCount() {
                return latestStatsCount;
              }

              /**
               * Only applicable for Vertex AI Feature Store (Legacy). If set, return the most
               * recent ListFeaturesRequest.latest_stats_count of stats for each Feature in
               * response. Valid value is [0, 10]. If number of stats exists <
               * ListFeaturesRequest.latest_stats_count, return all existing stats.
               */
              public List setLatestStatsCount(java.lang.Integer latestStatsCount) {
                this.latestStatsCount = latestStatsCount;
                return this;
              }

              /**
               * A comma-separated list of fields to order by, sorted in ascending order. Use "desc"
               * after a field name for descending. Supported fields: * `feature_id` * `value_type`
               * (Not supported for FeatureRegistry Feature) * `create_time` * `update_time`
               */
              @com.google.api.client.util.Key
              private java.lang.String orderBy;

              /** A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field
             name for descending. Supported fields: * `feature_id` * `value_type` (Not supported for
             FeatureRegistry Feature) * `create_time` * `update_time`
               */
              public java.lang.String getOrderBy() {
                return orderBy;
              }

              /**
               * A comma-separated list of fields to order by, sorted in ascending order. Use "desc"
               * after a field name for descending. Supported fields: * `feature_id` * `value_type`
               * (Not supported for FeatureRegistry Feature) * `create_time` * `update_time`
               */
              public List setOrderBy(java.lang.String orderBy) {
                this.orderBy = orderBy;
                return this;
              }

              /**
               * The maximum number of Features to return. The service may return fewer than this
               * value. If unspecified, at most 1000 Features will be returned. The maximum value is
               * 1000; any value greater than 1000 will be coerced to 1000.
               */
              @com.google.api.client.util.Key
              private java.lang.Integer pageSize;

              /** The maximum number of Features to return. The service may return fewer than this value. If
             unspecified, at most 1000 Features will be returned. The maximum value is 1000; any value greater
             than 1000 will be coerced to 1000.
               */
              public java.lang.Integer getPageSize() {
                return pageSize;
              }

              /**
               * The maximum number of Features to return. The service may return fewer than this
               * value. If unspecified, at most 1000 Features will be returned. The maximum value is
               * 1000; any value greater than 1000 will be coerced to 1000.
               */
              public List setPageSize(java.lang.Integer pageSize) {
                this.pageSize = pageSize;
                return this;
              }

              /**
               * A page token, received from a previous FeaturestoreService.ListFeatures call or
               * FeatureRegistryService.ListFeatures call. Provide this to retrieve the subsequent
               * page. When paginating, all other parameters provided to
               * FeaturestoreService.ListFeatures or FeatureRegistryService.ListFeatures must match
               * the call that provided the page token.
               */
              @com.google.api.client.util.Key
              private java.lang.String pageToken;

              /** A page token, received from a previous FeaturestoreService.ListFeatures call or
             FeatureRegistryService.ListFeatures call. Provide this to retrieve the subsequent page. When
             paginating, all other parameters provided to FeaturestoreService.ListFeatures or
             FeatureRegistryService.ListFeatures must match the call that provided the page token.
               */
              public java.lang.String getPageToken() {
                return pageToken;
              }

              /**
               * A page token, received from a previous FeaturestoreService.ListFeatures call or
               * FeatureRegistryService.ListFeatures call. Provide this to retrieve the subsequent
               * page. When paginating, all other parameters provided to
               * FeaturestoreService.ListFeatures or FeatureRegistryService.ListFeatures must match
               * the call that provided the page token.
               */
              public List setPageToken(java.lang.String pageToken) {
                this.pageToken = pageToken;
                return this;
              }

              /** Mask specifying which fields to read. */
              @com.google.api.client.util.Key
              private String readMask;

              /** Mask specifying which fields to read.
               */
              public String getReadMask() {
                return readMask;
              }

              /** Mask specifying which fields to read. */
              public List setReadMask(String readMask) {
                this.readMask = readMask;
                return this;
              }

              @Override
              public List set(String parameterName, Object value) {
                return (List) super.set(parameterName, value);
              }
            }
            /**
             * Updates the parameters of a single Feature.
             *
             * Create a request for the method "features.patch".
             *
             * This request holds the parameters needed by the aiplatform server.  After setting any optional
             * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             *
             * @param name Immutable. Name of the Feature. Format: `projects/{project}/locations/{location}/featurestores/{feat
             *        urestore}/entityTypes/{entity_type}/features/{feature}`
             *        `projects/{project}/locations/{location}/featureGroups/{feature_group}/features/{feature}`
             *        The last part feature is assigned by the client. The feature can be up to 64 characters
             *        long and can consist only of ASCII Latin letters A-Z and a-z, underscore(_), and ASCII
             *        digits 0-9 starting with a letter. The value will be unique given an entity type.
             * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Feature}
             * @return the request
             */
            public Patch patch(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Feature content) throws java.io.IOException {
              Patch result = new Patch(name, content);
              initialize(result);
              return result;
            }

            public class Patch extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Feature> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+/features/[^/]+$");

              /**
               * Updates the parameters of a single Feature.
               *
               * Create a request for the method "features.patch".
               *
               * This request holds the parameters needed by the the aiplatform server.  After setting any
               * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
               * <p> {@link
               * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Immutable. Name of the Feature. Format: `projects/{project}/locations/{location}/featurestores/{feat
             *        urestore}/entityTypes/{entity_type}/features/{feature}`
             *        `projects/{project}/locations/{location}/featureGroups/{feature_group}/features/{feature}`
             *        The last part feature is assigned by the client. The feature can be up to 64 characters
             *        long and can consist only of ASCII Latin letters A-Z and a-z, underscore(_), and ASCII
             *        digits 0-9 starting with a letter. The value will be unique given an entity type.
               * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Feature}
               * @since 1.13
               */
              protected Patch(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Feature content) {
                super(Aiplatform.this, "PATCH", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Feature.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+/features/[^/]+$");
                }
              }

              @Override
              public Patch set$Xgafv(java.lang.String $Xgafv) {
                return (Patch) super.set$Xgafv($Xgafv);
              }

              @Override
              public Patch setAccessToken(java.lang.String accessToken) {
                return (Patch) super.setAccessToken(accessToken);
              }

              @Override
              public Patch setAlt(java.lang.String alt) {
                return (Patch) super.setAlt(alt);
              }

              @Override
              public Patch setCallback(java.lang.String callback) {
                return (Patch) super.setCallback(callback);
              }

              @Override
              public Patch setFields(java.lang.String fields) {
                return (Patch) super.setFields(fields);
              }

              @Override
              public Patch setKey(java.lang.String key) {
                return (Patch) super.setKey(key);
              }

              @Override
              public Patch setOauthToken(java.lang.String oauthToken) {
                return (Patch) super.setOauthToken(oauthToken);
              }

              @Override
              public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Patch) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Patch setQuotaUser(java.lang.String quotaUser) {
                return (Patch) super.setQuotaUser(quotaUser);
              }

              @Override
              public Patch setUploadType(java.lang.String uploadType) {
                return (Patch) super.setUploadType(uploadType);
              }

              @Override
              public Patch setUploadProtocol(java.lang.String uploadProtocol) {
                return (Patch) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Immutable. Name of the Feature. Format: `projects/{project}/locations/{location}/fe
               * aturestores/{featurestore}/entityTypes/{entity_type}/features/{feature}` `projects/
               * {project}/locations/{location}/featureGroups/{feature_group}/features/{feature}`
               * The last part feature is assigned by the client. The feature can be up to 64
               * characters long and can consist only of ASCII Latin letters A-Z and a-z,
               * underscore(_), and ASCII digits 0-9 starting with a letter. The value will be
               * unique given an entity type.
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Immutable. Name of the Feature. Format: `projects/{project}/locations/{location}/featurestores/{fea
             turestore}/entityTypes/{entity_type}/features/{feature}`
             `projects/{project}/locations/{location}/featureGroups/{feature_group}/features/{feature}` The last
             part feature is assigned by the client. The feature can be up to 64 characters long and can consist
             only of ASCII Latin letters A-Z and a-z, underscore(_), and ASCII digits 0-9 starting with a
             letter. The value will be unique given an entity type.
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Immutable. Name of the Feature. Format: `projects/{project}/locations/{location}/fe
               * aturestores/{featurestore}/entityTypes/{entity_type}/features/{feature}` `projects/
               * {project}/locations/{location}/featureGroups/{feature_group}/features/{feature}`
               * The last part feature is assigned by the client. The feature can be up to 64
               * characters long and can consist only of ASCII Latin letters A-Z and a-z,
               * underscore(_), and ASCII digits 0-9 starting with a letter. The value will be
               * unique given an entity type.
               */
              public Patch setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+/features/[^/]+$");
                }
                this.name = name;
                return this;
              }

              /**
               * Field mask is used to specify the fields to be overwritten in the Features resource
               * by the update. The fields specified in the update_mask are relative to the
               * resource, not the full request. A field will be overwritten if it is in the mask.
               * If the user does not provide a mask then only the non-empty fields present in the
               * request will be overwritten. Set the update_mask to `*` to override all fields.
               * Updatable fields: * `description` * `labels` * `disable_monitoring` (Not supported
               * for FeatureRegistryService Feature) * `point_of_contact` (Not supported for
               * FeaturestoreService FeatureStore)
               */
              @com.google.api.client.util.Key
              private String updateMask;

              /** Field mask is used to specify the fields to be overwritten in the Features resource by the update.
             The fields specified in the update_mask are relative to the resource, not the full request. A field
             will be overwritten if it is in the mask. If the user does not provide a mask then only the non-
             empty fields present in the request will be overwritten. Set the update_mask to `*` to override all
             fields. Updatable fields: * `description` * `labels` * `disable_monitoring` (Not supported for
             FeatureRegistryService Feature) * `point_of_contact` (Not supported for FeaturestoreService
             FeatureStore)
               */
              public String getUpdateMask() {
                return updateMask;
              }

              /**
               * Field mask is used to specify the fields to be overwritten in the Features resource
               * by the update. The fields specified in the update_mask are relative to the
               * resource, not the full request. A field will be overwritten if it is in the mask.
               * If the user does not provide a mask then only the non-empty fields present in the
               * request will be overwritten. Set the update_mask to `*` to override all fields.
               * Updatable fields: * `description` * `labels` * `disable_monitoring` (Not supported
               * for FeatureRegistryService Feature) * `point_of_contact` (Not supported for
               * FeaturestoreService FeatureStore)
               */
              public Patch setUpdateMask(String updateMask) {
                this.updateMask = updateMask;
                return this;
              }

              @Override
              public Patch set(String parameterName, Object value) {
                return (Patch) super.set(parameterName, value);
              }
            }

            /**
             * An accessor for creating requests from the Operations collection.
             *
             * <p>The typical use is:</p>
             * <pre>
             *   {@code Aiplatform aiplatform = new Aiplatform(...);}
             *   {@code Aiplatform.Operations.List request = aiplatform.operations().list(parameters ...)}
             * </pre>
             *
             * @return the resource collection
             */
            public Operations operations() {
              return new Operations();
            }

            /**
             * The "operations" collection of methods.
             */
            public class Operations {

              /**
               * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
               * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
               * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
               * methods to check whether the cancellation succeeded or whether the operation completed despite
               * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
               * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
               * `Code.CANCELLED`.
               *
               * Create a request for the method "operations.cancel".
               *
               * This request holds the parameters needed by the aiplatform server.  After setting any optional
               * parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
               *
               * @param name The name of the operation resource to be cancelled.
               * @return the request
               */
              public Cancel cancel(java.lang.String name) throws java.io.IOException {
                Cancel result = new Cancel(name);
                initialize(result);
                return result;
              }

              public class Cancel extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

                private static final String REST_PATH = "v1/{+name}:cancel";

                private final java.util.regex.Pattern NAME_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+/features/[^/]+/operations/[^/]+$");

                /**
                 * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
                 * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
                 * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
                 * methods to check whether the cancellation succeeded or whether the operation completed despite
                 * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
                 * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
                 * `Code.CANCELLED`.
                 *
                 * Create a request for the method "operations.cancel".
                 *
                 * This request holds the parameters needed by the the aiplatform server.  After setting any
                 * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
                 * <p> {@link
                 * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
                 * be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param name The name of the operation resource to be cancelled.
                 * @since 1.13
                 */
                protected Cancel(java.lang.String name) {
                  super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
                  this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+/features/[^/]+/operations/[^/]+$");
                  }
                }

                @Override
                public Cancel set$Xgafv(java.lang.String $Xgafv) {
                  return (Cancel) super.set$Xgafv($Xgafv);
                }

                @Override
                public Cancel setAccessToken(java.lang.String accessToken) {
                  return (Cancel) super.setAccessToken(accessToken);
                }

                @Override
                public Cancel setAlt(java.lang.String alt) {
                  return (Cancel) super.setAlt(alt);
                }

                @Override
                public Cancel setCallback(java.lang.String callback) {
                  return (Cancel) super.setCallback(callback);
                }

                @Override
                public Cancel setFields(java.lang.String fields) {
                  return (Cancel) super.setFields(fields);
                }

                @Override
                public Cancel setKey(java.lang.String key) {
                  return (Cancel) super.setKey(key);
                }

                @Override
                public Cancel setOauthToken(java.lang.String oauthToken) {
                  return (Cancel) super.setOauthToken(oauthToken);
                }

                @Override
                public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (Cancel) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public Cancel setQuotaUser(java.lang.String quotaUser) {
                  return (Cancel) super.setQuotaUser(quotaUser);
                }

                @Override
                public Cancel setUploadType(java.lang.String uploadType) {
                  return (Cancel) super.setUploadType(uploadType);
                }

                @Override
                public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
                  return (Cancel) super.setUploadProtocol(uploadProtocol);
                }

                /** The name of the operation resource to be cancelled. */
                @com.google.api.client.util.Key
                private java.lang.String name;

                /** The name of the operation resource to be cancelled.
                 */
                public java.lang.String getName() {
                  return name;
                }

                /** The name of the operation resource to be cancelled. */
                public Cancel setName(java.lang.String name) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+/features/[^/]+/operations/[^/]+$");
                  }
                  this.name = name;
                  return this;
                }

                @Override
                public Cancel set(String parameterName, Object value) {
                  return (Cancel) super.set(parameterName, value);
                }
              }
              /**
               * Deletes a long-running operation. This method indicates that the client is no longer interested
               * in the operation result. It does not cancel the operation. If the server doesn't support this
               * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
               *
               * Create a request for the method "operations.delete".
               *
               * This request holds the parameters needed by the aiplatform server.  After setting any optional
               * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
               *
               * @param name The name of the operation resource to be deleted.
               * @return the request
               */
              public Delete delete(java.lang.String name) throws java.io.IOException {
                Delete result = new Delete(name);
                initialize(result);
                return result;
              }

              public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

                private static final String REST_PATH = "v1/{+name}";

                private final java.util.regex.Pattern NAME_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+/features/[^/]+/operations/[^/]+$");

                /**
                 * Deletes a long-running operation. This method indicates that the client is no longer interested
                 * in the operation result. It does not cancel the operation. If the server doesn't support this
                 * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
                 *
                 * Create a request for the method "operations.delete".
                 *
                 * This request holds the parameters needed by the the aiplatform server.  After setting any
                 * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
                 * <p> {@link
                 * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
                 * be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param name The name of the operation resource to be deleted.
                 * @since 1.13
                 */
                protected Delete(java.lang.String name) {
                  super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
                  this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+/features/[^/]+/operations/[^/]+$");
                  }
                }

                @Override
                public Delete set$Xgafv(java.lang.String $Xgafv) {
                  return (Delete) super.set$Xgafv($Xgafv);
                }

                @Override
                public Delete setAccessToken(java.lang.String accessToken) {
                  return (Delete) super.setAccessToken(accessToken);
                }

                @Override
                public Delete setAlt(java.lang.String alt) {
                  return (Delete) super.setAlt(alt);
                }

                @Override
                public Delete setCallback(java.lang.String callback) {
                  return (Delete) super.setCallback(callback);
                }

                @Override
                public Delete setFields(java.lang.String fields) {
                  return (Delete) super.setFields(fields);
                }

                @Override
                public Delete setKey(java.lang.String key) {
                  return (Delete) super.setKey(key);
                }

                @Override
                public Delete setOauthToken(java.lang.String oauthToken) {
                  return (Delete) super.setOauthToken(oauthToken);
                }

                @Override
                public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (Delete) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public Delete setQuotaUser(java.lang.String quotaUser) {
                  return (Delete) super.setQuotaUser(quotaUser);
                }

                @Override
                public Delete setUploadType(java.lang.String uploadType) {
                  return (Delete) super.setUploadType(uploadType);
                }

                @Override
                public Delete setUploadProtocol(java.lang.String uploadProtocol) {
                  return (Delete) super.setUploadProtocol(uploadProtocol);
                }

                /** The name of the operation resource to be deleted. */
                @com.google.api.client.util.Key
                private java.lang.String name;

                /** The name of the operation resource to be deleted.
                 */
                public java.lang.String getName() {
                  return name;
                }

                /** The name of the operation resource to be deleted. */
                public Delete setName(java.lang.String name) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+/features/[^/]+/operations/[^/]+$");
                  }
                  this.name = name;
                  return this;
                }

                @Override
                public Delete set(String parameterName, Object value) {
                  return (Delete) super.set(parameterName, value);
                }
              }
              /**
               * Gets the latest state of a long-running operation. Clients can use this method to poll the
               * operation result at intervals as recommended by the API service.
               *
               * Create a request for the method "operations.get".
               *
               * This request holds the parameters needed by the aiplatform server.  After setting any optional
               * parameters, call the {@link Get#execute()} method to invoke the remote operation.
               *
               * @param name The name of the operation resource.
               * @return the request
               */
              public Get get(java.lang.String name) throws java.io.IOException {
                Get result = new Get(name);
                initialize(result);
                return result;
              }

              public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

                private static final String REST_PATH = "v1/{+name}";

                private final java.util.regex.Pattern NAME_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+/features/[^/]+/operations/[^/]+$");

                /**
                 * Gets the latest state of a long-running operation. Clients can use this method to poll the
                 * operation result at intervals as recommended by the API service.
                 *
                 * Create a request for the method "operations.get".
                 *
                 * This request holds the parameters needed by the the aiplatform server.  After setting any
                 * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
                 * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
                 * must be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param name The name of the operation resource.
                 * @since 1.13
                 */
                protected Get(java.lang.String name) {
                  super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
                  this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+/features/[^/]+/operations/[^/]+$");
                  }
                }

                @Override
                public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                  return super.executeUsingHead();
                }

                @Override
                public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                  return super.buildHttpRequestUsingHead();
                }

                @Override
                public Get set$Xgafv(java.lang.String $Xgafv) {
                  return (Get) super.set$Xgafv($Xgafv);
                }

                @Override
                public Get setAccessToken(java.lang.String accessToken) {
                  return (Get) super.setAccessToken(accessToken);
                }

                @Override
                public Get setAlt(java.lang.String alt) {
                  return (Get) super.setAlt(alt);
                }

                @Override
                public Get setCallback(java.lang.String callback) {
                  return (Get) super.setCallback(callback);
                }

                @Override
                public Get setFields(java.lang.String fields) {
                  return (Get) super.setFields(fields);
                }

                @Override
                public Get setKey(java.lang.String key) {
                  return (Get) super.setKey(key);
                }

                @Override
                public Get setOauthToken(java.lang.String oauthToken) {
                  return (Get) super.setOauthToken(oauthToken);
                }

                @Override
                public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (Get) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public Get setQuotaUser(java.lang.String quotaUser) {
                  return (Get) super.setQuotaUser(quotaUser);
                }

                @Override
                public Get setUploadType(java.lang.String uploadType) {
                  return (Get) super.setUploadType(uploadType);
                }

                @Override
                public Get setUploadProtocol(java.lang.String uploadProtocol) {
                  return (Get) super.setUploadProtocol(uploadProtocol);
                }

                /** The name of the operation resource. */
                @com.google.api.client.util.Key
                private java.lang.String name;

                /** The name of the operation resource.
                 */
                public java.lang.String getName() {
                  return name;
                }

                /** The name of the operation resource. */
                public Get setName(java.lang.String name) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+/features/[^/]+/operations/[^/]+$");
                  }
                  this.name = name;
                  return this;
                }

                @Override
                public Get set(String parameterName, Object value) {
                  return (Get) super.set(parameterName, value);
                }
              }
              /**
               * Lists operations that match the specified filter in the request. If the server doesn't support
               * this method, it returns `UNIMPLEMENTED`.
               *
               * Create a request for the method "operations.list".
               *
               * This request holds the parameters needed by the aiplatform server.  After setting any optional
               * parameters, call the {@link List#execute()} method to invoke the remote operation.
               *
               * @param name The name of the operation's parent resource.
               * @return the request
               */
              public List list(java.lang.String name) throws java.io.IOException {
                List result = new List(name);
                initialize(result);
                return result;
              }

              public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse> {

                private static final String REST_PATH = "v1/{+name}/operations";

                private final java.util.regex.Pattern NAME_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+/features/[^/]+$");

                /**
                 * Lists operations that match the specified filter in the request. If the server doesn't support
                 * this method, it returns `UNIMPLEMENTED`.
                 *
                 * Create a request for the method "operations.list".
                 *
                 * This request holds the parameters needed by the the aiplatform server.  After setting any
                 * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
                 * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
                 * must be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param name The name of the operation's parent resource.
                 * @since 1.13
                 */
                protected List(java.lang.String name) {
                  super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse.class);
                  this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+/features/[^/]+$");
                  }
                }

                @Override
                public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                  return super.executeUsingHead();
                }

                @Override
                public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                  return super.buildHttpRequestUsingHead();
                }

                @Override
                public List set$Xgafv(java.lang.String $Xgafv) {
                  return (List) super.set$Xgafv($Xgafv);
                }

                @Override
                public List setAccessToken(java.lang.String accessToken) {
                  return (List) super.setAccessToken(accessToken);
                }

                @Override
                public List setAlt(java.lang.String alt) {
                  return (List) super.setAlt(alt);
                }

                @Override
                public List setCallback(java.lang.String callback) {
                  return (List) super.setCallback(callback);
                }

                @Override
                public List setFields(java.lang.String fields) {
                  return (List) super.setFields(fields);
                }

                @Override
                public List setKey(java.lang.String key) {
                  return (List) super.setKey(key);
                }

                @Override
                public List setOauthToken(java.lang.String oauthToken) {
                  return (List) super.setOauthToken(oauthToken);
                }

                @Override
                public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (List) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public List setQuotaUser(java.lang.String quotaUser) {
                  return (List) super.setQuotaUser(quotaUser);
                }

                @Override
                public List setUploadType(java.lang.String uploadType) {
                  return (List) super.setUploadType(uploadType);
                }

                @Override
                public List setUploadProtocol(java.lang.String uploadProtocol) {
                  return (List) super.setUploadProtocol(uploadProtocol);
                }

                /** The name of the operation's parent resource. */
                @com.google.api.client.util.Key
                private java.lang.String name;

                /** The name of the operation's parent resource.
                 */
                public java.lang.String getName() {
                  return name;
                }

                /** The name of the operation's parent resource. */
                public List setName(java.lang.String name) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+/features/[^/]+$");
                  }
                  this.name = name;
                  return this;
                }

                /** The standard list filter. */
                @com.google.api.client.util.Key
                private java.lang.String filter;

                /** The standard list filter.
                 */
                public java.lang.String getFilter() {
                  return filter;
                }

                /** The standard list filter. */
                public List setFilter(java.lang.String filter) {
                  this.filter = filter;
                  return this;
                }

                /** The standard list page size. */
                @com.google.api.client.util.Key
                private java.lang.Integer pageSize;

                /** The standard list page size.
                 */
                public java.lang.Integer getPageSize() {
                  return pageSize;
                }

                /** The standard list page size. */
                public List setPageSize(java.lang.Integer pageSize) {
                  this.pageSize = pageSize;
                  return this;
                }

                /** The standard list page token. */
                @com.google.api.client.util.Key
                private java.lang.String pageToken;

                /** The standard list page token.
                 */
                public java.lang.String getPageToken() {
                  return pageToken;
                }

                /** The standard list page token. */
                public List setPageToken(java.lang.String pageToken) {
                  this.pageToken = pageToken;
                  return this;
                }

                @Override
                public List set(String parameterName, Object value) {
                  return (List) super.set(parameterName, value);
                }
              }
              /**
               * Waits until the specified long-running operation is done or reaches at most a specified timeout,
               * returning the latest state. If the operation is already done, the latest state is immediately
               * returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC
               * timeout is used. If the server does not support this method, it returns
               * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
               * the latest state before the specified timeout (including immediately), meaning even an immediate
               * response is no guarantee that the operation is done.
               *
               * Create a request for the method "operations.wait".
               *
               * This request holds the parameters needed by the aiplatform server.  After setting any optional
               * parameters, call the {@link Wait#execute()} method to invoke the remote operation.
               *
               * @param name The name of the operation resource to wait on.
               * @return the request
               */
              public Wait wait(java.lang.String name) throws java.io.IOException {
                Wait result = new Wait(name);
                initialize(result);
                return result;
              }

              public class Wait extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

                private static final String REST_PATH = "v1/{+name}:wait";

                private final java.util.regex.Pattern NAME_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+/features/[^/]+/operations/[^/]+$");

                /**
                 * Waits until the specified long-running operation is done or reaches at most a specified
                 * timeout, returning the latest state. If the operation is already done, the latest state is
                 * immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout,
                 * the HTTP/RPC timeout is used. If the server does not support this method, it returns
                 * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
                 * the latest state before the specified timeout (including immediately), meaning even an
                 * immediate response is no guarantee that the operation is done.
                 *
                 * Create a request for the method "operations.wait".
                 *
                 * This request holds the parameters needed by the the aiplatform server.  After setting any
                 * optional parameters, call the {@link Wait#execute()} method to invoke the remote operation. <p>
                 * {@link Wait#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
                 * must be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param name The name of the operation resource to wait on.
                 * @since 1.13
                 */
                protected Wait(java.lang.String name) {
                  super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
                  this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+/features/[^/]+/operations/[^/]+$");
                  }
                }

                @Override
                public Wait set$Xgafv(java.lang.String $Xgafv) {
                  return (Wait) super.set$Xgafv($Xgafv);
                }

                @Override
                public Wait setAccessToken(java.lang.String accessToken) {
                  return (Wait) super.setAccessToken(accessToken);
                }

                @Override
                public Wait setAlt(java.lang.String alt) {
                  return (Wait) super.setAlt(alt);
                }

                @Override
                public Wait setCallback(java.lang.String callback) {
                  return (Wait) super.setCallback(callback);
                }

                @Override
                public Wait setFields(java.lang.String fields) {
                  return (Wait) super.setFields(fields);
                }

                @Override
                public Wait setKey(java.lang.String key) {
                  return (Wait) super.setKey(key);
                }

                @Override
                public Wait setOauthToken(java.lang.String oauthToken) {
                  return (Wait) super.setOauthToken(oauthToken);
                }

                @Override
                public Wait setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (Wait) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public Wait setQuotaUser(java.lang.String quotaUser) {
                  return (Wait) super.setQuotaUser(quotaUser);
                }

                @Override
                public Wait setUploadType(java.lang.String uploadType) {
                  return (Wait) super.setUploadType(uploadType);
                }

                @Override
                public Wait setUploadProtocol(java.lang.String uploadProtocol) {
                  return (Wait) super.setUploadProtocol(uploadProtocol);
                }

                /** The name of the operation resource to wait on. */
                @com.google.api.client.util.Key
                private java.lang.String name;

                /** The name of the operation resource to wait on.
                 */
                public java.lang.String getName() {
                  return name;
                }

                /** The name of the operation resource to wait on. */
                public Wait setName(java.lang.String name) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+/features/[^/]+/operations/[^/]+$");
                  }
                  this.name = name;
                  return this;
                }

                /**
                 * The maximum duration to wait before timing out. If left blank, the wait will be
                 * at most the time permitted by the underlying HTTP/RPC protocol. If RPC context
                 * deadline is also specified, the shorter one will be used.
                 */
                @com.google.api.client.util.Key
                private String timeout;

                /** The maximum duration to wait before timing out. If left blank, the wait will be at most the time
               permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the
               shorter one will be used.
                 */
                public String getTimeout() {
                  return timeout;
                }

                /**
                 * The maximum duration to wait before timing out. If left blank, the wait will be
                 * at most the time permitted by the underlying HTTP/RPC protocol. If RPC context
                 * deadline is also specified, the shorter one will be used.
                 */
                public Wait setTimeout(String timeout) {
                  this.timeout = timeout;
                  return this;
                }

                @Override
                public Wait set(String parameterName, Object value) {
                  return (Wait) super.set(parameterName, value);
                }
              }

            }
          }
          /**
           * An accessor for creating requests from the Operations collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code Aiplatform aiplatform = new Aiplatform(...);}
           *   {@code Aiplatform.Operations.List request = aiplatform.operations().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public Operations operations() {
            return new Operations();
          }

          /**
           * The "operations" collection of methods.
           */
          public class Operations {

            /**
             * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
             * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
             * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
             * methods to check whether the cancellation succeeded or whether the operation completed despite
             * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
             * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
             * `Code.CANCELLED`.
             *
             * Create a request for the method "operations.cancel".
             *
             * This request holds the parameters needed by the aiplatform server.  After setting any optional
             * parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
             *
             * @param name The name of the operation resource to be cancelled.
             * @return the request
             */
            public Cancel cancel(java.lang.String name) throws java.io.IOException {
              Cancel result = new Cancel(name);
              initialize(result);
              return result;
            }

            public class Cancel extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

              private static final String REST_PATH = "v1/{+name}:cancel";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+/operations/[^/]+$");

              /**
               * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
               * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
               * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
               * methods to check whether the cancellation succeeded or whether the operation completed despite
               * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
               * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
               * `Code.CANCELLED`.
               *
               * Create a request for the method "operations.cancel".
               *
               * This request holds the parameters needed by the the aiplatform server.  After setting any
               * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
               * <p> {@link
               * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The name of the operation resource to be cancelled.
               * @since 1.13
               */
              protected Cancel(java.lang.String name) {
                super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+/operations/[^/]+$");
                }
              }

              @Override
              public Cancel set$Xgafv(java.lang.String $Xgafv) {
                return (Cancel) super.set$Xgafv($Xgafv);
              }

              @Override
              public Cancel setAccessToken(java.lang.String accessToken) {
                return (Cancel) super.setAccessToken(accessToken);
              }

              @Override
              public Cancel setAlt(java.lang.String alt) {
                return (Cancel) super.setAlt(alt);
              }

              @Override
              public Cancel setCallback(java.lang.String callback) {
                return (Cancel) super.setCallback(callback);
              }

              @Override
              public Cancel setFields(java.lang.String fields) {
                return (Cancel) super.setFields(fields);
              }

              @Override
              public Cancel setKey(java.lang.String key) {
                return (Cancel) super.setKey(key);
              }

              @Override
              public Cancel setOauthToken(java.lang.String oauthToken) {
                return (Cancel) super.setOauthToken(oauthToken);
              }

              @Override
              public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Cancel) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Cancel setQuotaUser(java.lang.String quotaUser) {
                return (Cancel) super.setQuotaUser(quotaUser);
              }

              @Override
              public Cancel setUploadType(java.lang.String uploadType) {
                return (Cancel) super.setUploadType(uploadType);
              }

              @Override
              public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
                return (Cancel) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the operation resource to be cancelled. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The name of the operation resource to be cancelled.
               */
              public java.lang.String getName() {
                return name;
              }

              /** The name of the operation resource to be cancelled. */
              public Cancel setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+/operations/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Cancel set(String parameterName, Object value) {
                return (Cancel) super.set(parameterName, value);
              }
            }
            /**
             * Deletes a long-running operation. This method indicates that the client is no longer interested
             * in the operation result. It does not cancel the operation. If the server doesn't support this
             * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.delete".
             *
             * This request holds the parameters needed by the aiplatform server.  After setting any optional
             * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             *
             * @param name The name of the operation resource to be deleted.
             * @return the request
             */
            public Delete delete(java.lang.String name) throws java.io.IOException {
              Delete result = new Delete(name);
              initialize(result);
              return result;
            }

            public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+/operations/[^/]+$");

              /**
               * Deletes a long-running operation. This method indicates that the client is no longer interested
               * in the operation result. It does not cancel the operation. If the server doesn't support this
               * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
               *
               * Create a request for the method "operations.delete".
               *
               * This request holds the parameters needed by the the aiplatform server.  After setting any
               * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
               * <p> {@link
               * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The name of the operation resource to be deleted.
               * @since 1.13
               */
              protected Delete(java.lang.String name) {
                super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+/operations/[^/]+$");
                }
              }

              @Override
              public Delete set$Xgafv(java.lang.String $Xgafv) {
                return (Delete) super.set$Xgafv($Xgafv);
              }

              @Override
              public Delete setAccessToken(java.lang.String accessToken) {
                return (Delete) super.setAccessToken(accessToken);
              }

              @Override
              public Delete setAlt(java.lang.String alt) {
                return (Delete) super.setAlt(alt);
              }

              @Override
              public Delete setCallback(java.lang.String callback) {
                return (Delete) super.setCallback(callback);
              }

              @Override
              public Delete setFields(java.lang.String fields) {
                return (Delete) super.setFields(fields);
              }

              @Override
              public Delete setKey(java.lang.String key) {
                return (Delete) super.setKey(key);
              }

              @Override
              public Delete setOauthToken(java.lang.String oauthToken) {
                return (Delete) super.setOauthToken(oauthToken);
              }

              @Override
              public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Delete) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Delete setQuotaUser(java.lang.String quotaUser) {
                return (Delete) super.setQuotaUser(quotaUser);
              }

              @Override
              public Delete setUploadType(java.lang.String uploadType) {
                return (Delete) super.setUploadType(uploadType);
              }

              @Override
              public Delete setUploadProtocol(java.lang.String uploadProtocol) {
                return (Delete) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the operation resource to be deleted. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The name of the operation resource to be deleted.
               */
              public java.lang.String getName() {
                return name;
              }

              /** The name of the operation resource to be deleted. */
              public Delete setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+/operations/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Delete set(String parameterName, Object value) {
                return (Delete) super.set(parameterName, value);
              }
            }
            /**
             * Gets the latest state of a long-running operation. Clients can use this method to poll the
             * operation result at intervals as recommended by the API service.
             *
             * Create a request for the method "operations.get".
             *
             * This request holds the parameters needed by the aiplatform server.  After setting any optional
             * parameters, call the {@link Get#execute()} method to invoke the remote operation.
             *
             * @param name The name of the operation resource.
             * @return the request
             */
            public Get get(java.lang.String name) throws java.io.IOException {
              Get result = new Get(name);
              initialize(result);
              return result;
            }

            public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+/operations/[^/]+$");

              /**
               * Gets the latest state of a long-running operation. Clients can use this method to poll the
               * operation result at intervals as recommended by the API service.
               *
               * Create a request for the method "operations.get".
               *
               * This request holds the parameters needed by the the aiplatform server.  After setting any
               * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
               * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The name of the operation resource.
               * @since 1.13
               */
              protected Get(java.lang.String name) {
                super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+/operations/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public Get set$Xgafv(java.lang.String $Xgafv) {
                return (Get) super.set$Xgafv($Xgafv);
              }

              @Override
              public Get setAccessToken(java.lang.String accessToken) {
                return (Get) super.setAccessToken(accessToken);
              }

              @Override
              public Get setAlt(java.lang.String alt) {
                return (Get) super.setAlt(alt);
              }

              @Override
              public Get setCallback(java.lang.String callback) {
                return (Get) super.setCallback(callback);
              }

              @Override
              public Get setFields(java.lang.String fields) {
                return (Get) super.setFields(fields);
              }

              @Override
              public Get setKey(java.lang.String key) {
                return (Get) super.setKey(key);
              }

              @Override
              public Get setOauthToken(java.lang.String oauthToken) {
                return (Get) super.setOauthToken(oauthToken);
              }

              @Override
              public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Get) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Get setQuotaUser(java.lang.String quotaUser) {
                return (Get) super.setQuotaUser(quotaUser);
              }

              @Override
              public Get setUploadType(java.lang.String uploadType) {
                return (Get) super.setUploadType(uploadType);
              }

              @Override
              public Get setUploadProtocol(java.lang.String uploadProtocol) {
                return (Get) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the operation resource. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The name of the operation resource.
               */
              public java.lang.String getName() {
                return name;
              }

              /** The name of the operation resource. */
              public Get setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+/operations/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Get set(String parameterName, Object value) {
                return (Get) super.set(parameterName, value);
              }
            }
            /**
             * Lists operations that match the specified filter in the request. If the server doesn't support
             * this method, it returns `UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.list".
             *
             * This request holds the parameters needed by the aiplatform server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation.
             *
             * @param name The name of the operation's parent resource.
             * @return the request
             */
            public List list(java.lang.String name) throws java.io.IOException {
              List result = new List(name);
              initialize(result);
              return result;
            }

            public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse> {

              private static final String REST_PATH = "v1/{+name}/operations";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+$");

              /**
               * Lists operations that match the specified filter in the request. If the server doesn't support
               * this method, it returns `UNIMPLEMENTED`.
               *
               * Create a request for the method "operations.list".
               *
               * This request holds the parameters needed by the the aiplatform server.  After setting any
               * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
               * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The name of the operation's parent resource.
               * @since 1.13
               */
              protected List(java.lang.String name) {
                super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public List set$Xgafv(java.lang.String $Xgafv) {
                return (List) super.set$Xgafv($Xgafv);
              }

              @Override
              public List setAccessToken(java.lang.String accessToken) {
                return (List) super.setAccessToken(accessToken);
              }

              @Override
              public List setAlt(java.lang.String alt) {
                return (List) super.setAlt(alt);
              }

              @Override
              public List setCallback(java.lang.String callback) {
                return (List) super.setCallback(callback);
              }

              @Override
              public List setFields(java.lang.String fields) {
                return (List) super.setFields(fields);
              }

              @Override
              public List setKey(java.lang.String key) {
                return (List) super.setKey(key);
              }

              @Override
              public List setOauthToken(java.lang.String oauthToken) {
                return (List) super.setOauthToken(oauthToken);
              }

              @Override
              public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (List) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public List setQuotaUser(java.lang.String quotaUser) {
                return (List) super.setQuotaUser(quotaUser);
              }

              @Override
              public List setUploadType(java.lang.String uploadType) {
                return (List) super.setUploadType(uploadType);
              }

              @Override
              public List setUploadProtocol(java.lang.String uploadProtocol) {
                return (List) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the operation's parent resource. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The name of the operation's parent resource.
               */
              public java.lang.String getName() {
                return name;
              }

              /** The name of the operation's parent resource. */
              public List setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+$");
                }
                this.name = name;
                return this;
              }

              /** The standard list filter. */
              @com.google.api.client.util.Key
              private java.lang.String filter;

              /** The standard list filter.
               */
              public java.lang.String getFilter() {
                return filter;
              }

              /** The standard list filter. */
              public List setFilter(java.lang.String filter) {
                this.filter = filter;
                return this;
              }

              /** The standard list page size. */
              @com.google.api.client.util.Key
              private java.lang.Integer pageSize;

              /** The standard list page size.
               */
              public java.lang.Integer getPageSize() {
                return pageSize;
              }

              /** The standard list page size. */
              public List setPageSize(java.lang.Integer pageSize) {
                this.pageSize = pageSize;
                return this;
              }

              /** The standard list page token. */
              @com.google.api.client.util.Key
              private java.lang.String pageToken;

              /** The standard list page token.
               */
              public java.lang.String getPageToken() {
                return pageToken;
              }

              /** The standard list page token. */
              public List setPageToken(java.lang.String pageToken) {
                this.pageToken = pageToken;
                return this;
              }

              @Override
              public List set(String parameterName, Object value) {
                return (List) super.set(parameterName, value);
              }
            }
            /**
             * Waits until the specified long-running operation is done or reaches at most a specified timeout,
             * returning the latest state. If the operation is already done, the latest state is immediately
             * returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC
             * timeout is used. If the server does not support this method, it returns
             * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
             * the latest state before the specified timeout (including immediately), meaning even an immediate
             * response is no guarantee that the operation is done.
             *
             * Create a request for the method "operations.wait".
             *
             * This request holds the parameters needed by the aiplatform server.  After setting any optional
             * parameters, call the {@link Wait#execute()} method to invoke the remote operation.
             *
             * @param name The name of the operation resource to wait on.
             * @return the request
             */
            public Wait wait(java.lang.String name) throws java.io.IOException {
              Wait result = new Wait(name);
              initialize(result);
              return result;
            }

            public class Wait extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

              private static final String REST_PATH = "v1/{+name}:wait";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+/operations/[^/]+$");

              /**
               * Waits until the specified long-running operation is done or reaches at most a specified
               * timeout, returning the latest state. If the operation is already done, the latest state is
               * immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout,
               * the HTTP/RPC timeout is used. If the server does not support this method, it returns
               * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
               * the latest state before the specified timeout (including immediately), meaning even an
               * immediate response is no guarantee that the operation is done.
               *
               * Create a request for the method "operations.wait".
               *
               * This request holds the parameters needed by the the aiplatform server.  After setting any
               * optional parameters, call the {@link Wait#execute()} method to invoke the remote operation. <p>
               * {@link Wait#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The name of the operation resource to wait on.
               * @since 1.13
               */
              protected Wait(java.lang.String name) {
                super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+/operations/[^/]+$");
                }
              }

              @Override
              public Wait set$Xgafv(java.lang.String $Xgafv) {
                return (Wait) super.set$Xgafv($Xgafv);
              }

              @Override
              public Wait setAccessToken(java.lang.String accessToken) {
                return (Wait) super.setAccessToken(accessToken);
              }

              @Override
              public Wait setAlt(java.lang.String alt) {
                return (Wait) super.setAlt(alt);
              }

              @Override
              public Wait setCallback(java.lang.String callback) {
                return (Wait) super.setCallback(callback);
              }

              @Override
              public Wait setFields(java.lang.String fields) {
                return (Wait) super.setFields(fields);
              }

              @Override
              public Wait setKey(java.lang.String key) {
                return (Wait) super.setKey(key);
              }

              @Override
              public Wait setOauthToken(java.lang.String oauthToken) {
                return (Wait) super.setOauthToken(oauthToken);
              }

              @Override
              public Wait setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Wait) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Wait setQuotaUser(java.lang.String quotaUser) {
                return (Wait) super.setQuotaUser(quotaUser);
              }

              @Override
              public Wait setUploadType(java.lang.String uploadType) {
                return (Wait) super.setUploadType(uploadType);
              }

              @Override
              public Wait setUploadProtocol(java.lang.String uploadProtocol) {
                return (Wait) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the operation resource to wait on. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The name of the operation resource to wait on.
               */
              public java.lang.String getName() {
                return name;
              }

              /** The name of the operation resource to wait on. */
              public Wait setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+/operations/[^/]+$");
                }
                this.name = name;
                return this;
              }

              /**
               * The maximum duration to wait before timing out. If left blank, the wait will be at
               * most the time permitted by the underlying HTTP/RPC protocol. If RPC context
               * deadline is also specified, the shorter one will be used.
               */
              @com.google.api.client.util.Key
              private String timeout;

              /** The maximum duration to wait before timing out. If left blank, the wait will be at most the time
             permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the
             shorter one will be used.
               */
              public String getTimeout() {
                return timeout;
              }

              /**
               * The maximum duration to wait before timing out. If left blank, the wait will be at
               * most the time permitted by the underlying HTTP/RPC protocol. If RPC context
               * deadline is also specified, the shorter one will be used.
               */
              public Wait setTimeout(String timeout) {
                this.timeout = timeout;
                return this;
              }

              @Override
              public Wait set(String parameterName, Object value) {
                return (Wait) super.set(parameterName, value);
              }
            }

          }
        }
        /**
         * An accessor for creating requests from the Operations collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Aiplatform aiplatform = new Aiplatform(...);}
         *   {@code Aiplatform.Operations.List request = aiplatform.operations().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Operations operations() {
          return new Operations();
        }

        /**
         * The "operations" collection of methods.
         */
        public class Operations {

          /**
           * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
           * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
           * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
           * methods to check whether the cancellation succeeded or whether the operation completed despite
           * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
           * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
           * `Code.CANCELLED`.
           *
           * Create a request for the method "operations.cancel".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource to be cancelled.
           * @return the request
           */
          public Cancel cancel(java.lang.String name) throws java.io.IOException {
            Cancel result = new Cancel(name);
            initialize(result);
            return result;
          }

          public class Cancel extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

            private static final String REST_PATH = "v1/{+name}:cancel";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/operations/[^/]+$");

            /**
             * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
             * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
             * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
             * methods to check whether the cancellation succeeded or whether the operation completed despite
             * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
             * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
             * `Code.CANCELLED`.
             *
             * Create a request for the method "operations.cancel".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
             * <p> {@link
             * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource to be cancelled.
             * @since 1.13
             */
            protected Cancel(java.lang.String name) {
              super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public Cancel set$Xgafv(java.lang.String $Xgafv) {
              return (Cancel) super.set$Xgafv($Xgafv);
            }

            @Override
            public Cancel setAccessToken(java.lang.String accessToken) {
              return (Cancel) super.setAccessToken(accessToken);
            }

            @Override
            public Cancel setAlt(java.lang.String alt) {
              return (Cancel) super.setAlt(alt);
            }

            @Override
            public Cancel setCallback(java.lang.String callback) {
              return (Cancel) super.setCallback(callback);
            }

            @Override
            public Cancel setFields(java.lang.String fields) {
              return (Cancel) super.setFields(fields);
            }

            @Override
            public Cancel setKey(java.lang.String key) {
              return (Cancel) super.setKey(key);
            }

            @Override
            public Cancel setOauthToken(java.lang.String oauthToken) {
              return (Cancel) super.setOauthToken(oauthToken);
            }

            @Override
            public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Cancel) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Cancel setQuotaUser(java.lang.String quotaUser) {
              return (Cancel) super.setQuotaUser(quotaUser);
            }

            @Override
            public Cancel setUploadType(java.lang.String uploadType) {
              return (Cancel) super.setUploadType(uploadType);
            }

            @Override
            public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
              return (Cancel) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource to be cancelled. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource to be cancelled.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource to be cancelled. */
            public Cancel setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Cancel set(String parameterName, Object value) {
              return (Cancel) super.set(parameterName, value);
            }
          }
          /**
           * Deletes a long-running operation. This method indicates that the client is no longer interested
           * in the operation result. It does not cancel the operation. If the server doesn't support this
           * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.delete".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource to be deleted.
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/operations/[^/]+$");

            /**
             * Deletes a long-running operation. This method indicates that the client is no longer interested
             * in the operation result. It does not cancel the operation. If the server doesn't support this
             * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.delete".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource to be deleted.
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource to be deleted. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource to be deleted.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource to be deleted. */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Gets the latest state of a long-running operation. Clients can use this method to poll the
           * operation result at intervals as recommended by the API service.
           *
           * Create a request for the method "operations.get".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource.
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/operations/[^/]+$");

            /**
             * Gets the latest state of a long-running operation. Clients can use this method to poll the
             * operation result at intervals as recommended by the API service.
             *
             * Create a request for the method "operations.get".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource.
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource. */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Lists operations that match the specified filter in the request. If the server doesn't support
           * this method, it returns `UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.list".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation's parent resource.
           * @return the request
           */
          public List list(java.lang.String name) throws java.io.IOException {
            List result = new List(name);
            initialize(result);
            return result;
          }

          public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse> {

            private static final String REST_PATH = "v1/{+name}/operations";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featurestores/[^/]+$");

            /**
             * Lists operations that match the specified filter in the request. If the server doesn't support
             * this method, it returns `UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.list".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation's parent resource.
             * @since 1.13
             */
            protected List(java.lang.String name) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation's parent resource. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation's parent resource.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation's parent resource. */
            public List setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /** The standard list filter. */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** The standard list filter.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /** The standard list filter. */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /** The standard list page size. */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** The standard list page size.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /** The standard list page size. */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** The standard list page token. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** The standard list page token.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** The standard list page token. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Waits until the specified long-running operation is done or reaches at most a specified timeout,
           * returning the latest state. If the operation is already done, the latest state is immediately
           * returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC
           * timeout is used. If the server does not support this method, it returns
           * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
           * the latest state before the specified timeout (including immediately), meaning even an immediate
           * response is no guarantee that the operation is done.
           *
           * Create a request for the method "operations.wait".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Wait#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource to wait on.
           * @return the request
           */
          public Wait wait(java.lang.String name) throws java.io.IOException {
            Wait result = new Wait(name);
            initialize(result);
            return result;
          }

          public class Wait extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+name}:wait";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/operations/[^/]+$");

            /**
             * Waits until the specified long-running operation is done or reaches at most a specified
             * timeout, returning the latest state. If the operation is already done, the latest state is
             * immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout,
             * the HTTP/RPC timeout is used. If the server does not support this method, it returns
             * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
             * the latest state before the specified timeout (including immediately), meaning even an
             * immediate response is no guarantee that the operation is done.
             *
             * Create a request for the method "operations.wait".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Wait#execute()} method to invoke the remote operation. <p>
             * {@link Wait#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource to wait on.
             * @since 1.13
             */
            protected Wait(java.lang.String name) {
              super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public Wait set$Xgafv(java.lang.String $Xgafv) {
              return (Wait) super.set$Xgafv($Xgafv);
            }

            @Override
            public Wait setAccessToken(java.lang.String accessToken) {
              return (Wait) super.setAccessToken(accessToken);
            }

            @Override
            public Wait setAlt(java.lang.String alt) {
              return (Wait) super.setAlt(alt);
            }

            @Override
            public Wait setCallback(java.lang.String callback) {
              return (Wait) super.setCallback(callback);
            }

            @Override
            public Wait setFields(java.lang.String fields) {
              return (Wait) super.setFields(fields);
            }

            @Override
            public Wait setKey(java.lang.String key) {
              return (Wait) super.setKey(key);
            }

            @Override
            public Wait setOauthToken(java.lang.String oauthToken) {
              return (Wait) super.setOauthToken(oauthToken);
            }

            @Override
            public Wait setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Wait) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Wait setQuotaUser(java.lang.String quotaUser) {
              return (Wait) super.setQuotaUser(quotaUser);
            }

            @Override
            public Wait setUploadType(java.lang.String uploadType) {
              return (Wait) super.setUploadType(uploadType);
            }

            @Override
            public Wait setUploadProtocol(java.lang.String uploadProtocol) {
              return (Wait) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource to wait on. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource to wait on.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource to wait on. */
            public Wait setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * The maximum duration to wait before timing out. If left blank, the wait will be at
             * most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline
             * is also specified, the shorter one will be used.
             */
            @com.google.api.client.util.Key
            private String timeout;

            /** The maximum duration to wait before timing out. If left blank, the wait will be at most the time
           permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the
           shorter one will be used.
             */
            public String getTimeout() {
              return timeout;
            }

            /**
             * The maximum duration to wait before timing out. If left blank, the wait will be at
             * most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline
             * is also specified, the shorter one will be used.
             */
            public Wait setTimeout(String timeout) {
              this.timeout = timeout;
              return this;
            }

            @Override
            public Wait set(String parameterName, Object value) {
              return (Wait) super.set(parameterName, value);
            }
          }

        }
      }
      /**
       * An accessor for creating requests from the HyperparameterTuningJobs collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Aiplatform aiplatform = new Aiplatform(...);}
       *   {@code Aiplatform.HyperparameterTuningJobs.List request = aiplatform.hyperparameterTuningJobs().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public HyperparameterTuningJobs hyperparameterTuningJobs() {
        return new HyperparameterTuningJobs();
      }

      /**
       * The "hyperparameterTuningJobs" collection of methods.
       */
      public class HyperparameterTuningJobs {

        /**
         * Cancels a HyperparameterTuningJob. Starts asynchronous cancellation on the
         * HyperparameterTuningJob. The server makes a best effort to cancel the job, but success is not
         * guaranteed. Clients can use JobService.GetHyperparameterTuningJob or other methods to check
         * whether the cancellation succeeded or whether the job completed despite cancellation. On
         * successful cancellation, the HyperparameterTuningJob is not deleted; instead it becomes a job
         * with a HyperparameterTuningJob.error value with a google.rpc.Status.code of 1, corresponding to
         * `Code.CANCELLED`, and HyperparameterTuningJob.state is set to `CANCELLED`.
         *
         * Create a request for the method "hyperparameterTuningJobs.cancel".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the HyperparameterTuningJob to cancel. Format:
         *        `projects/{project}/locations/{location}/hyperparameterTuningJobs/{hyperparameter_tuning_j
         *        ob}`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CancelHyperparameterTuningJobRequest}
         * @return the request
         */
        public Cancel cancel(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CancelHyperparameterTuningJobRequest content) throws java.io.IOException {
          Cancel result = new Cancel(name, content);
          initialize(result);
          return result;
        }

        public class Cancel extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

          private static final String REST_PATH = "v1/{+name}:cancel";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/hyperparameterTuningJobs/[^/]+$");

          /**
           * Cancels a HyperparameterTuningJob. Starts asynchronous cancellation on the
           * HyperparameterTuningJob. The server makes a best effort to cancel the job, but success is not
           * guaranteed. Clients can use JobService.GetHyperparameterTuningJob or other methods to check
           * whether the cancellation succeeded or whether the job completed despite cancellation. On
           * successful cancellation, the HyperparameterTuningJob is not deleted; instead it becomes a job
           * with a HyperparameterTuningJob.error value with a google.rpc.Status.code of 1, corresponding to
           * `Code.CANCELLED`, and HyperparameterTuningJob.state is set to `CANCELLED`.
           *
           * Create a request for the method "hyperparameterTuningJobs.cancel".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
           * <p> {@link
           * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the HyperparameterTuningJob to cancel. Format:
         *        `projects/{project}/locations/{location}/hyperparameterTuningJobs/{hyperparameter_tuning_j
         *        ob}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CancelHyperparameterTuningJobRequest}
           * @since 1.13
           */
          protected Cancel(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CancelHyperparameterTuningJobRequest content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/hyperparameterTuningJobs/[^/]+$");
            }
          }

          @Override
          public Cancel set$Xgafv(java.lang.String $Xgafv) {
            return (Cancel) super.set$Xgafv($Xgafv);
          }

          @Override
          public Cancel setAccessToken(java.lang.String accessToken) {
            return (Cancel) super.setAccessToken(accessToken);
          }

          @Override
          public Cancel setAlt(java.lang.String alt) {
            return (Cancel) super.setAlt(alt);
          }

          @Override
          public Cancel setCallback(java.lang.String callback) {
            return (Cancel) super.setCallback(callback);
          }

          @Override
          public Cancel setFields(java.lang.String fields) {
            return (Cancel) super.setFields(fields);
          }

          @Override
          public Cancel setKey(java.lang.String key) {
            return (Cancel) super.setKey(key);
          }

          @Override
          public Cancel setOauthToken(java.lang.String oauthToken) {
            return (Cancel) super.setOauthToken(oauthToken);
          }

          @Override
          public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Cancel) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Cancel setQuotaUser(java.lang.String quotaUser) {
            return (Cancel) super.setQuotaUser(quotaUser);
          }

          @Override
          public Cancel setUploadType(java.lang.String uploadType) {
            return (Cancel) super.setUploadType(uploadType);
          }

          @Override
          public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
            return (Cancel) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the HyperparameterTuningJob to cancel. Format: `projects/{project
           * }/locations/{location}/hyperparameterTuningJobs/{hyperparameter_tuning_job}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the HyperparameterTuningJob to cancel. Format:
         `projects/{project}/locations/{location}/hyperparameterTuningJobs/{hyperparameter_tuning_job}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the HyperparameterTuningJob to cancel. Format: `projects/{project
           * }/locations/{location}/hyperparameterTuningJobs/{hyperparameter_tuning_job}`
           */
          public Cancel setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/hyperparameterTuningJobs/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Cancel set(String parameterName, Object value) {
            return (Cancel) super.set(parameterName, value);
          }
        }
        /**
         * Creates a HyperparameterTuningJob
         *
         * Create a request for the method "hyperparameterTuningJobs.create".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The resource name of the Location to create the HyperparameterTuningJob in. Format:
         *        `projects/{project}/locations/{location}`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1HyperparameterTuningJob}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1HyperparameterTuningJob content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1HyperparameterTuningJob> {

          private static final String REST_PATH = "v1/{+parent}/hyperparameterTuningJobs";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Creates a HyperparameterTuningJob
           *
           * Create a request for the method "hyperparameterTuningJobs.create".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The resource name of the Location to create the HyperparameterTuningJob in. Format:
         *        `projects/{project}/locations/{location}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1HyperparameterTuningJob}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1HyperparameterTuningJob content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1HyperparameterTuningJob.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the Location to create the HyperparameterTuningJob in.
           * Format: `projects/{project}/locations/{location}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The resource name of the Location to create the HyperparameterTuningJob in. Format:
         `projects/{project}/locations/{location}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The resource name of the Location to create the HyperparameterTuningJob in.
           * Format: `projects/{project}/locations/{location}`
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a HyperparameterTuningJob.
         *
         * Create a request for the method "hyperparameterTuningJobs.delete".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the HyperparameterTuningJob resource to be deleted. Format:
         *        `projects/{project}/locations/{location}/hyperparameterTuningJobs/{hyperparameter_tuning_j
         *        ob}`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/hyperparameterTuningJobs/[^/]+$");

          /**
           * Deletes a HyperparameterTuningJob.
           *
           * Create a request for the method "hyperparameterTuningJobs.delete".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the HyperparameterTuningJob resource to be deleted. Format:
         *        `projects/{project}/locations/{location}/hyperparameterTuningJobs/{hyperparameter_tuning_j
         *        ob}`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/hyperparameterTuningJobs/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the HyperparameterTuningJob resource to be deleted. Format: `proj
           * ects/{project}/locations/{location}/hyperparameterTuningJobs/{hyperparameter_tuning_job
           * }`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the HyperparameterTuningJob resource to be deleted. Format:
         `projects/{project}/locations/{location}/hyperparameterTuningJobs/{hyperparameter_tuning_job}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the HyperparameterTuningJob resource to be deleted. Format: `proj
           * ects/{project}/locations/{location}/hyperparameterTuningJobs/{hyperparameter_tuning_job
           * }`
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/hyperparameterTuningJobs/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets a HyperparameterTuningJob
         *
         * Create a request for the method "hyperparameterTuningJobs.get".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the HyperparameterTuningJob resource. Format:
         *        `projects/{project}/locations/{location}/hyperparameterTuningJobs/{hyperparameter_tuning_j
         *        ob}`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1HyperparameterTuningJob> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/hyperparameterTuningJobs/[^/]+$");

          /**
           * Gets a HyperparameterTuningJob
           *
           * Create a request for the method "hyperparameterTuningJobs.get".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the HyperparameterTuningJob resource. Format:
         *        `projects/{project}/locations/{location}/hyperparameterTuningJobs/{hyperparameter_tuning_j
         *        ob}`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1HyperparameterTuningJob.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/hyperparameterTuningJobs/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the HyperparameterTuningJob resource. Format: `projects/{project}
           * /locations/{location}/hyperparameterTuningJobs/{hyperparameter_tuning_job}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the HyperparameterTuningJob resource. Format:
         `projects/{project}/locations/{location}/hyperparameterTuningJobs/{hyperparameter_tuning_job}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the HyperparameterTuningJob resource. Format: `projects/{project}
           * /locations/{location}/hyperparameterTuningJobs/{hyperparameter_tuning_job}`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/hyperparameterTuningJobs/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists HyperparameterTuningJobs in a Location.
         *
         * Create a request for the method "hyperparameterTuningJobs.list".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The resource name of the Location to list the HyperparameterTuningJobs from. Format:
         *        `projects/{project}/locations/{location}`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListHyperparameterTuningJobsResponse> {

          private static final String REST_PATH = "v1/{+parent}/hyperparameterTuningJobs";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists HyperparameterTuningJobs in a Location.
           *
           * Create a request for the method "hyperparameterTuningJobs.list".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The resource name of the Location to list the HyperparameterTuningJobs from. Format:
         *        `projects/{project}/locations/{location}`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListHyperparameterTuningJobsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the Location to list the HyperparameterTuningJobs from.
           * Format: `projects/{project}/locations/{location}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The resource name of the Location to list the HyperparameterTuningJobs from. Format:
         `projects/{project}/locations/{location}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The resource name of the Location to list the HyperparameterTuningJobs from.
           * Format: `projects/{project}/locations/{location}`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * The standard list filter. Supported fields: * `display_name` supports `=`, `!=`
           * comparisons, and `:` wildcard. * `state` supports `=`, `!=` comparisons. *
           * `create_time` supports `=`, `!=`,`<`, `<=`,`>`, `>=` comparisons. `create_time` must be
           * in RFC 3339 format. * `labels` supports general map functions that is:
           * `labels.key=value` - key:value equality `labels.key:* - key existence Some examples of
           * using the filter are: * `state="JOB_STATE_SUCCEEDED" AND display_name:"my_job_*"` *
           * `state!="JOB_STATE_FAILED" OR display_name="my_job"` * `NOT display_name="my_job"` *
           * `create_time>"2021-05-18T00:00:00Z"` * `labels.keyA=valueA` * `labels.keyB:*`
           */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** The standard list filter. Supported fields: * `display_name` supports `=`, `!=` comparisons, and
         `:` wildcard. * `state` supports `=`, `!=` comparisons. * `create_time` supports `=`, `!=`,`<`,
         `<=`,`>`, `>=` comparisons. `create_time` must be in RFC 3339 format. * `labels` supports general
         map functions that is: `labels.key=value` - key:value equality `labels.key:* - key existence Some
         examples of using the filter are: * `state="JOB_STATE_SUCCEEDED" AND display_name:"my_job_*"` *
         `state!="JOB_STATE_FAILED" OR display_name="my_job"` * `NOT display_name="my_job"` *
         `create_time>"2021-05-18T00:00:00Z"` * `labels.keyA=valueA` * `labels.keyB:*`
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /**
           * The standard list filter. Supported fields: * `display_name` supports `=`, `!=`
           * comparisons, and `:` wildcard. * `state` supports `=`, `!=` comparisons. *
           * `create_time` supports `=`, `!=`,`<`, `<=`,`>`, `>=` comparisons. `create_time` must be
           * in RFC 3339 format. * `labels` supports general map functions that is:
           * `labels.key=value` - key:value equality `labels.key:* - key existence Some examples of
           * using the filter are: * `state="JOB_STATE_SUCCEEDED" AND display_name:"my_job_*"` *
           * `state!="JOB_STATE_FAILED" OR display_name="my_job"` * `NOT display_name="my_job"` *
           * `create_time>"2021-05-18T00:00:00Z"` * `labels.keyA=valueA` * `labels.keyB:*`
           */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /** The standard list page size. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The standard list page size.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** The standard list page size. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * The standard list page token. Typically obtained via
           * ListHyperparameterTuningJobsResponse.next_page_token of the previous
           * JobService.ListHyperparameterTuningJobs call.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The standard list page token. Typically obtained via
         ListHyperparameterTuningJobsResponse.next_page_token of the previous
         JobService.ListHyperparameterTuningJobs call.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * The standard list page token. Typically obtained via
           * ListHyperparameterTuningJobsResponse.next_page_token of the previous
           * JobService.ListHyperparameterTuningJobs call.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          /** Mask specifying which fields to read. */
          @com.google.api.client.util.Key
          private String readMask;

          /** Mask specifying which fields to read.
           */
          public String getReadMask() {
            return readMask;
          }

          /** Mask specifying which fields to read. */
          public List setReadMask(String readMask) {
            this.readMask = readMask;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the Operations collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Aiplatform aiplatform = new Aiplatform(...);}
         *   {@code Aiplatform.Operations.List request = aiplatform.operations().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Operations operations() {
          return new Operations();
        }

        /**
         * The "operations" collection of methods.
         */
        public class Operations {

          /**
           * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
           * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
           * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
           * methods to check whether the cancellation succeeded or whether the operation completed despite
           * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
           * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
           * `Code.CANCELLED`.
           *
           * Create a request for the method "operations.cancel".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource to be cancelled.
           * @return the request
           */
          public Cancel cancel(java.lang.String name) throws java.io.IOException {
            Cancel result = new Cancel(name);
            initialize(result);
            return result;
          }

          public class Cancel extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

            private static final String REST_PATH = "v1/{+name}:cancel";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/hyperparameterTuningJobs/[^/]+/operations/[^/]+$");

            /**
             * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
             * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
             * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
             * methods to check whether the cancellation succeeded or whether the operation completed despite
             * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
             * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
             * `Code.CANCELLED`.
             *
             * Create a request for the method "operations.cancel".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
             * <p> {@link
             * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource to be cancelled.
             * @since 1.13
             */
            protected Cancel(java.lang.String name) {
              super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/hyperparameterTuningJobs/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public Cancel set$Xgafv(java.lang.String $Xgafv) {
              return (Cancel) super.set$Xgafv($Xgafv);
            }

            @Override
            public Cancel setAccessToken(java.lang.String accessToken) {
              return (Cancel) super.setAccessToken(accessToken);
            }

            @Override
            public Cancel setAlt(java.lang.String alt) {
              return (Cancel) super.setAlt(alt);
            }

            @Override
            public Cancel setCallback(java.lang.String callback) {
              return (Cancel) super.setCallback(callback);
            }

            @Override
            public Cancel setFields(java.lang.String fields) {
              return (Cancel) super.setFields(fields);
            }

            @Override
            public Cancel setKey(java.lang.String key) {
              return (Cancel) super.setKey(key);
            }

            @Override
            public Cancel setOauthToken(java.lang.String oauthToken) {
              return (Cancel) super.setOauthToken(oauthToken);
            }

            @Override
            public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Cancel) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Cancel setQuotaUser(java.lang.String quotaUser) {
              return (Cancel) super.setQuotaUser(quotaUser);
            }

            @Override
            public Cancel setUploadType(java.lang.String uploadType) {
              return (Cancel) super.setUploadType(uploadType);
            }

            @Override
            public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
              return (Cancel) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource to be cancelled. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource to be cancelled.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource to be cancelled. */
            public Cancel setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/hyperparameterTuningJobs/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Cancel set(String parameterName, Object value) {
              return (Cancel) super.set(parameterName, value);
            }
          }
          /**
           * Deletes a long-running operation. This method indicates that the client is no longer interested
           * in the operation result. It does not cancel the operation. If the server doesn't support this
           * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.delete".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource to be deleted.
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/hyperparameterTuningJobs/[^/]+/operations/[^/]+$");

            /**
             * Deletes a long-running operation. This method indicates that the client is no longer interested
             * in the operation result. It does not cancel the operation. If the server doesn't support this
             * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.delete".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource to be deleted.
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/hyperparameterTuningJobs/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource to be deleted. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource to be deleted.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource to be deleted. */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/hyperparameterTuningJobs/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Gets the latest state of a long-running operation. Clients can use this method to poll the
           * operation result at intervals as recommended by the API service.
           *
           * Create a request for the method "operations.get".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource.
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/hyperparameterTuningJobs/[^/]+/operations/[^/]+$");

            /**
             * Gets the latest state of a long-running operation. Clients can use this method to poll the
             * operation result at intervals as recommended by the API service.
             *
             * Create a request for the method "operations.get".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource.
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/hyperparameterTuningJobs/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource. */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/hyperparameterTuningJobs/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Lists operations that match the specified filter in the request. If the server doesn't support
           * this method, it returns `UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.list".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation's parent resource.
           * @return the request
           */
          public List list(java.lang.String name) throws java.io.IOException {
            List result = new List(name);
            initialize(result);
            return result;
          }

          public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse> {

            private static final String REST_PATH = "v1/{+name}/operations";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/hyperparameterTuningJobs/[^/]+$");

            /**
             * Lists operations that match the specified filter in the request. If the server doesn't support
             * this method, it returns `UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.list".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation's parent resource.
             * @since 1.13
             */
            protected List(java.lang.String name) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/hyperparameterTuningJobs/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation's parent resource. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation's parent resource.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation's parent resource. */
            public List setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/hyperparameterTuningJobs/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /** The standard list filter. */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** The standard list filter.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /** The standard list filter. */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /** The standard list page size. */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** The standard list page size.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /** The standard list page size. */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** The standard list page token. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** The standard list page token.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** The standard list page token. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Waits until the specified long-running operation is done or reaches at most a specified timeout,
           * returning the latest state. If the operation is already done, the latest state is immediately
           * returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC
           * timeout is used. If the server does not support this method, it returns
           * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
           * the latest state before the specified timeout (including immediately), meaning even an immediate
           * response is no guarantee that the operation is done.
           *
           * Create a request for the method "operations.wait".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Wait#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource to wait on.
           * @return the request
           */
          public Wait wait(java.lang.String name) throws java.io.IOException {
            Wait result = new Wait(name);
            initialize(result);
            return result;
          }

          public class Wait extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+name}:wait";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/hyperparameterTuningJobs/[^/]+/operations/[^/]+$");

            /**
             * Waits until the specified long-running operation is done or reaches at most a specified
             * timeout, returning the latest state. If the operation is already done, the latest state is
             * immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout,
             * the HTTP/RPC timeout is used. If the server does not support this method, it returns
             * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
             * the latest state before the specified timeout (including immediately), meaning even an
             * immediate response is no guarantee that the operation is done.
             *
             * Create a request for the method "operations.wait".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Wait#execute()} method to invoke the remote operation. <p>
             * {@link Wait#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource to wait on.
             * @since 1.13
             */
            protected Wait(java.lang.String name) {
              super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/hyperparameterTuningJobs/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public Wait set$Xgafv(java.lang.String $Xgafv) {
              return (Wait) super.set$Xgafv($Xgafv);
            }

            @Override
            public Wait setAccessToken(java.lang.String accessToken) {
              return (Wait) super.setAccessToken(accessToken);
            }

            @Override
            public Wait setAlt(java.lang.String alt) {
              return (Wait) super.setAlt(alt);
            }

            @Override
            public Wait setCallback(java.lang.String callback) {
              return (Wait) super.setCallback(callback);
            }

            @Override
            public Wait setFields(java.lang.String fields) {
              return (Wait) super.setFields(fields);
            }

            @Override
            public Wait setKey(java.lang.String key) {
              return (Wait) super.setKey(key);
            }

            @Override
            public Wait setOauthToken(java.lang.String oauthToken) {
              return (Wait) super.setOauthToken(oauthToken);
            }

            @Override
            public Wait setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Wait) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Wait setQuotaUser(java.lang.String quotaUser) {
              return (Wait) super.setQuotaUser(quotaUser);
            }

            @Override
            public Wait setUploadType(java.lang.String uploadType) {
              return (Wait) super.setUploadType(uploadType);
            }

            @Override
            public Wait setUploadProtocol(java.lang.String uploadProtocol) {
              return (Wait) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource to wait on. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource to wait on.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource to wait on. */
            public Wait setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/hyperparameterTuningJobs/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * The maximum duration to wait before timing out. If left blank, the wait will be at
             * most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline
             * is also specified, the shorter one will be used.
             */
            @com.google.api.client.util.Key
            private String timeout;

            /** The maximum duration to wait before timing out. If left blank, the wait will be at most the time
           permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the
           shorter one will be used.
             */
            public String getTimeout() {
              return timeout;
            }

            /**
             * The maximum duration to wait before timing out. If left blank, the wait will be at
             * most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline
             * is also specified, the shorter one will be used.
             */
            public Wait setTimeout(String timeout) {
              this.timeout = timeout;
              return this;
            }

            @Override
            public Wait set(String parameterName, Object value) {
              return (Wait) super.set(parameterName, value);
            }
          }

        }
      }
      /**
       * An accessor for creating requests from the IndexEndpoints collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Aiplatform aiplatform = new Aiplatform(...);}
       *   {@code Aiplatform.IndexEndpoints.List request = aiplatform.indexEndpoints().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public IndexEndpoints indexEndpoints() {
        return new IndexEndpoints();
      }

      /**
       * The "indexEndpoints" collection of methods.
       */
      public class IndexEndpoints {

        /**
         * Creates an IndexEndpoint.
         *
         * Create a request for the method "indexEndpoints.create".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The resource name of the Location to create the IndexEndpoint in. Format:
         *        `projects/{project}/locations/{location}`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1IndexEndpoint}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1IndexEndpoint content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+parent}/indexEndpoints";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Creates an IndexEndpoint.
           *
           * Create a request for the method "indexEndpoints.create".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The resource name of the Location to create the IndexEndpoint in. Format:
         *        `projects/{project}/locations/{location}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1IndexEndpoint}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1IndexEndpoint content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the Location to create the IndexEndpoint in. Format:
           * `projects/{project}/locations/{location}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The resource name of the Location to create the IndexEndpoint in. Format:
         `projects/{project}/locations/{location}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The resource name of the Location to create the IndexEndpoint in. Format:
           * `projects/{project}/locations/{location}`
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes an IndexEndpoint.
         *
         * Create a request for the method "indexEndpoints.delete".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the IndexEndpoint resource to be deleted. Format:
         *        `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/indexEndpoints/[^/]+$");

          /**
           * Deletes an IndexEndpoint.
           *
           * Create a request for the method "indexEndpoints.delete".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the IndexEndpoint resource to be deleted. Format:
         *        `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/indexEndpoints/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the IndexEndpoint resource to be deleted. Format:
           * `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the IndexEndpoint resource to be deleted. Format:
         `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the IndexEndpoint resource to be deleted. Format:
           * `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/indexEndpoints/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Deploys an Index into this IndexEndpoint, creating a DeployedIndex within it. Only non-empty
         * Indexes can be deployed.
         *
         * Create a request for the method "indexEndpoints.deployIndex".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link DeployIndex#execute()} method to invoke the remote operation.
         *
         * @param indexEndpoint Required. The name of the IndexEndpoint resource into which to deploy an Index. Format:
         *        `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1DeployIndexRequest}
         * @return the request
         */
        public DeployIndex deployIndex(java.lang.String indexEndpoint, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1DeployIndexRequest content) throws java.io.IOException {
          DeployIndex result = new DeployIndex(indexEndpoint, content);
          initialize(result);
          return result;
        }

        public class DeployIndex extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+indexEndpoint}:deployIndex";

          private final java.util.regex.Pattern INDEX_ENDPOINT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/indexEndpoints/[^/]+$");

          /**
           * Deploys an Index into this IndexEndpoint, creating a DeployedIndex within it. Only non-empty
           * Indexes can be deployed.
           *
           * Create a request for the method "indexEndpoints.deployIndex".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link DeployIndex#execute()} method to invoke the remote
           * operation. <p> {@link
           * DeployIndex#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param indexEndpoint Required. The name of the IndexEndpoint resource into which to deploy an Index. Format:
         *        `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1DeployIndexRequest}
           * @since 1.13
           */
          protected DeployIndex(java.lang.String indexEndpoint, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1DeployIndexRequest content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
            this.indexEndpoint = com.google.api.client.util.Preconditions.checkNotNull(indexEndpoint, "Required parameter indexEndpoint must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(INDEX_ENDPOINT_PATTERN.matcher(indexEndpoint).matches(),
                  "Parameter indexEndpoint must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/indexEndpoints/[^/]+$");
            }
          }

          @Override
          public DeployIndex set$Xgafv(java.lang.String $Xgafv) {
            return (DeployIndex) super.set$Xgafv($Xgafv);
          }

          @Override
          public DeployIndex setAccessToken(java.lang.String accessToken) {
            return (DeployIndex) super.setAccessToken(accessToken);
          }

          @Override
          public DeployIndex setAlt(java.lang.String alt) {
            return (DeployIndex) super.setAlt(alt);
          }

          @Override
          public DeployIndex setCallback(java.lang.String callback) {
            return (DeployIndex) super.setCallback(callback);
          }

          @Override
          public DeployIndex setFields(java.lang.String fields) {
            return (DeployIndex) super.setFields(fields);
          }

          @Override
          public DeployIndex setKey(java.lang.String key) {
            return (DeployIndex) super.setKey(key);
          }

          @Override
          public DeployIndex setOauthToken(java.lang.String oauthToken) {
            return (DeployIndex) super.setOauthToken(oauthToken);
          }

          @Override
          public DeployIndex setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (DeployIndex) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public DeployIndex setQuotaUser(java.lang.String quotaUser) {
            return (DeployIndex) super.setQuotaUser(quotaUser);
          }

          @Override
          public DeployIndex setUploadType(java.lang.String uploadType) {
            return (DeployIndex) super.setUploadType(uploadType);
          }

          @Override
          public DeployIndex setUploadProtocol(java.lang.String uploadProtocol) {
            return (DeployIndex) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the IndexEndpoint resource into which to deploy an Index. Format:
           * `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`
           */
          @com.google.api.client.util.Key
          private java.lang.String indexEndpoint;

          /** Required. The name of the IndexEndpoint resource into which to deploy an Index. Format:
         `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`
           */
          public java.lang.String getIndexEndpoint() {
            return indexEndpoint;
          }

          /**
           * Required. The name of the IndexEndpoint resource into which to deploy an Index. Format:
           * `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`
           */
          public DeployIndex setIndexEndpoint(java.lang.String indexEndpoint) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(INDEX_ENDPOINT_PATTERN.matcher(indexEndpoint).matches(),
                  "Parameter indexEndpoint must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/indexEndpoints/[^/]+$");
            }
            this.indexEndpoint = indexEndpoint;
            return this;
          }

          @Override
          public DeployIndex set(String parameterName, Object value) {
            return (DeployIndex) super.set(parameterName, value);
          }
        }
        /**
         * Finds the nearest neighbors of each vector within the request.
         *
         * Create a request for the method "indexEndpoints.findNeighbors".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link FindNeighbors#execute()} method to invoke the remote operation.
         *
         * @param indexEndpoint Required. The name of the index endpoint. Format:
         *        `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1FindNeighborsRequest}
         * @return the request
         */
        public FindNeighbors findNeighbors(java.lang.String indexEndpoint, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1FindNeighborsRequest content) throws java.io.IOException {
          FindNeighbors result = new FindNeighbors(indexEndpoint, content);
          initialize(result);
          return result;
        }

        public class FindNeighbors extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1FindNeighborsResponse> {

          private static final String REST_PATH = "v1/{+indexEndpoint}:findNeighbors";

          private final java.util.regex.Pattern INDEX_ENDPOINT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/indexEndpoints/[^/]+$");

          /**
           * Finds the nearest neighbors of each vector within the request.
           *
           * Create a request for the method "indexEndpoints.findNeighbors".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link FindNeighbors#execute()} method to invoke the remote
           * operation. <p> {@link FindNeighbors#initialize(com.google.api.client.googleapis.services.Abstra
           * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
           * the constructor. </p>
           *
           * @param indexEndpoint Required. The name of the index endpoint. Format:
         *        `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1FindNeighborsRequest}
           * @since 1.13
           */
          protected FindNeighbors(java.lang.String indexEndpoint, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1FindNeighborsRequest content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1FindNeighborsResponse.class);
            this.indexEndpoint = com.google.api.client.util.Preconditions.checkNotNull(indexEndpoint, "Required parameter indexEndpoint must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(INDEX_ENDPOINT_PATTERN.matcher(indexEndpoint).matches(),
                  "Parameter indexEndpoint must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/indexEndpoints/[^/]+$");
            }
          }

          @Override
          public FindNeighbors set$Xgafv(java.lang.String $Xgafv) {
            return (FindNeighbors) super.set$Xgafv($Xgafv);
          }

          @Override
          public FindNeighbors setAccessToken(java.lang.String accessToken) {
            return (FindNeighbors) super.setAccessToken(accessToken);
          }

          @Override
          public FindNeighbors setAlt(java.lang.String alt) {
            return (FindNeighbors) super.setAlt(alt);
          }

          @Override
          public FindNeighbors setCallback(java.lang.String callback) {
            return (FindNeighbors) super.setCallback(callback);
          }

          @Override
          public FindNeighbors setFields(java.lang.String fields) {
            return (FindNeighbors) super.setFields(fields);
          }

          @Override
          public FindNeighbors setKey(java.lang.String key) {
            return (FindNeighbors) super.setKey(key);
          }

          @Override
          public FindNeighbors setOauthToken(java.lang.String oauthToken) {
            return (FindNeighbors) super.setOauthToken(oauthToken);
          }

          @Override
          public FindNeighbors setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (FindNeighbors) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public FindNeighbors setQuotaUser(java.lang.String quotaUser) {
            return (FindNeighbors) super.setQuotaUser(quotaUser);
          }

          @Override
          public FindNeighbors setUploadType(java.lang.String uploadType) {
            return (FindNeighbors) super.setUploadType(uploadType);
          }

          @Override
          public FindNeighbors setUploadProtocol(java.lang.String uploadProtocol) {
            return (FindNeighbors) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the index endpoint. Format:
           * `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`
           */
          @com.google.api.client.util.Key
          private java.lang.String indexEndpoint;

          /** Required. The name of the index endpoint. Format:
         `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`
           */
          public java.lang.String getIndexEndpoint() {
            return indexEndpoint;
          }

          /**
           * Required. The name of the index endpoint. Format:
           * `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`
           */
          public FindNeighbors setIndexEndpoint(java.lang.String indexEndpoint) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(INDEX_ENDPOINT_PATTERN.matcher(indexEndpoint).matches(),
                  "Parameter indexEndpoint must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/indexEndpoints/[^/]+$");
            }
            this.indexEndpoint = indexEndpoint;
            return this;
          }

          @Override
          public FindNeighbors set(String parameterName, Object value) {
            return (FindNeighbors) super.set(parameterName, value);
          }
        }
        /**
         * Gets an IndexEndpoint.
         *
         * Create a request for the method "indexEndpoints.get".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the IndexEndpoint resource. Format:
         *        `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1IndexEndpoint> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/indexEndpoints/[^/]+$");

          /**
           * Gets an IndexEndpoint.
           *
           * Create a request for the method "indexEndpoints.get".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the IndexEndpoint resource. Format:
         *        `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1IndexEndpoint.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/indexEndpoints/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the IndexEndpoint resource. Format:
           * `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the IndexEndpoint resource. Format:
         `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the IndexEndpoint resource. Format:
           * `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/indexEndpoints/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists IndexEndpoints in a Location.
         *
         * Create a request for the method "indexEndpoints.list".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The resource name of the Location from which to list the IndexEndpoints. Format:
         *        `projects/{project}/locations/{location}`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListIndexEndpointsResponse> {

          private static final String REST_PATH = "v1/{+parent}/indexEndpoints";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists IndexEndpoints in a Location.
           *
           * Create a request for the method "indexEndpoints.list".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The resource name of the Location from which to list the IndexEndpoints. Format:
         *        `projects/{project}/locations/{location}`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListIndexEndpointsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the Location from which to list the IndexEndpoints.
           * Format: `projects/{project}/locations/{location}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The resource name of the Location from which to list the IndexEndpoints. Format:
         `projects/{project}/locations/{location}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The resource name of the Location from which to list the IndexEndpoints.
           * Format: `projects/{project}/locations/{location}`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Optional. An expression for filtering the results of the request. For field names both
           * snake_case and camelCase are supported. * `index_endpoint` supports = and !=.
           * `index_endpoint` represents the IndexEndpoint ID, ie. the last segment of the
           * IndexEndpoint's resourcename. * `display_name` supports =, != and regex() (uses
           * [re2](https://github.com/google/re2/wiki/Syntax) syntax) * `labels` supports general
           * map functions that is: `labels.key=value` - key:value equality `labels.key:* or
           * labels:key - key existence A key including a space must be quoted. `labels."a key"`.
           * Some examples: * `index_endpoint="1"` * `display_name="myDisplayName"` *
           * `regex(display_name, "^A") -> The display name starts with an A. *
           * `labels.myKey="myValue"`
           */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** Optional. An expression for filtering the results of the request. For field names both snake_case
         and camelCase are supported. * `index_endpoint` supports = and !=. `index_endpoint` represents the
         IndexEndpoint ID, ie. the last segment of the IndexEndpoint's resourcename. * `display_name`
         supports =, != and regex() (uses [re2](https://github.com/google/re2/wiki/Syntax) syntax) *
         `labels` supports general map functions that is: `labels.key=value` - key:value equality
         `labels.key:* or labels:key - key existence A key including a space must be quoted. `labels."a
         key"`. Some examples: * `index_endpoint="1"` * `display_name="myDisplayName"` *
         `regex(display_name, "^A") -> The display name starts with an A. * `labels.myKey="myValue"`
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /**
           * Optional. An expression for filtering the results of the request. For field names both
           * snake_case and camelCase are supported. * `index_endpoint` supports = and !=.
           * `index_endpoint` represents the IndexEndpoint ID, ie. the last segment of the
           * IndexEndpoint's resourcename. * `display_name` supports =, != and regex() (uses
           * [re2](https://github.com/google/re2/wiki/Syntax) syntax) * `labels` supports general
           * map functions that is: `labels.key=value` - key:value equality `labels.key:* or
           * labels:key - key existence A key including a space must be quoted. `labels."a key"`.
           * Some examples: * `index_endpoint="1"` * `display_name="myDisplayName"` *
           * `regex(display_name, "^A") -> The display name starts with an A. *
           * `labels.myKey="myValue"`
           */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /** Optional. The standard list page size. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Optional. The standard list page size.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** Optional. The standard list page size. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * Optional. The standard list page token. Typically obtained via
           * ListIndexEndpointsResponse.next_page_token of the previous
           * IndexEndpointService.ListIndexEndpoints call.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Optional. The standard list page token. Typically obtained via
         ListIndexEndpointsResponse.next_page_token of the previous IndexEndpointService.ListIndexEndpoints
         call.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * Optional. The standard list page token. Typically obtained via
           * ListIndexEndpointsResponse.next_page_token of the previous
           * IndexEndpointService.ListIndexEndpoints call.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          /** Optional. Mask specifying which fields to read. */
          @com.google.api.client.util.Key
          private String readMask;

          /** Optional. Mask specifying which fields to read.
           */
          public String getReadMask() {
            return readMask;
          }

          /** Optional. Mask specifying which fields to read. */
          public List setReadMask(String readMask) {
            this.readMask = readMask;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Update an existing DeployedIndex under an IndexEndpoint.
         *
         * Create a request for the method "indexEndpoints.mutateDeployedIndex".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link MutateDeployedIndex#execute()} method to invoke the remote operation.
         *
         * @param indexEndpoint Required. The name of the IndexEndpoint resource into which to deploy an Index. Format:
         *        `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1DeployedIndex}
         * @return the request
         */
        public MutateDeployedIndex mutateDeployedIndex(java.lang.String indexEndpoint, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1DeployedIndex content) throws java.io.IOException {
          MutateDeployedIndex result = new MutateDeployedIndex(indexEndpoint, content);
          initialize(result);
          return result;
        }

        public class MutateDeployedIndex extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+indexEndpoint}:mutateDeployedIndex";

          private final java.util.regex.Pattern INDEX_ENDPOINT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/indexEndpoints/[^/]+$");

          /**
           * Update an existing DeployedIndex under an IndexEndpoint.
           *
           * Create a request for the method "indexEndpoints.mutateDeployedIndex".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link MutateDeployedIndex#execute()} method to invoke the remote
           * operation. <p> {@link MutateDeployedIndex#initialize(com.google.api.client.googleapis.services.
           * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param indexEndpoint Required. The name of the IndexEndpoint resource into which to deploy an Index. Format:
         *        `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1DeployedIndex}
           * @since 1.13
           */
          protected MutateDeployedIndex(java.lang.String indexEndpoint, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1DeployedIndex content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
            this.indexEndpoint = com.google.api.client.util.Preconditions.checkNotNull(indexEndpoint, "Required parameter indexEndpoint must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(INDEX_ENDPOINT_PATTERN.matcher(indexEndpoint).matches(),
                  "Parameter indexEndpoint must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/indexEndpoints/[^/]+$");
            }
          }

          @Override
          public MutateDeployedIndex set$Xgafv(java.lang.String $Xgafv) {
            return (MutateDeployedIndex) super.set$Xgafv($Xgafv);
          }

          @Override
          public MutateDeployedIndex setAccessToken(java.lang.String accessToken) {
            return (MutateDeployedIndex) super.setAccessToken(accessToken);
          }

          @Override
          public MutateDeployedIndex setAlt(java.lang.String alt) {
            return (MutateDeployedIndex) super.setAlt(alt);
          }

          @Override
          public MutateDeployedIndex setCallback(java.lang.String callback) {
            return (MutateDeployedIndex) super.setCallback(callback);
          }

          @Override
          public MutateDeployedIndex setFields(java.lang.String fields) {
            return (MutateDeployedIndex) super.setFields(fields);
          }

          @Override
          public MutateDeployedIndex setKey(java.lang.String key) {
            return (MutateDeployedIndex) super.setKey(key);
          }

          @Override
          public MutateDeployedIndex setOauthToken(java.lang.String oauthToken) {
            return (MutateDeployedIndex) super.setOauthToken(oauthToken);
          }

          @Override
          public MutateDeployedIndex setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (MutateDeployedIndex) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public MutateDeployedIndex setQuotaUser(java.lang.String quotaUser) {
            return (MutateDeployedIndex) super.setQuotaUser(quotaUser);
          }

          @Override
          public MutateDeployedIndex setUploadType(java.lang.String uploadType) {
            return (MutateDeployedIndex) super.setUploadType(uploadType);
          }

          @Override
          public MutateDeployedIndex setUploadProtocol(java.lang.String uploadProtocol) {
            return (MutateDeployedIndex) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the IndexEndpoint resource into which to deploy an Index. Format:
           * `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`
           */
          @com.google.api.client.util.Key
          private java.lang.String indexEndpoint;

          /** Required. The name of the IndexEndpoint resource into which to deploy an Index. Format:
         `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`
           */
          public java.lang.String getIndexEndpoint() {
            return indexEndpoint;
          }

          /**
           * Required. The name of the IndexEndpoint resource into which to deploy an Index. Format:
           * `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`
           */
          public MutateDeployedIndex setIndexEndpoint(java.lang.String indexEndpoint) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(INDEX_ENDPOINT_PATTERN.matcher(indexEndpoint).matches(),
                  "Parameter indexEndpoint must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/indexEndpoints/[^/]+$");
            }
            this.indexEndpoint = indexEndpoint;
            return this;
          }

          @Override
          public MutateDeployedIndex set(String parameterName, Object value) {
            return (MutateDeployedIndex) super.set(parameterName, value);
          }
        }
        /**
         * Updates an IndexEndpoint.
         *
         * Create a request for the method "indexEndpoints.patch".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Output only. The resource name of the IndexEndpoint.
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1IndexEndpoint}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1IndexEndpoint content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1IndexEndpoint> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/indexEndpoints/[^/]+$");

          /**
           * Updates an IndexEndpoint.
           *
           * Create a request for the method "indexEndpoints.patch".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           * <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Output only. The resource name of the IndexEndpoint.
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1IndexEndpoint}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1IndexEndpoint content) {
            super(Aiplatform.this, "PATCH", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1IndexEndpoint.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/indexEndpoints/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /** Output only. The resource name of the IndexEndpoint. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Output only. The resource name of the IndexEndpoint.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Output only. The resource name of the IndexEndpoint. */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/indexEndpoints/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /** Required. The update mask applies to the resource. See google.protobuf.FieldMask. */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Required. The update mask applies to the resource. See google.protobuf.FieldMask.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /** Required. The update mask applies to the resource. See google.protobuf.FieldMask. */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }
        /**
         * Reads the datapoints/vectors of the given IDs. A maximum of 1000 datapoints can be retrieved in a
         * batch.
         *
         * Create a request for the method "indexEndpoints.readIndexDatapoints".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link ReadIndexDatapoints#execute()} method to invoke the remote operation.
         *
         * @param indexEndpoint Required. The name of the index endpoint. Format:
         *        `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ReadIndexDatapointsRequest}
         * @return the request
         */
        public ReadIndexDatapoints readIndexDatapoints(java.lang.String indexEndpoint, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ReadIndexDatapointsRequest content) throws java.io.IOException {
          ReadIndexDatapoints result = new ReadIndexDatapoints(indexEndpoint, content);
          initialize(result);
          return result;
        }

        public class ReadIndexDatapoints extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ReadIndexDatapointsResponse> {

          private static final String REST_PATH = "v1/{+indexEndpoint}:readIndexDatapoints";

          private final java.util.regex.Pattern INDEX_ENDPOINT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/indexEndpoints/[^/]+$");

          /**
           * Reads the datapoints/vectors of the given IDs. A maximum of 1000 datapoints can be retrieved in
           * a batch.
           *
           * Create a request for the method "indexEndpoints.readIndexDatapoints".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link ReadIndexDatapoints#execute()} method to invoke the remote
           * operation. <p> {@link ReadIndexDatapoints#initialize(com.google.api.client.googleapis.services.
           * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param indexEndpoint Required. The name of the index endpoint. Format:
         *        `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ReadIndexDatapointsRequest}
           * @since 1.13
           */
          protected ReadIndexDatapoints(java.lang.String indexEndpoint, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ReadIndexDatapointsRequest content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ReadIndexDatapointsResponse.class);
            this.indexEndpoint = com.google.api.client.util.Preconditions.checkNotNull(indexEndpoint, "Required parameter indexEndpoint must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(INDEX_ENDPOINT_PATTERN.matcher(indexEndpoint).matches(),
                  "Parameter indexEndpoint must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/indexEndpoints/[^/]+$");
            }
          }

          @Override
          public ReadIndexDatapoints set$Xgafv(java.lang.String $Xgafv) {
            return (ReadIndexDatapoints) super.set$Xgafv($Xgafv);
          }

          @Override
          public ReadIndexDatapoints setAccessToken(java.lang.String accessToken) {
            return (ReadIndexDatapoints) super.setAccessToken(accessToken);
          }

          @Override
          public ReadIndexDatapoints setAlt(java.lang.String alt) {
            return (ReadIndexDatapoints) super.setAlt(alt);
          }

          @Override
          public ReadIndexDatapoints setCallback(java.lang.String callback) {
            return (ReadIndexDatapoints) super.setCallback(callback);
          }

          @Override
          public ReadIndexDatapoints setFields(java.lang.String fields) {
            return (ReadIndexDatapoints) super.setFields(fields);
          }

          @Override
          public ReadIndexDatapoints setKey(java.lang.String key) {
            return (ReadIndexDatapoints) super.setKey(key);
          }

          @Override
          public ReadIndexDatapoints setOauthToken(java.lang.String oauthToken) {
            return (ReadIndexDatapoints) super.setOauthToken(oauthToken);
          }

          @Override
          public ReadIndexDatapoints setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (ReadIndexDatapoints) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public ReadIndexDatapoints setQuotaUser(java.lang.String quotaUser) {
            return (ReadIndexDatapoints) super.setQuotaUser(quotaUser);
          }

          @Override
          public ReadIndexDatapoints setUploadType(java.lang.String uploadType) {
            return (ReadIndexDatapoints) super.setUploadType(uploadType);
          }

          @Override
          public ReadIndexDatapoints setUploadProtocol(java.lang.String uploadProtocol) {
            return (ReadIndexDatapoints) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the index endpoint. Format:
           * `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`
           */
          @com.google.api.client.util.Key
          private java.lang.String indexEndpoint;

          /** Required. The name of the index endpoint. Format:
         `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`
           */
          public java.lang.String getIndexEndpoint() {
            return indexEndpoint;
          }

          /**
           * Required. The name of the index endpoint. Format:
           * `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`
           */
          public ReadIndexDatapoints setIndexEndpoint(java.lang.String indexEndpoint) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(INDEX_ENDPOINT_PATTERN.matcher(indexEndpoint).matches(),
                  "Parameter indexEndpoint must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/indexEndpoints/[^/]+$");
            }
            this.indexEndpoint = indexEndpoint;
            return this;
          }

          @Override
          public ReadIndexDatapoints set(String parameterName, Object value) {
            return (ReadIndexDatapoints) super.set(parameterName, value);
          }
        }
        /**
         * Undeploys an Index from an IndexEndpoint, removing a DeployedIndex from it, and freeing all
         * resources it's using.
         *
         * Create a request for the method "indexEndpoints.undeployIndex".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link UndeployIndex#execute()} method to invoke the remote operation.
         *
         * @param indexEndpoint Required. The name of the IndexEndpoint resource from which to undeploy an Index. Format:
         *        `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1UndeployIndexRequest}
         * @return the request
         */
        public UndeployIndex undeployIndex(java.lang.String indexEndpoint, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1UndeployIndexRequest content) throws java.io.IOException {
          UndeployIndex result = new UndeployIndex(indexEndpoint, content);
          initialize(result);
          return result;
        }

        public class UndeployIndex extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+indexEndpoint}:undeployIndex";

          private final java.util.regex.Pattern INDEX_ENDPOINT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/indexEndpoints/[^/]+$");

          /**
           * Undeploys an Index from an IndexEndpoint, removing a DeployedIndex from it, and freeing all
           * resources it's using.
           *
           * Create a request for the method "indexEndpoints.undeployIndex".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link UndeployIndex#execute()} method to invoke the remote
           * operation. <p> {@link UndeployIndex#initialize(com.google.api.client.googleapis.services.Abstra
           * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
           * the constructor. </p>
           *
           * @param indexEndpoint Required. The name of the IndexEndpoint resource from which to undeploy an Index. Format:
         *        `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1UndeployIndexRequest}
           * @since 1.13
           */
          protected UndeployIndex(java.lang.String indexEndpoint, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1UndeployIndexRequest content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
            this.indexEndpoint = com.google.api.client.util.Preconditions.checkNotNull(indexEndpoint, "Required parameter indexEndpoint must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(INDEX_ENDPOINT_PATTERN.matcher(indexEndpoint).matches(),
                  "Parameter indexEndpoint must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/indexEndpoints/[^/]+$");
            }
          }

          @Override
          public UndeployIndex set$Xgafv(java.lang.String $Xgafv) {
            return (UndeployIndex) super.set$Xgafv($Xgafv);
          }

          @Override
          public UndeployIndex setAccessToken(java.lang.String accessToken) {
            return (UndeployIndex) super.setAccessToken(accessToken);
          }

          @Override
          public UndeployIndex setAlt(java.lang.String alt) {
            return (UndeployIndex) super.setAlt(alt);
          }

          @Override
          public UndeployIndex setCallback(java.lang.String callback) {
            return (UndeployIndex) super.setCallback(callback);
          }

          @Override
          public UndeployIndex setFields(java.lang.String fields) {
            return (UndeployIndex) super.setFields(fields);
          }

          @Override
          public UndeployIndex setKey(java.lang.String key) {
            return (UndeployIndex) super.setKey(key);
          }

          @Override
          public UndeployIndex setOauthToken(java.lang.String oauthToken) {
            return (UndeployIndex) super.setOauthToken(oauthToken);
          }

          @Override
          public UndeployIndex setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (UndeployIndex) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public UndeployIndex setQuotaUser(java.lang.String quotaUser) {
            return (UndeployIndex) super.setQuotaUser(quotaUser);
          }

          @Override
          public UndeployIndex setUploadType(java.lang.String uploadType) {
            return (UndeployIndex) super.setUploadType(uploadType);
          }

          @Override
          public UndeployIndex setUploadProtocol(java.lang.String uploadProtocol) {
            return (UndeployIndex) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the IndexEndpoint resource from which to undeploy an Index.
           * Format: `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`
           */
          @com.google.api.client.util.Key
          private java.lang.String indexEndpoint;

          /** Required. The name of the IndexEndpoint resource from which to undeploy an Index. Format:
         `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`
           */
          public java.lang.String getIndexEndpoint() {
            return indexEndpoint;
          }

          /**
           * Required. The name of the IndexEndpoint resource from which to undeploy an Index.
           * Format: `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`
           */
          public UndeployIndex setIndexEndpoint(java.lang.String indexEndpoint) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(INDEX_ENDPOINT_PATTERN.matcher(indexEndpoint).matches(),
                  "Parameter indexEndpoint must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/indexEndpoints/[^/]+$");
            }
            this.indexEndpoint = indexEndpoint;
            return this;
          }

          @Override
          public UndeployIndex set(String parameterName, Object value) {
            return (UndeployIndex) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the Operations collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Aiplatform aiplatform = new Aiplatform(...);}
         *   {@code Aiplatform.Operations.List request = aiplatform.operations().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Operations operations() {
          return new Operations();
        }

        /**
         * The "operations" collection of methods.
         */
        public class Operations {

          /**
           * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
           * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
           * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
           * methods to check whether the cancellation succeeded or whether the operation completed despite
           * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
           * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
           * `Code.CANCELLED`.
           *
           * Create a request for the method "operations.cancel".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource to be cancelled.
           * @return the request
           */
          public Cancel cancel(java.lang.String name) throws java.io.IOException {
            Cancel result = new Cancel(name);
            initialize(result);
            return result;
          }

          public class Cancel extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

            private static final String REST_PATH = "v1/{+name}:cancel";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/indexEndpoints/[^/]+/operations/[^/]+$");

            /**
             * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
             * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
             * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
             * methods to check whether the cancellation succeeded or whether the operation completed despite
             * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
             * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
             * `Code.CANCELLED`.
             *
             * Create a request for the method "operations.cancel".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
             * <p> {@link
             * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource to be cancelled.
             * @since 1.13
             */
            protected Cancel(java.lang.String name) {
              super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/indexEndpoints/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public Cancel set$Xgafv(java.lang.String $Xgafv) {
              return (Cancel) super.set$Xgafv($Xgafv);
            }

            @Override
            public Cancel setAccessToken(java.lang.String accessToken) {
              return (Cancel) super.setAccessToken(accessToken);
            }

            @Override
            public Cancel setAlt(java.lang.String alt) {
              return (Cancel) super.setAlt(alt);
            }

            @Override
            public Cancel setCallback(java.lang.String callback) {
              return (Cancel) super.setCallback(callback);
            }

            @Override
            public Cancel setFields(java.lang.String fields) {
              return (Cancel) super.setFields(fields);
            }

            @Override
            public Cancel setKey(java.lang.String key) {
              return (Cancel) super.setKey(key);
            }

            @Override
            public Cancel setOauthToken(java.lang.String oauthToken) {
              return (Cancel) super.setOauthToken(oauthToken);
            }

            @Override
            public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Cancel) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Cancel setQuotaUser(java.lang.String quotaUser) {
              return (Cancel) super.setQuotaUser(quotaUser);
            }

            @Override
            public Cancel setUploadType(java.lang.String uploadType) {
              return (Cancel) super.setUploadType(uploadType);
            }

            @Override
            public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
              return (Cancel) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource to be cancelled. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource to be cancelled.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource to be cancelled. */
            public Cancel setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/indexEndpoints/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Cancel set(String parameterName, Object value) {
              return (Cancel) super.set(parameterName, value);
            }
          }
          /**
           * Deletes a long-running operation. This method indicates that the client is no longer interested
           * in the operation result. It does not cancel the operation. If the server doesn't support this
           * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.delete".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource to be deleted.
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/indexEndpoints/[^/]+/operations/[^/]+$");

            /**
             * Deletes a long-running operation. This method indicates that the client is no longer interested
             * in the operation result. It does not cancel the operation. If the server doesn't support this
             * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.delete".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource to be deleted.
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/indexEndpoints/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource to be deleted. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource to be deleted.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource to be deleted. */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/indexEndpoints/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Gets the latest state of a long-running operation. Clients can use this method to poll the
           * operation result at intervals as recommended by the API service.
           *
           * Create a request for the method "operations.get".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource.
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/indexEndpoints/[^/]+/operations/[^/]+$");

            /**
             * Gets the latest state of a long-running operation. Clients can use this method to poll the
             * operation result at intervals as recommended by the API service.
             *
             * Create a request for the method "operations.get".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource.
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/indexEndpoints/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource. */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/indexEndpoints/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Lists operations that match the specified filter in the request. If the server doesn't support
           * this method, it returns `UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.list".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation's parent resource.
           * @return the request
           */
          public List list(java.lang.String name) throws java.io.IOException {
            List result = new List(name);
            initialize(result);
            return result;
          }

          public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse> {

            private static final String REST_PATH = "v1/{+name}/operations";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/indexEndpoints/[^/]+$");

            /**
             * Lists operations that match the specified filter in the request. If the server doesn't support
             * this method, it returns `UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.list".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation's parent resource.
             * @since 1.13
             */
            protected List(java.lang.String name) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/indexEndpoints/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation's parent resource. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation's parent resource.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation's parent resource. */
            public List setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/indexEndpoints/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /** The standard list filter. */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** The standard list filter.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /** The standard list filter. */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /** The standard list page size. */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** The standard list page size.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /** The standard list page size. */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** The standard list page token. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** The standard list page token.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** The standard list page token. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Waits until the specified long-running operation is done or reaches at most a specified timeout,
           * returning the latest state. If the operation is already done, the latest state is immediately
           * returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC
           * timeout is used. If the server does not support this method, it returns
           * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
           * the latest state before the specified timeout (including immediately), meaning even an immediate
           * response is no guarantee that the operation is done.
           *
           * Create a request for the method "operations.wait".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Wait#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource to wait on.
           * @return the request
           */
          public Wait wait(java.lang.String name) throws java.io.IOException {
            Wait result = new Wait(name);
            initialize(result);
            return result;
          }

          public class Wait extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+name}:wait";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/indexEndpoints/[^/]+/operations/[^/]+$");

            /**
             * Waits until the specified long-running operation is done or reaches at most a specified
             * timeout, returning the latest state. If the operation is already done, the latest state is
             * immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout,
             * the HTTP/RPC timeout is used. If the server does not support this method, it returns
             * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
             * the latest state before the specified timeout (including immediately), meaning even an
             * immediate response is no guarantee that the operation is done.
             *
             * Create a request for the method "operations.wait".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Wait#execute()} method to invoke the remote operation. <p>
             * {@link Wait#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource to wait on.
             * @since 1.13
             */
            protected Wait(java.lang.String name) {
              super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/indexEndpoints/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public Wait set$Xgafv(java.lang.String $Xgafv) {
              return (Wait) super.set$Xgafv($Xgafv);
            }

            @Override
            public Wait setAccessToken(java.lang.String accessToken) {
              return (Wait) super.setAccessToken(accessToken);
            }

            @Override
            public Wait setAlt(java.lang.String alt) {
              return (Wait) super.setAlt(alt);
            }

            @Override
            public Wait setCallback(java.lang.String callback) {
              return (Wait) super.setCallback(callback);
            }

            @Override
            public Wait setFields(java.lang.String fields) {
              return (Wait) super.setFields(fields);
            }

            @Override
            public Wait setKey(java.lang.String key) {
              return (Wait) super.setKey(key);
            }

            @Override
            public Wait setOauthToken(java.lang.String oauthToken) {
              return (Wait) super.setOauthToken(oauthToken);
            }

            @Override
            public Wait setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Wait) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Wait setQuotaUser(java.lang.String quotaUser) {
              return (Wait) super.setQuotaUser(quotaUser);
            }

            @Override
            public Wait setUploadType(java.lang.String uploadType) {
              return (Wait) super.setUploadType(uploadType);
            }

            @Override
            public Wait setUploadProtocol(java.lang.String uploadProtocol) {
              return (Wait) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource to wait on. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource to wait on.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource to wait on. */
            public Wait setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/indexEndpoints/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * The maximum duration to wait before timing out. If left blank, the wait will be at
             * most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline
             * is also specified, the shorter one will be used.
             */
            @com.google.api.client.util.Key
            private String timeout;

            /** The maximum duration to wait before timing out. If left blank, the wait will be at most the time
           permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the
           shorter one will be used.
             */
            public String getTimeout() {
              return timeout;
            }

            /**
             * The maximum duration to wait before timing out. If left blank, the wait will be at
             * most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline
             * is also specified, the shorter one will be used.
             */
            public Wait setTimeout(String timeout) {
              this.timeout = timeout;
              return this;
            }

            @Override
            public Wait set(String parameterName, Object value) {
              return (Wait) super.set(parameterName, value);
            }
          }

        }
      }
      /**
       * An accessor for creating requests from the Indexes collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Aiplatform aiplatform = new Aiplatform(...);}
       *   {@code Aiplatform.Indexes.List request = aiplatform.indexes().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Indexes indexes() {
        return new Indexes();
      }

      /**
       * The "indexes" collection of methods.
       */
      public class Indexes {

        /**
         * Creates an Index.
         *
         * Create a request for the method "indexes.create".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The resource name of the Location to create the Index in. Format:
         *        `projects/{project}/locations/{location}`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Index}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Index content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+parent}/indexes";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Creates an Index.
           *
           * Create a request for the method "indexes.create".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The resource name of the Location to create the Index in. Format:
         *        `projects/{project}/locations/{location}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Index}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Index content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the Location to create the Index in. Format:
           * `projects/{project}/locations/{location}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The resource name of the Location to create the Index in. Format:
         `projects/{project}/locations/{location}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The resource name of the Location to create the Index in. Format:
           * `projects/{project}/locations/{location}`
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes an Index. An Index can only be deleted when all its DeployedIndexes had been undeployed.
         *
         * Create a request for the method "indexes.delete".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the Index resource to be deleted. Format:
         *        `projects/{project}/locations/{location}/indexes/{index}`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/indexes/[^/]+$");

          /**
           * Deletes an Index. An Index can only be deleted when all its DeployedIndexes had been
           * undeployed.
           *
           * Create a request for the method "indexes.delete".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the Index resource to be deleted. Format:
         *        `projects/{project}/locations/{location}/indexes/{index}`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/indexes/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the Index resource to be deleted. Format:
           * `projects/{project}/locations/{location}/indexes/{index}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the Index resource to be deleted. Format:
         `projects/{project}/locations/{location}/indexes/{index}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the Index resource to be deleted. Format:
           * `projects/{project}/locations/{location}/indexes/{index}`
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/indexes/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets an Index.
         *
         * Create a request for the method "indexes.get".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the Index resource. Format:
         *        `projects/{project}/locations/{location}/indexes/{index}`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Index> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/indexes/[^/]+$");

          /**
           * Gets an Index.
           *
           * Create a request for the method "indexes.get".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the Index resource. Format:
         *        `projects/{project}/locations/{location}/indexes/{index}`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Index.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/indexes/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the Index resource. Format:
           * `projects/{project}/locations/{location}/indexes/{index}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the Index resource. Format:
         `projects/{project}/locations/{location}/indexes/{index}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the Index resource. Format:
           * `projects/{project}/locations/{location}/indexes/{index}`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/indexes/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists Indexes in a Location.
         *
         * Create a request for the method "indexes.list".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The resource name of the Location from which to list the Indexes. Format:
         *        `projects/{project}/locations/{location}`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListIndexesResponse> {

          private static final String REST_PATH = "v1/{+parent}/indexes";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists Indexes in a Location.
           *
           * Create a request for the method "indexes.list".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The resource name of the Location from which to list the Indexes. Format:
         *        `projects/{project}/locations/{location}`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListIndexesResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the Location from which to list the Indexes. Format:
           * `projects/{project}/locations/{location}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The resource name of the Location from which to list the Indexes. Format:
         `projects/{project}/locations/{location}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The resource name of the Location from which to list the Indexes. Format:
           * `projects/{project}/locations/{location}`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** The standard list filter. */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** The standard list filter.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /** The standard list filter. */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /** The standard list page size. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The standard list page size.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** The standard list page size. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * The standard list page token. Typically obtained via
           * ListIndexesResponse.next_page_token of the previous IndexService.ListIndexes call.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The standard list page token. Typically obtained via ListIndexesResponse.next_page_token of the
         previous IndexService.ListIndexes call.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * The standard list page token. Typically obtained via
           * ListIndexesResponse.next_page_token of the previous IndexService.ListIndexes call.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          /** Mask specifying which fields to read. */
          @com.google.api.client.util.Key
          private String readMask;

          /** Mask specifying which fields to read.
           */
          public String getReadMask() {
            return readMask;
          }

          /** Mask specifying which fields to read. */
          public List setReadMask(String readMask) {
            this.readMask = readMask;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates an Index.
         *
         * Create a request for the method "indexes.patch".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Output only. The resource name of the Index.
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Index}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Index content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/indexes/[^/]+$");

          /**
           * Updates an Index.
           *
           * Create a request for the method "indexes.patch".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           * <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Output only. The resource name of the Index.
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Index}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Index content) {
            super(Aiplatform.this, "PATCH", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/indexes/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /** Output only. The resource name of the Index. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Output only. The resource name of the Index.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Output only. The resource name of the Index. */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/indexes/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * The update mask applies to the resource. For the `FieldMask` definition, see
           * google.protobuf.FieldMask.
           */
          @com.google.api.client.util.Key
          private String updateMask;

          /** The update mask applies to the resource. For the `FieldMask` definition, see
         google.protobuf.FieldMask.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /**
           * The update mask applies to the resource. For the `FieldMask` definition, see
           * google.protobuf.FieldMask.
           */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }
        /**
         * Remove Datapoints from an Index.
         *
         * Create a request for the method "indexes.removeDatapoints".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link RemoveDatapoints#execute()} method to invoke the remote operation.
         *
         * @param index Required. The name of the Index resource to be updated. Format:
         *        `projects/{project}/locations/{location}/indexes/{index}`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1RemoveDatapointsRequest}
         * @return the request
         */
        public RemoveDatapoints removeDatapoints(java.lang.String index, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1RemoveDatapointsRequest content) throws java.io.IOException {
          RemoveDatapoints result = new RemoveDatapoints(index, content);
          initialize(result);
          return result;
        }

        public class RemoveDatapoints extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1RemoveDatapointsResponse> {

          private static final String REST_PATH = "v1/{+index}:removeDatapoints";

          private final java.util.regex.Pattern INDEX_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/indexes/[^/]+$");

          /**
           * Remove Datapoints from an Index.
           *
           * Create a request for the method "indexes.removeDatapoints".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link RemoveDatapoints#execute()} method to invoke the remote
           * operation. <p> {@link RemoveDatapoints#initialize(com.google.api.client.googleapis.services.Abs
           * tractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param index Required. The name of the Index resource to be updated. Format:
         *        `projects/{project}/locations/{location}/indexes/{index}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1RemoveDatapointsRequest}
           * @since 1.13
           */
          protected RemoveDatapoints(java.lang.String index, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1RemoveDatapointsRequest content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1RemoveDatapointsResponse.class);
            this.index = com.google.api.client.util.Preconditions.checkNotNull(index, "Required parameter index must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(INDEX_PATTERN.matcher(index).matches(),
                  "Parameter index must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/indexes/[^/]+$");
            }
          }

          @Override
          public RemoveDatapoints set$Xgafv(java.lang.String $Xgafv) {
            return (RemoveDatapoints) super.set$Xgafv($Xgafv);
          }

          @Override
          public RemoveDatapoints setAccessToken(java.lang.String accessToken) {
            return (RemoveDatapoints) super.setAccessToken(accessToken);
          }

          @Override
          public RemoveDatapoints setAlt(java.lang.String alt) {
            return (RemoveDatapoints) super.setAlt(alt);
          }

          @Override
          public RemoveDatapoints setCallback(java.lang.String callback) {
            return (RemoveDatapoints) super.setCallback(callback);
          }

          @Override
          public RemoveDatapoints setFields(java.lang.String fields) {
            return (RemoveDatapoints) super.setFields(fields);
          }

          @Override
          public RemoveDatapoints setKey(java.lang.String key) {
            return (RemoveDatapoints) super.setKey(key);
          }

          @Override
          public RemoveDatapoints setOauthToken(java.lang.String oauthToken) {
            return (RemoveDatapoints) super.setOauthToken(oauthToken);
          }

          @Override
          public RemoveDatapoints setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (RemoveDatapoints) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public RemoveDatapoints setQuotaUser(java.lang.String quotaUser) {
            return (RemoveDatapoints) super.setQuotaUser(quotaUser);
          }

          @Override
          public RemoveDatapoints setUploadType(java.lang.String uploadType) {
            return (RemoveDatapoints) super.setUploadType(uploadType);
          }

          @Override
          public RemoveDatapoints setUploadProtocol(java.lang.String uploadProtocol) {
            return (RemoveDatapoints) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the Index resource to be updated. Format:
           * `projects/{project}/locations/{location}/indexes/{index}`
           */
          @com.google.api.client.util.Key
          private java.lang.String index;

          /** Required. The name of the Index resource to be updated. Format:
         `projects/{project}/locations/{location}/indexes/{index}`
           */
          public java.lang.String getIndex() {
            return index;
          }

          /**
           * Required. The name of the Index resource to be updated. Format:
           * `projects/{project}/locations/{location}/indexes/{index}`
           */
          public RemoveDatapoints setIndex(java.lang.String index) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(INDEX_PATTERN.matcher(index).matches(),
                  "Parameter index must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/indexes/[^/]+$");
            }
            this.index = index;
            return this;
          }

          @Override
          public RemoveDatapoints set(String parameterName, Object value) {
            return (RemoveDatapoints) super.set(parameterName, value);
          }
        }
        /**
         * Add/update Datapoints into an Index.
         *
         * Create a request for the method "indexes.upsertDatapoints".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link UpsertDatapoints#execute()} method to invoke the remote operation.
         *
         * @param index Required. The name of the Index resource to be updated. Format:
         *        `projects/{project}/locations/{location}/indexes/{index}`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1UpsertDatapointsRequest}
         * @return the request
         */
        public UpsertDatapoints upsertDatapoints(java.lang.String index, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1UpsertDatapointsRequest content) throws java.io.IOException {
          UpsertDatapoints result = new UpsertDatapoints(index, content);
          initialize(result);
          return result;
        }

        public class UpsertDatapoints extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1UpsertDatapointsResponse> {

          private static final String REST_PATH = "v1/{+index}:upsertDatapoints";

          private final java.util.regex.Pattern INDEX_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/indexes/[^/]+$");

          /**
           * Add/update Datapoints into an Index.
           *
           * Create a request for the method "indexes.upsertDatapoints".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link UpsertDatapoints#execute()} method to invoke the remote
           * operation. <p> {@link UpsertDatapoints#initialize(com.google.api.client.googleapis.services.Abs
           * tractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param index Required. The name of the Index resource to be updated. Format:
         *        `projects/{project}/locations/{location}/indexes/{index}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1UpsertDatapointsRequest}
           * @since 1.13
           */
          protected UpsertDatapoints(java.lang.String index, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1UpsertDatapointsRequest content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1UpsertDatapointsResponse.class);
            this.index = com.google.api.client.util.Preconditions.checkNotNull(index, "Required parameter index must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(INDEX_PATTERN.matcher(index).matches(),
                  "Parameter index must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/indexes/[^/]+$");
            }
          }

          @Override
          public UpsertDatapoints set$Xgafv(java.lang.String $Xgafv) {
            return (UpsertDatapoints) super.set$Xgafv($Xgafv);
          }

          @Override
          public UpsertDatapoints setAccessToken(java.lang.String accessToken) {
            return (UpsertDatapoints) super.setAccessToken(accessToken);
          }

          @Override
          public UpsertDatapoints setAlt(java.lang.String alt) {
            return (UpsertDatapoints) super.setAlt(alt);
          }

          @Override
          public UpsertDatapoints setCallback(java.lang.String callback) {
            return (UpsertDatapoints) super.setCallback(callback);
          }

          @Override
          public UpsertDatapoints setFields(java.lang.String fields) {
            return (UpsertDatapoints) super.setFields(fields);
          }

          @Override
          public UpsertDatapoints setKey(java.lang.String key) {
            return (UpsertDatapoints) super.setKey(key);
          }

          @Override
          public UpsertDatapoints setOauthToken(java.lang.String oauthToken) {
            return (UpsertDatapoints) super.setOauthToken(oauthToken);
          }

          @Override
          public UpsertDatapoints setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (UpsertDatapoints) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public UpsertDatapoints setQuotaUser(java.lang.String quotaUser) {
            return (UpsertDatapoints) super.setQuotaUser(quotaUser);
          }

          @Override
          public UpsertDatapoints setUploadType(java.lang.String uploadType) {
            return (UpsertDatapoints) super.setUploadType(uploadType);
          }

          @Override
          public UpsertDatapoints setUploadProtocol(java.lang.String uploadProtocol) {
            return (UpsertDatapoints) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the Index resource to be updated. Format:
           * `projects/{project}/locations/{location}/indexes/{index}`
           */
          @com.google.api.client.util.Key
          private java.lang.String index;

          /** Required. The name of the Index resource to be updated. Format:
         `projects/{project}/locations/{location}/indexes/{index}`
           */
          public java.lang.String getIndex() {
            return index;
          }

          /**
           * Required. The name of the Index resource to be updated. Format:
           * `projects/{project}/locations/{location}/indexes/{index}`
           */
          public UpsertDatapoints setIndex(java.lang.String index) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(INDEX_PATTERN.matcher(index).matches(),
                  "Parameter index must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/indexes/[^/]+$");
            }
            this.index = index;
            return this;
          }

          @Override
          public UpsertDatapoints set(String parameterName, Object value) {
            return (UpsertDatapoints) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the Operations collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Aiplatform aiplatform = new Aiplatform(...);}
         *   {@code Aiplatform.Operations.List request = aiplatform.operations().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Operations operations() {
          return new Operations();
        }

        /**
         * The "operations" collection of methods.
         */
        public class Operations {

          /**
           * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
           * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
           * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
           * methods to check whether the cancellation succeeded or whether the operation completed despite
           * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
           * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
           * `Code.CANCELLED`.
           *
           * Create a request for the method "operations.cancel".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource to be cancelled.
           * @return the request
           */
          public Cancel cancel(java.lang.String name) throws java.io.IOException {
            Cancel result = new Cancel(name);
            initialize(result);
            return result;
          }

          public class Cancel extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

            private static final String REST_PATH = "v1/{+name}:cancel";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/indexes/[^/]+/operations/[^/]+$");

            /**
             * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
             * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
             * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
             * methods to check whether the cancellation succeeded or whether the operation completed despite
             * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
             * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
             * `Code.CANCELLED`.
             *
             * Create a request for the method "operations.cancel".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
             * <p> {@link
             * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource to be cancelled.
             * @since 1.13
             */
            protected Cancel(java.lang.String name) {
              super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/indexes/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public Cancel set$Xgafv(java.lang.String $Xgafv) {
              return (Cancel) super.set$Xgafv($Xgafv);
            }

            @Override
            public Cancel setAccessToken(java.lang.String accessToken) {
              return (Cancel) super.setAccessToken(accessToken);
            }

            @Override
            public Cancel setAlt(java.lang.String alt) {
              return (Cancel) super.setAlt(alt);
            }

            @Override
            public Cancel setCallback(java.lang.String callback) {
              return (Cancel) super.setCallback(callback);
            }

            @Override
            public Cancel setFields(java.lang.String fields) {
              return (Cancel) super.setFields(fields);
            }

            @Override
            public Cancel setKey(java.lang.String key) {
              return (Cancel) super.setKey(key);
            }

            @Override
            public Cancel setOauthToken(java.lang.String oauthToken) {
              return (Cancel) super.setOauthToken(oauthToken);
            }

            @Override
            public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Cancel) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Cancel setQuotaUser(java.lang.String quotaUser) {
              return (Cancel) super.setQuotaUser(quotaUser);
            }

            @Override
            public Cancel setUploadType(java.lang.String uploadType) {
              return (Cancel) super.setUploadType(uploadType);
            }

            @Override
            public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
              return (Cancel) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource to be cancelled. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource to be cancelled.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource to be cancelled. */
            public Cancel setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/indexes/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Cancel set(String parameterName, Object value) {
              return (Cancel) super.set(parameterName, value);
            }
          }
          /**
           * Deletes a long-running operation. This method indicates that the client is no longer interested
           * in the operation result. It does not cancel the operation. If the server doesn't support this
           * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.delete".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource to be deleted.
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/indexes/[^/]+/operations/[^/]+$");

            /**
             * Deletes a long-running operation. This method indicates that the client is no longer interested
             * in the operation result. It does not cancel the operation. If the server doesn't support this
             * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.delete".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource to be deleted.
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/indexes/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource to be deleted. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource to be deleted.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource to be deleted. */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/indexes/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Gets the latest state of a long-running operation. Clients can use this method to poll the
           * operation result at intervals as recommended by the API service.
           *
           * Create a request for the method "operations.get".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource.
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/indexes/[^/]+/operations/[^/]+$");

            /**
             * Gets the latest state of a long-running operation. Clients can use this method to poll the
             * operation result at intervals as recommended by the API service.
             *
             * Create a request for the method "operations.get".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource.
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/indexes/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource. */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/indexes/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Lists operations that match the specified filter in the request. If the server doesn't support
           * this method, it returns `UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.list".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation's parent resource.
           * @return the request
           */
          public List list(java.lang.String name) throws java.io.IOException {
            List result = new List(name);
            initialize(result);
            return result;
          }

          public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse> {

            private static final String REST_PATH = "v1/{+name}/operations";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/indexes/[^/]+$");

            /**
             * Lists operations that match the specified filter in the request. If the server doesn't support
             * this method, it returns `UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.list".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation's parent resource.
             * @since 1.13
             */
            protected List(java.lang.String name) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/indexes/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation's parent resource. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation's parent resource.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation's parent resource. */
            public List setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/indexes/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /** The standard list filter. */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** The standard list filter.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /** The standard list filter. */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /** The standard list page size. */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** The standard list page size.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /** The standard list page size. */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** The standard list page token. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** The standard list page token.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** The standard list page token. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Waits until the specified long-running operation is done or reaches at most a specified timeout,
           * returning the latest state. If the operation is already done, the latest state is immediately
           * returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC
           * timeout is used. If the server does not support this method, it returns
           * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
           * the latest state before the specified timeout (including immediately), meaning even an immediate
           * response is no guarantee that the operation is done.
           *
           * Create a request for the method "operations.wait".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Wait#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource to wait on.
           * @return the request
           */
          public Wait wait(java.lang.String name) throws java.io.IOException {
            Wait result = new Wait(name);
            initialize(result);
            return result;
          }

          public class Wait extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+name}:wait";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/indexes/[^/]+/operations/[^/]+$");

            /**
             * Waits until the specified long-running operation is done or reaches at most a specified
             * timeout, returning the latest state. If the operation is already done, the latest state is
             * immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout,
             * the HTTP/RPC timeout is used. If the server does not support this method, it returns
             * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
             * the latest state before the specified timeout (including immediately), meaning even an
             * immediate response is no guarantee that the operation is done.
             *
             * Create a request for the method "operations.wait".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Wait#execute()} method to invoke the remote operation. <p>
             * {@link Wait#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource to wait on.
             * @since 1.13
             */
            protected Wait(java.lang.String name) {
              super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/indexes/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public Wait set$Xgafv(java.lang.String $Xgafv) {
              return (Wait) super.set$Xgafv($Xgafv);
            }

            @Override
            public Wait setAccessToken(java.lang.String accessToken) {
              return (Wait) super.setAccessToken(accessToken);
            }

            @Override
            public Wait setAlt(java.lang.String alt) {
              return (Wait) super.setAlt(alt);
            }

            @Override
            public Wait setCallback(java.lang.String callback) {
              return (Wait) super.setCallback(callback);
            }

            @Override
            public Wait setFields(java.lang.String fields) {
              return (Wait) super.setFields(fields);
            }

            @Override
            public Wait setKey(java.lang.String key) {
              return (Wait) super.setKey(key);
            }

            @Override
            public Wait setOauthToken(java.lang.String oauthToken) {
              return (Wait) super.setOauthToken(oauthToken);
            }

            @Override
            public Wait setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Wait) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Wait setQuotaUser(java.lang.String quotaUser) {
              return (Wait) super.setQuotaUser(quotaUser);
            }

            @Override
            public Wait setUploadType(java.lang.String uploadType) {
              return (Wait) super.setUploadType(uploadType);
            }

            @Override
            public Wait setUploadProtocol(java.lang.String uploadProtocol) {
              return (Wait) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource to wait on. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource to wait on.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource to wait on. */
            public Wait setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/indexes/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * The maximum duration to wait before timing out. If left blank, the wait will be at
             * most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline
             * is also specified, the shorter one will be used.
             */
            @com.google.api.client.util.Key
            private String timeout;

            /** The maximum duration to wait before timing out. If left blank, the wait will be at most the time
           permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the
           shorter one will be used.
             */
            public String getTimeout() {
              return timeout;
            }

            /**
             * The maximum duration to wait before timing out. If left blank, the wait will be at
             * most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline
             * is also specified, the shorter one will be used.
             */
            public Wait setTimeout(String timeout) {
              this.timeout = timeout;
              return this;
            }

            @Override
            public Wait set(String parameterName, Object value) {
              return (Wait) super.set(parameterName, value);
            }
          }

        }
      }
      /**
       * An accessor for creating requests from the MetadataStores collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Aiplatform aiplatform = new Aiplatform(...);}
       *   {@code Aiplatform.MetadataStores.List request = aiplatform.metadataStores().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public MetadataStores metadataStores() {
        return new MetadataStores();
      }

      /**
       * The "metadataStores" collection of methods.
       */
      public class MetadataStores {

        /**
         * Initializes a MetadataStore, including allocation of resources.
         *
         * Create a request for the method "metadataStores.create".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The resource name of the Location where the MetadataStore should be created. Format:
         *        `projects/{project}/locations/{location}/`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1MetadataStore}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1MetadataStore content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+parent}/metadataStores";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Initializes a MetadataStore, including allocation of resources.
           *
           * Create a request for the method "metadataStores.create".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The resource name of the Location where the MetadataStore should be created. Format:
         *        `projects/{project}/locations/{location}/`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1MetadataStore}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1MetadataStore content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the Location where the MetadataStore should be created.
           * Format: `projects/{project}/locations/{location}/`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The resource name of the Location where the MetadataStore should be created. Format:
         `projects/{project}/locations/{location}/`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The resource name of the Location where the MetadataStore should be created.
           * Format: `projects/{project}/locations/{location}/`
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * The {metadatastore} portion of the resource name with the format:
           * `projects/{project}/locations/{location}/metadataStores/{metadatastore}` If not
           * provided, the MetadataStore's ID will be a UUID generated by the service. Must be 4-128
           * characters in length. Valid characters are `/a-z-/`. Must be unique across all
           * MetadataStores in the parent Location. (Otherwise the request will fail with
           * ALREADY_EXISTS, or PERMISSION_DENIED if the caller can't view the preexisting
           * MetadataStore.)
           */
          @com.google.api.client.util.Key
          private java.lang.String metadataStoreId;

          /** The {metadatastore} portion of the resource name with the format:
         `projects/{project}/locations/{location}/metadataStores/{metadatastore}` If not provided, the
         MetadataStore's ID will be a UUID generated by the service. Must be 4-128 characters in length.
         Valid characters are `/a-z-/`. Must be unique across all MetadataStores in the parent Location.
         (Otherwise the request will fail with ALREADY_EXISTS, or PERMISSION_DENIED if the caller can't view
         the preexisting MetadataStore.)
           */
          public java.lang.String getMetadataStoreId() {
            return metadataStoreId;
          }

          /**
           * The {metadatastore} portion of the resource name with the format:
           * `projects/{project}/locations/{location}/metadataStores/{metadatastore}` If not
           * provided, the MetadataStore's ID will be a UUID generated by the service. Must be 4-128
           * characters in length. Valid characters are `/a-z-/`. Must be unique across all
           * MetadataStores in the parent Location. (Otherwise the request will fail with
           * ALREADY_EXISTS, or PERMISSION_DENIED if the caller can't view the preexisting
           * MetadataStore.)
           */
          public Create setMetadataStoreId(java.lang.String metadataStoreId) {
            this.metadataStoreId = metadataStoreId;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a single MetadataStore and all its child resources (Artifacts, Executions, and Contexts).
         *
         * Create a request for the method "metadataStores.delete".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The resource name of the MetadataStore to delete. Format:
         *        `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+$");

          /**
           * Deletes a single MetadataStore and all its child resources (Artifacts, Executions, and
           * Contexts).
           *
           * Create a request for the method "metadataStores.delete".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The resource name of the MetadataStore to delete. Format:
         *        `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the MetadataStore to delete. Format:
           * `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The resource name of the MetadataStore to delete. Format:
         `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The resource name of the MetadataStore to delete. Format:
           * `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /** Deprecated: Field is no longer supported. */
          @com.google.api.client.util.Key
          private java.lang.Boolean force;

          /** Deprecated: Field is no longer supported.
           */
          public java.lang.Boolean getForce() {
            return force;
          }

          /** Deprecated: Field is no longer supported. */
          public Delete setForce(java.lang.Boolean force) {
            this.force = force;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Retrieves a specific MetadataStore.
         *
         * Create a request for the method "metadataStores.get".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The resource name of the MetadataStore to retrieve. Format:
         *        `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1MetadataStore> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+$");

          /**
           * Retrieves a specific MetadataStore.
           *
           * Create a request for the method "metadataStores.get".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The resource name of the MetadataStore to retrieve. Format:
         *        `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1MetadataStore.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the MetadataStore to retrieve. Format:
           * `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The resource name of the MetadataStore to retrieve. Format:
         `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The resource name of the MetadataStore to retrieve. Format:
           * `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists MetadataStores for a Location.
         *
         * Create a request for the method "metadataStores.list".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The Location whose MetadataStores should be listed. Format:
         *        `projects/{project}/locations/{location}`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListMetadataStoresResponse> {

          private static final String REST_PATH = "v1/{+parent}/metadataStores";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists MetadataStores for a Location.
           *
           * Create a request for the method "metadataStores.list".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The Location whose MetadataStores should be listed. Format:
         *        `projects/{project}/locations/{location}`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListMetadataStoresResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The Location whose MetadataStores should be listed. Format:
           * `projects/{project}/locations/{location}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The Location whose MetadataStores should be listed. Format:
         `projects/{project}/locations/{location}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The Location whose MetadataStores should be listed. Format:
           * `projects/{project}/locations/{location}`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * The maximum number of Metadata Stores to return. The service may return fewer. Must be
           * in range 1-1000, inclusive. Defaults to 100.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The maximum number of Metadata Stores to return. The service may return fewer. Must be in range
         1-1000, inclusive. Defaults to 100.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * The maximum number of Metadata Stores to return. The service may return fewer. Must be
           * in range 1-1000, inclusive. Defaults to 100.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * A page token, received from a previous MetadataService.ListMetadataStores call. Provide
           * this to retrieve the subsequent page. When paginating, all other provided parameters
           * must match the call that provided the page token. (Otherwise the request will fail with
           * INVALID_ARGUMENT error.)
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** A page token, received from a previous MetadataService.ListMetadataStores call. Provide this to
         retrieve the subsequent page. When paginating, all other provided parameters must match the call
         that provided the page token. (Otherwise the request will fail with INVALID_ARGUMENT error.)
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * A page token, received from a previous MetadataService.ListMetadataStores call. Provide
           * this to retrieve the subsequent page. When paginating, all other provided parameters
           * must match the call that provided the page token. (Otherwise the request will fail with
           * INVALID_ARGUMENT error.)
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the Artifacts collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Aiplatform aiplatform = new Aiplatform(...);}
         *   {@code Aiplatform.Artifacts.List request = aiplatform.artifacts().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Artifacts artifacts() {
          return new Artifacts();
        }

        /**
         * The "artifacts" collection of methods.
         */
        public class Artifacts {

          /**
           * Creates an Artifact associated with a MetadataStore.
           *
           * Create a request for the method "artifacts.create".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The resource name of the MetadataStore where the Artifact should be created. Format:
           *        `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Artifact}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Artifact content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Artifact> {

            private static final String REST_PATH = "v1/{+parent}/artifacts";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+$");

            /**
             * Creates an Artifact associated with a MetadataStore.
             *
             * Create a request for the method "artifacts.create".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
             * <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The resource name of the MetadataStore where the Artifact should be created. Format:
           *        `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
             * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Artifact}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Artifact content) {
              super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Artifact.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The resource name of the MetadataStore where the Artifact should be
             * created. Format:
             * `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The resource name of the MetadataStore where the Artifact should be created. Format:
           `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The resource name of the MetadataStore where the Artifact should be
             * created. Format:
             * `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
             */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * The {artifact} portion of the resource name with the format: `projects/{project}/loca
             * tions/{location}/metadataStores/{metadatastore}/artifacts/{artifact}` If not
             * provided, the Artifact's ID will be a UUID generated by the service. Must be 4-128
             * characters in length. Valid characters are `/a-z-/`. Must be unique across all
             * Artifacts in the parent MetadataStore. (Otherwise the request will fail with
             * ALREADY_EXISTS, or PERMISSION_DENIED if the caller can't view the preexisting
             * Artifact.)
             */
            @com.google.api.client.util.Key
            private java.lang.String artifactId;

            /** The {artifact} portion of the resource name with the format:
           `projects/{project}/locations/{location}/metadataStores/{metadatastore}/artifacts/{artifact}` If
           not provided, the Artifact's ID will be a UUID generated by the service. Must be 4-128 characters
           in length. Valid characters are `/a-z-/`. Must be unique across all Artifacts in the parent
           MetadataStore. (Otherwise the request will fail with ALREADY_EXISTS, or PERMISSION_DENIED if the
           caller can't view the preexisting Artifact.)
             */
            public java.lang.String getArtifactId() {
              return artifactId;
            }

            /**
             * The {artifact} portion of the resource name with the format: `projects/{project}/loca
             * tions/{location}/metadataStores/{metadatastore}/artifacts/{artifact}` If not
             * provided, the Artifact's ID will be a UUID generated by the service. Must be 4-128
             * characters in length. Valid characters are `/a-z-/`. Must be unique across all
             * Artifacts in the parent MetadataStore. (Otherwise the request will fail with
             * ALREADY_EXISTS, or PERMISSION_DENIED if the caller can't view the preexisting
             * Artifact.)
             */
            public Create setArtifactId(java.lang.String artifactId) {
              this.artifactId = artifactId;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Deletes an Artifact.
           *
           * Create a request for the method "artifacts.delete".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name Required. The resource name of the Artifact to delete. Format:
           *        `projects/{project}/locations/{location}/metadataStores/{metadatastore}/artifacts/{artifac
           *        t}`
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/artifacts/[^/]+$");

            /**
             * Deletes an Artifact.
             *
             * Create a request for the method "artifacts.delete".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The resource name of the Artifact to delete. Format:
           *        `projects/{project}/locations/{location}/metadataStores/{metadatastore}/artifacts/{artifac
           *        t}`
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/artifacts/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The resource name of the Artifact to delete. Format: `projects/{project}/lo
             * cations/{location}/metadataStores/{metadatastore}/artifacts/{artifact}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The resource name of the Artifact to delete. Format:
           `projects/{project}/locations/{location}/metadataStores/{metadatastore}/artifacts/{artifact}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The resource name of the Artifact to delete. Format: `projects/{project}/lo
             * cations/{location}/metadataStores/{metadatastore}/artifacts/{artifact}`
             */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/artifacts/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * Optional. The etag of the Artifact to delete. If this is provided, it must match the
             * server's etag. Otherwise, the request will fail with a FAILED_PRECONDITION.
             */
            @com.google.api.client.util.Key
            private java.lang.String etag;

            /** Optional. The etag of the Artifact to delete. If this is provided, it must match the server's etag.
           Otherwise, the request will fail with a FAILED_PRECONDITION.
             */
            public java.lang.String getEtag() {
              return etag;
            }

            /**
             * Optional. The etag of the Artifact to delete. If this is provided, it must match the
             * server's etag. Otherwise, the request will fail with a FAILED_PRECONDITION.
             */
            public Delete setEtag(java.lang.String etag) {
              this.etag = etag;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Retrieves a specific Artifact.
           *
           * Create a request for the method "artifacts.get".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. The resource name of the Artifact to retrieve. Format:
           *        `projects/{project}/locations/{location}/metadataStores/{metadatastore}/artifacts/{artifac
           *        t}`
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Artifact> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/artifacts/[^/]+$");

            /**
             * Retrieves a specific Artifact.
             *
             * Create a request for the method "artifacts.get".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The resource name of the Artifact to retrieve. Format:
           *        `projects/{project}/locations/{location}/metadataStores/{metadatastore}/artifacts/{artifac
           *        t}`
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Artifact.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/artifacts/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The resource name of the Artifact to retrieve. Format: `projects/{project}/
             * locations/{location}/metadataStores/{metadatastore}/artifacts/{artifact}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The resource name of the Artifact to retrieve. Format:
           `projects/{project}/locations/{location}/metadataStores/{metadatastore}/artifacts/{artifact}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The resource name of the Artifact to retrieve. Format: `projects/{project}/
             * locations/{location}/metadataStores/{metadatastore}/artifacts/{artifact}`
             */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/artifacts/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Lists Artifacts in the MetadataStore.
           *
           * Create a request for the method "artifacts.list".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The MetadataStore whose Artifacts should be listed. Format:
           *        `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListArtifactsResponse> {

            private static final String REST_PATH = "v1/{+parent}/artifacts";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+$");

            /**
             * Lists Artifacts in the MetadataStore.
             *
             * Create a request for the method "artifacts.list".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The MetadataStore whose Artifacts should be listed. Format:
           *        `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListArtifactsResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The MetadataStore whose Artifacts should be listed. Format:
             * `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The MetadataStore whose Artifacts should be listed. Format:
           `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The MetadataStore whose Artifacts should be listed. Format:
             * `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Filter specifying the boolean condition for the Artifacts to satisfy in order to be
             * part of the result set. The syntax to define filter query is based on
             * https://google.aip.dev/160. The supported set of filters include the following: *
             * **Attribute filtering**: For example: `display_name = "test"`. Supported fields
             * include: `name`, `display_name`, `uri`, `state`, `schema_title`, `create_time`, and
             * `update_time`. Time fields, such as `create_time` and `update_time`, require values
             * specified in RFC-3339 format. For example: `create_time =
             * "2020-11-19T11:30:00-04:00"` * **Metadata field**: To filter on metadata fields use
             * traversal operation as follows: `metadata..`. For example:
             * `metadata.field_1.number_value = 10.0` In case the field name contains special
             * characters (such as colon), one can embed it inside double quote. For example:
             * `metadata."field:1".number_value = 10.0` * **Context based filtering**: To filter
             * Artifacts based on the contexts to which they belong, use the function operator with
             * the full resource name `in_context()`. For example:
             * `in_context("projects//locations//metadataStores//contexts/")` Each of the above
             * supported filter types can be combined together using logical operators (`AND` &
             * `OR`). Maximum nested expression depth allowed is 5. For example: `display_name =
             * "test" AND metadata.field1.bool_value = true`.
             */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** Filter specifying the boolean condition for the Artifacts to satisfy in order to be part of the
           result set. The syntax to define filter query is based on https://google.aip.dev/160. The supported
           set of filters include the following: * **Attribute filtering**: For example: `display_name =
           "test"`. Supported fields include: `name`, `display_name`, `uri`, `state`, `schema_title`,
           `create_time`, and `update_time`. Time fields, such as `create_time` and `update_time`, require
           values specified in RFC-3339 format. For example: `create_time = "2020-11-19T11:30:00-04:00"` *
           **Metadata field**: To filter on metadata fields use traversal operation as follows: `metadata..`.
           For example: `metadata.field_1.number_value = 10.0` In case the field name contains special
           characters (such as colon), one can embed it inside double quote. For example:
           `metadata."field:1".number_value = 10.0` * **Context based filtering**: To filter Artifacts based
           on the contexts to which they belong, use the function operator with the full resource name
           `in_context()`. For example: `in_context("projects//locations//metadataStores//contexts/")` Each of
           the above supported filter types can be combined together using logical operators (`AND` & `OR`).
           Maximum nested expression depth allowed is 5. For example: `display_name = "test" AND
           metadata.field1.bool_value = true`.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /**
             * Filter specifying the boolean condition for the Artifacts to satisfy in order to be
             * part of the result set. The syntax to define filter query is based on
             * https://google.aip.dev/160. The supported set of filters include the following: *
             * **Attribute filtering**: For example: `display_name = "test"`. Supported fields
             * include: `name`, `display_name`, `uri`, `state`, `schema_title`, `create_time`, and
             * `update_time`. Time fields, such as `create_time` and `update_time`, require values
             * specified in RFC-3339 format. For example: `create_time =
             * "2020-11-19T11:30:00-04:00"` * **Metadata field**: To filter on metadata fields use
             * traversal operation as follows: `metadata..`. For example:
             * `metadata.field_1.number_value = 10.0` In case the field name contains special
             * characters (such as colon), one can embed it inside double quote. For example:
             * `metadata."field:1".number_value = 10.0` * **Context based filtering**: To filter
             * Artifacts based on the contexts to which they belong, use the function operator with
             * the full resource name `in_context()`. For example:
             * `in_context("projects//locations//metadataStores//contexts/")` Each of the above
             * supported filter types can be combined together using logical operators (`AND` &
             * `OR`). Maximum nested expression depth allowed is 5. For example: `display_name =
             * "test" AND metadata.field1.bool_value = true`.
             */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /**
             * How the list of messages is ordered. Specify the values to order by and an ordering
             * operation. The default sorting order is ascending. To specify descending order for a
             * field, users append a " desc" suffix; for example: "foo desc, bar". Subfields are
             * specified with a `.` character, such as foo.bar. see
             * https://google.aip.dev/132#ordering for more details.
             */
            @com.google.api.client.util.Key
            private java.lang.String orderBy;

            /** How the list of messages is ordered. Specify the values to order by and an ordering operation. The
           default sorting order is ascending. To specify descending order for a field, users append a " desc"
           suffix; for example: "foo desc, bar". Subfields are specified with a `.` character, such as
           foo.bar. see https://google.aip.dev/132#ordering for more details.
             */
            public java.lang.String getOrderBy() {
              return orderBy;
            }

            /**
             * How the list of messages is ordered. Specify the values to order by and an ordering
             * operation. The default sorting order is ascending. To specify descending order for a
             * field, users append a " desc" suffix; for example: "foo desc, bar". Subfields are
             * specified with a `.` character, such as foo.bar. see
             * https://google.aip.dev/132#ordering for more details.
             */
            public List setOrderBy(java.lang.String orderBy) {
              this.orderBy = orderBy;
              return this;
            }

            /**
             * The maximum number of Artifacts to return. The service may return fewer. Must be in
             * range 1-1000, inclusive. Defaults to 100.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** The maximum number of Artifacts to return. The service may return fewer. Must be in range 1-1000,
           inclusive. Defaults to 100.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * The maximum number of Artifacts to return. The service may return fewer. Must be in
             * range 1-1000, inclusive. Defaults to 100.
             */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /**
             * A page token, received from a previous MetadataService.ListArtifacts call. Provide
             * this to retrieve the subsequent page. When paginating, all other provided parameters
             * must match the call that provided the page token. (Otherwise the request will fail
             * with INVALID_ARGUMENT error.)
             */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** A page token, received from a previous MetadataService.ListArtifacts call. Provide this to retrieve
           the subsequent page. When paginating, all other provided parameters must match the call that
           provided the page token. (Otherwise the request will fail with INVALID_ARGUMENT error.)
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /**
             * A page token, received from a previous MetadataService.ListArtifacts call. Provide
             * this to retrieve the subsequent page. When paginating, all other provided parameters
             * must match the call that provided the page token. (Otherwise the request will fail
             * with INVALID_ARGUMENT error.)
             */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Updates a stored Artifact.
           *
           * Create a request for the method "artifacts.patch".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           *
           * @param name Output only. The resource name of the Artifact.
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Artifact}
           * @return the request
           */
          public Patch patch(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Artifact content) throws java.io.IOException {
            Patch result = new Patch(name, content);
            initialize(result);
            return result;
          }

          public class Patch extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Artifact> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/artifacts/[^/]+$");

            /**
             * Updates a stored Artifact.
             *
             * Create a request for the method "artifacts.patch".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             * <p> {@link
             * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Output only. The resource name of the Artifact.
             * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Artifact}
             * @since 1.13
             */
            protected Patch(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Artifact content) {
              super(Aiplatform.this, "PATCH", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Artifact.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/artifacts/[^/]+$");
              }
            }

            @Override
            public Patch set$Xgafv(java.lang.String $Xgafv) {
              return (Patch) super.set$Xgafv($Xgafv);
            }

            @Override
            public Patch setAccessToken(java.lang.String accessToken) {
              return (Patch) super.setAccessToken(accessToken);
            }

            @Override
            public Patch setAlt(java.lang.String alt) {
              return (Patch) super.setAlt(alt);
            }

            @Override
            public Patch setCallback(java.lang.String callback) {
              return (Patch) super.setCallback(callback);
            }

            @Override
            public Patch setFields(java.lang.String fields) {
              return (Patch) super.setFields(fields);
            }

            @Override
            public Patch setKey(java.lang.String key) {
              return (Patch) super.setKey(key);
            }

            @Override
            public Patch setOauthToken(java.lang.String oauthToken) {
              return (Patch) super.setOauthToken(oauthToken);
            }

            @Override
            public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Patch) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Patch setQuotaUser(java.lang.String quotaUser) {
              return (Patch) super.setQuotaUser(quotaUser);
            }

            @Override
            public Patch setUploadType(java.lang.String uploadType) {
              return (Patch) super.setUploadType(uploadType);
            }

            @Override
            public Patch setUploadProtocol(java.lang.String uploadProtocol) {
              return (Patch) super.setUploadProtocol(uploadProtocol);
            }

            /** Output only. The resource name of the Artifact. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Output only. The resource name of the Artifact.
             */
            public java.lang.String getName() {
              return name;
            }

            /** Output only. The resource name of the Artifact. */
            public Patch setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/artifacts/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /** If set to true, and the Artifact is not found, a new Artifact is created. */
            @com.google.api.client.util.Key
            private java.lang.Boolean allowMissing;

            /** If set to true, and the Artifact is not found, a new Artifact is created.
             */
            public java.lang.Boolean getAllowMissing() {
              return allowMissing;
            }

            /** If set to true, and the Artifact is not found, a new Artifact is created. */
            public Patch setAllowMissing(java.lang.Boolean allowMissing) {
              this.allowMissing = allowMissing;
              return this;
            }

            /** Optional. A FieldMask indicating which fields should be updated. */
            @com.google.api.client.util.Key
            private String updateMask;

            /** Optional. A FieldMask indicating which fields should be updated.
             */
            public String getUpdateMask() {
              return updateMask;
            }

            /** Optional. A FieldMask indicating which fields should be updated. */
            public Patch setUpdateMask(String updateMask) {
              this.updateMask = updateMask;
              return this;
            }

            @Override
            public Patch set(String parameterName, Object value) {
              return (Patch) super.set(parameterName, value);
            }
          }
          /**
           * Purges Artifacts.
           *
           * Create a request for the method "artifacts.purge".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Purge#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The metadata store to purge Artifacts from. Format:
           *        `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1PurgeArtifactsRequest}
           * @return the request
           */
          public Purge purge(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1PurgeArtifactsRequest content) throws java.io.IOException {
            Purge result = new Purge(parent, content);
            initialize(result);
            return result;
          }

          public class Purge extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+parent}/artifacts:purge";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+$");

            /**
             * Purges Artifacts.
             *
             * Create a request for the method "artifacts.purge".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Purge#execute()} method to invoke the remote operation.
             * <p> {@link
             * Purge#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The metadata store to purge Artifacts from. Format:
           *        `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
             * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1PurgeArtifactsRequest}
             * @since 1.13
             */
            protected Purge(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1PurgeArtifactsRequest content) {
              super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+$");
              }
            }

            @Override
            public Purge set$Xgafv(java.lang.String $Xgafv) {
              return (Purge) super.set$Xgafv($Xgafv);
            }

            @Override
            public Purge setAccessToken(java.lang.String accessToken) {
              return (Purge) super.setAccessToken(accessToken);
            }

            @Override
            public Purge setAlt(java.lang.String alt) {
              return (Purge) super.setAlt(alt);
            }

            @Override
            public Purge setCallback(java.lang.String callback) {
              return (Purge) super.setCallback(callback);
            }

            @Override
            public Purge setFields(java.lang.String fields) {
              return (Purge) super.setFields(fields);
            }

            @Override
            public Purge setKey(java.lang.String key) {
              return (Purge) super.setKey(key);
            }

            @Override
            public Purge setOauthToken(java.lang.String oauthToken) {
              return (Purge) super.setOauthToken(oauthToken);
            }

            @Override
            public Purge setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Purge) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Purge setQuotaUser(java.lang.String quotaUser) {
              return (Purge) super.setQuotaUser(quotaUser);
            }

            @Override
            public Purge setUploadType(java.lang.String uploadType) {
              return (Purge) super.setUploadType(uploadType);
            }

            @Override
            public Purge setUploadProtocol(java.lang.String uploadProtocol) {
              return (Purge) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The metadata store to purge Artifacts from. Format:
             * `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The metadata store to purge Artifacts from. Format:
           `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The metadata store to purge Artifacts from. Format:
             * `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
             */
            public Purge setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public Purge set(String parameterName, Object value) {
              return (Purge) super.set(parameterName, value);
            }
          }
          /**
           * Retrieves lineage of an Artifact represented through Artifacts and Executions connected by Event
           * edges and returned as a LineageSubgraph.
           *
           * Create a request for the method "artifacts.queryArtifactLineageSubgraph".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link QueryArtifactLineageSubgraph#execute()} method to invoke the remote
           * operation.
           *
           * @param artifact Required. The resource name of the Artifact whose Lineage needs to be retrieved as a
           *        LineageSubgraph. Format: `projects/{project}/locations/{location}/metadataStores/{metadata
           *        store}/artifacts/{artifact}` The request may error with FAILED_PRECONDITION if the number
           *        of Artifacts, the number of Executions, or the number of Events that would be returned for
           *        the Context exceeds 1000.
           * @return the request
           */
          public QueryArtifactLineageSubgraph queryArtifactLineageSubgraph(java.lang.String artifact) throws java.io.IOException {
            QueryArtifactLineageSubgraph result = new QueryArtifactLineageSubgraph(artifact);
            initialize(result);
            return result;
          }

          public class QueryArtifactLineageSubgraph extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1LineageSubgraph> {

            private static final String REST_PATH = "v1/{+artifact}:queryArtifactLineageSubgraph";

            private final java.util.regex.Pattern ARTIFACT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/artifacts/[^/]+$");

            /**
             * Retrieves lineage of an Artifact represented through Artifacts and Executions connected by
             * Event edges and returned as a LineageSubgraph.
             *
             * Create a request for the method "artifacts.queryArtifactLineageSubgraph".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link QueryArtifactLineageSubgraph#execute()} method to invoke
             * the remote operation. <p> {@link QueryArtifactLineageSubgraph#initialize(com.google.api.client.
             * googleapis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
             * immediately after invoking the constructor. </p>
             *
             * @param artifact Required. The resource name of the Artifact whose Lineage needs to be retrieved as a
           *        LineageSubgraph. Format: `projects/{project}/locations/{location}/metadataStores/{metadata
           *        store}/artifacts/{artifact}` The request may error with FAILED_PRECONDITION if the number
           *        of Artifacts, the number of Executions, or the number of Events that would be returned for
           *        the Context exceeds 1000.
             * @since 1.13
             */
            protected QueryArtifactLineageSubgraph(java.lang.String artifact) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1LineageSubgraph.class);
              this.artifact = com.google.api.client.util.Preconditions.checkNotNull(artifact, "Required parameter artifact must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(ARTIFACT_PATTERN.matcher(artifact).matches(),
                    "Parameter artifact must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/artifacts/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public QueryArtifactLineageSubgraph set$Xgafv(java.lang.String $Xgafv) {
              return (QueryArtifactLineageSubgraph) super.set$Xgafv($Xgafv);
            }

            @Override
            public QueryArtifactLineageSubgraph setAccessToken(java.lang.String accessToken) {
              return (QueryArtifactLineageSubgraph) super.setAccessToken(accessToken);
            }

            @Override
            public QueryArtifactLineageSubgraph setAlt(java.lang.String alt) {
              return (QueryArtifactLineageSubgraph) super.setAlt(alt);
            }

            @Override
            public QueryArtifactLineageSubgraph setCallback(java.lang.String callback) {
              return (QueryArtifactLineageSubgraph) super.setCallback(callback);
            }

            @Override
            public QueryArtifactLineageSubgraph setFields(java.lang.String fields) {
              return (QueryArtifactLineageSubgraph) super.setFields(fields);
            }

            @Override
            public QueryArtifactLineageSubgraph setKey(java.lang.String key) {
              return (QueryArtifactLineageSubgraph) super.setKey(key);
            }

            @Override
            public QueryArtifactLineageSubgraph setOauthToken(java.lang.String oauthToken) {
              return (QueryArtifactLineageSubgraph) super.setOauthToken(oauthToken);
            }

            @Override
            public QueryArtifactLineageSubgraph setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (QueryArtifactLineageSubgraph) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public QueryArtifactLineageSubgraph setQuotaUser(java.lang.String quotaUser) {
              return (QueryArtifactLineageSubgraph) super.setQuotaUser(quotaUser);
            }

            @Override
            public QueryArtifactLineageSubgraph setUploadType(java.lang.String uploadType) {
              return (QueryArtifactLineageSubgraph) super.setUploadType(uploadType);
            }

            @Override
            public QueryArtifactLineageSubgraph setUploadProtocol(java.lang.String uploadProtocol) {
              return (QueryArtifactLineageSubgraph) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The resource name of the Artifact whose Lineage needs to be retrieved as a
             * LineageSubgraph. Format: `projects/{project}/locations/{location}/metadataStores/{met
             * adatastore}/artifacts/{artifact}` The request may error with FAILED_PRECONDITION if
             * the number of Artifacts, the number of Executions, or the number of Events that would
             * be returned for the Context exceeds 1000.
             */
            @com.google.api.client.util.Key
            private java.lang.String artifact;

            /** Required. The resource name of the Artifact whose Lineage needs to be retrieved as a
           LineageSubgraph. Format:
           `projects/{project}/locations/{location}/metadataStores/{metadatastore}/artifacts/{artifact}` The
           request may error with FAILED_PRECONDITION if the number of Artifacts, the number of Executions, or
           the number of Events that would be returned for the Context exceeds 1000.
             */
            public java.lang.String getArtifact() {
              return artifact;
            }

            /**
             * Required. The resource name of the Artifact whose Lineage needs to be retrieved as a
             * LineageSubgraph. Format: `projects/{project}/locations/{location}/metadataStores/{met
             * adatastore}/artifacts/{artifact}` The request may error with FAILED_PRECONDITION if
             * the number of Artifacts, the number of Executions, or the number of Events that would
             * be returned for the Context exceeds 1000.
             */
            public QueryArtifactLineageSubgraph setArtifact(java.lang.String artifact) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(ARTIFACT_PATTERN.matcher(artifact).matches(),
                    "Parameter artifact must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/artifacts/[^/]+$");
              }
              this.artifact = artifact;
              return this;
            }

            /**
             * Filter specifying the boolean condition for the Artifacts to satisfy in order to be
             * part of the Lineage Subgraph. The syntax to define filter query is based on
             * https://google.aip.dev/160. The supported set of filters include the following: *
             * **Attribute filtering**: For example: `display_name = "test"` Supported fields
             * include: `name`, `display_name`, `uri`, `state`, `schema_title`, `create_time`, and
             * `update_time`. Time fields, such as `create_time` and `update_time`, require values
             * specified in RFC-3339 format. For example: `create_time =
             * "2020-11-19T11:30:00-04:00"` * **Metadata field**: To filter on metadata fields use
             * traversal operation as follows: `metadata..`. For example:
             * `metadata.field_1.number_value = 10.0` In case the field name contains special
             * characters (such as colon), one can embed it inside double quote. For example:
             * `metadata."field:1".number_value = 10.0` Each of the above supported filter types can
             * be combined together using logical operators (`AND` & `OR`). Maximum nested
             * expression depth allowed is 5. For example: `display_name = "test" AND
             * metadata.field1.bool_value = true`.
             */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** Filter specifying the boolean condition for the Artifacts to satisfy in order to be part of the
           Lineage Subgraph. The syntax to define filter query is based on https://google.aip.dev/160. The
           supported set of filters include the following: * **Attribute filtering**: For example:
           `display_name = "test"` Supported fields include: `name`, `display_name`, `uri`, `state`,
           `schema_title`, `create_time`, and `update_time`. Time fields, such as `create_time` and
           `update_time`, require values specified in RFC-3339 format. For example: `create_time =
           "2020-11-19T11:30:00-04:00"` * **Metadata field**: To filter on metadata fields use traversal
           operation as follows: `metadata..`. For example: `metadata.field_1.number_value = 10.0` In case the
           field name contains special characters (such as colon), one can embed it inside double quote. For
           example: `metadata."field:1".number_value = 10.0` Each of the above supported filter types can be
           combined together using logical operators (`AND` & `OR`). Maximum nested expression depth allowed
           is 5. For example: `display_name = "test" AND metadata.field1.bool_value = true`.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /**
             * Filter specifying the boolean condition for the Artifacts to satisfy in order to be
             * part of the Lineage Subgraph. The syntax to define filter query is based on
             * https://google.aip.dev/160. The supported set of filters include the following: *
             * **Attribute filtering**: For example: `display_name = "test"` Supported fields
             * include: `name`, `display_name`, `uri`, `state`, `schema_title`, `create_time`, and
             * `update_time`. Time fields, such as `create_time` and `update_time`, require values
             * specified in RFC-3339 format. For example: `create_time =
             * "2020-11-19T11:30:00-04:00"` * **Metadata field**: To filter on metadata fields use
             * traversal operation as follows: `metadata..`. For example:
             * `metadata.field_1.number_value = 10.0` In case the field name contains special
             * characters (such as colon), one can embed it inside double quote. For example:
             * `metadata."field:1".number_value = 10.0` Each of the above supported filter types can
             * be combined together using logical operators (`AND` & `OR`). Maximum nested
             * expression depth allowed is 5. For example: `display_name = "test" AND
             * metadata.field1.bool_value = true`.
             */
            public QueryArtifactLineageSubgraph setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /**
             * Specifies the size of the lineage graph in terms of number of hops from the specified
             * artifact. Negative Value: INVALID_ARGUMENT error is returned 0: Only input artifact
             * is returned. No value: Transitive closure is performed to return the complete graph.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer maxHops;

            /** Specifies the size of the lineage graph in terms of number of hops from the specified artifact.
           Negative Value: INVALID_ARGUMENT error is returned 0: Only input artifact is returned. No value:
           Transitive closure is performed to return the complete graph.
             */
            public java.lang.Integer getMaxHops() {
              return maxHops;
            }

            /**
             * Specifies the size of the lineage graph in terms of number of hops from the specified
             * artifact. Negative Value: INVALID_ARGUMENT error is returned 0: Only input artifact
             * is returned. No value: Transitive closure is performed to return the complete graph.
             */
            public QueryArtifactLineageSubgraph setMaxHops(java.lang.Integer maxHops) {
              this.maxHops = maxHops;
              return this;
            }

            @Override
            public QueryArtifactLineageSubgraph set(String parameterName, Object value) {
              return (QueryArtifactLineageSubgraph) super.set(parameterName, value);
            }
          }

          /**
           * An accessor for creating requests from the Operations collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code Aiplatform aiplatform = new Aiplatform(...);}
           *   {@code Aiplatform.Operations.List request = aiplatform.operations().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public Operations operations() {
            return new Operations();
          }

          /**
           * The "operations" collection of methods.
           */
          public class Operations {

            /**
             * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
             * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
             * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
             * methods to check whether the cancellation succeeded or whether the operation completed despite
             * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
             * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
             * `Code.CANCELLED`.
             *
             * Create a request for the method "operations.cancel".
             *
             * This request holds the parameters needed by the aiplatform server.  After setting any optional
             * parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
             *
             * @param name The name of the operation resource to be cancelled.
             * @return the request
             */
            public Cancel cancel(java.lang.String name) throws java.io.IOException {
              Cancel result = new Cancel(name);
              initialize(result);
              return result;
            }

            public class Cancel extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

              private static final String REST_PATH = "v1/{+name}:cancel";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/artifacts/[^/]+/operations/[^/]+$");

              /**
               * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
               * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
               * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
               * methods to check whether the cancellation succeeded or whether the operation completed despite
               * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
               * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
               * `Code.CANCELLED`.
               *
               * Create a request for the method "operations.cancel".
               *
               * This request holds the parameters needed by the the aiplatform server.  After setting any
               * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
               * <p> {@link
               * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The name of the operation resource to be cancelled.
               * @since 1.13
               */
              protected Cancel(java.lang.String name) {
                super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/artifacts/[^/]+/operations/[^/]+$");
                }
              }

              @Override
              public Cancel set$Xgafv(java.lang.String $Xgafv) {
                return (Cancel) super.set$Xgafv($Xgafv);
              }

              @Override
              public Cancel setAccessToken(java.lang.String accessToken) {
                return (Cancel) super.setAccessToken(accessToken);
              }

              @Override
              public Cancel setAlt(java.lang.String alt) {
                return (Cancel) super.setAlt(alt);
              }

              @Override
              public Cancel setCallback(java.lang.String callback) {
                return (Cancel) super.setCallback(callback);
              }

              @Override
              public Cancel setFields(java.lang.String fields) {
                return (Cancel) super.setFields(fields);
              }

              @Override
              public Cancel setKey(java.lang.String key) {
                return (Cancel) super.setKey(key);
              }

              @Override
              public Cancel setOauthToken(java.lang.String oauthToken) {
                return (Cancel) super.setOauthToken(oauthToken);
              }

              @Override
              public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Cancel) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Cancel setQuotaUser(java.lang.String quotaUser) {
                return (Cancel) super.setQuotaUser(quotaUser);
              }

              @Override
              public Cancel setUploadType(java.lang.String uploadType) {
                return (Cancel) super.setUploadType(uploadType);
              }

              @Override
              public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
                return (Cancel) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the operation resource to be cancelled. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The name of the operation resource to be cancelled.
               */
              public java.lang.String getName() {
                return name;
              }

              /** The name of the operation resource to be cancelled. */
              public Cancel setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/artifacts/[^/]+/operations/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Cancel set(String parameterName, Object value) {
                return (Cancel) super.set(parameterName, value);
              }
            }
            /**
             * Deletes a long-running operation. This method indicates that the client is no longer interested
             * in the operation result. It does not cancel the operation. If the server doesn't support this
             * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.delete".
             *
             * This request holds the parameters needed by the aiplatform server.  After setting any optional
             * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             *
             * @param name The name of the operation resource to be deleted.
             * @return the request
             */
            public Delete delete(java.lang.String name) throws java.io.IOException {
              Delete result = new Delete(name);
              initialize(result);
              return result;
            }

            public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/artifacts/[^/]+/operations/[^/]+$");

              /**
               * Deletes a long-running operation. This method indicates that the client is no longer interested
               * in the operation result. It does not cancel the operation. If the server doesn't support this
               * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
               *
               * Create a request for the method "operations.delete".
               *
               * This request holds the parameters needed by the the aiplatform server.  After setting any
               * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
               * <p> {@link
               * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The name of the operation resource to be deleted.
               * @since 1.13
               */
              protected Delete(java.lang.String name) {
                super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/artifacts/[^/]+/operations/[^/]+$");
                }
              }

              @Override
              public Delete set$Xgafv(java.lang.String $Xgafv) {
                return (Delete) super.set$Xgafv($Xgafv);
              }

              @Override
              public Delete setAccessToken(java.lang.String accessToken) {
                return (Delete) super.setAccessToken(accessToken);
              }

              @Override
              public Delete setAlt(java.lang.String alt) {
                return (Delete) super.setAlt(alt);
              }

              @Override
              public Delete setCallback(java.lang.String callback) {
                return (Delete) super.setCallback(callback);
              }

              @Override
              public Delete setFields(java.lang.String fields) {
                return (Delete) super.setFields(fields);
              }

              @Override
              public Delete setKey(java.lang.String key) {
                return (Delete) super.setKey(key);
              }

              @Override
              public Delete setOauthToken(java.lang.String oauthToken) {
                return (Delete) super.setOauthToken(oauthToken);
              }

              @Override
              public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Delete) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Delete setQuotaUser(java.lang.String quotaUser) {
                return (Delete) super.setQuotaUser(quotaUser);
              }

              @Override
              public Delete setUploadType(java.lang.String uploadType) {
                return (Delete) super.setUploadType(uploadType);
              }

              @Override
              public Delete setUploadProtocol(java.lang.String uploadProtocol) {
                return (Delete) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the operation resource to be deleted. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The name of the operation resource to be deleted.
               */
              public java.lang.String getName() {
                return name;
              }

              /** The name of the operation resource to be deleted. */
              public Delete setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/artifacts/[^/]+/operations/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Delete set(String parameterName, Object value) {
                return (Delete) super.set(parameterName, value);
              }
            }
            /**
             * Gets the latest state of a long-running operation. Clients can use this method to poll the
             * operation result at intervals as recommended by the API service.
             *
             * Create a request for the method "operations.get".
             *
             * This request holds the parameters needed by the aiplatform server.  After setting any optional
             * parameters, call the {@link Get#execute()} method to invoke the remote operation.
             *
             * @param name The name of the operation resource.
             * @return the request
             */
            public Get get(java.lang.String name) throws java.io.IOException {
              Get result = new Get(name);
              initialize(result);
              return result;
            }

            public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/artifacts/[^/]+/operations/[^/]+$");

              /**
               * Gets the latest state of a long-running operation. Clients can use this method to poll the
               * operation result at intervals as recommended by the API service.
               *
               * Create a request for the method "operations.get".
               *
               * This request holds the parameters needed by the the aiplatform server.  After setting any
               * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
               * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The name of the operation resource.
               * @since 1.13
               */
              protected Get(java.lang.String name) {
                super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/artifacts/[^/]+/operations/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public Get set$Xgafv(java.lang.String $Xgafv) {
                return (Get) super.set$Xgafv($Xgafv);
              }

              @Override
              public Get setAccessToken(java.lang.String accessToken) {
                return (Get) super.setAccessToken(accessToken);
              }

              @Override
              public Get setAlt(java.lang.String alt) {
                return (Get) super.setAlt(alt);
              }

              @Override
              public Get setCallback(java.lang.String callback) {
                return (Get) super.setCallback(callback);
              }

              @Override
              public Get setFields(java.lang.String fields) {
                return (Get) super.setFields(fields);
              }

              @Override
              public Get setKey(java.lang.String key) {
                return (Get) super.setKey(key);
              }

              @Override
              public Get setOauthToken(java.lang.String oauthToken) {
                return (Get) super.setOauthToken(oauthToken);
              }

              @Override
              public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Get) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Get setQuotaUser(java.lang.String quotaUser) {
                return (Get) super.setQuotaUser(quotaUser);
              }

              @Override
              public Get setUploadType(java.lang.String uploadType) {
                return (Get) super.setUploadType(uploadType);
              }

              @Override
              public Get setUploadProtocol(java.lang.String uploadProtocol) {
                return (Get) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the operation resource. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The name of the operation resource.
               */
              public java.lang.String getName() {
                return name;
              }

              /** The name of the operation resource. */
              public Get setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/artifacts/[^/]+/operations/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Get set(String parameterName, Object value) {
                return (Get) super.set(parameterName, value);
              }
            }
            /**
             * Lists operations that match the specified filter in the request. If the server doesn't support
             * this method, it returns `UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.list".
             *
             * This request holds the parameters needed by the aiplatform server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation.
             *
             * @param name The name of the operation's parent resource.
             * @return the request
             */
            public List list(java.lang.String name) throws java.io.IOException {
              List result = new List(name);
              initialize(result);
              return result;
            }

            public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse> {

              private static final String REST_PATH = "v1/{+name}/operations";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/artifacts/[^/]+$");

              /**
               * Lists operations that match the specified filter in the request. If the server doesn't support
               * this method, it returns `UNIMPLEMENTED`.
               *
               * Create a request for the method "operations.list".
               *
               * This request holds the parameters needed by the the aiplatform server.  After setting any
               * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
               * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The name of the operation's parent resource.
               * @since 1.13
               */
              protected List(java.lang.String name) {
                super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/artifacts/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public List set$Xgafv(java.lang.String $Xgafv) {
                return (List) super.set$Xgafv($Xgafv);
              }

              @Override
              public List setAccessToken(java.lang.String accessToken) {
                return (List) super.setAccessToken(accessToken);
              }

              @Override
              public List setAlt(java.lang.String alt) {
                return (List) super.setAlt(alt);
              }

              @Override
              public List setCallback(java.lang.String callback) {
                return (List) super.setCallback(callback);
              }

              @Override
              public List setFields(java.lang.String fields) {
                return (List) super.setFields(fields);
              }

              @Override
              public List setKey(java.lang.String key) {
                return (List) super.setKey(key);
              }

              @Override
              public List setOauthToken(java.lang.String oauthToken) {
                return (List) super.setOauthToken(oauthToken);
              }

              @Override
              public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (List) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public List setQuotaUser(java.lang.String quotaUser) {
                return (List) super.setQuotaUser(quotaUser);
              }

              @Override
              public List setUploadType(java.lang.String uploadType) {
                return (List) super.setUploadType(uploadType);
              }

              @Override
              public List setUploadProtocol(java.lang.String uploadProtocol) {
                return (List) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the operation's parent resource. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The name of the operation's parent resource.
               */
              public java.lang.String getName() {
                return name;
              }

              /** The name of the operation's parent resource. */
              public List setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/artifacts/[^/]+$");
                }
                this.name = name;
                return this;
              }

              /** The standard list filter. */
              @com.google.api.client.util.Key
              private java.lang.String filter;

              /** The standard list filter.
               */
              public java.lang.String getFilter() {
                return filter;
              }

              /** The standard list filter. */
              public List setFilter(java.lang.String filter) {
                this.filter = filter;
                return this;
              }

              /** The standard list page size. */
              @com.google.api.client.util.Key
              private java.lang.Integer pageSize;

              /** The standard list page size.
               */
              public java.lang.Integer getPageSize() {
                return pageSize;
              }

              /** The standard list page size. */
              public List setPageSize(java.lang.Integer pageSize) {
                this.pageSize = pageSize;
                return this;
              }

              /** The standard list page token. */
              @com.google.api.client.util.Key
              private java.lang.String pageToken;

              /** The standard list page token.
               */
              public java.lang.String getPageToken() {
                return pageToken;
              }

              /** The standard list page token. */
              public List setPageToken(java.lang.String pageToken) {
                this.pageToken = pageToken;
                return this;
              }

              @Override
              public List set(String parameterName, Object value) {
                return (List) super.set(parameterName, value);
              }
            }
            /**
             * Waits until the specified long-running operation is done or reaches at most a specified timeout,
             * returning the latest state. If the operation is already done, the latest state is immediately
             * returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC
             * timeout is used. If the server does not support this method, it returns
             * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
             * the latest state before the specified timeout (including immediately), meaning even an immediate
             * response is no guarantee that the operation is done.
             *
             * Create a request for the method "operations.wait".
             *
             * This request holds the parameters needed by the aiplatform server.  After setting any optional
             * parameters, call the {@link Wait#execute()} method to invoke the remote operation.
             *
             * @param name The name of the operation resource to wait on.
             * @return the request
             */
            public Wait wait(java.lang.String name) throws java.io.IOException {
              Wait result = new Wait(name);
              initialize(result);
              return result;
            }

            public class Wait extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

              private static final String REST_PATH = "v1/{+name}:wait";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/artifacts/[^/]+/operations/[^/]+$");

              /**
               * Waits until the specified long-running operation is done or reaches at most a specified
               * timeout, returning the latest state. If the operation is already done, the latest state is
               * immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout,
               * the HTTP/RPC timeout is used. If the server does not support this method, it returns
               * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
               * the latest state before the specified timeout (including immediately), meaning even an
               * immediate response is no guarantee that the operation is done.
               *
               * Create a request for the method "operations.wait".
               *
               * This request holds the parameters needed by the the aiplatform server.  After setting any
               * optional parameters, call the {@link Wait#execute()} method to invoke the remote operation. <p>
               * {@link Wait#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The name of the operation resource to wait on.
               * @since 1.13
               */
              protected Wait(java.lang.String name) {
                super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/artifacts/[^/]+/operations/[^/]+$");
                }
              }

              @Override
              public Wait set$Xgafv(java.lang.String $Xgafv) {
                return (Wait) super.set$Xgafv($Xgafv);
              }

              @Override
              public Wait setAccessToken(java.lang.String accessToken) {
                return (Wait) super.setAccessToken(accessToken);
              }

              @Override
              public Wait setAlt(java.lang.String alt) {
                return (Wait) super.setAlt(alt);
              }

              @Override
              public Wait setCallback(java.lang.String callback) {
                return (Wait) super.setCallback(callback);
              }

              @Override
              public Wait setFields(java.lang.String fields) {
                return (Wait) super.setFields(fields);
              }

              @Override
              public Wait setKey(java.lang.String key) {
                return (Wait) super.setKey(key);
              }

              @Override
              public Wait setOauthToken(java.lang.String oauthToken) {
                return (Wait) super.setOauthToken(oauthToken);
              }

              @Override
              public Wait setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Wait) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Wait setQuotaUser(java.lang.String quotaUser) {
                return (Wait) super.setQuotaUser(quotaUser);
              }

              @Override
              public Wait setUploadType(java.lang.String uploadType) {
                return (Wait) super.setUploadType(uploadType);
              }

              @Override
              public Wait setUploadProtocol(java.lang.String uploadProtocol) {
                return (Wait) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the operation resource to wait on. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The name of the operation resource to wait on.
               */
              public java.lang.String getName() {
                return name;
              }

              /** The name of the operation resource to wait on. */
              public Wait setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/artifacts/[^/]+/operations/[^/]+$");
                }
                this.name = name;
                return this;
              }

              /**
               * The maximum duration to wait before timing out. If left blank, the wait will be at
               * most the time permitted by the underlying HTTP/RPC protocol. If RPC context
               * deadline is also specified, the shorter one will be used.
               */
              @com.google.api.client.util.Key
              private String timeout;

              /** The maximum duration to wait before timing out. If left blank, the wait will be at most the time
             permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the
             shorter one will be used.
               */
              public String getTimeout() {
                return timeout;
              }

              /**
               * The maximum duration to wait before timing out. If left blank, the wait will be at
               * most the time permitted by the underlying HTTP/RPC protocol. If RPC context
               * deadline is also specified, the shorter one will be used.
               */
              public Wait setTimeout(String timeout) {
                this.timeout = timeout;
                return this;
              }

              @Override
              public Wait set(String parameterName, Object value) {
                return (Wait) super.set(parameterName, value);
              }
            }

          }
        }
        /**
         * An accessor for creating requests from the Contexts collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Aiplatform aiplatform = new Aiplatform(...);}
         *   {@code Aiplatform.Contexts.List request = aiplatform.contexts().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Contexts contexts() {
          return new Contexts();
        }

        /**
         * The "contexts" collection of methods.
         */
        public class Contexts {

          /**
           * Adds a set of Artifacts and Executions to a Context. If any of the Artifacts or Executions have
           * already been added to a Context, they are simply skipped.
           *
           * Create a request for the method "contexts.addContextArtifactsAndExecutions".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link AddContextArtifactsAndExecutions#execute()} method to invoke the
           * remote operation.
           *
           * @param context Required. The resource name of the Context that the Artifacts and Executions belong to. Format:
           *        `projects/{project}/locations/{location}/metadataStores/{metadatastore}/contexts/{context}
           *        `
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1AddContextArtifactsAndExecutionsRequest}
           * @return the request
           */
          public AddContextArtifactsAndExecutions addContextArtifactsAndExecutions(java.lang.String context, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1AddContextArtifactsAndExecutionsRequest content) throws java.io.IOException {
            AddContextArtifactsAndExecutions result = new AddContextArtifactsAndExecutions(context, content);
            initialize(result);
            return result;
          }

          public class AddContextArtifactsAndExecutions extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1AddContextArtifactsAndExecutionsResponse> {

            private static final String REST_PATH = "v1/{+context}:addContextArtifactsAndExecutions";

            private final java.util.regex.Pattern CONTEXT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/contexts/[^/]+$");

            /**
             * Adds a set of Artifacts and Executions to a Context. If any of the Artifacts or Executions have
             * already been added to a Context, they are simply skipped.
             *
             * Create a request for the method "contexts.addContextArtifactsAndExecutions".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link AddContextArtifactsAndExecutions#execute()} method to
             * invoke the remote operation. <p> {@link AddContextArtifactsAndExecutions#initialize(com.google.
             * api.client.googleapis.services.AbstractGoogleClientRequest)} must be called to initialize this
             * instance immediately after invoking the constructor. </p>
             *
             * @param context Required. The resource name of the Context that the Artifacts and Executions belong to. Format:
           *        `projects/{project}/locations/{location}/metadataStores/{metadatastore}/contexts/{context}
           *        `
             * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1AddContextArtifactsAndExecutionsRequest}
             * @since 1.13
             */
            protected AddContextArtifactsAndExecutions(java.lang.String context, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1AddContextArtifactsAndExecutionsRequest content) {
              super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1AddContextArtifactsAndExecutionsResponse.class);
              this.context = com.google.api.client.util.Preconditions.checkNotNull(context, "Required parameter context must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(CONTEXT_PATTERN.matcher(context).matches(),
                    "Parameter context must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/contexts/[^/]+$");
              }
            }

            @Override
            public AddContextArtifactsAndExecutions set$Xgafv(java.lang.String $Xgafv) {
              return (AddContextArtifactsAndExecutions) super.set$Xgafv($Xgafv);
            }

            @Override
            public AddContextArtifactsAndExecutions setAccessToken(java.lang.String accessToken) {
              return (AddContextArtifactsAndExecutions) super.setAccessToken(accessToken);
            }

            @Override
            public AddContextArtifactsAndExecutions setAlt(java.lang.String alt) {
              return (AddContextArtifactsAndExecutions) super.setAlt(alt);
            }

            @Override
            public AddContextArtifactsAndExecutions setCallback(java.lang.String callback) {
              return (AddContextArtifactsAndExecutions) super.setCallback(callback);
            }

            @Override
            public AddContextArtifactsAndExecutions setFields(java.lang.String fields) {
              return (AddContextArtifactsAndExecutions) super.setFields(fields);
            }

            @Override
            public AddContextArtifactsAndExecutions setKey(java.lang.String key) {
              return (AddContextArtifactsAndExecutions) super.setKey(key);
            }

            @Override
            public AddContextArtifactsAndExecutions setOauthToken(java.lang.String oauthToken) {
              return (AddContextArtifactsAndExecutions) super.setOauthToken(oauthToken);
            }

            @Override
            public AddContextArtifactsAndExecutions setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (AddContextArtifactsAndExecutions) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public AddContextArtifactsAndExecutions setQuotaUser(java.lang.String quotaUser) {
              return (AddContextArtifactsAndExecutions) super.setQuotaUser(quotaUser);
            }

            @Override
            public AddContextArtifactsAndExecutions setUploadType(java.lang.String uploadType) {
              return (AddContextArtifactsAndExecutions) super.setUploadType(uploadType);
            }

            @Override
            public AddContextArtifactsAndExecutions setUploadProtocol(java.lang.String uploadProtocol) {
              return (AddContextArtifactsAndExecutions) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The resource name of the Context that the Artifacts and Executions belong
             * to. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}/c
             * ontexts/{context}`
             */
            @com.google.api.client.util.Key
            private java.lang.String context;

            /** Required. The resource name of the Context that the Artifacts and Executions belong to. Format:
           `projects/{project}/locations/{location}/metadataStores/{metadatastore}/contexts/{context}`
             */
            public java.lang.String getContext() {
              return context;
            }

            /**
             * Required. The resource name of the Context that the Artifacts and Executions belong
             * to. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}/c
             * ontexts/{context}`
             */
            public AddContextArtifactsAndExecutions setContext(java.lang.String context) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(CONTEXT_PATTERN.matcher(context).matches(),
                    "Parameter context must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/contexts/[^/]+$");
              }
              this.context = context;
              return this;
            }

            @Override
            public AddContextArtifactsAndExecutions set(String parameterName, Object value) {
              return (AddContextArtifactsAndExecutions) super.set(parameterName, value);
            }
          }
          /**
           * Adds a set of Contexts as children to a parent Context. If any of the child Contexts have already
           * been added to the parent Context, they are simply skipped. If this call would create a cycle or
           * cause any Context to have more than 10 parents, the request will fail with an INVALID_ARGUMENT
           * error.
           *
           * Create a request for the method "contexts.addContextChildren".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link AddContextChildren#execute()} method to invoke the remote operation.
           *
           * @param context Required. The resource name of the parent Context. Format:
           *        `projects/{project}/locations/{location}/metadataStores/{metadatastore}/contexts/{context}
           *        `
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1AddContextChildrenRequest}
           * @return the request
           */
          public AddContextChildren addContextChildren(java.lang.String context, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1AddContextChildrenRequest content) throws java.io.IOException {
            AddContextChildren result = new AddContextChildren(context, content);
            initialize(result);
            return result;
          }

          public class AddContextChildren extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1AddContextChildrenResponse> {

            private static final String REST_PATH = "v1/{+context}:addContextChildren";

            private final java.util.regex.Pattern CONTEXT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/contexts/[^/]+$");

            /**
             * Adds a set of Contexts as children to a parent Context. If any of the child Contexts have
             * already been added to the parent Context, they are simply skipped. If this call would create a
             * cycle or cause any Context to have more than 10 parents, the request will fail with an
             * INVALID_ARGUMENT error.
             *
             * Create a request for the method "contexts.addContextChildren".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link AddContextChildren#execute()} method to invoke the remote
             * operation. <p> {@link AddContextChildren#initialize(com.google.api.client.googleapis.services.A
             * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
             * invoking the constructor. </p>
             *
             * @param context Required. The resource name of the parent Context. Format:
           *        `projects/{project}/locations/{location}/metadataStores/{metadatastore}/contexts/{context}
           *        `
             * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1AddContextChildrenRequest}
             * @since 1.13
             */
            protected AddContextChildren(java.lang.String context, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1AddContextChildrenRequest content) {
              super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1AddContextChildrenResponse.class);
              this.context = com.google.api.client.util.Preconditions.checkNotNull(context, "Required parameter context must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(CONTEXT_PATTERN.matcher(context).matches(),
                    "Parameter context must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/contexts/[^/]+$");
              }
            }

            @Override
            public AddContextChildren set$Xgafv(java.lang.String $Xgafv) {
              return (AddContextChildren) super.set$Xgafv($Xgafv);
            }

            @Override
            public AddContextChildren setAccessToken(java.lang.String accessToken) {
              return (AddContextChildren) super.setAccessToken(accessToken);
            }

            @Override
            public AddContextChildren setAlt(java.lang.String alt) {
              return (AddContextChildren) super.setAlt(alt);
            }

            @Override
            public AddContextChildren setCallback(java.lang.String callback) {
              return (AddContextChildren) super.setCallback(callback);
            }

            @Override
            public AddContextChildren setFields(java.lang.String fields) {
              return (AddContextChildren) super.setFields(fields);
            }

            @Override
            public AddContextChildren setKey(java.lang.String key) {
              return (AddContextChildren) super.setKey(key);
            }

            @Override
            public AddContextChildren setOauthToken(java.lang.String oauthToken) {
              return (AddContextChildren) super.setOauthToken(oauthToken);
            }

            @Override
            public AddContextChildren setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (AddContextChildren) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public AddContextChildren setQuotaUser(java.lang.String quotaUser) {
              return (AddContextChildren) super.setQuotaUser(quotaUser);
            }

            @Override
            public AddContextChildren setUploadType(java.lang.String uploadType) {
              return (AddContextChildren) super.setUploadType(uploadType);
            }

            @Override
            public AddContextChildren setUploadProtocol(java.lang.String uploadProtocol) {
              return (AddContextChildren) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The resource name of the parent Context. Format: `projects/{project}/locati
             * ons/{location}/metadataStores/{metadatastore}/contexts/{context}`
             */
            @com.google.api.client.util.Key
            private java.lang.String context;

            /** Required. The resource name of the parent Context. Format:
           `projects/{project}/locations/{location}/metadataStores/{metadatastore}/contexts/{context}`
             */
            public java.lang.String getContext() {
              return context;
            }

            /**
             * Required. The resource name of the parent Context. Format: `projects/{project}/locati
             * ons/{location}/metadataStores/{metadatastore}/contexts/{context}`
             */
            public AddContextChildren setContext(java.lang.String context) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(CONTEXT_PATTERN.matcher(context).matches(),
                    "Parameter context must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/contexts/[^/]+$");
              }
              this.context = context;
              return this;
            }

            @Override
            public AddContextChildren set(String parameterName, Object value) {
              return (AddContextChildren) super.set(parameterName, value);
            }
          }
          /**
           * Creates a Context associated with a MetadataStore.
           *
           * Create a request for the method "contexts.create".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The resource name of the MetadataStore where the Context should be created. Format:
           *        `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Context}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Context content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Context> {

            private static final String REST_PATH = "v1/{+parent}/contexts";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+$");

            /**
             * Creates a Context associated with a MetadataStore.
             *
             * Create a request for the method "contexts.create".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
             * <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The resource name of the MetadataStore where the Context should be created. Format:
           *        `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
             * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Context}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Context content) {
              super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Context.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The resource name of the MetadataStore where the Context should be created.
             * Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The resource name of the MetadataStore where the Context should be created. Format:
           `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The resource name of the MetadataStore where the Context should be created.
             * Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
             */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * The {context} portion of the resource name with the format: `projects/{project}/locat
             * ions/{location}/metadataStores/{metadatastore}/contexts/{context}`. If not provided,
             * the Context's ID will be a UUID generated by the service. Must be 4-128 characters in
             * length. Valid characters are `/a-z-/`. Must be unique across all Contexts in the
             * parent MetadataStore. (Otherwise the request will fail with ALREADY_EXISTS, or
             * PERMISSION_DENIED if the caller can't view the preexisting Context.)
             */
            @com.google.api.client.util.Key
            private java.lang.String contextId;

            /** The {context} portion of the resource name with the format:
           `projects/{project}/locations/{location}/metadataStores/{metadatastore}/contexts/{context}`. If not
           provided, the Context's ID will be a UUID generated by the service. Must be 4-128 characters in
           length. Valid characters are `/a-z-/`. Must be unique across all Contexts in the parent
           MetadataStore. (Otherwise the request will fail with ALREADY_EXISTS, or PERMISSION_DENIED if the
           caller can't view the preexisting Context.)
             */
            public java.lang.String getContextId() {
              return contextId;
            }

            /**
             * The {context} portion of the resource name with the format: `projects/{project}/locat
             * ions/{location}/metadataStores/{metadatastore}/contexts/{context}`. If not provided,
             * the Context's ID will be a UUID generated by the service. Must be 4-128 characters in
             * length. Valid characters are `/a-z-/`. Must be unique across all Contexts in the
             * parent MetadataStore. (Otherwise the request will fail with ALREADY_EXISTS, or
             * PERMISSION_DENIED if the caller can't view the preexisting Context.)
             */
            public Create setContextId(java.lang.String contextId) {
              this.contextId = contextId;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Deletes a stored Context.
           *
           * Create a request for the method "contexts.delete".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name Required. The resource name of the Context to delete. Format:
           *        `projects/{project}/locations/{location}/metadataStores/{metadatastore}/contexts/{context}
           *        `
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/contexts/[^/]+$");

            /**
             * Deletes a stored Context.
             *
             * Create a request for the method "contexts.delete".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The resource name of the Context to delete. Format:
           *        `projects/{project}/locations/{location}/metadataStores/{metadatastore}/contexts/{context}
           *        `
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/contexts/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The resource name of the Context to delete. Format: `projects/{project}/loc
             * ations/{location}/metadataStores/{metadatastore}/contexts/{context}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The resource name of the Context to delete. Format:
           `projects/{project}/locations/{location}/metadataStores/{metadatastore}/contexts/{context}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The resource name of the Context to delete. Format: `projects/{project}/loc
             * ations/{location}/metadataStores/{metadatastore}/contexts/{context}`
             */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/contexts/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * Optional. The etag of the Context to delete. If this is provided, it must match the
             * server's etag. Otherwise, the request will fail with a FAILED_PRECONDITION.
             */
            @com.google.api.client.util.Key
            private java.lang.String etag;

            /** Optional. The etag of the Context to delete. If this is provided, it must match the server's etag.
           Otherwise, the request will fail with a FAILED_PRECONDITION.
             */
            public java.lang.String getEtag() {
              return etag;
            }

            /**
             * Optional. The etag of the Context to delete. If this is provided, it must match the
             * server's etag. Otherwise, the request will fail with a FAILED_PRECONDITION.
             */
            public Delete setEtag(java.lang.String etag) {
              this.etag = etag;
              return this;
            }

            /**
             * The force deletion semantics is still undefined. Users should not use this field.
             */
            @com.google.api.client.util.Key
            private java.lang.Boolean force;

            /** The force deletion semantics is still undefined. Users should not use this field.
             */
            public java.lang.Boolean getForce() {
              return force;
            }

            /**
             * The force deletion semantics is still undefined. Users should not use this field.
             */
            public Delete setForce(java.lang.Boolean force) {
              this.force = force;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Retrieves a specific Context.
           *
           * Create a request for the method "contexts.get".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. The resource name of the Context to retrieve. Format:
           *        `projects/{project}/locations/{location}/metadataStores/{metadatastore}/contexts/{context}
           *        `
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Context> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/contexts/[^/]+$");

            /**
             * Retrieves a specific Context.
             *
             * Create a request for the method "contexts.get".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The resource name of the Context to retrieve. Format:
           *        `projects/{project}/locations/{location}/metadataStores/{metadatastore}/contexts/{context}
           *        `
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Context.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/contexts/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The resource name of the Context to retrieve. Format: `projects/{project}/l
             * ocations/{location}/metadataStores/{metadatastore}/contexts/{context}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The resource name of the Context to retrieve. Format:
           `projects/{project}/locations/{location}/metadataStores/{metadatastore}/contexts/{context}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The resource name of the Context to retrieve. Format: `projects/{project}/l
             * ocations/{location}/metadataStores/{metadatastore}/contexts/{context}`
             */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/contexts/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Lists Contexts on the MetadataStore.
           *
           * Create a request for the method "contexts.list".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The MetadataStore whose Contexts should be listed. Format:
           *        `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListContextsResponse> {

            private static final String REST_PATH = "v1/{+parent}/contexts";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+$");

            /**
             * Lists Contexts on the MetadataStore.
             *
             * Create a request for the method "contexts.list".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The MetadataStore whose Contexts should be listed. Format:
           *        `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListContextsResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The MetadataStore whose Contexts should be listed. Format:
             * `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The MetadataStore whose Contexts should be listed. Format:
           `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The MetadataStore whose Contexts should be listed. Format:
             * `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Filter specifying the boolean condition for the Contexts to satisfy in order to be
             * part of the result set. The syntax to define filter query is based on
             * https://google.aip.dev/160. Following are the supported set of filters: * **Attribute
             * filtering**: For example: `display_name = "test"`. Supported fields include: `name`,
             * `display_name`, `schema_title`, `create_time`, and `update_time`. Time fields, such
             * as `create_time` and `update_time`, require values specified in RFC-3339 format. For
             * example: `create_time = "2020-11-19T11:30:00-04:00"`. * **Metadata field**: To filter
             * on metadata fields use traversal operation as follows: `metadata..`. For example:
             * `metadata.field_1.number_value = 10.0`. In case the field name contains special
             * characters (such as colon), one can embed it inside double quote. For example:
             * `metadata."field:1".number_value = 10.0` * **Parent Child filtering**: To filter
             * Contexts based on parent-child relationship use the HAS operator as follows: ```
             * parent_contexts: "projects//locations//metadataStores//contexts/" child_contexts:
             * "projects//locations//metadataStores//contexts/" ``` Each of the above supported
             * filters can be combined together using logical operators (`AND` & `OR`). Maximum
             * nested expression depth allowed is 5. For example: `display_name = "test" AND
             * metadata.field1.bool_value = true`.
             */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** Filter specifying the boolean condition for the Contexts to satisfy in order to be part of the
           result set. The syntax to define filter query is based on https://google.aip.dev/160. Following are
           the supported set of filters: * **Attribute filtering**: For example: `display_name = "test"`.
           Supported fields include: `name`, `display_name`, `schema_title`, `create_time`, and `update_time`.
           Time fields, such as `create_time` and `update_time`, require values specified in RFC-3339 format.
           For example: `create_time = "2020-11-19T11:30:00-04:00"`. * **Metadata field**: To filter on
           metadata fields use traversal operation as follows: `metadata..`. For example:
           `metadata.field_1.number_value = 10.0`. In case the field name contains special characters (such as
           colon), one can embed it inside double quote. For example: `metadata."field:1".number_value = 10.0`
           * **Parent Child filtering**: To filter Contexts based on parent-child relationship use the HAS
           operator as follows: ``` parent_contexts: "projects//locations//metadataStores//contexts/"
           child_contexts: "projects//locations//metadataStores//contexts/" ``` Each of the above supported
           filters can be combined together using logical operators (`AND` & `OR`). Maximum nested expression
           depth allowed is 5. For example: `display_name = "test" AND metadata.field1.bool_value = true`.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /**
             * Filter specifying the boolean condition for the Contexts to satisfy in order to be
             * part of the result set. The syntax to define filter query is based on
             * https://google.aip.dev/160. Following are the supported set of filters: * **Attribute
             * filtering**: For example: `display_name = "test"`. Supported fields include: `name`,
             * `display_name`, `schema_title`, `create_time`, and `update_time`. Time fields, such
             * as `create_time` and `update_time`, require values specified in RFC-3339 format. For
             * example: `create_time = "2020-11-19T11:30:00-04:00"`. * **Metadata field**: To filter
             * on metadata fields use traversal operation as follows: `metadata..`. For example:
             * `metadata.field_1.number_value = 10.0`. In case the field name contains special
             * characters (such as colon), one can embed it inside double quote. For example:
             * `metadata."field:1".number_value = 10.0` * **Parent Child filtering**: To filter
             * Contexts based on parent-child relationship use the HAS operator as follows: ```
             * parent_contexts: "projects//locations//metadataStores//contexts/" child_contexts:
             * "projects//locations//metadataStores//contexts/" ``` Each of the above supported
             * filters can be combined together using logical operators (`AND` & `OR`). Maximum
             * nested expression depth allowed is 5. For example: `display_name = "test" AND
             * metadata.field1.bool_value = true`.
             */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /**
             * How the list of messages is ordered. Specify the values to order by and an ordering
             * operation. The default sorting order is ascending. To specify descending order for a
             * field, users append a " desc" suffix; for example: "foo desc, bar". Subfields are
             * specified with a `.` character, such as foo.bar. see
             * https://google.aip.dev/132#ordering for more details.
             */
            @com.google.api.client.util.Key
            private java.lang.String orderBy;

            /** How the list of messages is ordered. Specify the values to order by and an ordering operation. The
           default sorting order is ascending. To specify descending order for a field, users append a " desc"
           suffix; for example: "foo desc, bar". Subfields are specified with a `.` character, such as
           foo.bar. see https://google.aip.dev/132#ordering for more details.
             */
            public java.lang.String getOrderBy() {
              return orderBy;
            }

            /**
             * How the list of messages is ordered. Specify the values to order by and an ordering
             * operation. The default sorting order is ascending. To specify descending order for a
             * field, users append a " desc" suffix; for example: "foo desc, bar". Subfields are
             * specified with a `.` character, such as foo.bar. see
             * https://google.aip.dev/132#ordering for more details.
             */
            public List setOrderBy(java.lang.String orderBy) {
              this.orderBy = orderBy;
              return this;
            }

            /**
             * The maximum number of Contexts to return. The service may return fewer. Must be in
             * range 1-1000, inclusive. Defaults to 100.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** The maximum number of Contexts to return. The service may return fewer. Must be in range 1-1000,
           inclusive. Defaults to 100.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * The maximum number of Contexts to return. The service may return fewer. Must be in
             * range 1-1000, inclusive. Defaults to 100.
             */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /**
             * A page token, received from a previous MetadataService.ListContexts call. Provide
             * this to retrieve the subsequent page. When paginating, all other provided parameters
             * must match the call that provided the page token. (Otherwise the request will fail
             * with INVALID_ARGUMENT error.)
             */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** A page token, received from a previous MetadataService.ListContexts call. Provide this to retrieve
           the subsequent page. When paginating, all other provided parameters must match the call that
           provided the page token. (Otherwise the request will fail with INVALID_ARGUMENT error.)
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /**
             * A page token, received from a previous MetadataService.ListContexts call. Provide
             * this to retrieve the subsequent page. When paginating, all other provided parameters
             * must match the call that provided the page token. (Otherwise the request will fail
             * with INVALID_ARGUMENT error.)
             */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Updates a stored Context.
           *
           * Create a request for the method "contexts.patch".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           *
           * @param name Immutable. The resource name of the Context.
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Context}
           * @return the request
           */
          public Patch patch(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Context content) throws java.io.IOException {
            Patch result = new Patch(name, content);
            initialize(result);
            return result;
          }

          public class Patch extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Context> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/contexts/[^/]+$");

            /**
             * Updates a stored Context.
             *
             * Create a request for the method "contexts.patch".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             * <p> {@link
             * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Immutable. The resource name of the Context.
             * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Context}
             * @since 1.13
             */
            protected Patch(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Context content) {
              super(Aiplatform.this, "PATCH", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Context.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/contexts/[^/]+$");
              }
            }

            @Override
            public Patch set$Xgafv(java.lang.String $Xgafv) {
              return (Patch) super.set$Xgafv($Xgafv);
            }

            @Override
            public Patch setAccessToken(java.lang.String accessToken) {
              return (Patch) super.setAccessToken(accessToken);
            }

            @Override
            public Patch setAlt(java.lang.String alt) {
              return (Patch) super.setAlt(alt);
            }

            @Override
            public Patch setCallback(java.lang.String callback) {
              return (Patch) super.setCallback(callback);
            }

            @Override
            public Patch setFields(java.lang.String fields) {
              return (Patch) super.setFields(fields);
            }

            @Override
            public Patch setKey(java.lang.String key) {
              return (Patch) super.setKey(key);
            }

            @Override
            public Patch setOauthToken(java.lang.String oauthToken) {
              return (Patch) super.setOauthToken(oauthToken);
            }

            @Override
            public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Patch) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Patch setQuotaUser(java.lang.String quotaUser) {
              return (Patch) super.setQuotaUser(quotaUser);
            }

            @Override
            public Patch setUploadType(java.lang.String uploadType) {
              return (Patch) super.setUploadType(uploadType);
            }

            @Override
            public Patch setUploadProtocol(java.lang.String uploadProtocol) {
              return (Patch) super.setUploadProtocol(uploadProtocol);
            }

            /** Immutable. The resource name of the Context. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Immutable. The resource name of the Context.
             */
            public java.lang.String getName() {
              return name;
            }

            /** Immutable. The resource name of the Context. */
            public Patch setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/contexts/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /** If set to true, and the Context is not found, a new Context is created. */
            @com.google.api.client.util.Key
            private java.lang.Boolean allowMissing;

            /** If set to true, and the Context is not found, a new Context is created.
             */
            public java.lang.Boolean getAllowMissing() {
              return allowMissing;
            }

            /** If set to true, and the Context is not found, a new Context is created. */
            public Patch setAllowMissing(java.lang.Boolean allowMissing) {
              this.allowMissing = allowMissing;
              return this;
            }

            /** Optional. A FieldMask indicating which fields should be updated. */
            @com.google.api.client.util.Key
            private String updateMask;

            /** Optional. A FieldMask indicating which fields should be updated.
             */
            public String getUpdateMask() {
              return updateMask;
            }

            /** Optional. A FieldMask indicating which fields should be updated. */
            public Patch setUpdateMask(String updateMask) {
              this.updateMask = updateMask;
              return this;
            }

            @Override
            public Patch set(String parameterName, Object value) {
              return (Patch) super.set(parameterName, value);
            }
          }
          /**
           * Purges Contexts.
           *
           * Create a request for the method "contexts.purge".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Purge#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The metadata store to purge Contexts from. Format:
           *        `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1PurgeContextsRequest}
           * @return the request
           */
          public Purge purge(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1PurgeContextsRequest content) throws java.io.IOException {
            Purge result = new Purge(parent, content);
            initialize(result);
            return result;
          }

          public class Purge extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+parent}/contexts:purge";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+$");

            /**
             * Purges Contexts.
             *
             * Create a request for the method "contexts.purge".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Purge#execute()} method to invoke the remote operation.
             * <p> {@link
             * Purge#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The metadata store to purge Contexts from. Format:
           *        `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
             * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1PurgeContextsRequest}
             * @since 1.13
             */
            protected Purge(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1PurgeContextsRequest content) {
              super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+$");
              }
            }

            @Override
            public Purge set$Xgafv(java.lang.String $Xgafv) {
              return (Purge) super.set$Xgafv($Xgafv);
            }

            @Override
            public Purge setAccessToken(java.lang.String accessToken) {
              return (Purge) super.setAccessToken(accessToken);
            }

            @Override
            public Purge setAlt(java.lang.String alt) {
              return (Purge) super.setAlt(alt);
            }

            @Override
            public Purge setCallback(java.lang.String callback) {
              return (Purge) super.setCallback(callback);
            }

            @Override
            public Purge setFields(java.lang.String fields) {
              return (Purge) super.setFields(fields);
            }

            @Override
            public Purge setKey(java.lang.String key) {
              return (Purge) super.setKey(key);
            }

            @Override
            public Purge setOauthToken(java.lang.String oauthToken) {
              return (Purge) super.setOauthToken(oauthToken);
            }

            @Override
            public Purge setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Purge) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Purge setQuotaUser(java.lang.String quotaUser) {
              return (Purge) super.setQuotaUser(quotaUser);
            }

            @Override
            public Purge setUploadType(java.lang.String uploadType) {
              return (Purge) super.setUploadType(uploadType);
            }

            @Override
            public Purge setUploadProtocol(java.lang.String uploadProtocol) {
              return (Purge) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The metadata store to purge Contexts from. Format:
             * `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The metadata store to purge Contexts from. Format:
           `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The metadata store to purge Contexts from. Format:
             * `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
             */
            public Purge setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public Purge set(String parameterName, Object value) {
              return (Purge) super.set(parameterName, value);
            }
          }
          /**
           * Retrieves Artifacts and Executions within the specified Context, connected by Event edges and
           * returned as a LineageSubgraph.
           *
           * Create a request for the method "contexts.queryContextLineageSubgraph".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link QueryContextLineageSubgraph#execute()} method to invoke the remote
           * operation.
           *
           * @param context Required. The resource name of the Context whose Artifacts and Executions should be retrieved as a
           *        LineageSubgraph. Format: `projects/{project}/locations/{location}/metadataStores/{metadata
           *        store}/contexts/{context}` The request may error with FAILED_PRECONDITION if the number of
           *        Artifacts, the number of Executions, or the number of Events that would be returned for
           *        the Context exceeds 1000.
           * @return the request
           */
          public QueryContextLineageSubgraph queryContextLineageSubgraph(java.lang.String context) throws java.io.IOException {
            QueryContextLineageSubgraph result = new QueryContextLineageSubgraph(context);
            initialize(result);
            return result;
          }

          public class QueryContextLineageSubgraph extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1LineageSubgraph> {

            private static final String REST_PATH = "v1/{+context}:queryContextLineageSubgraph";

            private final java.util.regex.Pattern CONTEXT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/contexts/[^/]+$");

            /**
             * Retrieves Artifacts and Executions within the specified Context, connected by Event edges and
             * returned as a LineageSubgraph.
             *
             * Create a request for the method "contexts.queryContextLineageSubgraph".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link QueryContextLineageSubgraph#execute()} method to invoke
             * the remote operation. <p> {@link QueryContextLineageSubgraph#initialize(com.google.api.client.g
             * oogleapis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
             * immediately after invoking the constructor. </p>
             *
             * @param context Required. The resource name of the Context whose Artifacts and Executions should be retrieved as a
           *        LineageSubgraph. Format: `projects/{project}/locations/{location}/metadataStores/{metadata
           *        store}/contexts/{context}` The request may error with FAILED_PRECONDITION if the number of
           *        Artifacts, the number of Executions, or the number of Events that would be returned for
           *        the Context exceeds 1000.
             * @since 1.13
             */
            protected QueryContextLineageSubgraph(java.lang.String context) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1LineageSubgraph.class);
              this.context = com.google.api.client.util.Preconditions.checkNotNull(context, "Required parameter context must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(CONTEXT_PATTERN.matcher(context).matches(),
                    "Parameter context must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/contexts/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public QueryContextLineageSubgraph set$Xgafv(java.lang.String $Xgafv) {
              return (QueryContextLineageSubgraph) super.set$Xgafv($Xgafv);
            }

            @Override
            public QueryContextLineageSubgraph setAccessToken(java.lang.String accessToken) {
              return (QueryContextLineageSubgraph) super.setAccessToken(accessToken);
            }

            @Override
            public QueryContextLineageSubgraph setAlt(java.lang.String alt) {
              return (QueryContextLineageSubgraph) super.setAlt(alt);
            }

            @Override
            public QueryContextLineageSubgraph setCallback(java.lang.String callback) {
              return (QueryContextLineageSubgraph) super.setCallback(callback);
            }

            @Override
            public QueryContextLineageSubgraph setFields(java.lang.String fields) {
              return (QueryContextLineageSubgraph) super.setFields(fields);
            }

            @Override
            public QueryContextLineageSubgraph setKey(java.lang.String key) {
              return (QueryContextLineageSubgraph) super.setKey(key);
            }

            @Override
            public QueryContextLineageSubgraph setOauthToken(java.lang.String oauthToken) {
              return (QueryContextLineageSubgraph) super.setOauthToken(oauthToken);
            }

            @Override
            public QueryContextLineageSubgraph setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (QueryContextLineageSubgraph) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public QueryContextLineageSubgraph setQuotaUser(java.lang.String quotaUser) {
              return (QueryContextLineageSubgraph) super.setQuotaUser(quotaUser);
            }

            @Override
            public QueryContextLineageSubgraph setUploadType(java.lang.String uploadType) {
              return (QueryContextLineageSubgraph) super.setUploadType(uploadType);
            }

            @Override
            public QueryContextLineageSubgraph setUploadProtocol(java.lang.String uploadProtocol) {
              return (QueryContextLineageSubgraph) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The resource name of the Context whose Artifacts and Executions should be
             * retrieved as a LineageSubgraph. Format: `projects/{project}/locations/{location}/meta
             * dataStores/{metadatastore}/contexts/{context}` The request may error with
             * FAILED_PRECONDITION if the number of Artifacts, the number of Executions, or the
             * number of Events that would be returned for the Context exceeds 1000.
             */
            @com.google.api.client.util.Key
            private java.lang.String context;

            /** Required. The resource name of the Context whose Artifacts and Executions should be retrieved as a
           LineageSubgraph. Format:
           `projects/{project}/locations/{location}/metadataStores/{metadatastore}/contexts/{context}` The
           request may error with FAILED_PRECONDITION if the number of Artifacts, the number of Executions, or
           the number of Events that would be returned for the Context exceeds 1000.
             */
            public java.lang.String getContext() {
              return context;
            }

            /**
             * Required. The resource name of the Context whose Artifacts and Executions should be
             * retrieved as a LineageSubgraph. Format: `projects/{project}/locations/{location}/meta
             * dataStores/{metadatastore}/contexts/{context}` The request may error with
             * FAILED_PRECONDITION if the number of Artifacts, the number of Executions, or the
             * number of Events that would be returned for the Context exceeds 1000.
             */
            public QueryContextLineageSubgraph setContext(java.lang.String context) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(CONTEXT_PATTERN.matcher(context).matches(),
                    "Parameter context must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/contexts/[^/]+$");
              }
              this.context = context;
              return this;
            }

            @Override
            public QueryContextLineageSubgraph set(String parameterName, Object value) {
              return (QueryContextLineageSubgraph) super.set(parameterName, value);
            }
          }
          /**
           * Remove a set of children contexts from a parent Context. If any of the child Contexts were NOT
           * added to the parent Context, they are simply skipped.
           *
           * Create a request for the method "contexts.removeContextChildren".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link RemoveContextChildren#execute()} method to invoke the remote
           * operation.
           *
           * @param context Required. The resource name of the parent Context. Format:
           *        `projects/{project}/locations/{location}/metadataStores/{metadatastore}/contexts/{context}
           *        `
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1RemoveContextChildrenRequest}
           * @return the request
           */
          public RemoveContextChildren removeContextChildren(java.lang.String context, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1RemoveContextChildrenRequest content) throws java.io.IOException {
            RemoveContextChildren result = new RemoveContextChildren(context, content);
            initialize(result);
            return result;
          }

          public class RemoveContextChildren extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1RemoveContextChildrenResponse> {

            private static final String REST_PATH = "v1/{+context}:removeContextChildren";

            private final java.util.regex.Pattern CONTEXT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/contexts/[^/]+$");

            /**
             * Remove a set of children contexts from a parent Context. If any of the child Contexts were NOT
             * added to the parent Context, they are simply skipped.
             *
             * Create a request for the method "contexts.removeContextChildren".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link RemoveContextChildren#execute()} method to invoke the
             * remote operation. <p> {@link RemoveContextChildren#initialize(com.google.api.client.googleapis.
             * services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
             * after invoking the constructor. </p>
             *
             * @param context Required. The resource name of the parent Context. Format:
           *        `projects/{project}/locations/{location}/metadataStores/{metadatastore}/contexts/{context}
           *        `
             * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1RemoveContextChildrenRequest}
             * @since 1.13
             */
            protected RemoveContextChildren(java.lang.String context, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1RemoveContextChildrenRequest content) {
              super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1RemoveContextChildrenResponse.class);
              this.context = com.google.api.client.util.Preconditions.checkNotNull(context, "Required parameter context must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(CONTEXT_PATTERN.matcher(context).matches(),
                    "Parameter context must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/contexts/[^/]+$");
              }
            }

            @Override
            public RemoveContextChildren set$Xgafv(java.lang.String $Xgafv) {
              return (RemoveContextChildren) super.set$Xgafv($Xgafv);
            }

            @Override
            public RemoveContextChildren setAccessToken(java.lang.String accessToken) {
              return (RemoveContextChildren) super.setAccessToken(accessToken);
            }

            @Override
            public RemoveContextChildren setAlt(java.lang.String alt) {
              return (RemoveContextChildren) super.setAlt(alt);
            }

            @Override
            public RemoveContextChildren setCallback(java.lang.String callback) {
              return (RemoveContextChildren) super.setCallback(callback);
            }

            @Override
            public RemoveContextChildren setFields(java.lang.String fields) {
              return (RemoveContextChildren) super.setFields(fields);
            }

            @Override
            public RemoveContextChildren setKey(java.lang.String key) {
              return (RemoveContextChildren) super.setKey(key);
            }

            @Override
            public RemoveContextChildren setOauthToken(java.lang.String oauthToken) {
              return (RemoveContextChildren) super.setOauthToken(oauthToken);
            }

            @Override
            public RemoveContextChildren setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (RemoveContextChildren) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public RemoveContextChildren setQuotaUser(java.lang.String quotaUser) {
              return (RemoveContextChildren) super.setQuotaUser(quotaUser);
            }

            @Override
            public RemoveContextChildren setUploadType(java.lang.String uploadType) {
              return (RemoveContextChildren) super.setUploadType(uploadType);
            }

            @Override
            public RemoveContextChildren setUploadProtocol(java.lang.String uploadProtocol) {
              return (RemoveContextChildren) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The resource name of the parent Context. Format: `projects/{project}/locati
             * ons/{location}/metadataStores/{metadatastore}/contexts/{context}`
             */
            @com.google.api.client.util.Key
            private java.lang.String context;

            /** Required. The resource name of the parent Context. Format:
           `projects/{project}/locations/{location}/metadataStores/{metadatastore}/contexts/{context}`
             */
            public java.lang.String getContext() {
              return context;
            }

            /**
             * Required. The resource name of the parent Context. Format: `projects/{project}/locati
             * ons/{location}/metadataStores/{metadatastore}/contexts/{context}`
             */
            public RemoveContextChildren setContext(java.lang.String context) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(CONTEXT_PATTERN.matcher(context).matches(),
                    "Parameter context must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/contexts/[^/]+$");
              }
              this.context = context;
              return this;
            }

            @Override
            public RemoveContextChildren set(String parameterName, Object value) {
              return (RemoveContextChildren) super.set(parameterName, value);
            }
          }

          /**
           * An accessor for creating requests from the Operations collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code Aiplatform aiplatform = new Aiplatform(...);}
           *   {@code Aiplatform.Operations.List request = aiplatform.operations().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public Operations operations() {
            return new Operations();
          }

          /**
           * The "operations" collection of methods.
           */
          public class Operations {

            /**
             * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
             * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
             * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
             * methods to check whether the cancellation succeeded or whether the operation completed despite
             * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
             * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
             * `Code.CANCELLED`.
             *
             * Create a request for the method "operations.cancel".
             *
             * This request holds the parameters needed by the aiplatform server.  After setting any optional
             * parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
             *
             * @param name The name of the operation resource to be cancelled.
             * @return the request
             */
            public Cancel cancel(java.lang.String name) throws java.io.IOException {
              Cancel result = new Cancel(name);
              initialize(result);
              return result;
            }

            public class Cancel extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

              private static final String REST_PATH = "v1/{+name}:cancel";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/contexts/[^/]+/operations/[^/]+$");

              /**
               * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
               * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
               * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
               * methods to check whether the cancellation succeeded or whether the operation completed despite
               * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
               * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
               * `Code.CANCELLED`.
               *
               * Create a request for the method "operations.cancel".
               *
               * This request holds the parameters needed by the the aiplatform server.  After setting any
               * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
               * <p> {@link
               * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The name of the operation resource to be cancelled.
               * @since 1.13
               */
              protected Cancel(java.lang.String name) {
                super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/contexts/[^/]+/operations/[^/]+$");
                }
              }

              @Override
              public Cancel set$Xgafv(java.lang.String $Xgafv) {
                return (Cancel) super.set$Xgafv($Xgafv);
              }

              @Override
              public Cancel setAccessToken(java.lang.String accessToken) {
                return (Cancel) super.setAccessToken(accessToken);
              }

              @Override
              public Cancel setAlt(java.lang.String alt) {
                return (Cancel) super.setAlt(alt);
              }

              @Override
              public Cancel setCallback(java.lang.String callback) {
                return (Cancel) super.setCallback(callback);
              }

              @Override
              public Cancel setFields(java.lang.String fields) {
                return (Cancel) super.setFields(fields);
              }

              @Override
              public Cancel setKey(java.lang.String key) {
                return (Cancel) super.setKey(key);
              }

              @Override
              public Cancel setOauthToken(java.lang.String oauthToken) {
                return (Cancel) super.setOauthToken(oauthToken);
              }

              @Override
              public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Cancel) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Cancel setQuotaUser(java.lang.String quotaUser) {
                return (Cancel) super.setQuotaUser(quotaUser);
              }

              @Override
              public Cancel setUploadType(java.lang.String uploadType) {
                return (Cancel) super.setUploadType(uploadType);
              }

              @Override
              public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
                return (Cancel) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the operation resource to be cancelled. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The name of the operation resource to be cancelled.
               */
              public java.lang.String getName() {
                return name;
              }

              /** The name of the operation resource to be cancelled. */
              public Cancel setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/contexts/[^/]+/operations/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Cancel set(String parameterName, Object value) {
                return (Cancel) super.set(parameterName, value);
              }
            }
            /**
             * Deletes a long-running operation. This method indicates that the client is no longer interested
             * in the operation result. It does not cancel the operation. If the server doesn't support this
             * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.delete".
             *
             * This request holds the parameters needed by the aiplatform server.  After setting any optional
             * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             *
             * @param name The name of the operation resource to be deleted.
             * @return the request
             */
            public Delete delete(java.lang.String name) throws java.io.IOException {
              Delete result = new Delete(name);
              initialize(result);
              return result;
            }

            public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/contexts/[^/]+/operations/[^/]+$");

              /**
               * Deletes a long-running operation. This method indicates that the client is no longer interested
               * in the operation result. It does not cancel the operation. If the server doesn't support this
               * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
               *
               * Create a request for the method "operations.delete".
               *
               * This request holds the parameters needed by the the aiplatform server.  After setting any
               * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
               * <p> {@link
               * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The name of the operation resource to be deleted.
               * @since 1.13
               */
              protected Delete(java.lang.String name) {
                super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/contexts/[^/]+/operations/[^/]+$");
                }
              }

              @Override
              public Delete set$Xgafv(java.lang.String $Xgafv) {
                return (Delete) super.set$Xgafv($Xgafv);
              }

              @Override
              public Delete setAccessToken(java.lang.String accessToken) {
                return (Delete) super.setAccessToken(accessToken);
              }

              @Override
              public Delete setAlt(java.lang.String alt) {
                return (Delete) super.setAlt(alt);
              }

              @Override
              public Delete setCallback(java.lang.String callback) {
                return (Delete) super.setCallback(callback);
              }

              @Override
              public Delete setFields(java.lang.String fields) {
                return (Delete) super.setFields(fields);
              }

              @Override
              public Delete setKey(java.lang.String key) {
                return (Delete) super.setKey(key);
              }

              @Override
              public Delete setOauthToken(java.lang.String oauthToken) {
                return (Delete) super.setOauthToken(oauthToken);
              }

              @Override
              public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Delete) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Delete setQuotaUser(java.lang.String quotaUser) {
                return (Delete) super.setQuotaUser(quotaUser);
              }

              @Override
              public Delete setUploadType(java.lang.String uploadType) {
                return (Delete) super.setUploadType(uploadType);
              }

              @Override
              public Delete setUploadProtocol(java.lang.String uploadProtocol) {
                return (Delete) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the operation resource to be deleted. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The name of the operation resource to be deleted.
               */
              public java.lang.String getName() {
                return name;
              }

              /** The name of the operation resource to be deleted. */
              public Delete setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/contexts/[^/]+/operations/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Delete set(String parameterName, Object value) {
                return (Delete) super.set(parameterName, value);
              }
            }
            /**
             * Gets the latest state of a long-running operation. Clients can use this method to poll the
             * operation result at intervals as recommended by the API service.
             *
             * Create a request for the method "operations.get".
             *
             * This request holds the parameters needed by the aiplatform server.  After setting any optional
             * parameters, call the {@link Get#execute()} method to invoke the remote operation.
             *
             * @param name The name of the operation resource.
             * @return the request
             */
            public Get get(java.lang.String name) throws java.io.IOException {
              Get result = new Get(name);
              initialize(result);
              return result;
            }

            public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/contexts/[^/]+/operations/[^/]+$");

              /**
               * Gets the latest state of a long-running operation. Clients can use this method to poll the
               * operation result at intervals as recommended by the API service.
               *
               * Create a request for the method "operations.get".
               *
               * This request holds the parameters needed by the the aiplatform server.  After setting any
               * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
               * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The name of the operation resource.
               * @since 1.13
               */
              protected Get(java.lang.String name) {
                super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/contexts/[^/]+/operations/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public Get set$Xgafv(java.lang.String $Xgafv) {
                return (Get) super.set$Xgafv($Xgafv);
              }

              @Override
              public Get setAccessToken(java.lang.String accessToken) {
                return (Get) super.setAccessToken(accessToken);
              }

              @Override
              public Get setAlt(java.lang.String alt) {
                return (Get) super.setAlt(alt);
              }

              @Override
              public Get setCallback(java.lang.String callback) {
                return (Get) super.setCallback(callback);
              }

              @Override
              public Get setFields(java.lang.String fields) {
                return (Get) super.setFields(fields);
              }

              @Override
              public Get setKey(java.lang.String key) {
                return (Get) super.setKey(key);
              }

              @Override
              public Get setOauthToken(java.lang.String oauthToken) {
                return (Get) super.setOauthToken(oauthToken);
              }

              @Override
              public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Get) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Get setQuotaUser(java.lang.String quotaUser) {
                return (Get) super.setQuotaUser(quotaUser);
              }

              @Override
              public Get setUploadType(java.lang.String uploadType) {
                return (Get) super.setUploadType(uploadType);
              }

              @Override
              public Get setUploadProtocol(java.lang.String uploadProtocol) {
                return (Get) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the operation resource. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The name of the operation resource.
               */
              public java.lang.String getName() {
                return name;
              }

              /** The name of the operation resource. */
              public Get setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/contexts/[^/]+/operations/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Get set(String parameterName, Object value) {
                return (Get) super.set(parameterName, value);
              }
            }
            /**
             * Lists operations that match the specified filter in the request. If the server doesn't support
             * this method, it returns `UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.list".
             *
             * This request holds the parameters needed by the aiplatform server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation.
             *
             * @param name The name of the operation's parent resource.
             * @return the request
             */
            public List list(java.lang.String name) throws java.io.IOException {
              List result = new List(name);
              initialize(result);
              return result;
            }

            public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse> {

              private static final String REST_PATH = "v1/{+name}/operations";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/contexts/[^/]+$");

              /**
               * Lists operations that match the specified filter in the request. If the server doesn't support
               * this method, it returns `UNIMPLEMENTED`.
               *
               * Create a request for the method "operations.list".
               *
               * This request holds the parameters needed by the the aiplatform server.  After setting any
               * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
               * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The name of the operation's parent resource.
               * @since 1.13
               */
              protected List(java.lang.String name) {
                super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/contexts/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public List set$Xgafv(java.lang.String $Xgafv) {
                return (List) super.set$Xgafv($Xgafv);
              }

              @Override
              public List setAccessToken(java.lang.String accessToken) {
                return (List) super.setAccessToken(accessToken);
              }

              @Override
              public List setAlt(java.lang.String alt) {
                return (List) super.setAlt(alt);
              }

              @Override
              public List setCallback(java.lang.String callback) {
                return (List) super.setCallback(callback);
              }

              @Override
              public List setFields(java.lang.String fields) {
                return (List) super.setFields(fields);
              }

              @Override
              public List setKey(java.lang.String key) {
                return (List) super.setKey(key);
              }

              @Override
              public List setOauthToken(java.lang.String oauthToken) {
                return (List) super.setOauthToken(oauthToken);
              }

              @Override
              public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (List) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public List setQuotaUser(java.lang.String quotaUser) {
                return (List) super.setQuotaUser(quotaUser);
              }

              @Override
              public List setUploadType(java.lang.String uploadType) {
                return (List) super.setUploadType(uploadType);
              }

              @Override
              public List setUploadProtocol(java.lang.String uploadProtocol) {
                return (List) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the operation's parent resource. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The name of the operation's parent resource.
               */
              public java.lang.String getName() {
                return name;
              }

              /** The name of the operation's parent resource. */
              public List setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/contexts/[^/]+$");
                }
                this.name = name;
                return this;
              }

              /** The standard list filter. */
              @com.google.api.client.util.Key
              private java.lang.String filter;

              /** The standard list filter.
               */
              public java.lang.String getFilter() {
                return filter;
              }

              /** The standard list filter. */
              public List setFilter(java.lang.String filter) {
                this.filter = filter;
                return this;
              }

              /** The standard list page size. */
              @com.google.api.client.util.Key
              private java.lang.Integer pageSize;

              /** The standard list page size.
               */
              public java.lang.Integer getPageSize() {
                return pageSize;
              }

              /** The standard list page size. */
              public List setPageSize(java.lang.Integer pageSize) {
                this.pageSize = pageSize;
                return this;
              }

              /** The standard list page token. */
              @com.google.api.client.util.Key
              private java.lang.String pageToken;

              /** The standard list page token.
               */
              public java.lang.String getPageToken() {
                return pageToken;
              }

              /** The standard list page token. */
              public List setPageToken(java.lang.String pageToken) {
                this.pageToken = pageToken;
                return this;
              }

              @Override
              public List set(String parameterName, Object value) {
                return (List) super.set(parameterName, value);
              }
            }
            /**
             * Waits until the specified long-running operation is done or reaches at most a specified timeout,
             * returning the latest state. If the operation is already done, the latest state is immediately
             * returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC
             * timeout is used. If the server does not support this method, it returns
             * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
             * the latest state before the specified timeout (including immediately), meaning even an immediate
             * response is no guarantee that the operation is done.
             *
             * Create a request for the method "operations.wait".
             *
             * This request holds the parameters needed by the aiplatform server.  After setting any optional
             * parameters, call the {@link Wait#execute()} method to invoke the remote operation.
             *
             * @param name The name of the operation resource to wait on.
             * @return the request
             */
            public Wait wait(java.lang.String name) throws java.io.IOException {
              Wait result = new Wait(name);
              initialize(result);
              return result;
            }

            public class Wait extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

              private static final String REST_PATH = "v1/{+name}:wait";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/contexts/[^/]+/operations/[^/]+$");

              /**
               * Waits until the specified long-running operation is done or reaches at most a specified
               * timeout, returning the latest state. If the operation is already done, the latest state is
               * immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout,
               * the HTTP/RPC timeout is used. If the server does not support this method, it returns
               * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
               * the latest state before the specified timeout (including immediately), meaning even an
               * immediate response is no guarantee that the operation is done.
               *
               * Create a request for the method "operations.wait".
               *
               * This request holds the parameters needed by the the aiplatform server.  After setting any
               * optional parameters, call the {@link Wait#execute()} method to invoke the remote operation. <p>
               * {@link Wait#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The name of the operation resource to wait on.
               * @since 1.13
               */
              protected Wait(java.lang.String name) {
                super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/contexts/[^/]+/operations/[^/]+$");
                }
              }

              @Override
              public Wait set$Xgafv(java.lang.String $Xgafv) {
                return (Wait) super.set$Xgafv($Xgafv);
              }

              @Override
              public Wait setAccessToken(java.lang.String accessToken) {
                return (Wait) super.setAccessToken(accessToken);
              }

              @Override
              public Wait setAlt(java.lang.String alt) {
                return (Wait) super.setAlt(alt);
              }

              @Override
              public Wait setCallback(java.lang.String callback) {
                return (Wait) super.setCallback(callback);
              }

              @Override
              public Wait setFields(java.lang.String fields) {
                return (Wait) super.setFields(fields);
              }

              @Override
              public Wait setKey(java.lang.String key) {
                return (Wait) super.setKey(key);
              }

              @Override
              public Wait setOauthToken(java.lang.String oauthToken) {
                return (Wait) super.setOauthToken(oauthToken);
              }

              @Override
              public Wait setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Wait) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Wait setQuotaUser(java.lang.String quotaUser) {
                return (Wait) super.setQuotaUser(quotaUser);
              }

              @Override
              public Wait setUploadType(java.lang.String uploadType) {
                return (Wait) super.setUploadType(uploadType);
              }

              @Override
              public Wait setUploadProtocol(java.lang.String uploadProtocol) {
                return (Wait) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the operation resource to wait on. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The name of the operation resource to wait on.
               */
              public java.lang.String getName() {
                return name;
              }

              /** The name of the operation resource to wait on. */
              public Wait setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/contexts/[^/]+/operations/[^/]+$");
                }
                this.name = name;
                return this;
              }

              /**
               * The maximum duration to wait before timing out. If left blank, the wait will be at
               * most the time permitted by the underlying HTTP/RPC protocol. If RPC context
               * deadline is also specified, the shorter one will be used.
               */
              @com.google.api.client.util.Key
              private String timeout;

              /** The maximum duration to wait before timing out. If left blank, the wait will be at most the time
             permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the
             shorter one will be used.
               */
              public String getTimeout() {
                return timeout;
              }

              /**
               * The maximum duration to wait before timing out. If left blank, the wait will be at
               * most the time permitted by the underlying HTTP/RPC protocol. If RPC context
               * deadline is also specified, the shorter one will be used.
               */
              public Wait setTimeout(String timeout) {
                this.timeout = timeout;
                return this;
              }

              @Override
              public Wait set(String parameterName, Object value) {
                return (Wait) super.set(parameterName, value);
              }
            }

          }
        }
        /**
         * An accessor for creating requests from the Executions collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Aiplatform aiplatform = new Aiplatform(...);}
         *   {@code Aiplatform.Executions.List request = aiplatform.executions().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Executions executions() {
          return new Executions();
        }

        /**
         * The "executions" collection of methods.
         */
        public class Executions {

          /**
           * Adds Events to the specified Execution. An Event indicates whether an Artifact was used as an
           * input or output for an Execution. If an Event already exists between the Execution and the
           * Artifact, the Event is skipped.
           *
           * Create a request for the method "executions.addExecutionEvents".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link AddExecutionEvents#execute()} method to invoke the remote operation.
           *
           * @param execution Required. The resource name of the Execution that the Events connect Artifacts with. Format:
           *        `projects/{project}/locations/{location}/metadataStores/{metadatastore}/executions/{execut
           *        ion}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1AddExecutionEventsRequest}
           * @return the request
           */
          public AddExecutionEvents addExecutionEvents(java.lang.String execution, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1AddExecutionEventsRequest content) throws java.io.IOException {
            AddExecutionEvents result = new AddExecutionEvents(execution, content);
            initialize(result);
            return result;
          }

          public class AddExecutionEvents extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1AddExecutionEventsResponse> {

            private static final String REST_PATH = "v1/{+execution}:addExecutionEvents";

            private final java.util.regex.Pattern EXECUTION_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/executions/[^/]+$");

            /**
             * Adds Events to the specified Execution. An Event indicates whether an Artifact was used as an
             * input or output for an Execution. If an Event already exists between the Execution and the
             * Artifact, the Event is skipped.
             *
             * Create a request for the method "executions.addExecutionEvents".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link AddExecutionEvents#execute()} method to invoke the remote
             * operation. <p> {@link AddExecutionEvents#initialize(com.google.api.client.googleapis.services.A
             * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
             * invoking the constructor. </p>
             *
             * @param execution Required. The resource name of the Execution that the Events connect Artifacts with. Format:
           *        `projects/{project}/locations/{location}/metadataStores/{metadatastore}/executions/{execut
           *        ion}`
             * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1AddExecutionEventsRequest}
             * @since 1.13
             */
            protected AddExecutionEvents(java.lang.String execution, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1AddExecutionEventsRequest content) {
              super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1AddExecutionEventsResponse.class);
              this.execution = com.google.api.client.util.Preconditions.checkNotNull(execution, "Required parameter execution must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(EXECUTION_PATTERN.matcher(execution).matches(),
                    "Parameter execution must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/executions/[^/]+$");
              }
            }

            @Override
            public AddExecutionEvents set$Xgafv(java.lang.String $Xgafv) {
              return (AddExecutionEvents) super.set$Xgafv($Xgafv);
            }

            @Override
            public AddExecutionEvents setAccessToken(java.lang.String accessToken) {
              return (AddExecutionEvents) super.setAccessToken(accessToken);
            }

            @Override
            public AddExecutionEvents setAlt(java.lang.String alt) {
              return (AddExecutionEvents) super.setAlt(alt);
            }

            @Override
            public AddExecutionEvents setCallback(java.lang.String callback) {
              return (AddExecutionEvents) super.setCallback(callback);
            }

            @Override
            public AddExecutionEvents setFields(java.lang.String fields) {
              return (AddExecutionEvents) super.setFields(fields);
            }

            @Override
            public AddExecutionEvents setKey(java.lang.String key) {
              return (AddExecutionEvents) super.setKey(key);
            }

            @Override
            public AddExecutionEvents setOauthToken(java.lang.String oauthToken) {
              return (AddExecutionEvents) super.setOauthToken(oauthToken);
            }

            @Override
            public AddExecutionEvents setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (AddExecutionEvents) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public AddExecutionEvents setQuotaUser(java.lang.String quotaUser) {
              return (AddExecutionEvents) super.setQuotaUser(quotaUser);
            }

            @Override
            public AddExecutionEvents setUploadType(java.lang.String uploadType) {
              return (AddExecutionEvents) super.setUploadType(uploadType);
            }

            @Override
            public AddExecutionEvents setUploadProtocol(java.lang.String uploadProtocol) {
              return (AddExecutionEvents) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The resource name of the Execution that the Events connect Artifacts with.
             * Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}/execu
             * tions/{execution}`
             */
            @com.google.api.client.util.Key
            private java.lang.String execution;

            /** Required. The resource name of the Execution that the Events connect Artifacts with. Format:
           `projects/{project}/locations/{location}/metadataStores/{metadatastore}/executions/{execution}`
             */
            public java.lang.String getExecution() {
              return execution;
            }

            /**
             * Required. The resource name of the Execution that the Events connect Artifacts with.
             * Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}/execu
             * tions/{execution}`
             */
            public AddExecutionEvents setExecution(java.lang.String execution) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(EXECUTION_PATTERN.matcher(execution).matches(),
                    "Parameter execution must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/executions/[^/]+$");
              }
              this.execution = execution;
              return this;
            }

            @Override
            public AddExecutionEvents set(String parameterName, Object value) {
              return (AddExecutionEvents) super.set(parameterName, value);
            }
          }
          /**
           * Creates an Execution associated with a MetadataStore.
           *
           * Create a request for the method "executions.create".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The resource name of the MetadataStore where the Execution should be created. Format:
           *        `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Execution}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Execution content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Execution> {

            private static final String REST_PATH = "v1/{+parent}/executions";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+$");

            /**
             * Creates an Execution associated with a MetadataStore.
             *
             * Create a request for the method "executions.create".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
             * <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The resource name of the MetadataStore where the Execution should be created. Format:
           *        `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
             * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Execution}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Execution content) {
              super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Execution.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The resource name of the MetadataStore where the Execution should be
             * created. Format:
             * `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The resource name of the MetadataStore where the Execution should be created. Format:
           `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The resource name of the MetadataStore where the Execution should be
             * created. Format:
             * `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
             */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * The {execution} portion of the resource name with the format: `projects/{project}/loc
             * ations/{location}/metadataStores/{metadatastore}/executions/{execution}` If not
             * provided, the Execution's ID will be a UUID generated by the service. Must be 4-128
             * characters in length. Valid characters are `/a-z-/`. Must be unique across all
             * Executions in the parent MetadataStore. (Otherwise the request will fail with
             * ALREADY_EXISTS, or PERMISSION_DENIED if the caller can't view the preexisting
             * Execution.)
             */
            @com.google.api.client.util.Key
            private java.lang.String executionId;

            /** The {execution} portion of the resource name with the format:
           `projects/{project}/locations/{location}/metadataStores/{metadatastore}/executions/{execution}` If
           not provided, the Execution's ID will be a UUID generated by the service. Must be 4-128 characters
           in length. Valid characters are `/a-z-/`. Must be unique across all Executions in the parent
           MetadataStore. (Otherwise the request will fail with ALREADY_EXISTS, or PERMISSION_DENIED if the
           caller can't view the preexisting Execution.)
             */
            public java.lang.String getExecutionId() {
              return executionId;
            }

            /**
             * The {execution} portion of the resource name with the format: `projects/{project}/loc
             * ations/{location}/metadataStores/{metadatastore}/executions/{execution}` If not
             * provided, the Execution's ID will be a UUID generated by the service. Must be 4-128
             * characters in length. Valid characters are `/a-z-/`. Must be unique across all
             * Executions in the parent MetadataStore. (Otherwise the request will fail with
             * ALREADY_EXISTS, or PERMISSION_DENIED if the caller can't view the preexisting
             * Execution.)
             */
            public Create setExecutionId(java.lang.String executionId) {
              this.executionId = executionId;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Deletes an Execution.
           *
           * Create a request for the method "executions.delete".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name Required. The resource name of the Execution to delete. Format:
           *        `projects/{project}/locations/{location}/metadataStores/{metadatastore}/executions/{execut
           *        ion}`
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/executions/[^/]+$");

            /**
             * Deletes an Execution.
             *
             * Create a request for the method "executions.delete".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The resource name of the Execution to delete. Format:
           *        `projects/{project}/locations/{location}/metadataStores/{metadatastore}/executions/{execut
           *        ion}`
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/executions/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The resource name of the Execution to delete. Format: `projects/{project}/l
             * ocations/{location}/metadataStores/{metadatastore}/executions/{execution}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The resource name of the Execution to delete. Format:
           `projects/{project}/locations/{location}/metadataStores/{metadatastore}/executions/{execution}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The resource name of the Execution to delete. Format: `projects/{project}/l
             * ocations/{location}/metadataStores/{metadatastore}/executions/{execution}`
             */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/executions/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * Optional. The etag of the Execution to delete. If this is provided, it must match the
             * server's etag. Otherwise, the request will fail with a FAILED_PRECONDITION.
             */
            @com.google.api.client.util.Key
            private java.lang.String etag;

            /** Optional. The etag of the Execution to delete. If this is provided, it must match the server's
           etag. Otherwise, the request will fail with a FAILED_PRECONDITION.
             */
            public java.lang.String getEtag() {
              return etag;
            }

            /**
             * Optional. The etag of the Execution to delete. If this is provided, it must match the
             * server's etag. Otherwise, the request will fail with a FAILED_PRECONDITION.
             */
            public Delete setEtag(java.lang.String etag) {
              this.etag = etag;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Retrieves a specific Execution.
           *
           * Create a request for the method "executions.get".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. The resource name of the Execution to retrieve. Format:
           *        `projects/{project}/locations/{location}/metadataStores/{metadatastore}/executions/{execut
           *        ion}`
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Execution> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/executions/[^/]+$");

            /**
             * Retrieves a specific Execution.
             *
             * Create a request for the method "executions.get".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The resource name of the Execution to retrieve. Format:
           *        `projects/{project}/locations/{location}/metadataStores/{metadatastore}/executions/{execut
           *        ion}`
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Execution.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/executions/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The resource name of the Execution to retrieve. Format: `projects/{project}
             * /locations/{location}/metadataStores/{metadatastore}/executions/{execution}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The resource name of the Execution to retrieve. Format:
           `projects/{project}/locations/{location}/metadataStores/{metadatastore}/executions/{execution}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The resource name of the Execution to retrieve. Format: `projects/{project}
             * /locations/{location}/metadataStores/{metadatastore}/executions/{execution}`
             */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/executions/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Lists Executions in the MetadataStore.
           *
           * Create a request for the method "executions.list".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The MetadataStore whose Executions should be listed. Format:
           *        `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListExecutionsResponse> {

            private static final String REST_PATH = "v1/{+parent}/executions";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+$");

            /**
             * Lists Executions in the MetadataStore.
             *
             * Create a request for the method "executions.list".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The MetadataStore whose Executions should be listed. Format:
           *        `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListExecutionsResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The MetadataStore whose Executions should be listed. Format:
             * `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The MetadataStore whose Executions should be listed. Format:
           `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The MetadataStore whose Executions should be listed. Format:
             * `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Filter specifying the boolean condition for the Executions to satisfy in order to be
             * part of the result set. The syntax to define filter query is based on
             * https://google.aip.dev/160. Following are the supported set of filters: * **Attribute
             * filtering**: For example: `display_name = "test"`. Supported fields include: `name`,
             * `display_name`, `state`, `schema_title`, `create_time`, and `update_time`. Time
             * fields, such as `create_time` and `update_time`, require values specified in RFC-3339
             * format. For example: `create_time = "2020-11-19T11:30:00-04:00"`. * **Metadata
             * field**: To filter on metadata fields use traversal operation as follows:
             * `metadata..` For example: `metadata.field_1.number_value = 10.0` In case the field
             * name contains special characters (such as colon), one can embed it inside double
             * quote. For example: `metadata."field:1".number_value = 10.0` * **Context based
             * filtering**: To filter Executions based on the contexts to which they belong use the
             * function operator with the full resource name: `in_context()`. For example:
             * `in_context("projects//locations//metadataStores//contexts/")` Each of the above
             * supported filters can be combined together using logical operators (`AND` & `OR`).
             * Maximum nested expression depth allowed is 5. For example: `display_name = "test" AND
             * metadata.field1.bool_value = true`.
             */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** Filter specifying the boolean condition for the Executions to satisfy in order to be part of the
           result set. The syntax to define filter query is based on https://google.aip.dev/160. Following are
           the supported set of filters: * **Attribute filtering**: For example: `display_name = "test"`.
           Supported fields include: `name`, `display_name`, `state`, `schema_title`, `create_time`, and
           `update_time`. Time fields, such as `create_time` and `update_time`, require values specified in
           RFC-3339 format. For example: `create_time = "2020-11-19T11:30:00-04:00"`. * **Metadata field**: To
           filter on metadata fields use traversal operation as follows: `metadata..` For example:
           `metadata.field_1.number_value = 10.0` In case the field name contains special characters (such as
           colon), one can embed it inside double quote. For example: `metadata."field:1".number_value = 10.0`
           * **Context based filtering**: To filter Executions based on the contexts to which they belong use
           the function operator with the full resource name: `in_context()`. For example:
           `in_context("projects//locations//metadataStores//contexts/")` Each of the above supported filters
           can be combined together using logical operators (`AND` & `OR`). Maximum nested expression depth
           allowed is 5. For example: `display_name = "test" AND metadata.field1.bool_value = true`.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /**
             * Filter specifying the boolean condition for the Executions to satisfy in order to be
             * part of the result set. The syntax to define filter query is based on
             * https://google.aip.dev/160. Following are the supported set of filters: * **Attribute
             * filtering**: For example: `display_name = "test"`. Supported fields include: `name`,
             * `display_name`, `state`, `schema_title`, `create_time`, and `update_time`. Time
             * fields, such as `create_time` and `update_time`, require values specified in RFC-3339
             * format. For example: `create_time = "2020-11-19T11:30:00-04:00"`. * **Metadata
             * field**: To filter on metadata fields use traversal operation as follows:
             * `metadata..` For example: `metadata.field_1.number_value = 10.0` In case the field
             * name contains special characters (such as colon), one can embed it inside double
             * quote. For example: `metadata."field:1".number_value = 10.0` * **Context based
             * filtering**: To filter Executions based on the contexts to which they belong use the
             * function operator with the full resource name: `in_context()`. For example:
             * `in_context("projects//locations//metadataStores//contexts/")` Each of the above
             * supported filters can be combined together using logical operators (`AND` & `OR`).
             * Maximum nested expression depth allowed is 5. For example: `display_name = "test" AND
             * metadata.field1.bool_value = true`.
             */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /**
             * How the list of messages is ordered. Specify the values to order by and an ordering
             * operation. The default sorting order is ascending. To specify descending order for a
             * field, users append a " desc" suffix; for example: "foo desc, bar". Subfields are
             * specified with a `.` character, such as foo.bar. see
             * https://google.aip.dev/132#ordering for more details.
             */
            @com.google.api.client.util.Key
            private java.lang.String orderBy;

            /** How the list of messages is ordered. Specify the values to order by and an ordering operation. The
           default sorting order is ascending. To specify descending order for a field, users append a " desc"
           suffix; for example: "foo desc, bar". Subfields are specified with a `.` character, such as
           foo.bar. see https://google.aip.dev/132#ordering for more details.
             */
            public java.lang.String getOrderBy() {
              return orderBy;
            }

            /**
             * How the list of messages is ordered. Specify the values to order by and an ordering
             * operation. The default sorting order is ascending. To specify descending order for a
             * field, users append a " desc" suffix; for example: "foo desc, bar". Subfields are
             * specified with a `.` character, such as foo.bar. see
             * https://google.aip.dev/132#ordering for more details.
             */
            public List setOrderBy(java.lang.String orderBy) {
              this.orderBy = orderBy;
              return this;
            }

            /**
             * The maximum number of Executions to return. The service may return fewer. Must be in
             * range 1-1000, inclusive. Defaults to 100.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** The maximum number of Executions to return. The service may return fewer. Must be in range 1-1000,
           inclusive. Defaults to 100.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * The maximum number of Executions to return. The service may return fewer. Must be in
             * range 1-1000, inclusive. Defaults to 100.
             */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /**
             * A page token, received from a previous MetadataService.ListExecutions call. Provide
             * this to retrieve the subsequent page. When paginating, all other provided parameters
             * must match the call that provided the page token. (Otherwise the request will fail
             * with an INVALID_ARGUMENT error.)
             */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** A page token, received from a previous MetadataService.ListExecutions call. Provide this to
           retrieve the subsequent page. When paginating, all other provided parameters must match the call
           that provided the page token. (Otherwise the request will fail with an INVALID_ARGUMENT error.)
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /**
             * A page token, received from a previous MetadataService.ListExecutions call. Provide
             * this to retrieve the subsequent page. When paginating, all other provided parameters
             * must match the call that provided the page token. (Otherwise the request will fail
             * with an INVALID_ARGUMENT error.)
             */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Updates a stored Execution.
           *
           * Create a request for the method "executions.patch".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           *
           * @param name Output only. The resource name of the Execution.
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Execution}
           * @return the request
           */
          public Patch patch(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Execution content) throws java.io.IOException {
            Patch result = new Patch(name, content);
            initialize(result);
            return result;
          }

          public class Patch extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Execution> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/executions/[^/]+$");

            /**
             * Updates a stored Execution.
             *
             * Create a request for the method "executions.patch".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             * <p> {@link
             * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Output only. The resource name of the Execution.
             * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Execution}
             * @since 1.13
             */
            protected Patch(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Execution content) {
              super(Aiplatform.this, "PATCH", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Execution.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/executions/[^/]+$");
              }
            }

            @Override
            public Patch set$Xgafv(java.lang.String $Xgafv) {
              return (Patch) super.set$Xgafv($Xgafv);
            }

            @Override
            public Patch setAccessToken(java.lang.String accessToken) {
              return (Patch) super.setAccessToken(accessToken);
            }

            @Override
            public Patch setAlt(java.lang.String alt) {
              return (Patch) super.setAlt(alt);
            }

            @Override
            public Patch setCallback(java.lang.String callback) {
              return (Patch) super.setCallback(callback);
            }

            @Override
            public Patch setFields(java.lang.String fields) {
              return (Patch) super.setFields(fields);
            }

            @Override
            public Patch setKey(java.lang.String key) {
              return (Patch) super.setKey(key);
            }

            @Override
            public Patch setOauthToken(java.lang.String oauthToken) {
              return (Patch) super.setOauthToken(oauthToken);
            }

            @Override
            public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Patch) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Patch setQuotaUser(java.lang.String quotaUser) {
              return (Patch) super.setQuotaUser(quotaUser);
            }

            @Override
            public Patch setUploadType(java.lang.String uploadType) {
              return (Patch) super.setUploadType(uploadType);
            }

            @Override
            public Patch setUploadProtocol(java.lang.String uploadProtocol) {
              return (Patch) super.setUploadProtocol(uploadProtocol);
            }

            /** Output only. The resource name of the Execution. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Output only. The resource name of the Execution.
             */
            public java.lang.String getName() {
              return name;
            }

            /** Output only. The resource name of the Execution. */
            public Patch setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/executions/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /** If set to true, and the Execution is not found, a new Execution is created. */
            @com.google.api.client.util.Key
            private java.lang.Boolean allowMissing;

            /** If set to true, and the Execution is not found, a new Execution is created.
             */
            public java.lang.Boolean getAllowMissing() {
              return allowMissing;
            }

            /** If set to true, and the Execution is not found, a new Execution is created. */
            public Patch setAllowMissing(java.lang.Boolean allowMissing) {
              this.allowMissing = allowMissing;
              return this;
            }

            /** Optional. A FieldMask indicating which fields should be updated. */
            @com.google.api.client.util.Key
            private String updateMask;

            /** Optional. A FieldMask indicating which fields should be updated.
             */
            public String getUpdateMask() {
              return updateMask;
            }

            /** Optional. A FieldMask indicating which fields should be updated. */
            public Patch setUpdateMask(String updateMask) {
              this.updateMask = updateMask;
              return this;
            }

            @Override
            public Patch set(String parameterName, Object value) {
              return (Patch) super.set(parameterName, value);
            }
          }
          /**
           * Purges Executions.
           *
           * Create a request for the method "executions.purge".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Purge#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The metadata store to purge Executions from. Format:
           *        `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1PurgeExecutionsRequest}
           * @return the request
           */
          public Purge purge(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1PurgeExecutionsRequest content) throws java.io.IOException {
            Purge result = new Purge(parent, content);
            initialize(result);
            return result;
          }

          public class Purge extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+parent}/executions:purge";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+$");

            /**
             * Purges Executions.
             *
             * Create a request for the method "executions.purge".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Purge#execute()} method to invoke the remote operation.
             * <p> {@link
             * Purge#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The metadata store to purge Executions from. Format:
           *        `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
             * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1PurgeExecutionsRequest}
             * @since 1.13
             */
            protected Purge(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1PurgeExecutionsRequest content) {
              super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+$");
              }
            }

            @Override
            public Purge set$Xgafv(java.lang.String $Xgafv) {
              return (Purge) super.set$Xgafv($Xgafv);
            }

            @Override
            public Purge setAccessToken(java.lang.String accessToken) {
              return (Purge) super.setAccessToken(accessToken);
            }

            @Override
            public Purge setAlt(java.lang.String alt) {
              return (Purge) super.setAlt(alt);
            }

            @Override
            public Purge setCallback(java.lang.String callback) {
              return (Purge) super.setCallback(callback);
            }

            @Override
            public Purge setFields(java.lang.String fields) {
              return (Purge) super.setFields(fields);
            }

            @Override
            public Purge setKey(java.lang.String key) {
              return (Purge) super.setKey(key);
            }

            @Override
            public Purge setOauthToken(java.lang.String oauthToken) {
              return (Purge) super.setOauthToken(oauthToken);
            }

            @Override
            public Purge setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Purge) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Purge setQuotaUser(java.lang.String quotaUser) {
              return (Purge) super.setQuotaUser(quotaUser);
            }

            @Override
            public Purge setUploadType(java.lang.String uploadType) {
              return (Purge) super.setUploadType(uploadType);
            }

            @Override
            public Purge setUploadProtocol(java.lang.String uploadProtocol) {
              return (Purge) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The metadata store to purge Executions from. Format:
             * `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The metadata store to purge Executions from. Format:
           `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The metadata store to purge Executions from. Format:
             * `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
             */
            public Purge setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public Purge set(String parameterName, Object value) {
              return (Purge) super.set(parameterName, value);
            }
          }
          /**
           * Obtains the set of input and output Artifacts for this Execution, in the form of LineageSubgraph
           * that also contains the Execution and connecting Events.
           *
           * Create a request for the method "executions.queryExecutionInputsAndOutputs".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link QueryExecutionInputsAndOutputs#execute()} method to invoke the remote
           * operation.
           *
           * @param execution Required. The resource name of the Execution whose input and output Artifacts should be retrieved as
           *        a LineageSubgraph. Format: `projects/{project}/locations/{location}/metadataStores/{metada
           *        tastore}/executions/{execution}`
           * @return the request
           */
          public QueryExecutionInputsAndOutputs queryExecutionInputsAndOutputs(java.lang.String execution) throws java.io.IOException {
            QueryExecutionInputsAndOutputs result = new QueryExecutionInputsAndOutputs(execution);
            initialize(result);
            return result;
          }

          public class QueryExecutionInputsAndOutputs extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1LineageSubgraph> {

            private static final String REST_PATH = "v1/{+execution}:queryExecutionInputsAndOutputs";

            private final java.util.regex.Pattern EXECUTION_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/executions/[^/]+$");

            /**
             * Obtains the set of input and output Artifacts for this Execution, in the form of
             * LineageSubgraph that also contains the Execution and connecting Events.
             *
             * Create a request for the method "executions.queryExecutionInputsAndOutputs".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link QueryExecutionInputsAndOutputs#execute()} method to invoke
             * the remote operation. <p> {@link QueryExecutionInputsAndOutputs#initialize(com.google.api.clien
             * t.googleapis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
             * immediately after invoking the constructor. </p>
             *
             * @param execution Required. The resource name of the Execution whose input and output Artifacts should be retrieved as
           *        a LineageSubgraph. Format: `projects/{project}/locations/{location}/metadataStores/{metada
           *        tastore}/executions/{execution}`
             * @since 1.13
             */
            protected QueryExecutionInputsAndOutputs(java.lang.String execution) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1LineageSubgraph.class);
              this.execution = com.google.api.client.util.Preconditions.checkNotNull(execution, "Required parameter execution must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(EXECUTION_PATTERN.matcher(execution).matches(),
                    "Parameter execution must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/executions/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public QueryExecutionInputsAndOutputs set$Xgafv(java.lang.String $Xgafv) {
              return (QueryExecutionInputsAndOutputs) super.set$Xgafv($Xgafv);
            }

            @Override
            public QueryExecutionInputsAndOutputs setAccessToken(java.lang.String accessToken) {
              return (QueryExecutionInputsAndOutputs) super.setAccessToken(accessToken);
            }

            @Override
            public QueryExecutionInputsAndOutputs setAlt(java.lang.String alt) {
              return (QueryExecutionInputsAndOutputs) super.setAlt(alt);
            }

            @Override
            public QueryExecutionInputsAndOutputs setCallback(java.lang.String callback) {
              return (QueryExecutionInputsAndOutputs) super.setCallback(callback);
            }

            @Override
            public QueryExecutionInputsAndOutputs setFields(java.lang.String fields) {
              return (QueryExecutionInputsAndOutputs) super.setFields(fields);
            }

            @Override
            public QueryExecutionInputsAndOutputs setKey(java.lang.String key) {
              return (QueryExecutionInputsAndOutputs) super.setKey(key);
            }

            @Override
            public QueryExecutionInputsAndOutputs setOauthToken(java.lang.String oauthToken) {
              return (QueryExecutionInputsAndOutputs) super.setOauthToken(oauthToken);
            }

            @Override
            public QueryExecutionInputsAndOutputs setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (QueryExecutionInputsAndOutputs) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public QueryExecutionInputsAndOutputs setQuotaUser(java.lang.String quotaUser) {
              return (QueryExecutionInputsAndOutputs) super.setQuotaUser(quotaUser);
            }

            @Override
            public QueryExecutionInputsAndOutputs setUploadType(java.lang.String uploadType) {
              return (QueryExecutionInputsAndOutputs) super.setUploadType(uploadType);
            }

            @Override
            public QueryExecutionInputsAndOutputs setUploadProtocol(java.lang.String uploadProtocol) {
              return (QueryExecutionInputsAndOutputs) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The resource name of the Execution whose input and output Artifacts should
             * be retrieved as a LineageSubgraph. Format: `projects/{project}/locations/{location}/m
             * etadataStores/{metadatastore}/executions/{execution}`
             */
            @com.google.api.client.util.Key
            private java.lang.String execution;

            /** Required. The resource name of the Execution whose input and output Artifacts should be retrieved
           as a LineageSubgraph. Format:
           `projects/{project}/locations/{location}/metadataStores/{metadatastore}/executions/{execution}`
             */
            public java.lang.String getExecution() {
              return execution;
            }

            /**
             * Required. The resource name of the Execution whose input and output Artifacts should
             * be retrieved as a LineageSubgraph. Format: `projects/{project}/locations/{location}/m
             * etadataStores/{metadatastore}/executions/{execution}`
             */
            public QueryExecutionInputsAndOutputs setExecution(java.lang.String execution) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(EXECUTION_PATTERN.matcher(execution).matches(),
                    "Parameter execution must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/executions/[^/]+$");
              }
              this.execution = execution;
              return this;
            }

            @Override
            public QueryExecutionInputsAndOutputs set(String parameterName, Object value) {
              return (QueryExecutionInputsAndOutputs) super.set(parameterName, value);
            }
          }

          /**
           * An accessor for creating requests from the Operations collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code Aiplatform aiplatform = new Aiplatform(...);}
           *   {@code Aiplatform.Operations.List request = aiplatform.operations().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public Operations operations() {
            return new Operations();
          }

          /**
           * The "operations" collection of methods.
           */
          public class Operations {

            /**
             * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
             * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
             * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
             * methods to check whether the cancellation succeeded or whether the operation completed despite
             * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
             * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
             * `Code.CANCELLED`.
             *
             * Create a request for the method "operations.cancel".
             *
             * This request holds the parameters needed by the aiplatform server.  After setting any optional
             * parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
             *
             * @param name The name of the operation resource to be cancelled.
             * @return the request
             */
            public Cancel cancel(java.lang.String name) throws java.io.IOException {
              Cancel result = new Cancel(name);
              initialize(result);
              return result;
            }

            public class Cancel extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

              private static final String REST_PATH = "v1/{+name}:cancel";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/executions/[^/]+/operations/[^/]+$");

              /**
               * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
               * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
               * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
               * methods to check whether the cancellation succeeded or whether the operation completed despite
               * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
               * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
               * `Code.CANCELLED`.
               *
               * Create a request for the method "operations.cancel".
               *
               * This request holds the parameters needed by the the aiplatform server.  After setting any
               * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
               * <p> {@link
               * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The name of the operation resource to be cancelled.
               * @since 1.13
               */
              protected Cancel(java.lang.String name) {
                super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/executions/[^/]+/operations/[^/]+$");
                }
              }

              @Override
              public Cancel set$Xgafv(java.lang.String $Xgafv) {
                return (Cancel) super.set$Xgafv($Xgafv);
              }

              @Override
              public Cancel setAccessToken(java.lang.String accessToken) {
                return (Cancel) super.setAccessToken(accessToken);
              }

              @Override
              public Cancel setAlt(java.lang.String alt) {
                return (Cancel) super.setAlt(alt);
              }

              @Override
              public Cancel setCallback(java.lang.String callback) {
                return (Cancel) super.setCallback(callback);
              }

              @Override
              public Cancel setFields(java.lang.String fields) {
                return (Cancel) super.setFields(fields);
              }

              @Override
              public Cancel setKey(java.lang.String key) {
                return (Cancel) super.setKey(key);
              }

              @Override
              public Cancel setOauthToken(java.lang.String oauthToken) {
                return (Cancel) super.setOauthToken(oauthToken);
              }

              @Override
              public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Cancel) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Cancel setQuotaUser(java.lang.String quotaUser) {
                return (Cancel) super.setQuotaUser(quotaUser);
              }

              @Override
              public Cancel setUploadType(java.lang.String uploadType) {
                return (Cancel) super.setUploadType(uploadType);
              }

              @Override
              public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
                return (Cancel) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the operation resource to be cancelled. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The name of the operation resource to be cancelled.
               */
              public java.lang.String getName() {
                return name;
              }

              /** The name of the operation resource to be cancelled. */
              public Cancel setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/executions/[^/]+/operations/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Cancel set(String parameterName, Object value) {
                return (Cancel) super.set(parameterName, value);
              }
            }
            /**
             * Deletes a long-running operation. This method indicates that the client is no longer interested
             * in the operation result. It does not cancel the operation. If the server doesn't support this
             * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.delete".
             *
             * This request holds the parameters needed by the aiplatform server.  After setting any optional
             * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             *
             * @param name The name of the operation resource to be deleted.
             * @return the request
             */
            public Delete delete(java.lang.String name) throws java.io.IOException {
              Delete result = new Delete(name);
              initialize(result);
              return result;
            }

            public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/executions/[^/]+/operations/[^/]+$");

              /**
               * Deletes a long-running operation. This method indicates that the client is no longer interested
               * in the operation result. It does not cancel the operation. If the server doesn't support this
               * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
               *
               * Create a request for the method "operations.delete".
               *
               * This request holds the parameters needed by the the aiplatform server.  After setting any
               * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
               * <p> {@link
               * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The name of the operation resource to be deleted.
               * @since 1.13
               */
              protected Delete(java.lang.String name) {
                super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/executions/[^/]+/operations/[^/]+$");
                }
              }

              @Override
              public Delete set$Xgafv(java.lang.String $Xgafv) {
                return (Delete) super.set$Xgafv($Xgafv);
              }

              @Override
              public Delete setAccessToken(java.lang.String accessToken) {
                return (Delete) super.setAccessToken(accessToken);
              }

              @Override
              public Delete setAlt(java.lang.String alt) {
                return (Delete) super.setAlt(alt);
              }

              @Override
              public Delete setCallback(java.lang.String callback) {
                return (Delete) super.setCallback(callback);
              }

              @Override
              public Delete setFields(java.lang.String fields) {
                return (Delete) super.setFields(fields);
              }

              @Override
              public Delete setKey(java.lang.String key) {
                return (Delete) super.setKey(key);
              }

              @Override
              public Delete setOauthToken(java.lang.String oauthToken) {
                return (Delete) super.setOauthToken(oauthToken);
              }

              @Override
              public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Delete) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Delete setQuotaUser(java.lang.String quotaUser) {
                return (Delete) super.setQuotaUser(quotaUser);
              }

              @Override
              public Delete setUploadType(java.lang.String uploadType) {
                return (Delete) super.setUploadType(uploadType);
              }

              @Override
              public Delete setUploadProtocol(java.lang.String uploadProtocol) {
                return (Delete) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the operation resource to be deleted. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The name of the operation resource to be deleted.
               */
              public java.lang.String getName() {
                return name;
              }

              /** The name of the operation resource to be deleted. */
              public Delete setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/executions/[^/]+/operations/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Delete set(String parameterName, Object value) {
                return (Delete) super.set(parameterName, value);
              }
            }
            /**
             * Gets the latest state of a long-running operation. Clients can use this method to poll the
             * operation result at intervals as recommended by the API service.
             *
             * Create a request for the method "operations.get".
             *
             * This request holds the parameters needed by the aiplatform server.  After setting any optional
             * parameters, call the {@link Get#execute()} method to invoke the remote operation.
             *
             * @param name The name of the operation resource.
             * @return the request
             */
            public Get get(java.lang.String name) throws java.io.IOException {
              Get result = new Get(name);
              initialize(result);
              return result;
            }

            public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/executions/[^/]+/operations/[^/]+$");

              /**
               * Gets the latest state of a long-running operation. Clients can use this method to poll the
               * operation result at intervals as recommended by the API service.
               *
               * Create a request for the method "operations.get".
               *
               * This request holds the parameters needed by the the aiplatform server.  After setting any
               * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
               * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The name of the operation resource.
               * @since 1.13
               */
              protected Get(java.lang.String name) {
                super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/executions/[^/]+/operations/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public Get set$Xgafv(java.lang.String $Xgafv) {
                return (Get) super.set$Xgafv($Xgafv);
              }

              @Override
              public Get setAccessToken(java.lang.String accessToken) {
                return (Get) super.setAccessToken(accessToken);
              }

              @Override
              public Get setAlt(java.lang.String alt) {
                return (Get) super.setAlt(alt);
              }

              @Override
              public Get setCallback(java.lang.String callback) {
                return (Get) super.setCallback(callback);
              }

              @Override
              public Get setFields(java.lang.String fields) {
                return (Get) super.setFields(fields);
              }

              @Override
              public Get setKey(java.lang.String key) {
                return (Get) super.setKey(key);
              }

              @Override
              public Get setOauthToken(java.lang.String oauthToken) {
                return (Get) super.setOauthToken(oauthToken);
              }

              @Override
              public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Get) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Get setQuotaUser(java.lang.String quotaUser) {
                return (Get) super.setQuotaUser(quotaUser);
              }

              @Override
              public Get setUploadType(java.lang.String uploadType) {
                return (Get) super.setUploadType(uploadType);
              }

              @Override
              public Get setUploadProtocol(java.lang.String uploadProtocol) {
                return (Get) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the operation resource. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The name of the operation resource.
               */
              public java.lang.String getName() {
                return name;
              }

              /** The name of the operation resource. */
              public Get setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/executions/[^/]+/operations/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Get set(String parameterName, Object value) {
                return (Get) super.set(parameterName, value);
              }
            }
            /**
             * Lists operations that match the specified filter in the request. If the server doesn't support
             * this method, it returns `UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.list".
             *
             * This request holds the parameters needed by the aiplatform server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation.
             *
             * @param name The name of the operation's parent resource.
             * @return the request
             */
            public List list(java.lang.String name) throws java.io.IOException {
              List result = new List(name);
              initialize(result);
              return result;
            }

            public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse> {

              private static final String REST_PATH = "v1/{+name}/operations";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/executions/[^/]+$");

              /**
               * Lists operations that match the specified filter in the request. If the server doesn't support
               * this method, it returns `UNIMPLEMENTED`.
               *
               * Create a request for the method "operations.list".
               *
               * This request holds the parameters needed by the the aiplatform server.  After setting any
               * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
               * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The name of the operation's parent resource.
               * @since 1.13
               */
              protected List(java.lang.String name) {
                super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/executions/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public List set$Xgafv(java.lang.String $Xgafv) {
                return (List) super.set$Xgafv($Xgafv);
              }

              @Override
              public List setAccessToken(java.lang.String accessToken) {
                return (List) super.setAccessToken(accessToken);
              }

              @Override
              public List setAlt(java.lang.String alt) {
                return (List) super.setAlt(alt);
              }

              @Override
              public List setCallback(java.lang.String callback) {
                return (List) super.setCallback(callback);
              }

              @Override
              public List setFields(java.lang.String fields) {
                return (List) super.setFields(fields);
              }

              @Override
              public List setKey(java.lang.String key) {
                return (List) super.setKey(key);
              }

              @Override
              public List setOauthToken(java.lang.String oauthToken) {
                return (List) super.setOauthToken(oauthToken);
              }

              @Override
              public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (List) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public List setQuotaUser(java.lang.String quotaUser) {
                return (List) super.setQuotaUser(quotaUser);
              }

              @Override
              public List setUploadType(java.lang.String uploadType) {
                return (List) super.setUploadType(uploadType);
              }

              @Override
              public List setUploadProtocol(java.lang.String uploadProtocol) {
                return (List) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the operation's parent resource. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The name of the operation's parent resource.
               */
              public java.lang.String getName() {
                return name;
              }

              /** The name of the operation's parent resource. */
              public List setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/executions/[^/]+$");
                }
                this.name = name;
                return this;
              }

              /** The standard list filter. */
              @com.google.api.client.util.Key
              private java.lang.String filter;

              /** The standard list filter.
               */
              public java.lang.String getFilter() {
                return filter;
              }

              /** The standard list filter. */
              public List setFilter(java.lang.String filter) {
                this.filter = filter;
                return this;
              }

              /** The standard list page size. */
              @com.google.api.client.util.Key
              private java.lang.Integer pageSize;

              /** The standard list page size.
               */
              public java.lang.Integer getPageSize() {
                return pageSize;
              }

              /** The standard list page size. */
              public List setPageSize(java.lang.Integer pageSize) {
                this.pageSize = pageSize;
                return this;
              }

              /** The standard list page token. */
              @com.google.api.client.util.Key
              private java.lang.String pageToken;

              /** The standard list page token.
               */
              public java.lang.String getPageToken() {
                return pageToken;
              }

              /** The standard list page token. */
              public List setPageToken(java.lang.String pageToken) {
                this.pageToken = pageToken;
                return this;
              }

              @Override
              public List set(String parameterName, Object value) {
                return (List) super.set(parameterName, value);
              }
            }
            /**
             * Waits until the specified long-running operation is done or reaches at most a specified timeout,
             * returning the latest state. If the operation is already done, the latest state is immediately
             * returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC
             * timeout is used. If the server does not support this method, it returns
             * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
             * the latest state before the specified timeout (including immediately), meaning even an immediate
             * response is no guarantee that the operation is done.
             *
             * Create a request for the method "operations.wait".
             *
             * This request holds the parameters needed by the aiplatform server.  After setting any optional
             * parameters, call the {@link Wait#execute()} method to invoke the remote operation.
             *
             * @param name The name of the operation resource to wait on.
             * @return the request
             */
            public Wait wait(java.lang.String name) throws java.io.IOException {
              Wait result = new Wait(name);
              initialize(result);
              return result;
            }

            public class Wait extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

              private static final String REST_PATH = "v1/{+name}:wait";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/executions/[^/]+/operations/[^/]+$");

              /**
               * Waits until the specified long-running operation is done or reaches at most a specified
               * timeout, returning the latest state. If the operation is already done, the latest state is
               * immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout,
               * the HTTP/RPC timeout is used. If the server does not support this method, it returns
               * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
               * the latest state before the specified timeout (including immediately), meaning even an
               * immediate response is no guarantee that the operation is done.
               *
               * Create a request for the method "operations.wait".
               *
               * This request holds the parameters needed by the the aiplatform server.  After setting any
               * optional parameters, call the {@link Wait#execute()} method to invoke the remote operation. <p>
               * {@link Wait#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The name of the operation resource to wait on.
               * @since 1.13
               */
              protected Wait(java.lang.String name) {
                super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/executions/[^/]+/operations/[^/]+$");
                }
              }

              @Override
              public Wait set$Xgafv(java.lang.String $Xgafv) {
                return (Wait) super.set$Xgafv($Xgafv);
              }

              @Override
              public Wait setAccessToken(java.lang.String accessToken) {
                return (Wait) super.setAccessToken(accessToken);
              }

              @Override
              public Wait setAlt(java.lang.String alt) {
                return (Wait) super.setAlt(alt);
              }

              @Override
              public Wait setCallback(java.lang.String callback) {
                return (Wait) super.setCallback(callback);
              }

              @Override
              public Wait setFields(java.lang.String fields) {
                return (Wait) super.setFields(fields);
              }

              @Override
              public Wait setKey(java.lang.String key) {
                return (Wait) super.setKey(key);
              }

              @Override
              public Wait setOauthToken(java.lang.String oauthToken) {
                return (Wait) super.setOauthToken(oauthToken);
              }

              @Override
              public Wait setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Wait) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Wait setQuotaUser(java.lang.String quotaUser) {
                return (Wait) super.setQuotaUser(quotaUser);
              }

              @Override
              public Wait setUploadType(java.lang.String uploadType) {
                return (Wait) super.setUploadType(uploadType);
              }

              @Override
              public Wait setUploadProtocol(java.lang.String uploadProtocol) {
                return (Wait) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the operation resource to wait on. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The name of the operation resource to wait on.
               */
              public java.lang.String getName() {
                return name;
              }

              /** The name of the operation resource to wait on. */
              public Wait setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/executions/[^/]+/operations/[^/]+$");
                }
                this.name = name;
                return this;
              }

              /**
               * The maximum duration to wait before timing out. If left blank, the wait will be at
               * most the time permitted by the underlying HTTP/RPC protocol. If RPC context
               * deadline is also specified, the shorter one will be used.
               */
              @com.google.api.client.util.Key
              private String timeout;

              /** The maximum duration to wait before timing out. If left blank, the wait will be at most the time
             permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the
             shorter one will be used.
               */
              public String getTimeout() {
                return timeout;
              }

              /**
               * The maximum duration to wait before timing out. If left blank, the wait will be at
               * most the time permitted by the underlying HTTP/RPC protocol. If RPC context
               * deadline is also specified, the shorter one will be used.
               */
              public Wait setTimeout(String timeout) {
                this.timeout = timeout;
                return this;
              }

              @Override
              public Wait set(String parameterName, Object value) {
                return (Wait) super.set(parameterName, value);
              }
            }

          }
        }
        /**
         * An accessor for creating requests from the MetadataSchemas collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Aiplatform aiplatform = new Aiplatform(...);}
         *   {@code Aiplatform.MetadataSchemas.List request = aiplatform.metadataSchemas().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public MetadataSchemas metadataSchemas() {
          return new MetadataSchemas();
        }

        /**
         * The "metadataSchemas" collection of methods.
         */
        public class MetadataSchemas {

          /**
           * Creates a MetadataSchema.
           *
           * Create a request for the method "metadataSchemas.create".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The resource name of the MetadataStore where the MetadataSchema should be created. Format:
           *        `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1MetadataSchema}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1MetadataSchema content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1MetadataSchema> {

            private static final String REST_PATH = "v1/{+parent}/metadataSchemas";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+$");

            /**
             * Creates a MetadataSchema.
             *
             * Create a request for the method "metadataSchemas.create".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
             * <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The resource name of the MetadataStore where the MetadataSchema should be created. Format:
           *        `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
             * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1MetadataSchema}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1MetadataSchema content) {
              super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1MetadataSchema.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The resource name of the MetadataStore where the MetadataSchema should be
             * created. Format:
             * `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The resource name of the MetadataStore where the MetadataSchema should be created.
           Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The resource name of the MetadataStore where the MetadataSchema should be
             * created. Format:
             * `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
             */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * The {metadata_schema} portion of the resource name with the format: `projects/{projec
             * t}/locations/{location}/metadataStores/{metadatastore}/metadataSchemas/{metadataschem
             * a}` If not provided, the MetadataStore's ID will be a UUID generated by the service.
             * Must be 4-128 characters in length. Valid characters are `/a-z-/`. Must be unique
             * across all MetadataSchemas in the parent Location. (Otherwise the request will fail
             * with ALREADY_EXISTS, or PERMISSION_DENIED if the caller can't view the preexisting
             * MetadataSchema.)
             */
            @com.google.api.client.util.Key
            private java.lang.String metadataSchemaId;

            /** The {metadata_schema} portion of the resource name with the format: `projects/{project}/locations/{
           location}/metadataStores/{metadatastore}/metadataSchemas/{metadataschema}` If not provided, the
           MetadataStore's ID will be a UUID generated by the service. Must be 4-128 characters in length.
           Valid characters are `/a-z-/`. Must be unique across all MetadataSchemas in the parent Location.
           (Otherwise the request will fail with ALREADY_EXISTS, or PERMISSION_DENIED if the caller can't view
           the preexisting MetadataSchema.)
             */
            public java.lang.String getMetadataSchemaId() {
              return metadataSchemaId;
            }

            /**
             * The {metadata_schema} portion of the resource name with the format: `projects/{projec
             * t}/locations/{location}/metadataStores/{metadatastore}/metadataSchemas/{metadataschem
             * a}` If not provided, the MetadataStore's ID will be a UUID generated by the service.
             * Must be 4-128 characters in length. Valid characters are `/a-z-/`. Must be unique
             * across all MetadataSchemas in the parent Location. (Otherwise the request will fail
             * with ALREADY_EXISTS, or PERMISSION_DENIED if the caller can't view the preexisting
             * MetadataSchema.)
             */
            public Create setMetadataSchemaId(java.lang.String metadataSchemaId) {
              this.metadataSchemaId = metadataSchemaId;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Retrieves a specific MetadataSchema.
           *
           * Create a request for the method "metadataSchemas.get".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. The resource name of the MetadataSchema to retrieve. Format: `projects/{project}/locations
           *        /{location}/metadataStores/{metadatastore}/metadataSchemas/{metadataschema}`
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1MetadataSchema> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/metadataSchemas/[^/]+$");

            /**
             * Retrieves a specific MetadataSchema.
             *
             * Create a request for the method "metadataSchemas.get".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The resource name of the MetadataSchema to retrieve. Format: `projects/{project}/locations
           *        /{location}/metadataStores/{metadatastore}/metadataSchemas/{metadataschema}`
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1MetadataSchema.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/metadataSchemas/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The resource name of the MetadataSchema to retrieve. Format: `projects/{pro
             * ject}/locations/{location}/metadataStores/{metadatastore}/metadataSchemas/{metadatasc
             * hema}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The resource name of the MetadataSchema to retrieve. Format: `projects/{project}/location
           s/{location}/metadataStores/{metadatastore}/metadataSchemas/{metadataschema}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The resource name of the MetadataSchema to retrieve. Format: `projects/{pro
             * ject}/locations/{location}/metadataStores/{metadatastore}/metadataSchemas/{metadatasc
             * hema}`
             */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/metadataSchemas/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Lists MetadataSchemas.
           *
           * Create a request for the method "metadataSchemas.list".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The MetadataStore whose MetadataSchemas should be listed. Format:
           *        `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListMetadataSchemasResponse> {

            private static final String REST_PATH = "v1/{+parent}/metadataSchemas";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+$");

            /**
             * Lists MetadataSchemas.
             *
             * Create a request for the method "metadataSchemas.list".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The MetadataStore whose MetadataSchemas should be listed. Format:
           *        `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListMetadataSchemasResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The MetadataStore whose MetadataSchemas should be listed. Format:
             * `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The MetadataStore whose MetadataSchemas should be listed. Format:
           `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The MetadataStore whose MetadataSchemas should be listed. Format:
             * `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /** A query to filter available MetadataSchemas for matching results. */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** A query to filter available MetadataSchemas for matching results.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /** A query to filter available MetadataSchemas for matching results. */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /**
             * The maximum number of MetadataSchemas to return. The service may return fewer. Must
             * be in range 1-1000, inclusive. Defaults to 100.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** The maximum number of MetadataSchemas to return. The service may return fewer. Must be in range
           1-1000, inclusive. Defaults to 100.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * The maximum number of MetadataSchemas to return. The service may return fewer. Must
             * be in range 1-1000, inclusive. Defaults to 100.
             */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /**
             * A page token, received from a previous MetadataService.ListMetadataSchemas call.
             * Provide this to retrieve the next page. When paginating, all other provided
             * parameters must match the call that provided the page token. (Otherwise the request
             * will fail with INVALID_ARGUMENT error.)
             */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** A page token, received from a previous MetadataService.ListMetadataSchemas call. Provide this to
           retrieve the next page. When paginating, all other provided parameters must match the call that
           provided the page token. (Otherwise the request will fail with INVALID_ARGUMENT error.)
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /**
             * A page token, received from a previous MetadataService.ListMetadataSchemas call.
             * Provide this to retrieve the next page. When paginating, all other provided
             * parameters must match the call that provided the page token. (Otherwise the request
             * will fail with INVALID_ARGUMENT error.)
             */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }

        }
        /**
         * An accessor for creating requests from the Operations collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Aiplatform aiplatform = new Aiplatform(...);}
         *   {@code Aiplatform.Operations.List request = aiplatform.operations().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Operations operations() {
          return new Operations();
        }

        /**
         * The "operations" collection of methods.
         */
        public class Operations {

          /**
           * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
           * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
           * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
           * methods to check whether the cancellation succeeded or whether the operation completed despite
           * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
           * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
           * `Code.CANCELLED`.
           *
           * Create a request for the method "operations.cancel".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource to be cancelled.
           * @return the request
           */
          public Cancel cancel(java.lang.String name) throws java.io.IOException {
            Cancel result = new Cancel(name);
            initialize(result);
            return result;
          }

          public class Cancel extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

            private static final String REST_PATH = "v1/{+name}:cancel";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/operations/[^/]+$");

            /**
             * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
             * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
             * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
             * methods to check whether the cancellation succeeded or whether the operation completed despite
             * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
             * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
             * `Code.CANCELLED`.
             *
             * Create a request for the method "operations.cancel".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
             * <p> {@link
             * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource to be cancelled.
             * @since 1.13
             */
            protected Cancel(java.lang.String name) {
              super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public Cancel set$Xgafv(java.lang.String $Xgafv) {
              return (Cancel) super.set$Xgafv($Xgafv);
            }

            @Override
            public Cancel setAccessToken(java.lang.String accessToken) {
              return (Cancel) super.setAccessToken(accessToken);
            }

            @Override
            public Cancel setAlt(java.lang.String alt) {
              return (Cancel) super.setAlt(alt);
            }

            @Override
            public Cancel setCallback(java.lang.String callback) {
              return (Cancel) super.setCallback(callback);
            }

            @Override
            public Cancel setFields(java.lang.String fields) {
              return (Cancel) super.setFields(fields);
            }

            @Override
            public Cancel setKey(java.lang.String key) {
              return (Cancel) super.setKey(key);
            }

            @Override
            public Cancel setOauthToken(java.lang.String oauthToken) {
              return (Cancel) super.setOauthToken(oauthToken);
            }

            @Override
            public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Cancel) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Cancel setQuotaUser(java.lang.String quotaUser) {
              return (Cancel) super.setQuotaUser(quotaUser);
            }

            @Override
            public Cancel setUploadType(java.lang.String uploadType) {
              return (Cancel) super.setUploadType(uploadType);
            }

            @Override
            public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
              return (Cancel) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource to be cancelled. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource to be cancelled.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource to be cancelled. */
            public Cancel setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Cancel set(String parameterName, Object value) {
              return (Cancel) super.set(parameterName, value);
            }
          }
          /**
           * Deletes a long-running operation. This method indicates that the client is no longer interested
           * in the operation result. It does not cancel the operation. If the server doesn't support this
           * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.delete".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource to be deleted.
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/operations/[^/]+$");

            /**
             * Deletes a long-running operation. This method indicates that the client is no longer interested
             * in the operation result. It does not cancel the operation. If the server doesn't support this
             * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.delete".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource to be deleted.
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource to be deleted. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource to be deleted.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource to be deleted. */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Gets the latest state of a long-running operation. Clients can use this method to poll the
           * operation result at intervals as recommended by the API service.
           *
           * Create a request for the method "operations.get".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource.
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/operations/[^/]+$");

            /**
             * Gets the latest state of a long-running operation. Clients can use this method to poll the
             * operation result at intervals as recommended by the API service.
             *
             * Create a request for the method "operations.get".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource.
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource. */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Lists operations that match the specified filter in the request. If the server doesn't support
           * this method, it returns `UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.list".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation's parent resource.
           * @return the request
           */
          public List list(java.lang.String name) throws java.io.IOException {
            List result = new List(name);
            initialize(result);
            return result;
          }

          public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse> {

            private static final String REST_PATH = "v1/{+name}/operations";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+$");

            /**
             * Lists operations that match the specified filter in the request. If the server doesn't support
             * this method, it returns `UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.list".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation's parent resource.
             * @since 1.13
             */
            protected List(java.lang.String name) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation's parent resource. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation's parent resource.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation's parent resource. */
            public List setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /** The standard list filter. */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** The standard list filter.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /** The standard list filter. */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /** The standard list page size. */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** The standard list page size.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /** The standard list page size. */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** The standard list page token. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** The standard list page token.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** The standard list page token. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Waits until the specified long-running operation is done or reaches at most a specified timeout,
           * returning the latest state. If the operation is already done, the latest state is immediately
           * returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC
           * timeout is used. If the server does not support this method, it returns
           * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
           * the latest state before the specified timeout (including immediately), meaning even an immediate
           * response is no guarantee that the operation is done.
           *
           * Create a request for the method "operations.wait".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Wait#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource to wait on.
           * @return the request
           */
          public Wait wait(java.lang.String name) throws java.io.IOException {
            Wait result = new Wait(name);
            initialize(result);
            return result;
          }

          public class Wait extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+name}:wait";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/operations/[^/]+$");

            /**
             * Waits until the specified long-running operation is done or reaches at most a specified
             * timeout, returning the latest state. If the operation is already done, the latest state is
             * immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout,
             * the HTTP/RPC timeout is used. If the server does not support this method, it returns
             * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
             * the latest state before the specified timeout (including immediately), meaning even an
             * immediate response is no guarantee that the operation is done.
             *
             * Create a request for the method "operations.wait".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Wait#execute()} method to invoke the remote operation. <p>
             * {@link Wait#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource to wait on.
             * @since 1.13
             */
            protected Wait(java.lang.String name) {
              super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public Wait set$Xgafv(java.lang.String $Xgafv) {
              return (Wait) super.set$Xgafv($Xgafv);
            }

            @Override
            public Wait setAccessToken(java.lang.String accessToken) {
              return (Wait) super.setAccessToken(accessToken);
            }

            @Override
            public Wait setAlt(java.lang.String alt) {
              return (Wait) super.setAlt(alt);
            }

            @Override
            public Wait setCallback(java.lang.String callback) {
              return (Wait) super.setCallback(callback);
            }

            @Override
            public Wait setFields(java.lang.String fields) {
              return (Wait) super.setFields(fields);
            }

            @Override
            public Wait setKey(java.lang.String key) {
              return (Wait) super.setKey(key);
            }

            @Override
            public Wait setOauthToken(java.lang.String oauthToken) {
              return (Wait) super.setOauthToken(oauthToken);
            }

            @Override
            public Wait setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Wait) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Wait setQuotaUser(java.lang.String quotaUser) {
              return (Wait) super.setQuotaUser(quotaUser);
            }

            @Override
            public Wait setUploadType(java.lang.String uploadType) {
              return (Wait) super.setUploadType(uploadType);
            }

            @Override
            public Wait setUploadProtocol(java.lang.String uploadProtocol) {
              return (Wait) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource to wait on. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource to wait on.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource to wait on. */
            public Wait setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * The maximum duration to wait before timing out. If left blank, the wait will be at
             * most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline
             * is also specified, the shorter one will be used.
             */
            @com.google.api.client.util.Key
            private String timeout;

            /** The maximum duration to wait before timing out. If left blank, the wait will be at most the time
           permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the
           shorter one will be used.
             */
            public String getTimeout() {
              return timeout;
            }

            /**
             * The maximum duration to wait before timing out. If left blank, the wait will be at
             * most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline
             * is also specified, the shorter one will be used.
             */
            public Wait setTimeout(String timeout) {
              this.timeout = timeout;
              return this;
            }

            @Override
            public Wait set(String parameterName, Object value) {
              return (Wait) super.set(parameterName, value);
            }
          }

        }
      }
      /**
       * An accessor for creating requests from the MigratableResources collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Aiplatform aiplatform = new Aiplatform(...);}
       *   {@code Aiplatform.MigratableResources.List request = aiplatform.migratableResources().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public MigratableResources migratableResources() {
        return new MigratableResources();
      }

      /**
       * The "migratableResources" collection of methods.
       */
      public class MigratableResources {

        /**
         * Batch migrates resources from ml.googleapis.com, automl.googleapis.com, and
         * datalabeling.googleapis.com to Vertex AI.
         *
         * Create a request for the method "migratableResources.batchMigrate".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link BatchMigrate#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The location of the migrated resource will live in. Format:
         *        `projects/{project}/locations/{location}`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1BatchMigrateResourcesRequest}
         * @return the request
         */
        public BatchMigrate batchMigrate(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1BatchMigrateResourcesRequest content) throws java.io.IOException {
          BatchMigrate result = new BatchMigrate(parent, content);
          initialize(result);
          return result;
        }

        public class BatchMigrate extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+parent}/migratableResources:batchMigrate";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Batch migrates resources from ml.googleapis.com, automl.googleapis.com, and
           * datalabeling.googleapis.com to Vertex AI.
           *
           * Create a request for the method "migratableResources.batchMigrate".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link BatchMigrate#execute()} method to invoke the remote
           * operation. <p> {@link
           * BatchMigrate#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The location of the migrated resource will live in. Format:
         *        `projects/{project}/locations/{location}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1BatchMigrateResourcesRequest}
           * @since 1.13
           */
          protected BatchMigrate(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1BatchMigrateResourcesRequest content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public BatchMigrate set$Xgafv(java.lang.String $Xgafv) {
            return (BatchMigrate) super.set$Xgafv($Xgafv);
          }

          @Override
          public BatchMigrate setAccessToken(java.lang.String accessToken) {
            return (BatchMigrate) super.setAccessToken(accessToken);
          }

          @Override
          public BatchMigrate setAlt(java.lang.String alt) {
            return (BatchMigrate) super.setAlt(alt);
          }

          @Override
          public BatchMigrate setCallback(java.lang.String callback) {
            return (BatchMigrate) super.setCallback(callback);
          }

          @Override
          public BatchMigrate setFields(java.lang.String fields) {
            return (BatchMigrate) super.setFields(fields);
          }

          @Override
          public BatchMigrate setKey(java.lang.String key) {
            return (BatchMigrate) super.setKey(key);
          }

          @Override
          public BatchMigrate setOauthToken(java.lang.String oauthToken) {
            return (BatchMigrate) super.setOauthToken(oauthToken);
          }

          @Override
          public BatchMigrate setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (BatchMigrate) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public BatchMigrate setQuotaUser(java.lang.String quotaUser) {
            return (BatchMigrate) super.setQuotaUser(quotaUser);
          }

          @Override
          public BatchMigrate setUploadType(java.lang.String uploadType) {
            return (BatchMigrate) super.setUploadType(uploadType);
          }

          @Override
          public BatchMigrate setUploadProtocol(java.lang.String uploadProtocol) {
            return (BatchMigrate) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The location of the migrated resource will live in. Format:
           * `projects/{project}/locations/{location}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The location of the migrated resource will live in. Format:
         `projects/{project}/locations/{location}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The location of the migrated resource will live in. Format:
           * `projects/{project}/locations/{location}`
           */
          public BatchMigrate setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public BatchMigrate set(String parameterName, Object value) {
            return (BatchMigrate) super.set(parameterName, value);
          }
        }
        /**
         * Searches all of the resources in automl.googleapis.com, datalabeling.googleapis.com and
         * ml.googleapis.com that can be migrated to Vertex AI's given location.
         *
         * Create a request for the method "migratableResources.search".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Search#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The location that the migratable resources should be searched from. It's the Vertex AI
         *        location that the resources can be migrated to, not the resources' original location.
         *        Format: `projects/{project}/locations/{location}`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1SearchMigratableResourcesRequest}
         * @return the request
         */
        public Search search(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1SearchMigratableResourcesRequest content) throws java.io.IOException {
          Search result = new Search(parent, content);
          initialize(result);
          return result;
        }

        public class Search extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1SearchMigratableResourcesResponse> {

          private static final String REST_PATH = "v1/{+parent}/migratableResources:search";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Searches all of the resources in automl.googleapis.com, datalabeling.googleapis.com and
           * ml.googleapis.com that can be migrated to Vertex AI's given location.
           *
           * Create a request for the method "migratableResources.search".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Search#execute()} method to invoke the remote operation.
           * <p> {@link
           * Search#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The location that the migratable resources should be searched from. It's the Vertex AI
         *        location that the resources can be migrated to, not the resources' original location.
         *        Format: `projects/{project}/locations/{location}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1SearchMigratableResourcesRequest}
           * @since 1.13
           */
          protected Search(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1SearchMigratableResourcesRequest content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1SearchMigratableResourcesResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Search set$Xgafv(java.lang.String $Xgafv) {
            return (Search) super.set$Xgafv($Xgafv);
          }

          @Override
          public Search setAccessToken(java.lang.String accessToken) {
            return (Search) super.setAccessToken(accessToken);
          }

          @Override
          public Search setAlt(java.lang.String alt) {
            return (Search) super.setAlt(alt);
          }

          @Override
          public Search setCallback(java.lang.String callback) {
            return (Search) super.setCallback(callback);
          }

          @Override
          public Search setFields(java.lang.String fields) {
            return (Search) super.setFields(fields);
          }

          @Override
          public Search setKey(java.lang.String key) {
            return (Search) super.setKey(key);
          }

          @Override
          public Search setOauthToken(java.lang.String oauthToken) {
            return (Search) super.setOauthToken(oauthToken);
          }

          @Override
          public Search setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Search) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Search setQuotaUser(java.lang.String quotaUser) {
            return (Search) super.setQuotaUser(quotaUser);
          }

          @Override
          public Search setUploadType(java.lang.String uploadType) {
            return (Search) super.setUploadType(uploadType);
          }

          @Override
          public Search setUploadProtocol(java.lang.String uploadProtocol) {
            return (Search) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The location that the migratable resources should be searched from. It's the
           * Vertex AI location that the resources can be migrated to, not the resources' original
           * location. Format: `projects/{project}/locations/{location}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The location that the migratable resources should be searched from. It's the Vertex AI
         location that the resources can be migrated to, not the resources' original location. Format:
         `projects/{project}/locations/{location}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The location that the migratable resources should be searched from. It's the
           * Vertex AI location that the resources can be migrated to, not the resources' original
           * location. Format: `projects/{project}/locations/{location}`
           */
          public Search setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Search set(String parameterName, Object value) {
            return (Search) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the Operations collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Aiplatform aiplatform = new Aiplatform(...);}
         *   {@code Aiplatform.Operations.List request = aiplatform.operations().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Operations operations() {
          return new Operations();
        }

        /**
         * The "operations" collection of methods.
         */
        public class Operations {

          /**
           * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
           * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
           * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
           * methods to check whether the cancellation succeeded or whether the operation completed despite
           * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
           * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
           * `Code.CANCELLED`.
           *
           * Create a request for the method "operations.cancel".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource to be cancelled.
           * @return the request
           */
          public Cancel cancel(java.lang.String name) throws java.io.IOException {
            Cancel result = new Cancel(name);
            initialize(result);
            return result;
          }

          public class Cancel extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

            private static final String REST_PATH = "v1/{+name}:cancel";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/migratableResources/[^/]+/operations/[^/]+$");

            /**
             * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
             * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
             * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
             * methods to check whether the cancellation succeeded or whether the operation completed despite
             * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
             * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
             * `Code.CANCELLED`.
             *
             * Create a request for the method "operations.cancel".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
             * <p> {@link
             * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource to be cancelled.
             * @since 1.13
             */
            protected Cancel(java.lang.String name) {
              super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/migratableResources/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public Cancel set$Xgafv(java.lang.String $Xgafv) {
              return (Cancel) super.set$Xgafv($Xgafv);
            }

            @Override
            public Cancel setAccessToken(java.lang.String accessToken) {
              return (Cancel) super.setAccessToken(accessToken);
            }

            @Override
            public Cancel setAlt(java.lang.String alt) {
              return (Cancel) super.setAlt(alt);
            }

            @Override
            public Cancel setCallback(java.lang.String callback) {
              return (Cancel) super.setCallback(callback);
            }

            @Override
            public Cancel setFields(java.lang.String fields) {
              return (Cancel) super.setFields(fields);
            }

            @Override
            public Cancel setKey(java.lang.String key) {
              return (Cancel) super.setKey(key);
            }

            @Override
            public Cancel setOauthToken(java.lang.String oauthToken) {
              return (Cancel) super.setOauthToken(oauthToken);
            }

            @Override
            public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Cancel) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Cancel setQuotaUser(java.lang.String quotaUser) {
              return (Cancel) super.setQuotaUser(quotaUser);
            }

            @Override
            public Cancel setUploadType(java.lang.String uploadType) {
              return (Cancel) super.setUploadType(uploadType);
            }

            @Override
            public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
              return (Cancel) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource to be cancelled. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource to be cancelled.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource to be cancelled. */
            public Cancel setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/migratableResources/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Cancel set(String parameterName, Object value) {
              return (Cancel) super.set(parameterName, value);
            }
          }
          /**
           * Deletes a long-running operation. This method indicates that the client is no longer interested
           * in the operation result. It does not cancel the operation. If the server doesn't support this
           * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.delete".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource to be deleted.
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/migratableResources/[^/]+/operations/[^/]+$");

            /**
             * Deletes a long-running operation. This method indicates that the client is no longer interested
             * in the operation result. It does not cancel the operation. If the server doesn't support this
             * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.delete".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource to be deleted.
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/migratableResources/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource to be deleted. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource to be deleted.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource to be deleted. */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/migratableResources/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Gets the latest state of a long-running operation. Clients can use this method to poll the
           * operation result at intervals as recommended by the API service.
           *
           * Create a request for the method "operations.get".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource.
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/migratableResources/[^/]+/operations/[^/]+$");

            /**
             * Gets the latest state of a long-running operation. Clients can use this method to poll the
             * operation result at intervals as recommended by the API service.
             *
             * Create a request for the method "operations.get".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource.
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/migratableResources/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource. */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/migratableResources/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Lists operations that match the specified filter in the request. If the server doesn't support
           * this method, it returns `UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.list".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation's parent resource.
           * @return the request
           */
          public List list(java.lang.String name) throws java.io.IOException {
            List result = new List(name);
            initialize(result);
            return result;
          }

          public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse> {

            private static final String REST_PATH = "v1/{+name}/operations";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/migratableResources/[^/]+$");

            /**
             * Lists operations that match the specified filter in the request. If the server doesn't support
             * this method, it returns `UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.list".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation's parent resource.
             * @since 1.13
             */
            protected List(java.lang.String name) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/migratableResources/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation's parent resource. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation's parent resource.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation's parent resource. */
            public List setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/migratableResources/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /** The standard list filter. */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** The standard list filter.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /** The standard list filter. */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /** The standard list page size. */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** The standard list page size.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /** The standard list page size. */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** The standard list page token. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** The standard list page token.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** The standard list page token. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Waits until the specified long-running operation is done or reaches at most a specified timeout,
           * returning the latest state. If the operation is already done, the latest state is immediately
           * returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC
           * timeout is used. If the server does not support this method, it returns
           * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
           * the latest state before the specified timeout (including immediately), meaning even an immediate
           * response is no guarantee that the operation is done.
           *
           * Create a request for the method "operations.wait".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Wait#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource to wait on.
           * @return the request
           */
          public Wait wait(java.lang.String name) throws java.io.IOException {
            Wait result = new Wait(name);
            initialize(result);
            return result;
          }

          public class Wait extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+name}:wait";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/migratableResources/[^/]+/operations/[^/]+$");

            /**
             * Waits until the specified long-running operation is done or reaches at most a specified
             * timeout, returning the latest state. If the operation is already done, the latest state is
             * immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout,
             * the HTTP/RPC timeout is used. If the server does not support this method, it returns
             * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
             * the latest state before the specified timeout (including immediately), meaning even an
             * immediate response is no guarantee that the operation is done.
             *
             * Create a request for the method "operations.wait".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Wait#execute()} method to invoke the remote operation. <p>
             * {@link Wait#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource to wait on.
             * @since 1.13
             */
            protected Wait(java.lang.String name) {
              super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/migratableResources/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public Wait set$Xgafv(java.lang.String $Xgafv) {
              return (Wait) super.set$Xgafv($Xgafv);
            }

            @Override
            public Wait setAccessToken(java.lang.String accessToken) {
              return (Wait) super.setAccessToken(accessToken);
            }

            @Override
            public Wait setAlt(java.lang.String alt) {
              return (Wait) super.setAlt(alt);
            }

            @Override
            public Wait setCallback(java.lang.String callback) {
              return (Wait) super.setCallback(callback);
            }

            @Override
            public Wait setFields(java.lang.String fields) {
              return (Wait) super.setFields(fields);
            }

            @Override
            public Wait setKey(java.lang.String key) {
              return (Wait) super.setKey(key);
            }

            @Override
            public Wait setOauthToken(java.lang.String oauthToken) {
              return (Wait) super.setOauthToken(oauthToken);
            }

            @Override
            public Wait setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Wait) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Wait setQuotaUser(java.lang.String quotaUser) {
              return (Wait) super.setQuotaUser(quotaUser);
            }

            @Override
            public Wait setUploadType(java.lang.String uploadType) {
              return (Wait) super.setUploadType(uploadType);
            }

            @Override
            public Wait setUploadProtocol(java.lang.String uploadProtocol) {
              return (Wait) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource to wait on. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource to wait on.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource to wait on. */
            public Wait setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/migratableResources/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * The maximum duration to wait before timing out. If left blank, the wait will be at
             * most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline
             * is also specified, the shorter one will be used.
             */
            @com.google.api.client.util.Key
            private String timeout;

            /** The maximum duration to wait before timing out. If left blank, the wait will be at most the time
           permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the
           shorter one will be used.
             */
            public String getTimeout() {
              return timeout;
            }

            /**
             * The maximum duration to wait before timing out. If left blank, the wait will be at
             * most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline
             * is also specified, the shorter one will be used.
             */
            public Wait setTimeout(String timeout) {
              this.timeout = timeout;
              return this;
            }

            @Override
            public Wait set(String parameterName, Object value) {
              return (Wait) super.set(parameterName, value);
            }
          }

        }
      }
      /**
       * An accessor for creating requests from the ModelDeploymentMonitoringJobs collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Aiplatform aiplatform = new Aiplatform(...);}
       *   {@code Aiplatform.ModelDeploymentMonitoringJobs.List request = aiplatform.modelDeploymentMonitoringJobs().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public ModelDeploymentMonitoringJobs modelDeploymentMonitoringJobs() {
        return new ModelDeploymentMonitoringJobs();
      }

      /**
       * The "modelDeploymentMonitoringJobs" collection of methods.
       */
      public class ModelDeploymentMonitoringJobs {

        /**
         * Creates a ModelDeploymentMonitoringJob. It will run periodically on a configured interval.
         *
         * Create a request for the method "modelDeploymentMonitoringJobs.create".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent of the ModelDeploymentMonitoringJob. Format:
         *        `projects/{project}/locations/{location}`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ModelDeploymentMonitoringJob}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ModelDeploymentMonitoringJob content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ModelDeploymentMonitoringJob> {

          private static final String REST_PATH = "v1/{+parent}/modelDeploymentMonitoringJobs";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Creates a ModelDeploymentMonitoringJob. It will run periodically on a configured interval.
           *
           * Create a request for the method "modelDeploymentMonitoringJobs.create".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent of the ModelDeploymentMonitoringJob. Format:
         *        `projects/{project}/locations/{location}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ModelDeploymentMonitoringJob}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ModelDeploymentMonitoringJob content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ModelDeploymentMonitoringJob.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The parent of the ModelDeploymentMonitoringJob. Format:
           * `projects/{project}/locations/{location}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent of the ModelDeploymentMonitoringJob. Format:
         `projects/{project}/locations/{location}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The parent of the ModelDeploymentMonitoringJob. Format:
           * `projects/{project}/locations/{location}`
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a ModelDeploymentMonitoringJob.
         *
         * Create a request for the method "modelDeploymentMonitoringJobs.delete".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The resource name of the model monitoring job to delete. Format: `projects/{project}/locat
         *        ions/{location}/modelDeploymentMonitoringJobs/{model_deployment_monitoring_job}`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/modelDeploymentMonitoringJobs/[^/]+$");

          /**
           * Deletes a ModelDeploymentMonitoringJob.
           *
           * Create a request for the method "modelDeploymentMonitoringJobs.delete".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The resource name of the model monitoring job to delete. Format: `projects/{project}/locat
         *        ions/{location}/modelDeploymentMonitoringJobs/{model_deployment_monitoring_job}`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/modelDeploymentMonitoringJobs/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the model monitoring job to delete. Format: `projects/{p
           * roject}/locations/{location}/modelDeploymentMonitoringJobs/{model_deployment_monitoring
           * _job}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The resource name of the model monitoring job to delete. Format: `projects/{project}/loca
         tions/{location}/modelDeploymentMonitoringJobs/{model_deployment_monitoring_job}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The resource name of the model monitoring job to delete. Format: `projects/{p
           * roject}/locations/{location}/modelDeploymentMonitoringJobs/{model_deployment_monitoring
           * _job}`
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/modelDeploymentMonitoringJobs/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets a ModelDeploymentMonitoringJob.
         *
         * Create a request for the method "modelDeploymentMonitoringJobs.get".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The resource name of the ModelDeploymentMonitoringJob. Format: `projects/{project}/locatio
         *        ns/{location}/modelDeploymentMonitoringJobs/{model_deployment_monitoring_job}`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ModelDeploymentMonitoringJob> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/modelDeploymentMonitoringJobs/[^/]+$");

          /**
           * Gets a ModelDeploymentMonitoringJob.
           *
           * Create a request for the method "modelDeploymentMonitoringJobs.get".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The resource name of the ModelDeploymentMonitoringJob. Format: `projects/{project}/locatio
         *        ns/{location}/modelDeploymentMonitoringJobs/{model_deployment_monitoring_job}`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ModelDeploymentMonitoringJob.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/modelDeploymentMonitoringJobs/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the ModelDeploymentMonitoringJob. Format: `projects/{pro
           * ject}/locations/{location}/modelDeploymentMonitoringJobs/{model_deployment_monitoring_j
           * ob}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The resource name of the ModelDeploymentMonitoringJob. Format: `projects/{project}/locati
         ons/{location}/modelDeploymentMonitoringJobs/{model_deployment_monitoring_job}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The resource name of the ModelDeploymentMonitoringJob. Format: `projects/{pro
           * ject}/locations/{location}/modelDeploymentMonitoringJobs/{model_deployment_monitoring_j
           * ob}`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/modelDeploymentMonitoringJobs/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists ModelDeploymentMonitoringJobs in a Location.
         *
         * Create a request for the method "modelDeploymentMonitoringJobs.list".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent of the ModelDeploymentMonitoringJob. Format:
         *        `projects/{project}/locations/{location}`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListModelDeploymentMonitoringJobsResponse> {

          private static final String REST_PATH = "v1/{+parent}/modelDeploymentMonitoringJobs";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists ModelDeploymentMonitoringJobs in a Location.
           *
           * Create a request for the method "modelDeploymentMonitoringJobs.list".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent of the ModelDeploymentMonitoringJob. Format:
         *        `projects/{project}/locations/{location}`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListModelDeploymentMonitoringJobsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The parent of the ModelDeploymentMonitoringJob. Format:
           * `projects/{project}/locations/{location}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent of the ModelDeploymentMonitoringJob. Format:
         `projects/{project}/locations/{location}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The parent of the ModelDeploymentMonitoringJob. Format:
           * `projects/{project}/locations/{location}`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * The standard list filter. Supported fields: * `display_name` supports `=`, `!=`
           * comparisons, and `:` wildcard. * `state` supports `=`, `!=` comparisons. *
           * `create_time` supports `=`, `!=`,`<`, `<=`,`>`, `>=` comparisons. `create_time` must be
           * in RFC 3339 format. * `labels` supports general map functions that is:
           * `labels.key=value` - key:value equality `labels.key:* - key existence Some examples of
           * using the filter are: * `state="JOB_STATE_SUCCEEDED" AND display_name:"my_job_*"` *
           * `state!="JOB_STATE_FAILED" OR display_name="my_job"` * `NOT display_name="my_job"` *
           * `create_time>"2021-05-18T00:00:00Z"` * `labels.keyA=valueA` * `labels.keyB:*`
           */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** The standard list filter. Supported fields: * `display_name` supports `=`, `!=` comparisons, and
         `:` wildcard. * `state` supports `=`, `!=` comparisons. * `create_time` supports `=`, `!=`,`<`,
         `<=`,`>`, `>=` comparisons. `create_time` must be in RFC 3339 format. * `labels` supports general
         map functions that is: `labels.key=value` - key:value equality `labels.key:* - key existence Some
         examples of using the filter are: * `state="JOB_STATE_SUCCEEDED" AND display_name:"my_job_*"` *
         `state!="JOB_STATE_FAILED" OR display_name="my_job"` * `NOT display_name="my_job"` *
         `create_time>"2021-05-18T00:00:00Z"` * `labels.keyA=valueA` * `labels.keyB:*`
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /**
           * The standard list filter. Supported fields: * `display_name` supports `=`, `!=`
           * comparisons, and `:` wildcard. * `state` supports `=`, `!=` comparisons. *
           * `create_time` supports `=`, `!=`,`<`, `<=`,`>`, `>=` comparisons. `create_time` must be
           * in RFC 3339 format. * `labels` supports general map functions that is:
           * `labels.key=value` - key:value equality `labels.key:* - key existence Some examples of
           * using the filter are: * `state="JOB_STATE_SUCCEEDED" AND display_name:"my_job_*"` *
           * `state!="JOB_STATE_FAILED" OR display_name="my_job"` * `NOT display_name="my_job"` *
           * `create_time>"2021-05-18T00:00:00Z"` * `labels.keyA=valueA` * `labels.keyB:*`
           */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /** The standard list page size. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The standard list page size.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** The standard list page size. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** The standard list page token. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The standard list page token.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** The standard list page token. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          /** Mask specifying which fields to read */
          @com.google.api.client.util.Key
          private String readMask;

          /** Mask specifying which fields to read
           */
          public String getReadMask() {
            return readMask;
          }

          /** Mask specifying which fields to read */
          public List setReadMask(String readMask) {
            this.readMask = readMask;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates a ModelDeploymentMonitoringJob.
         *
         * Create a request for the method "modelDeploymentMonitoringJobs.patch".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Output only. Resource name of a ModelDeploymentMonitoringJob.
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ModelDeploymentMonitoringJob}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ModelDeploymentMonitoringJob content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/modelDeploymentMonitoringJobs/[^/]+$");

          /**
           * Updates a ModelDeploymentMonitoringJob.
           *
           * Create a request for the method "modelDeploymentMonitoringJobs.patch".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           * <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Output only. Resource name of a ModelDeploymentMonitoringJob.
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ModelDeploymentMonitoringJob}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ModelDeploymentMonitoringJob content) {
            super(Aiplatform.this, "PATCH", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/modelDeploymentMonitoringJobs/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /** Output only. Resource name of a ModelDeploymentMonitoringJob. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Output only. Resource name of a ModelDeploymentMonitoringJob.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Output only. Resource name of a ModelDeploymentMonitoringJob. */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/modelDeploymentMonitoringJobs/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Required. The update mask is used to specify the fields to be overwritten in the
           * ModelDeploymentMonitoringJob resource by the update. The fields specified in the
           * update_mask are relative to the resource, not the full request. A field will be
           * overwritten if it is in the mask. If the user does not provide a mask then only the
           * non-empty fields present in the request will be overwritten. Set the update_mask to `*`
           * to override all fields. For the objective config, the user can either provide the
           * update mask for model_deployment_monitoring_objective_configs or any combination of its
           * nested fields, such as:
           * model_deployment_monitoring_objective_configs.objective_config.training_dataset.
           * Updatable fields: * `display_name` * `model_deployment_monitoring_schedule_config` *
           * `model_monitoring_alert_config` * `logging_sampling_strategy` * `labels` * `log_ttl` *
           * `enable_monitoring_pipeline_logs` . and *
           * `model_deployment_monitoring_objective_configs` . or *
           * `model_deployment_monitoring_objective_configs.objective_config.training_dataset` * `mo
           * del_deployment_monitoring_objective_configs.objective_config.training_prediction_skew_d
           * etection_config` * `model_deployment_monitoring_objective_configs.objective_config.pred
           * iction_drift_detection_config`
           */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Required. The update mask is used to specify the fields to be overwritten in the
         ModelDeploymentMonitoringJob resource by the update. The fields specified in the update_mask are
         relative to the resource, not the full request. A field will be overwritten if it is in the mask.
         If the user does not provide a mask then only the non-empty fields present in the request will be
         overwritten. Set the update_mask to `*` to override all fields. For the objective config, the user
         can either provide the update mask for model_deployment_monitoring_objective_configs or any
         combination of its nested fields, such as:
         model_deployment_monitoring_objective_configs.objective_config.training_dataset. Updatable fields:
         * `display_name` * `model_deployment_monitoring_schedule_config` * `model_monitoring_alert_config`
         * `logging_sampling_strategy` * `labels` * `log_ttl` * `enable_monitoring_pipeline_logs` . and *
         `model_deployment_monitoring_objective_configs` . or *
         `model_deployment_monitoring_objective_configs.objective_config.training_dataset` * `model_deployme
         nt_monitoring_objective_configs.objective_config.training_prediction_skew_detection_config` *
         `model_deployment_monitoring_objective_configs.objective_config.prediction_drift_detection_config`
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /**
           * Required. The update mask is used to specify the fields to be overwritten in the
           * ModelDeploymentMonitoringJob resource by the update. The fields specified in the
           * update_mask are relative to the resource, not the full request. A field will be
           * overwritten if it is in the mask. If the user does not provide a mask then only the
           * non-empty fields present in the request will be overwritten. Set the update_mask to `*`
           * to override all fields. For the objective config, the user can either provide the
           * update mask for model_deployment_monitoring_objective_configs or any combination of its
           * nested fields, such as:
           * model_deployment_monitoring_objective_configs.objective_config.training_dataset.
           * Updatable fields: * `display_name` * `model_deployment_monitoring_schedule_config` *
           * `model_monitoring_alert_config` * `logging_sampling_strategy` * `labels` * `log_ttl` *
           * `enable_monitoring_pipeline_logs` . and *
           * `model_deployment_monitoring_objective_configs` . or *
           * `model_deployment_monitoring_objective_configs.objective_config.training_dataset` * `mo
           * del_deployment_monitoring_objective_configs.objective_config.training_prediction_skew_d
           * etection_config` * `model_deployment_monitoring_objective_configs.objective_config.pred
           * iction_drift_detection_config`
           */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }
        /**
         * Pauses a ModelDeploymentMonitoringJob. If the job is running, the server makes a best effort to
         * cancel the job. Will mark ModelDeploymentMonitoringJob.state to 'PAUSED'.
         *
         * Create a request for the method "modelDeploymentMonitoringJobs.pause".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Pause#execute()} method to invoke the remote operation.
         *
         * @param name Required. The resource name of the ModelDeploymentMonitoringJob to pause. Format: `projects/{project
         *        }/locations/{location}/modelDeploymentMonitoringJobs/{model_deployment_monitoring_job}`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1PauseModelDeploymentMonitoringJobRequest}
         * @return the request
         */
        public Pause pause(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1PauseModelDeploymentMonitoringJobRequest content) throws java.io.IOException {
          Pause result = new Pause(name, content);
          initialize(result);
          return result;
        }

        public class Pause extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

          private static final String REST_PATH = "v1/{+name}:pause";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/modelDeploymentMonitoringJobs/[^/]+$");

          /**
           * Pauses a ModelDeploymentMonitoringJob. If the job is running, the server makes a best effort to
           * cancel the job. Will mark ModelDeploymentMonitoringJob.state to 'PAUSED'.
           *
           * Create a request for the method "modelDeploymentMonitoringJobs.pause".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Pause#execute()} method to invoke the remote operation.
           * <p> {@link
           * Pause#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The resource name of the ModelDeploymentMonitoringJob to pause. Format: `projects/{project
         *        }/locations/{location}/modelDeploymentMonitoringJobs/{model_deployment_monitoring_job}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1PauseModelDeploymentMonitoringJobRequest}
           * @since 1.13
           */
          protected Pause(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1PauseModelDeploymentMonitoringJobRequest content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/modelDeploymentMonitoringJobs/[^/]+$");
            }
          }

          @Override
          public Pause set$Xgafv(java.lang.String $Xgafv) {
            return (Pause) super.set$Xgafv($Xgafv);
          }

          @Override
          public Pause setAccessToken(java.lang.String accessToken) {
            return (Pause) super.setAccessToken(accessToken);
          }

          @Override
          public Pause setAlt(java.lang.String alt) {
            return (Pause) super.setAlt(alt);
          }

          @Override
          public Pause setCallback(java.lang.String callback) {
            return (Pause) super.setCallback(callback);
          }

          @Override
          public Pause setFields(java.lang.String fields) {
            return (Pause) super.setFields(fields);
          }

          @Override
          public Pause setKey(java.lang.String key) {
            return (Pause) super.setKey(key);
          }

          @Override
          public Pause setOauthToken(java.lang.String oauthToken) {
            return (Pause) super.setOauthToken(oauthToken);
          }

          @Override
          public Pause setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Pause) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Pause setQuotaUser(java.lang.String quotaUser) {
            return (Pause) super.setQuotaUser(quotaUser);
          }

          @Override
          public Pause setUploadType(java.lang.String uploadType) {
            return (Pause) super.setUploadType(uploadType);
          }

          @Override
          public Pause setUploadProtocol(java.lang.String uploadProtocol) {
            return (Pause) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the ModelDeploymentMonitoringJob to pause. Format: `proj
           * ects/{project}/locations/{location}/modelDeploymentMonitoringJobs/{model_deployment_mon
           * itoring_job}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The resource name of the ModelDeploymentMonitoringJob to pause. Format: `projects/{projec
         t}/locations/{location}/modelDeploymentMonitoringJobs/{model_deployment_monitoring_job}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The resource name of the ModelDeploymentMonitoringJob to pause. Format: `proj
           * ects/{project}/locations/{location}/modelDeploymentMonitoringJobs/{model_deployment_mon
           * itoring_job}`
           */
          public Pause setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/modelDeploymentMonitoringJobs/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Pause set(String parameterName, Object value) {
            return (Pause) super.set(parameterName, value);
          }
        }
        /**
         * Resumes a paused ModelDeploymentMonitoringJob. It will start to run from next scheduled time. A
         * deleted ModelDeploymentMonitoringJob can't be resumed.
         *
         * Create a request for the method "modelDeploymentMonitoringJobs.resume".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Resume#execute()} method to invoke the remote operation.
         *
         * @param name Required. The resource name of the ModelDeploymentMonitoringJob to resume. Format: `projects/{projec
         *        t}/locations/{location}/modelDeploymentMonitoringJobs/{model_deployment_monitoring_job}`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ResumeModelDeploymentMonitoringJobRequest}
         * @return the request
         */
        public Resume resume(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ResumeModelDeploymentMonitoringJobRequest content) throws java.io.IOException {
          Resume result = new Resume(name, content);
          initialize(result);
          return result;
        }

        public class Resume extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

          private static final String REST_PATH = "v1/{+name}:resume";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/modelDeploymentMonitoringJobs/[^/]+$");

          /**
           * Resumes a paused ModelDeploymentMonitoringJob. It will start to run from next scheduled time. A
           * deleted ModelDeploymentMonitoringJob can't be resumed.
           *
           * Create a request for the method "modelDeploymentMonitoringJobs.resume".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Resume#execute()} method to invoke the remote operation.
           * <p> {@link
           * Resume#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The resource name of the ModelDeploymentMonitoringJob to resume. Format: `projects/{projec
         *        t}/locations/{location}/modelDeploymentMonitoringJobs/{model_deployment_monitoring_job}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ResumeModelDeploymentMonitoringJobRequest}
           * @since 1.13
           */
          protected Resume(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ResumeModelDeploymentMonitoringJobRequest content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/modelDeploymentMonitoringJobs/[^/]+$");
            }
          }

          @Override
          public Resume set$Xgafv(java.lang.String $Xgafv) {
            return (Resume) super.set$Xgafv($Xgafv);
          }

          @Override
          public Resume setAccessToken(java.lang.String accessToken) {
            return (Resume) super.setAccessToken(accessToken);
          }

          @Override
          public Resume setAlt(java.lang.String alt) {
            return (Resume) super.setAlt(alt);
          }

          @Override
          public Resume setCallback(java.lang.String callback) {
            return (Resume) super.setCallback(callback);
          }

          @Override
          public Resume setFields(java.lang.String fields) {
            return (Resume) super.setFields(fields);
          }

          @Override
          public Resume setKey(java.lang.String key) {
            return (Resume) super.setKey(key);
          }

          @Override
          public Resume setOauthToken(java.lang.String oauthToken) {
            return (Resume) super.setOauthToken(oauthToken);
          }

          @Override
          public Resume setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Resume) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Resume setQuotaUser(java.lang.String quotaUser) {
            return (Resume) super.setQuotaUser(quotaUser);
          }

          @Override
          public Resume setUploadType(java.lang.String uploadType) {
            return (Resume) super.setUploadType(uploadType);
          }

          @Override
          public Resume setUploadProtocol(java.lang.String uploadProtocol) {
            return (Resume) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the ModelDeploymentMonitoringJob to resume. Format: `pro
           * jects/{project}/locations/{location}/modelDeploymentMonitoringJobs/{model_deployment_mo
           * nitoring_job}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The resource name of the ModelDeploymentMonitoringJob to resume. Format: `projects/{proje
         ct}/locations/{location}/modelDeploymentMonitoringJobs/{model_deployment_monitoring_job}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The resource name of the ModelDeploymentMonitoringJob to resume. Format: `pro
           * jects/{project}/locations/{location}/modelDeploymentMonitoringJobs/{model_deployment_mo
           * nitoring_job}`
           */
          public Resume setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/modelDeploymentMonitoringJobs/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Resume set(String parameterName, Object value) {
            return (Resume) super.set(parameterName, value);
          }
        }
        /**
         * Searches Model Monitoring Statistics generated within a given time window.
         *
         * Create a request for the method
         * "modelDeploymentMonitoringJobs.searchModelDeploymentMonitoringStatsAnomalies".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link SearchModelDeploymentMonitoringStatsAnomalies#execute()} method to
         * invoke the remote operation.
         *
         * @param modelDeploymentMonitoringJob Required. ModelDeploymentMonitoring Job resource name. Format: `projects/{project}/locations/{locati
         *        on}/modelDeploymentMonitoringJobs/{model_deployment_monitoring_job}`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1SearchModelDeploymentMonitoringStatsAnomaliesRequest}
         * @return the request
         */
        public SearchModelDeploymentMonitoringStatsAnomalies searchModelDeploymentMonitoringStatsAnomalies(java.lang.String modelDeploymentMonitoringJob, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1SearchModelDeploymentMonitoringStatsAnomaliesRequest content) throws java.io.IOException {
          SearchModelDeploymentMonitoringStatsAnomalies result = new SearchModelDeploymentMonitoringStatsAnomalies(modelDeploymentMonitoringJob, content);
          initialize(result);
          return result;
        }

        public class SearchModelDeploymentMonitoringStatsAnomalies extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1SearchModelDeploymentMonitoringStatsAnomaliesResponse> {

          private static final String REST_PATH = "v1/{+modelDeploymentMonitoringJob}:searchModelDeploymentMonitoringStatsAnomalies";

          private final java.util.regex.Pattern MODEL_DEPLOYMENT_MONITORING_JOB_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/modelDeploymentMonitoringJobs/[^/]+$");

          /**
           * Searches Model Monitoring Statistics generated within a given time window.
           *
           * Create a request for the method
           * "modelDeploymentMonitoringJobs.searchModelDeploymentMonitoringStatsAnomalies".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link SearchModelDeploymentMonitoringStatsAnomalies#execute()}
           * method to invoke the remote operation. <p> {@link SearchModelDeploymentMonitoringStatsAnomalies
           * #initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param modelDeploymentMonitoringJob Required. ModelDeploymentMonitoring Job resource name. Format: `projects/{project}/locations/{locati
         *        on}/modelDeploymentMonitoringJobs/{model_deployment_monitoring_job}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1SearchModelDeploymentMonitoringStatsAnomaliesRequest}
           * @since 1.13
           */
          protected SearchModelDeploymentMonitoringStatsAnomalies(java.lang.String modelDeploymentMonitoringJob, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1SearchModelDeploymentMonitoringStatsAnomaliesRequest content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1SearchModelDeploymentMonitoringStatsAnomaliesResponse.class);
            this.modelDeploymentMonitoringJob = com.google.api.client.util.Preconditions.checkNotNull(modelDeploymentMonitoringJob, "Required parameter modelDeploymentMonitoringJob must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(MODEL_DEPLOYMENT_MONITORING_JOB_PATTERN.matcher(modelDeploymentMonitoringJob).matches(),
                  "Parameter modelDeploymentMonitoringJob must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/modelDeploymentMonitoringJobs/[^/]+$");
            }
          }

          @Override
          public SearchModelDeploymentMonitoringStatsAnomalies set$Xgafv(java.lang.String $Xgafv) {
            return (SearchModelDeploymentMonitoringStatsAnomalies) super.set$Xgafv($Xgafv);
          }

          @Override
          public SearchModelDeploymentMonitoringStatsAnomalies setAccessToken(java.lang.String accessToken) {
            return (SearchModelDeploymentMonitoringStatsAnomalies) super.setAccessToken(accessToken);
          }

          @Override
          public SearchModelDeploymentMonitoringStatsAnomalies setAlt(java.lang.String alt) {
            return (SearchModelDeploymentMonitoringStatsAnomalies) super.setAlt(alt);
          }

          @Override
          public SearchModelDeploymentMonitoringStatsAnomalies setCallback(java.lang.String callback) {
            return (SearchModelDeploymentMonitoringStatsAnomalies) super.setCallback(callback);
          }

          @Override
          public SearchModelDeploymentMonitoringStatsAnomalies setFields(java.lang.String fields) {
            return (SearchModelDeploymentMonitoringStatsAnomalies) super.setFields(fields);
          }

          @Override
          public SearchModelDeploymentMonitoringStatsAnomalies setKey(java.lang.String key) {
            return (SearchModelDeploymentMonitoringStatsAnomalies) super.setKey(key);
          }

          @Override
          public SearchModelDeploymentMonitoringStatsAnomalies setOauthToken(java.lang.String oauthToken) {
            return (SearchModelDeploymentMonitoringStatsAnomalies) super.setOauthToken(oauthToken);
          }

          @Override
          public SearchModelDeploymentMonitoringStatsAnomalies setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (SearchModelDeploymentMonitoringStatsAnomalies) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public SearchModelDeploymentMonitoringStatsAnomalies setQuotaUser(java.lang.String quotaUser) {
            return (SearchModelDeploymentMonitoringStatsAnomalies) super.setQuotaUser(quotaUser);
          }

          @Override
          public SearchModelDeploymentMonitoringStatsAnomalies setUploadType(java.lang.String uploadType) {
            return (SearchModelDeploymentMonitoringStatsAnomalies) super.setUploadType(uploadType);
          }

          @Override
          public SearchModelDeploymentMonitoringStatsAnomalies setUploadProtocol(java.lang.String uploadProtocol) {
            return (SearchModelDeploymentMonitoringStatsAnomalies) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. ModelDeploymentMonitoring Job resource name. Format: `projects/{project}/loca
           * tions/{location}/modelDeploymentMonitoringJobs/{model_deployment_monitoring_job}`
           */
          @com.google.api.client.util.Key
          private java.lang.String modelDeploymentMonitoringJob;

          /** Required. ModelDeploymentMonitoring Job resource name. Format: `projects/{project}/locations/{locat
         ion}/modelDeploymentMonitoringJobs/{model_deployment_monitoring_job}`
           */
          public java.lang.String getModelDeploymentMonitoringJob() {
            return modelDeploymentMonitoringJob;
          }

          /**
           * Required. ModelDeploymentMonitoring Job resource name. Format: `projects/{project}/loca
           * tions/{location}/modelDeploymentMonitoringJobs/{model_deployment_monitoring_job}`
           */
          public SearchModelDeploymentMonitoringStatsAnomalies setModelDeploymentMonitoringJob(java.lang.String modelDeploymentMonitoringJob) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(MODEL_DEPLOYMENT_MONITORING_JOB_PATTERN.matcher(modelDeploymentMonitoringJob).matches(),
                  "Parameter modelDeploymentMonitoringJob must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/modelDeploymentMonitoringJobs/[^/]+$");
            }
            this.modelDeploymentMonitoringJob = modelDeploymentMonitoringJob;
            return this;
          }

          @Override
          public SearchModelDeploymentMonitoringStatsAnomalies set(String parameterName, Object value) {
            return (SearchModelDeploymentMonitoringStatsAnomalies) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the Operations collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Aiplatform aiplatform = new Aiplatform(...);}
         *   {@code Aiplatform.Operations.List request = aiplatform.operations().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Operations operations() {
          return new Operations();
        }

        /**
         * The "operations" collection of methods.
         */
        public class Operations {

          /**
           * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
           * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
           * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
           * methods to check whether the cancellation succeeded or whether the operation completed despite
           * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
           * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
           * `Code.CANCELLED`.
           *
           * Create a request for the method "operations.cancel".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource to be cancelled.
           * @return the request
           */
          public Cancel cancel(java.lang.String name) throws java.io.IOException {
            Cancel result = new Cancel(name);
            initialize(result);
            return result;
          }

          public class Cancel extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

            private static final String REST_PATH = "v1/{+name}:cancel";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/modelDeploymentMonitoringJobs/[^/]+/operations/[^/]+$");

            /**
             * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
             * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
             * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
             * methods to check whether the cancellation succeeded or whether the operation completed despite
             * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
             * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
             * `Code.CANCELLED`.
             *
             * Create a request for the method "operations.cancel".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
             * <p> {@link
             * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource to be cancelled.
             * @since 1.13
             */
            protected Cancel(java.lang.String name) {
              super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/modelDeploymentMonitoringJobs/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public Cancel set$Xgafv(java.lang.String $Xgafv) {
              return (Cancel) super.set$Xgafv($Xgafv);
            }

            @Override
            public Cancel setAccessToken(java.lang.String accessToken) {
              return (Cancel) super.setAccessToken(accessToken);
            }

            @Override
            public Cancel setAlt(java.lang.String alt) {
              return (Cancel) super.setAlt(alt);
            }

            @Override
            public Cancel setCallback(java.lang.String callback) {
              return (Cancel) super.setCallback(callback);
            }

            @Override
            public Cancel setFields(java.lang.String fields) {
              return (Cancel) super.setFields(fields);
            }

            @Override
            public Cancel setKey(java.lang.String key) {
              return (Cancel) super.setKey(key);
            }

            @Override
            public Cancel setOauthToken(java.lang.String oauthToken) {
              return (Cancel) super.setOauthToken(oauthToken);
            }

            @Override
            public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Cancel) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Cancel setQuotaUser(java.lang.String quotaUser) {
              return (Cancel) super.setQuotaUser(quotaUser);
            }

            @Override
            public Cancel setUploadType(java.lang.String uploadType) {
              return (Cancel) super.setUploadType(uploadType);
            }

            @Override
            public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
              return (Cancel) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource to be cancelled. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource to be cancelled.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource to be cancelled. */
            public Cancel setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/modelDeploymentMonitoringJobs/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Cancel set(String parameterName, Object value) {
              return (Cancel) super.set(parameterName, value);
            }
          }
          /**
           * Deletes a long-running operation. This method indicates that the client is no longer interested
           * in the operation result. It does not cancel the operation. If the server doesn't support this
           * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.delete".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource to be deleted.
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/modelDeploymentMonitoringJobs/[^/]+/operations/[^/]+$");

            /**
             * Deletes a long-running operation. This method indicates that the client is no longer interested
             * in the operation result. It does not cancel the operation. If the server doesn't support this
             * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.delete".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource to be deleted.
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/modelDeploymentMonitoringJobs/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource to be deleted. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource to be deleted.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource to be deleted. */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/modelDeploymentMonitoringJobs/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Gets the latest state of a long-running operation. Clients can use this method to poll the
           * operation result at intervals as recommended by the API service.
           *
           * Create a request for the method "operations.get".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource.
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/modelDeploymentMonitoringJobs/[^/]+/operations/[^/]+$");

            /**
             * Gets the latest state of a long-running operation. Clients can use this method to poll the
             * operation result at intervals as recommended by the API service.
             *
             * Create a request for the method "operations.get".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource.
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/modelDeploymentMonitoringJobs/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource. */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/modelDeploymentMonitoringJobs/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Lists operations that match the specified filter in the request. If the server doesn't support
           * this method, it returns `UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.list".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation's parent resource.
           * @return the request
           */
          public List list(java.lang.String name) throws java.io.IOException {
            List result = new List(name);
            initialize(result);
            return result;
          }

          public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse> {

            private static final String REST_PATH = "v1/{+name}/operations";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/modelDeploymentMonitoringJobs/[^/]+$");

            /**
             * Lists operations that match the specified filter in the request. If the server doesn't support
             * this method, it returns `UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.list".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation's parent resource.
             * @since 1.13
             */
            protected List(java.lang.String name) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/modelDeploymentMonitoringJobs/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation's parent resource. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation's parent resource.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation's parent resource. */
            public List setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/modelDeploymentMonitoringJobs/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /** The standard list filter. */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** The standard list filter.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /** The standard list filter. */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /** The standard list page size. */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** The standard list page size.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /** The standard list page size. */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** The standard list page token. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** The standard list page token.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** The standard list page token. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Waits until the specified long-running operation is done or reaches at most a specified timeout,
           * returning the latest state. If the operation is already done, the latest state is immediately
           * returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC
           * timeout is used. If the server does not support this method, it returns
           * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
           * the latest state before the specified timeout (including immediately), meaning even an immediate
           * response is no guarantee that the operation is done.
           *
           * Create a request for the method "operations.wait".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Wait#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource to wait on.
           * @return the request
           */
          public Wait wait(java.lang.String name) throws java.io.IOException {
            Wait result = new Wait(name);
            initialize(result);
            return result;
          }

          public class Wait extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+name}:wait";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/modelDeploymentMonitoringJobs/[^/]+/operations/[^/]+$");

            /**
             * Waits until the specified long-running operation is done or reaches at most a specified
             * timeout, returning the latest state. If the operation is already done, the latest state is
             * immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout,
             * the HTTP/RPC timeout is used. If the server does not support this method, it returns
             * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
             * the latest state before the specified timeout (including immediately), meaning even an
             * immediate response is no guarantee that the operation is done.
             *
             * Create a request for the method "operations.wait".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Wait#execute()} method to invoke the remote operation. <p>
             * {@link Wait#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource to wait on.
             * @since 1.13
             */
            protected Wait(java.lang.String name) {
              super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/modelDeploymentMonitoringJobs/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public Wait set$Xgafv(java.lang.String $Xgafv) {
              return (Wait) super.set$Xgafv($Xgafv);
            }

            @Override
            public Wait setAccessToken(java.lang.String accessToken) {
              return (Wait) super.setAccessToken(accessToken);
            }

            @Override
            public Wait setAlt(java.lang.String alt) {
              return (Wait) super.setAlt(alt);
            }

            @Override
            public Wait setCallback(java.lang.String callback) {
              return (Wait) super.setCallback(callback);
            }

            @Override
            public Wait setFields(java.lang.String fields) {
              return (Wait) super.setFields(fields);
            }

            @Override
            public Wait setKey(java.lang.String key) {
              return (Wait) super.setKey(key);
            }

            @Override
            public Wait setOauthToken(java.lang.String oauthToken) {
              return (Wait) super.setOauthToken(oauthToken);
            }

            @Override
            public Wait setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Wait) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Wait setQuotaUser(java.lang.String quotaUser) {
              return (Wait) super.setQuotaUser(quotaUser);
            }

            @Override
            public Wait setUploadType(java.lang.String uploadType) {
              return (Wait) super.setUploadType(uploadType);
            }

            @Override
            public Wait setUploadProtocol(java.lang.String uploadProtocol) {
              return (Wait) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource to wait on. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource to wait on.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource to wait on. */
            public Wait setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/modelDeploymentMonitoringJobs/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * The maximum duration to wait before timing out. If left blank, the wait will be at
             * most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline
             * is also specified, the shorter one will be used.
             */
            @com.google.api.client.util.Key
            private String timeout;

            /** The maximum duration to wait before timing out. If left blank, the wait will be at most the time
           permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the
           shorter one will be used.
             */
            public String getTimeout() {
              return timeout;
            }

            /**
             * The maximum duration to wait before timing out. If left blank, the wait will be at
             * most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline
             * is also specified, the shorter one will be used.
             */
            public Wait setTimeout(String timeout) {
              this.timeout = timeout;
              return this;
            }

            @Override
            public Wait set(String parameterName, Object value) {
              return (Wait) super.set(parameterName, value);
            }
          }

        }
      }
      /**
       * An accessor for creating requests from the Models collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Aiplatform aiplatform = new Aiplatform(...);}
       *   {@code Aiplatform.Models.List request = aiplatform.models().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Models models() {
        return new Models();
      }

      /**
       * The "models" collection of methods.
       */
      public class Models {

        /**
         * Copies an already existing Vertex AI Model into the specified Location. The source Model must
         * exist in the same Project. When copying custom Models, the users themselves are responsible for
         * Model.metadata content to be region-agnostic, as well as making sure that any resources (e.g.
         * files) it depends on remain accessible.
         *
         * Create a request for the method "models.copy".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Copy#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The resource name of the Location into which to copy the Model. Format:
         *        `projects/{project}/locations/{location}`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CopyModelRequest}
         * @return the request
         */
        public Copy copy(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CopyModelRequest content) throws java.io.IOException {
          Copy result = new Copy(parent, content);
          initialize(result);
          return result;
        }

        public class Copy extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+parent}/models:copy";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Copies an already existing Vertex AI Model into the specified Location. The source Model must
           * exist in the same Project. When copying custom Models, the users themselves are responsible for
           * Model.metadata content to be region-agnostic, as well as making sure that any resources (e.g.
           * files) it depends on remain accessible.
           *
           * Create a request for the method "models.copy".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Copy#execute()} method to invoke the remote operation. <p>
           * {@link Copy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The resource name of the Location into which to copy the Model. Format:
         *        `projects/{project}/locations/{location}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CopyModelRequest}
           * @since 1.13
           */
          protected Copy(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CopyModelRequest content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Copy set$Xgafv(java.lang.String $Xgafv) {
            return (Copy) super.set$Xgafv($Xgafv);
          }

          @Override
          public Copy setAccessToken(java.lang.String accessToken) {
            return (Copy) super.setAccessToken(accessToken);
          }

          @Override
          public Copy setAlt(java.lang.String alt) {
            return (Copy) super.setAlt(alt);
          }

          @Override
          public Copy setCallback(java.lang.String callback) {
            return (Copy) super.setCallback(callback);
          }

          @Override
          public Copy setFields(java.lang.String fields) {
            return (Copy) super.setFields(fields);
          }

          @Override
          public Copy setKey(java.lang.String key) {
            return (Copy) super.setKey(key);
          }

          @Override
          public Copy setOauthToken(java.lang.String oauthToken) {
            return (Copy) super.setOauthToken(oauthToken);
          }

          @Override
          public Copy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Copy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Copy setQuotaUser(java.lang.String quotaUser) {
            return (Copy) super.setQuotaUser(quotaUser);
          }

          @Override
          public Copy setUploadType(java.lang.String uploadType) {
            return (Copy) super.setUploadType(uploadType);
          }

          @Override
          public Copy setUploadProtocol(java.lang.String uploadProtocol) {
            return (Copy) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the Location into which to copy the Model. Format:
           * `projects/{project}/locations/{location}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The resource name of the Location into which to copy the Model. Format:
         `projects/{project}/locations/{location}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The resource name of the Location into which to copy the Model. Format:
           * `projects/{project}/locations/{location}`
           */
          public Copy setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Copy set(String parameterName, Object value) {
            return (Copy) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a Model. A model cannot be deleted if any Endpoint resource has a DeployedModel based on
         * the model in its deployed_models field.
         *
         * Create a request for the method "models.delete".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the Model resource to be deleted. Format:
         *        `projects/{project}/locations/{location}/models/{model}`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/models/[^/]+$");

          /**
           * Deletes a Model. A model cannot be deleted if any Endpoint resource has a DeployedModel based
           * on the model in its deployed_models field.
           *
           * Create a request for the method "models.delete".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the Model resource to be deleted. Format:
         *        `projects/{project}/locations/{location}/models/{model}`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/models/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the Model resource to be deleted. Format:
           * `projects/{project}/locations/{location}/models/{model}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the Model resource to be deleted. Format:
         `projects/{project}/locations/{location}/models/{model}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the Model resource to be deleted. Format:
           * `projects/{project}/locations/{location}/models/{model}`
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/models/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a Model version. Model version can only be deleted if there are no DeployedModels created
         * from it. Deleting the only version in the Model is not allowed. Use DeleteModel for deleting the
         * Model instead.
         *
         * Create a request for the method "models.deleteVersion".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link DeleteVersion#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the model version to be deleted, with a version ID explicitly included.
         *        Example: `projects/{project}/locations/{location}/models/{model}@1234`
         * @return the request
         */
        public DeleteVersion deleteVersion(java.lang.String name) throws java.io.IOException {
          DeleteVersion result = new DeleteVersion(name);
          initialize(result);
          return result;
        }

        public class DeleteVersion extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+name}:deleteVersion";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/models/[^/]+$");

          /**
           * Deletes a Model version. Model version can only be deleted if there are no DeployedModels
           * created from it. Deleting the only version in the Model is not allowed. Use DeleteModel for
           * deleting the Model instead.
           *
           * Create a request for the method "models.deleteVersion".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link DeleteVersion#execute()} method to invoke the remote
           * operation. <p> {@link DeleteVersion#initialize(com.google.api.client.googleapis.services.Abstra
           * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
           * the constructor. </p>
           *
           * @param name Required. The name of the model version to be deleted, with a version ID explicitly included.
         *        Example: `projects/{project}/locations/{location}/models/{model}@1234`
           * @since 1.13
           */
          protected DeleteVersion(java.lang.String name) {
            super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/models/[^/]+$");
            }
          }

          @Override
          public DeleteVersion set$Xgafv(java.lang.String $Xgafv) {
            return (DeleteVersion) super.set$Xgafv($Xgafv);
          }

          @Override
          public DeleteVersion setAccessToken(java.lang.String accessToken) {
            return (DeleteVersion) super.setAccessToken(accessToken);
          }

          @Override
          public DeleteVersion setAlt(java.lang.String alt) {
            return (DeleteVersion) super.setAlt(alt);
          }

          @Override
          public DeleteVersion setCallback(java.lang.String callback) {
            return (DeleteVersion) super.setCallback(callback);
          }

          @Override
          public DeleteVersion setFields(java.lang.String fields) {
            return (DeleteVersion) super.setFields(fields);
          }

          @Override
          public DeleteVersion setKey(java.lang.String key) {
            return (DeleteVersion) super.setKey(key);
          }

          @Override
          public DeleteVersion setOauthToken(java.lang.String oauthToken) {
            return (DeleteVersion) super.setOauthToken(oauthToken);
          }

          @Override
          public DeleteVersion setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (DeleteVersion) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public DeleteVersion setQuotaUser(java.lang.String quotaUser) {
            return (DeleteVersion) super.setQuotaUser(quotaUser);
          }

          @Override
          public DeleteVersion setUploadType(java.lang.String uploadType) {
            return (DeleteVersion) super.setUploadType(uploadType);
          }

          @Override
          public DeleteVersion setUploadProtocol(java.lang.String uploadProtocol) {
            return (DeleteVersion) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the model version to be deleted, with a version ID explicitly
           * included. Example: `projects/{project}/locations/{location}/models/{model}@1234`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the model version to be deleted, with a version ID explicitly included.
         Example: `projects/{project}/locations/{location}/models/{model}@1234`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the model version to be deleted, with a version ID explicitly
           * included. Example: `projects/{project}/locations/{location}/models/{model}@1234`
           */
          public DeleteVersion setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/models/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public DeleteVersion set(String parameterName, Object value) {
            return (DeleteVersion) super.set(parameterName, value);
          }
        }
        /**
         * Exports a trained, exportable Model to a location specified by the user. A Model is considered to
         * be exportable if it has at least one supported export format.
         *
         * Create a request for the method "models.export".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Export#execute()} method to invoke the remote operation.
         *
         * @param name Required. The resource name of the Model to export. The resource name may contain version id or
         *        version alias to specify the version, if no version is specified, the default version will
         *        be exported.
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ExportModelRequest}
         * @return the request
         */
        public Export export(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ExportModelRequest content) throws java.io.IOException {
          Export result = new Export(name, content);
          initialize(result);
          return result;
        }

        public class Export extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+name}:export";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/models/[^/]+$");

          /**
           * Exports a trained, exportable Model to a location specified by the user. A Model is considered
           * to be exportable if it has at least one supported export format.
           *
           * Create a request for the method "models.export".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Export#execute()} method to invoke the remote operation.
           * <p> {@link
           * Export#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The resource name of the Model to export. The resource name may contain version id or
         *        version alias to specify the version, if no version is specified, the default version will
         *        be exported.
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ExportModelRequest}
           * @since 1.13
           */
          protected Export(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ExportModelRequest content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/models/[^/]+$");
            }
          }

          @Override
          public Export set$Xgafv(java.lang.String $Xgafv) {
            return (Export) super.set$Xgafv($Xgafv);
          }

          @Override
          public Export setAccessToken(java.lang.String accessToken) {
            return (Export) super.setAccessToken(accessToken);
          }

          @Override
          public Export setAlt(java.lang.String alt) {
            return (Export) super.setAlt(alt);
          }

          @Override
          public Export setCallback(java.lang.String callback) {
            return (Export) super.setCallback(callback);
          }

          @Override
          public Export setFields(java.lang.String fields) {
            return (Export) super.setFields(fields);
          }

          @Override
          public Export setKey(java.lang.String key) {
            return (Export) super.setKey(key);
          }

          @Override
          public Export setOauthToken(java.lang.String oauthToken) {
            return (Export) super.setOauthToken(oauthToken);
          }

          @Override
          public Export setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Export) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Export setQuotaUser(java.lang.String quotaUser) {
            return (Export) super.setQuotaUser(quotaUser);
          }

          @Override
          public Export setUploadType(java.lang.String uploadType) {
            return (Export) super.setUploadType(uploadType);
          }

          @Override
          public Export setUploadProtocol(java.lang.String uploadProtocol) {
            return (Export) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the Model to export. The resource name may contain
           * version id or version alias to specify the version, if no version is specified, the
           * default version will be exported.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The resource name of the Model to export. The resource name may contain version id or
         version alias to specify the version, if no version is specified, the default version will be
         exported.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The resource name of the Model to export. The resource name may contain
           * version id or version alias to specify the version, if no version is specified, the
           * default version will be exported.
           */
          public Export setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/models/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Export set(String parameterName, Object value) {
            return (Export) super.set(parameterName, value);
          }
        }
        /**
         * Gets a Model.
         *
         * Create a request for the method "models.get".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the Model resource. Format:
         *        `projects/{project}/locations/{location}/models/{model}` In order to retrieve a specific
         *        version of the model, also provide the version ID or version alias. Example:
         *        `projects/{project}/locations/{location}/models/{model}@2` or
         *        `projects/{project}/locations/{location}/models/{model}@golden` If no version ID or alias
         *        is specified, the "default" version will be returned. The "default" version alias is
         *        created for the first version of the model, and can be moved to other versions later on.
         *        There will be exactly one default version.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Model> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/models/[^/]+$");

          /**
           * Gets a Model.
           *
           * Create a request for the method "models.get".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the Model resource. Format:
         *        `projects/{project}/locations/{location}/models/{model}` In order to retrieve a specific
         *        version of the model, also provide the version ID or version alias. Example:
         *        `projects/{project}/locations/{location}/models/{model}@2` or
         *        `projects/{project}/locations/{location}/models/{model}@golden` If no version ID or alias
         *        is specified, the "default" version will be returned. The "default" version alias is
         *        created for the first version of the model, and can be moved to other versions later on.
         *        There will be exactly one default version.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Model.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/models/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the Model resource. Format:
           * `projects/{project}/locations/{location}/models/{model}` In order to retrieve a
           * specific version of the model, also provide the version ID or version alias. Example:
           * `projects/{project}/locations/{location}/models/{model}@2` or
           * `projects/{project}/locations/{location}/models/{model}@golden` If no version ID or
           * alias is specified, the "default" version will be returned. The "default" version alias
           * is created for the first version of the model, and can be moved to other versions later
           * on. There will be exactly one default version.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the Model resource. Format:
         `projects/{project}/locations/{location}/models/{model}` In order to retrieve a specific version of
         the model, also provide the version ID or version alias. Example:
         `projects/{project}/locations/{location}/models/{model}@2` or
         `projects/{project}/locations/{location}/models/{model}@golden` If no version ID or alias is
         specified, the "default" version will be returned. The "default" version alias is created for the
         first version of the model, and can be moved to other versions later on. There will be exactly one
         default version.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the Model resource. Format:
           * `projects/{project}/locations/{location}/models/{model}` In order to retrieve a
           * specific version of the model, also provide the version ID or version alias. Example:
           * `projects/{project}/locations/{location}/models/{model}@2` or
           * `projects/{project}/locations/{location}/models/{model}@golden` If no version ID or
           * alias is specified, the "default" version will be returned. The "default" version alias
           * is created for the first version of the model, and can be moved to other versions later
           * on. There will be exactly one default version.
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/models/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Gets the access control policy for a resource. Returns an empty policy if the resource exists and
         * does not have a policy set.
         *
         * Create a request for the method "models.getIamPolicy".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
         * @return the request
         */
        public GetIamPolicy getIamPolicy(java.lang.String resource) throws java.io.IOException {
          GetIamPolicy result = new GetIamPolicy(resource);
          initialize(result);
          return result;
        }

        public class GetIamPolicy extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleIamV1Policy> {

          private static final String REST_PATH = "v1/{+resource}:getIamPolicy";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/models/[^/]+$");

          /**
           * Gets the access control policy for a resource. Returns an empty policy if the resource exists
           * and does not have a policy set.
           *
           * Create a request for the method "models.getIamPolicy".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
           * operation. <p> {@link
           * GetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
           * @since 1.13
           */
          protected GetIamPolicy(java.lang.String resource) {
            super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleIamV1Policy.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/models/[^/]+$");
            }
          }

          @Override
          public GetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
            return (GetIamPolicy) super.set$Xgafv($Xgafv);
          }

          @Override
          public GetIamPolicy setAccessToken(java.lang.String accessToken) {
            return (GetIamPolicy) super.setAccessToken(accessToken);
          }

          @Override
          public GetIamPolicy setAlt(java.lang.String alt) {
            return (GetIamPolicy) super.setAlt(alt);
          }

          @Override
          public GetIamPolicy setCallback(java.lang.String callback) {
            return (GetIamPolicy) super.setCallback(callback);
          }

          @Override
          public GetIamPolicy setFields(java.lang.String fields) {
            return (GetIamPolicy) super.setFields(fields);
          }

          @Override
          public GetIamPolicy setKey(java.lang.String key) {
            return (GetIamPolicy) super.setKey(key);
          }

          @Override
          public GetIamPolicy setOauthToken(java.lang.String oauthToken) {
            return (GetIamPolicy) super.setOauthToken(oauthToken);
          }

          @Override
          public GetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (GetIamPolicy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public GetIamPolicy setQuotaUser(java.lang.String quotaUser) {
            return (GetIamPolicy) super.setQuotaUser(quotaUser);
          }

          @Override
          public GetIamPolicy setUploadType(java.lang.String uploadType) {
            return (GetIamPolicy) super.setUploadType(uploadType);
          }

          @Override
          public GetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
            return (GetIamPolicy) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy is being requested. See [Resource
         names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          public GetIamPolicy setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/models/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          /**
           * Optional. The maximum policy version that will be used to format the policy. Valid
           * values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests
           * for policies with any conditional role bindings must specify version 3. Policies with
           * no conditional role bindings may specify any valid value or leave the field unset. The
           * policy in the response might use the policy version that you specified, or it might use
           * a lower policy version. For example, if you specify version 3, but the policy has no
           * conditional role bindings, the response uses version 1. To learn which resources
           * support conditions in their IAM policies, see the [IAM
           * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
           */
          @com.google.api.client.util.Key("options.requestedPolicyVersion")
          private java.lang.Integer optionsRequestedPolicyVersion;

          /** Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1,
         and 3. Requests specifying an invalid value will be rejected. Requests for policies with any
         conditional role bindings must specify version 3. Policies with no conditional role bindings may
         specify any valid value or leave the field unset. The policy in the response might use the policy
         version that you specified, or it might use a lower policy version. For example, if you specify
         version 3, but the policy has no conditional role bindings, the response uses version 1. To learn
         which resources support conditions in their IAM policies, see the [IAM
         documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
           */
          public java.lang.Integer getOptionsRequestedPolicyVersion() {
            return optionsRequestedPolicyVersion;
          }

          /**
           * Optional. The maximum policy version that will be used to format the policy. Valid
           * values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests
           * for policies with any conditional role bindings must specify version 3. Policies with
           * no conditional role bindings may specify any valid value or leave the field unset. The
           * policy in the response might use the policy version that you specified, or it might use
           * a lower policy version. For example, if you specify version 3, but the policy has no
           * conditional role bindings, the response uses version 1. To learn which resources
           * support conditions in their IAM policies, see the [IAM
           * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
           */
          public GetIamPolicy setOptionsRequestedPolicyVersion(java.lang.Integer optionsRequestedPolicyVersion) {
            this.optionsRequestedPolicyVersion = optionsRequestedPolicyVersion;
            return this;
          }

          @Override
          public GetIamPolicy set(String parameterName, Object value) {
            return (GetIamPolicy) super.set(parameterName, value);
          }
        }
        /**
         * Lists Models in a Location.
         *
         * Create a request for the method "models.list".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The resource name of the Location to list the Models from. Format:
         *        `projects/{project}/locations/{location}`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListModelsResponse> {

          private static final String REST_PATH = "v1/{+parent}/models";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists Models in a Location.
           *
           * Create a request for the method "models.list".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The resource name of the Location to list the Models from. Format:
         *        `projects/{project}/locations/{location}`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListModelsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the Location to list the Models from. Format:
           * `projects/{project}/locations/{location}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The resource name of the Location to list the Models from. Format:
         `projects/{project}/locations/{location}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The resource name of the Location to list the Models from. Format:
           * `projects/{project}/locations/{location}`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * An expression for filtering the results of the request. For field names both snake_case
           * and camelCase are supported. * `model` supports = and !=. `model` represents the Model
           * ID, i.e. the last segment of the Model's resource name. * `display_name` supports = and
           * != * `labels` supports general map functions that is: * `labels.key=value` - key:value
           * equality * `labels.key:* or labels:key - key existence * A key including a space must
           * be quoted. `labels."a key"`. * `base_model_name` only supports = Some examples: *
           * `model=1234` * `displayName="myDisplayName"` * `labels.myKey="myValue"` *
           * `baseModelName="text-bison"`
           */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** An expression for filtering the results of the request. For field names both snake_case and
         camelCase are supported. * `model` supports = and !=. `model` represents the Model ID, i.e. the
         last segment of the Model's resource name. * `display_name` supports = and != * `labels` supports
         general map functions that is: * `labels.key=value` - key:value equality * `labels.key:* or
         labels:key - key existence * A key including a space must be quoted. `labels."a key"`. *
         `base_model_name` only supports = Some examples: * `model=1234` * `displayName="myDisplayName"` *
         `labels.myKey="myValue"` * `baseModelName="text-bison"`
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /**
           * An expression for filtering the results of the request. For field names both snake_case
           * and camelCase are supported. * `model` supports = and !=. `model` represents the Model
           * ID, i.e. the last segment of the Model's resource name. * `display_name` supports = and
           * != * `labels` supports general map functions that is: * `labels.key=value` - key:value
           * equality * `labels.key:* or labels:key - key existence * A key including a space must
           * be quoted. `labels."a key"`. * `base_model_name` only supports = Some examples: *
           * `model=1234` * `displayName="myDisplayName"` * `labels.myKey="myValue"` *
           * `baseModelName="text-bison"`
           */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /**
           * A comma-separated list of fields to order by, sorted in ascending order. Use "desc"
           * after a field name for descending. Supported fields: * `display_name` * `create_time` *
           * `update_time` Example: `display_name, create_time desc`.
           */
          @com.google.api.client.util.Key
          private java.lang.String orderBy;

          /** A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field
         name for descending. Supported fields: * `display_name` * `create_time` * `update_time` Example:
         `display_name, create_time desc`.
           */
          public java.lang.String getOrderBy() {
            return orderBy;
          }

          /**
           * A comma-separated list of fields to order by, sorted in ascending order. Use "desc"
           * after a field name for descending. Supported fields: * `display_name` * `create_time` *
           * `update_time` Example: `display_name, create_time desc`.
           */
          public List setOrderBy(java.lang.String orderBy) {
            this.orderBy = orderBy;
            return this;
          }

          /** The standard list page size. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The standard list page size.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** The standard list page size. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * The standard list page token. Typically obtained via ListModelsResponse.next_page_token
           * of the previous ModelService.ListModels call.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The standard list page token. Typically obtained via ListModelsResponse.next_page_token of the
         previous ModelService.ListModels call.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * The standard list page token. Typically obtained via ListModelsResponse.next_page_token
           * of the previous ModelService.ListModels call.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          /** Mask specifying which fields to read. */
          @com.google.api.client.util.Key
          private String readMask;

          /** Mask specifying which fields to read.
           */
          public String getReadMask() {
            return readMask;
          }

          /** Mask specifying which fields to read. */
          public List setReadMask(String readMask) {
            this.readMask = readMask;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Lists versions of the specified model.
         *
         * Create a request for the method "models.listVersions".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link ListVersions#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the model to list versions for.
         * @return the request
         */
        public ListVersions listVersions(java.lang.String name) throws java.io.IOException {
          ListVersions result = new ListVersions(name);
          initialize(result);
          return result;
        }

        public class ListVersions extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListModelVersionsResponse> {

          private static final String REST_PATH = "v1/{+name}:listVersions";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/models/[^/]+$");

          /**
           * Lists versions of the specified model.
           *
           * Create a request for the method "models.listVersions".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link ListVersions#execute()} method to invoke the remote
           * operation. <p> {@link
           * ListVersions#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the model to list versions for.
           * @since 1.13
           */
          protected ListVersions(java.lang.String name) {
            super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListModelVersionsResponse.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/models/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public ListVersions set$Xgafv(java.lang.String $Xgafv) {
            return (ListVersions) super.set$Xgafv($Xgafv);
          }

          @Override
          public ListVersions setAccessToken(java.lang.String accessToken) {
            return (ListVersions) super.setAccessToken(accessToken);
          }

          @Override
          public ListVersions setAlt(java.lang.String alt) {
            return (ListVersions) super.setAlt(alt);
          }

          @Override
          public ListVersions setCallback(java.lang.String callback) {
            return (ListVersions) super.setCallback(callback);
          }

          @Override
          public ListVersions setFields(java.lang.String fields) {
            return (ListVersions) super.setFields(fields);
          }

          @Override
          public ListVersions setKey(java.lang.String key) {
            return (ListVersions) super.setKey(key);
          }

          @Override
          public ListVersions setOauthToken(java.lang.String oauthToken) {
            return (ListVersions) super.setOauthToken(oauthToken);
          }

          @Override
          public ListVersions setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (ListVersions) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public ListVersions setQuotaUser(java.lang.String quotaUser) {
            return (ListVersions) super.setQuotaUser(quotaUser);
          }

          @Override
          public ListVersions setUploadType(java.lang.String uploadType) {
            return (ListVersions) super.setUploadType(uploadType);
          }

          @Override
          public ListVersions setUploadProtocol(java.lang.String uploadProtocol) {
            return (ListVersions) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The name of the model to list versions for. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the model to list versions for.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. The name of the model to list versions for. */
          public ListVersions setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/models/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * An expression for filtering the results of the request. For field names both snake_case
           * and camelCase are supported. * `labels` supports general map functions that is: *
           * `labels.key=value` - key:value equality * `labels.key:* or labels:key - key existence *
           * A key including a space must be quoted. `labels."a key"`. Some examples: *
           * `labels.myKey="myValue"`
           */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** An expression for filtering the results of the request. For field names both snake_case and
         camelCase are supported. * `labels` supports general map functions that is: * `labels.key=value` -
         key:value equality * `labels.key:* or labels:key - key existence * A key including a space must be
         quoted. `labels."a key"`. Some examples: * `labels.myKey="myValue"`
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /**
           * An expression for filtering the results of the request. For field names both snake_case
           * and camelCase are supported. * `labels` supports general map functions that is: *
           * `labels.key=value` - key:value equality * `labels.key:* or labels:key - key existence *
           * A key including a space must be quoted. `labels."a key"`. Some examples: *
           * `labels.myKey="myValue"`
           */
          public ListVersions setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /**
           * A comma-separated list of fields to order by, sorted in ascending order. Use "desc"
           * after a field name for descending. Supported fields: * `create_time` * `update_time`
           * Example: `update_time asc, create_time desc`.
           */
          @com.google.api.client.util.Key
          private java.lang.String orderBy;

          /** A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field
         name for descending. Supported fields: * `create_time` * `update_time` Example: `update_time asc,
         create_time desc`.
           */
          public java.lang.String getOrderBy() {
            return orderBy;
          }

          /**
           * A comma-separated list of fields to order by, sorted in ascending order. Use "desc"
           * after a field name for descending. Supported fields: * `create_time` * `update_time`
           * Example: `update_time asc, create_time desc`.
           */
          public ListVersions setOrderBy(java.lang.String orderBy) {
            this.orderBy = orderBy;
            return this;
          }

          /** The standard list page size. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The standard list page size.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** The standard list page size. */
          public ListVersions setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * The standard list page token. Typically obtained via next_page_token of the previous
           * ListModelVersions call.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The standard list page token. Typically obtained via next_page_token of the previous
         ListModelVersions call.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * The standard list page token. Typically obtained via next_page_token of the previous
           * ListModelVersions call.
           */
          public ListVersions setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          /** Mask specifying which fields to read. */
          @com.google.api.client.util.Key
          private String readMask;

          /** Mask specifying which fields to read.
           */
          public String getReadMask() {
            return readMask;
          }

          /** Mask specifying which fields to read. */
          public ListVersions setReadMask(String readMask) {
            this.readMask = readMask;
            return this;
          }

          @Override
          public ListVersions set(String parameterName, Object value) {
            return (ListVersions) super.set(parameterName, value);
          }
        }
        /**
         * Merges a set of aliases for a Model version.
         *
         * Create a request for the method "models.mergeVersionAliases".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link MergeVersionAliases#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the model version to merge aliases, with a version ID explicitly included.
         *        Example: `projects/{project}/locations/{location}/models/{model}@1234`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1MergeVersionAliasesRequest}
         * @return the request
         */
        public MergeVersionAliases mergeVersionAliases(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1MergeVersionAliasesRequest content) throws java.io.IOException {
          MergeVersionAliases result = new MergeVersionAliases(name, content);
          initialize(result);
          return result;
        }

        public class MergeVersionAliases extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Model> {

          private static final String REST_PATH = "v1/{+name}:mergeVersionAliases";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/models/[^/]+$");

          /**
           * Merges a set of aliases for a Model version.
           *
           * Create a request for the method "models.mergeVersionAliases".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link MergeVersionAliases#execute()} method to invoke the remote
           * operation. <p> {@link MergeVersionAliases#initialize(com.google.api.client.googleapis.services.
           * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param name Required. The name of the model version to merge aliases, with a version ID explicitly included.
         *        Example: `projects/{project}/locations/{location}/models/{model}@1234`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1MergeVersionAliasesRequest}
           * @since 1.13
           */
          protected MergeVersionAliases(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1MergeVersionAliasesRequest content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Model.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/models/[^/]+$");
            }
          }

          @Override
          public MergeVersionAliases set$Xgafv(java.lang.String $Xgafv) {
            return (MergeVersionAliases) super.set$Xgafv($Xgafv);
          }

          @Override
          public MergeVersionAliases setAccessToken(java.lang.String accessToken) {
            return (MergeVersionAliases) super.setAccessToken(accessToken);
          }

          @Override
          public MergeVersionAliases setAlt(java.lang.String alt) {
            return (MergeVersionAliases) super.setAlt(alt);
          }

          @Override
          public MergeVersionAliases setCallback(java.lang.String callback) {
            return (MergeVersionAliases) super.setCallback(callback);
          }

          @Override
          public MergeVersionAliases setFields(java.lang.String fields) {
            return (MergeVersionAliases) super.setFields(fields);
          }

          @Override
          public MergeVersionAliases setKey(java.lang.String key) {
            return (MergeVersionAliases) super.setKey(key);
          }

          @Override
          public MergeVersionAliases setOauthToken(java.lang.String oauthToken) {
            return (MergeVersionAliases) super.setOauthToken(oauthToken);
          }

          @Override
          public MergeVersionAliases setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (MergeVersionAliases) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public MergeVersionAliases setQuotaUser(java.lang.String quotaUser) {
            return (MergeVersionAliases) super.setQuotaUser(quotaUser);
          }

          @Override
          public MergeVersionAliases setUploadType(java.lang.String uploadType) {
            return (MergeVersionAliases) super.setUploadType(uploadType);
          }

          @Override
          public MergeVersionAliases setUploadProtocol(java.lang.String uploadProtocol) {
            return (MergeVersionAliases) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the model version to merge aliases, with a version ID explicitly
           * included. Example: `projects/{project}/locations/{location}/models/{model}@1234`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the model version to merge aliases, with a version ID explicitly included.
         Example: `projects/{project}/locations/{location}/models/{model}@1234`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the model version to merge aliases, with a version ID explicitly
           * included. Example: `projects/{project}/locations/{location}/models/{model}@1234`
           */
          public MergeVersionAliases setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/models/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public MergeVersionAliases set(String parameterName, Object value) {
            return (MergeVersionAliases) super.set(parameterName, value);
          }
        }
        /**
         * Updates a Model.
         *
         * Create a request for the method "models.patch".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name The resource name of the Model.
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Model}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Model content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Model> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/models/[^/]+$");

          /**
           * Updates a Model.
           *
           * Create a request for the method "models.patch".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           * <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The resource name of the Model.
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Model}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Model content) {
            super(Aiplatform.this, "PATCH", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Model.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/models/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /** The resource name of the Model. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The resource name of the Model.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The resource name of the Model. */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/models/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Required. The update mask applies to the resource. For the `FieldMask` definition, see
           * google.protobuf.FieldMask.
           */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Required. The update mask applies to the resource. For the `FieldMask` definition, see
         google.protobuf.FieldMask.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /**
           * Required. The update mask applies to the resource. For the `FieldMask` definition, see
           * google.protobuf.FieldMask.
           */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }
        /**
         * Sets the access control policy on the specified resource. Replaces any existing policy. Can
         * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
         *
         * Create a request for the method "models.setIamPolicy".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleIamV1SetIamPolicyRequest}
         * @return the request
         */
        public SetIamPolicy setIamPolicy(java.lang.String resource, com.google.api.services.aiplatform.v1.model.GoogleIamV1SetIamPolicyRequest content) throws java.io.IOException {
          SetIamPolicy result = new SetIamPolicy(resource, content);
          initialize(result);
          return result;
        }

        public class SetIamPolicy extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleIamV1Policy> {

          private static final String REST_PATH = "v1/{+resource}:setIamPolicy";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/models/[^/]+$");

          /**
           * Sets the access control policy on the specified resource. Replaces any existing policy. Can
           * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
           *
           * Create a request for the method "models.setIamPolicy".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
           * operation. <p> {@link
           * SetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleIamV1SetIamPolicyRequest}
           * @since 1.13
           */
          protected SetIamPolicy(java.lang.String resource, com.google.api.services.aiplatform.v1.model.GoogleIamV1SetIamPolicyRequest content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleIamV1Policy.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/models/[^/]+$");
            }
          }

          @Override
          public SetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
            return (SetIamPolicy) super.set$Xgafv($Xgafv);
          }

          @Override
          public SetIamPolicy setAccessToken(java.lang.String accessToken) {
            return (SetIamPolicy) super.setAccessToken(accessToken);
          }

          @Override
          public SetIamPolicy setAlt(java.lang.String alt) {
            return (SetIamPolicy) super.setAlt(alt);
          }

          @Override
          public SetIamPolicy setCallback(java.lang.String callback) {
            return (SetIamPolicy) super.setCallback(callback);
          }

          @Override
          public SetIamPolicy setFields(java.lang.String fields) {
            return (SetIamPolicy) super.setFields(fields);
          }

          @Override
          public SetIamPolicy setKey(java.lang.String key) {
            return (SetIamPolicy) super.setKey(key);
          }

          @Override
          public SetIamPolicy setOauthToken(java.lang.String oauthToken) {
            return (SetIamPolicy) super.setOauthToken(oauthToken);
          }

          @Override
          public SetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (SetIamPolicy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public SetIamPolicy setQuotaUser(java.lang.String quotaUser) {
            return (SetIamPolicy) super.setQuotaUser(quotaUser);
          }

          @Override
          public SetIamPolicy setUploadType(java.lang.String uploadType) {
            return (SetIamPolicy) super.setUploadType(uploadType);
          }

          @Override
          public SetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
            return (SetIamPolicy) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy is being specified. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy is being specified. See [Resource
         names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy is being specified. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          public SetIamPolicy setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/models/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public SetIamPolicy set(String parameterName, Object value) {
            return (SetIamPolicy) super.set(parameterName, value);
          }
        }
        /**
         * Returns permissions that a caller has on the specified resource. If the resource does not exist,
         * this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is
         * designed to be used for building permission-aware UIs and command-line tools, not for
         * authorization checking. This operation may "fail open" without warning.
         *
         * Create a request for the method "models.testIamPermissions".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
         * @return the request
         */
        public TestIamPermissions testIamPermissions(java.lang.String resource) throws java.io.IOException {
          TestIamPermissions result = new TestIamPermissions(resource);
          initialize(result);
          return result;
        }

        public class TestIamPermissions extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleIamV1TestIamPermissionsResponse> {

          private static final String REST_PATH = "v1/{+resource}:testIamPermissions";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/models/[^/]+$");

          /**
           * Returns permissions that a caller has on the specified resource. If the resource does not
           * exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This
           * operation is designed to be used for building permission-aware UIs and command-line tools, not
           * for authorization checking. This operation may "fail open" without warning.
           *
           * Create a request for the method "models.testIamPermissions".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
           * operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.services.A
           * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
           * @since 1.13
           */
          protected TestIamPermissions(java.lang.String resource) {
            super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleIamV1TestIamPermissionsResponse.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/models/[^/]+$");
            }
          }

          @Override
          public TestIamPermissions set$Xgafv(java.lang.String $Xgafv) {
            return (TestIamPermissions) super.set$Xgafv($Xgafv);
          }

          @Override
          public TestIamPermissions setAccessToken(java.lang.String accessToken) {
            return (TestIamPermissions) super.setAccessToken(accessToken);
          }

          @Override
          public TestIamPermissions setAlt(java.lang.String alt) {
            return (TestIamPermissions) super.setAlt(alt);
          }

          @Override
          public TestIamPermissions setCallback(java.lang.String callback) {
            return (TestIamPermissions) super.setCallback(callback);
          }

          @Override
          public TestIamPermissions setFields(java.lang.String fields) {
            return (TestIamPermissions) super.setFields(fields);
          }

          @Override
          public TestIamPermissions setKey(java.lang.String key) {
            return (TestIamPermissions) super.setKey(key);
          }

          @Override
          public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
            return (TestIamPermissions) super.setOauthToken(oauthToken);
          }

          @Override
          public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
            return (TestIamPermissions) super.setQuotaUser(quotaUser);
          }

          @Override
          public TestIamPermissions setUploadType(java.lang.String uploadType) {
            return (TestIamPermissions) super.setUploadType(uploadType);
          }

          @Override
          public TestIamPermissions setUploadProtocol(java.lang.String uploadProtocol) {
            return (TestIamPermissions) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy detail is being requested. See [Resource
         names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          public TestIamPermissions setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/models/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          /**
           * The set of permissions to check for the `resource`. Permissions with wildcards (such as
           * `*` or `storage.*`) are not allowed. For more information see [IAM
           * Overview](https://cloud.google.com/iam/docs/overview#permissions).
           */
          @com.google.api.client.util.Key
          private java.util.List<java.lang.String> permissions;

          /** The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or
         `storage.*`) are not allowed. For more information see [IAM
         Overview](https://cloud.google.com/iam/docs/overview#permissions).
           */
          public java.util.List<java.lang.String> getPermissions() {
            return permissions;
          }

          /**
           * The set of permissions to check for the `resource`. Permissions with wildcards (such as
           * `*` or `storage.*`) are not allowed. For more information see [IAM
           * Overview](https://cloud.google.com/iam/docs/overview#permissions).
           */
          public TestIamPermissions setPermissions(java.util.List<java.lang.String> permissions) {
            this.permissions = permissions;
            return this;
          }

          @Override
          public TestIamPermissions set(String parameterName, Object value) {
            return (TestIamPermissions) super.set(parameterName, value);
          }
        }
        /**
         * Incrementally update the dataset used for an examples model.
         *
         * Create a request for the method "models.updateExplanationDataset".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link UpdateExplanationDataset#execute()} method to invoke the remote
         * operation.
         *
         * @param model Required. The resource name of the Model to update. Format:
         *        `projects/{project}/locations/{location}/models/{model}`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1UpdateExplanationDatasetRequest}
         * @return the request
         */
        public UpdateExplanationDataset updateExplanationDataset(java.lang.String model, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1UpdateExplanationDatasetRequest content) throws java.io.IOException {
          UpdateExplanationDataset result = new UpdateExplanationDataset(model, content);
          initialize(result);
          return result;
        }

        public class UpdateExplanationDataset extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+model}:updateExplanationDataset";

          private final java.util.regex.Pattern MODEL_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/models/[^/]+$");

          /**
           * Incrementally update the dataset used for an examples model.
           *
           * Create a request for the method "models.updateExplanationDataset".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link UpdateExplanationDataset#execute()} method to invoke the
           * remote operation. <p> {@link UpdateExplanationDataset#initialize(com.google.api.client.googleap
           * is.services.AbstractGoogleClientRequest)} must be called to initialize this instance
           * immediately after invoking the constructor. </p>
           *
           * @param model Required. The resource name of the Model to update. Format:
         *        `projects/{project}/locations/{location}/models/{model}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1UpdateExplanationDatasetRequest}
           * @since 1.13
           */
          protected UpdateExplanationDataset(java.lang.String model, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1UpdateExplanationDatasetRequest content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
            this.model = com.google.api.client.util.Preconditions.checkNotNull(model, "Required parameter model must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(MODEL_PATTERN.matcher(model).matches(),
                  "Parameter model must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/models/[^/]+$");
            }
          }

          @Override
          public UpdateExplanationDataset set$Xgafv(java.lang.String $Xgafv) {
            return (UpdateExplanationDataset) super.set$Xgafv($Xgafv);
          }

          @Override
          public UpdateExplanationDataset setAccessToken(java.lang.String accessToken) {
            return (UpdateExplanationDataset) super.setAccessToken(accessToken);
          }

          @Override
          public UpdateExplanationDataset setAlt(java.lang.String alt) {
            return (UpdateExplanationDataset) super.setAlt(alt);
          }

          @Override
          public UpdateExplanationDataset setCallback(java.lang.String callback) {
            return (UpdateExplanationDataset) super.setCallback(callback);
          }

          @Override
          public UpdateExplanationDataset setFields(java.lang.String fields) {
            return (UpdateExplanationDataset) super.setFields(fields);
          }

          @Override
          public UpdateExplanationDataset setKey(java.lang.String key) {
            return (UpdateExplanationDataset) super.setKey(key);
          }

          @Override
          public UpdateExplanationDataset setOauthToken(java.lang.String oauthToken) {
            return (UpdateExplanationDataset) super.setOauthToken(oauthToken);
          }

          @Override
          public UpdateExplanationDataset setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (UpdateExplanationDataset) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public UpdateExplanationDataset setQuotaUser(java.lang.String quotaUser) {
            return (UpdateExplanationDataset) super.setQuotaUser(quotaUser);
          }

          @Override
          public UpdateExplanationDataset setUploadType(java.lang.String uploadType) {
            return (UpdateExplanationDataset) super.setUploadType(uploadType);
          }

          @Override
          public UpdateExplanationDataset setUploadProtocol(java.lang.String uploadProtocol) {
            return (UpdateExplanationDataset) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the Model to update. Format:
           * `projects/{project}/locations/{location}/models/{model}`
           */
          @com.google.api.client.util.Key
          private java.lang.String model;

          /** Required. The resource name of the Model to update. Format:
         `projects/{project}/locations/{location}/models/{model}`
           */
          public java.lang.String getModel() {
            return model;
          }

          /**
           * Required. The resource name of the Model to update. Format:
           * `projects/{project}/locations/{location}/models/{model}`
           */
          public UpdateExplanationDataset setModel(java.lang.String model) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(MODEL_PATTERN.matcher(model).matches(),
                  "Parameter model must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/models/[^/]+$");
            }
            this.model = model;
            return this;
          }

          @Override
          public UpdateExplanationDataset set(String parameterName, Object value) {
            return (UpdateExplanationDataset) super.set(parameterName, value);
          }
        }
        /**
         * Uploads a Model artifact into Vertex AI.
         *
         * Create a request for the method "models.upload".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Upload#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The resource name of the Location into which to upload the Model. Format:
         *        `projects/{project}/locations/{location}`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1UploadModelRequest}
         * @return the request
         */
        public Upload upload(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1UploadModelRequest content) throws java.io.IOException {
          Upload result = new Upload(parent, content);
          initialize(result);
          return result;
        }

        public class Upload extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+parent}/models:upload";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Uploads a Model artifact into Vertex AI.
           *
           * Create a request for the method "models.upload".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Upload#execute()} method to invoke the remote operation.
           * <p> {@link
           * Upload#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The resource name of the Location into which to upload the Model. Format:
         *        `projects/{project}/locations/{location}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1UploadModelRequest}
           * @since 1.13
           */
          protected Upload(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1UploadModelRequest content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Upload set$Xgafv(java.lang.String $Xgafv) {
            return (Upload) super.set$Xgafv($Xgafv);
          }

          @Override
          public Upload setAccessToken(java.lang.String accessToken) {
            return (Upload) super.setAccessToken(accessToken);
          }

          @Override
          public Upload setAlt(java.lang.String alt) {
            return (Upload) super.setAlt(alt);
          }

          @Override
          public Upload setCallback(java.lang.String callback) {
            return (Upload) super.setCallback(callback);
          }

          @Override
          public Upload setFields(java.lang.String fields) {
            return (Upload) super.setFields(fields);
          }

          @Override
          public Upload setKey(java.lang.String key) {
            return (Upload) super.setKey(key);
          }

          @Override
          public Upload setOauthToken(java.lang.String oauthToken) {
            return (Upload) super.setOauthToken(oauthToken);
          }

          @Override
          public Upload setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Upload) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Upload setQuotaUser(java.lang.String quotaUser) {
            return (Upload) super.setQuotaUser(quotaUser);
          }

          @Override
          public Upload setUploadType(java.lang.String uploadType) {
            return (Upload) super.setUploadType(uploadType);
          }

          @Override
          public Upload setUploadProtocol(java.lang.String uploadProtocol) {
            return (Upload) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the Location into which to upload the Model. Format:
           * `projects/{project}/locations/{location}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The resource name of the Location into which to upload the Model. Format:
         `projects/{project}/locations/{location}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The resource name of the Location into which to upload the Model. Format:
           * `projects/{project}/locations/{location}`
           */
          public Upload setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Upload set(String parameterName, Object value) {
            return (Upload) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the Evaluations collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Aiplatform aiplatform = new Aiplatform(...);}
         *   {@code Aiplatform.Evaluations.List request = aiplatform.evaluations().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Evaluations evaluations() {
          return new Evaluations();
        }

        /**
         * The "evaluations" collection of methods.
         */
        public class Evaluations {

          /**
           * Gets a ModelEvaluation.
           *
           * Create a request for the method "evaluations.get".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the ModelEvaluation resource. Format:
           *        `projects/{project}/locations/{location}/models/{model}/evaluations/{evaluation}`
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ModelEvaluation> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/models/[^/]+/evaluations/[^/]+$");

            /**
             * Gets a ModelEvaluation.
             *
             * Create a request for the method "evaluations.get".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the ModelEvaluation resource. Format:
           *        `projects/{project}/locations/{location}/models/{model}/evaluations/{evaluation}`
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ModelEvaluation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/models/[^/]+/evaluations/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the ModelEvaluation resource. Format:
             * `projects/{project}/locations/{location}/models/{model}/evaluations/{evaluation}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the ModelEvaluation resource. Format:
           `projects/{project}/locations/{location}/models/{model}/evaluations/{evaluation}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The name of the ModelEvaluation resource. Format:
             * `projects/{project}/locations/{location}/models/{model}/evaluations/{evaluation}`
             */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/models/[^/]+/evaluations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Imports an externally generated ModelEvaluation.
           *
           * Create a request for the method "evaluations.import".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link AiplatformImport#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The name of the parent model resource. Format:
           *        `projects/{project}/locations/{location}/models/{model}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ImportModelEvaluationRequest}
           * @return the request
           */
          public AiplatformImport aiplatformImport(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ImportModelEvaluationRequest content) throws java.io.IOException {
            AiplatformImport result = new AiplatformImport(parent, content);
            initialize(result);
            return result;
          }

          public class AiplatformImport extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ModelEvaluation> {

            private static final String REST_PATH = "v1/{+parent}/evaluations:import";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/models/[^/]+$");

            /**
             * Imports an externally generated ModelEvaluation.
             *
             * Create a request for the method "evaluations.import".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link AiplatformImport#execute()} method to invoke the remote
             * operation. <p> {@link AiplatformImport#initialize(com.google.api.client.googleapis.services.Abs
             * tractGoogleClientRequest)} must be called to initialize this instance immediately after
             * invoking the constructor. </p>
             *
             * @param parent Required. The name of the parent model resource. Format:
           *        `projects/{project}/locations/{location}/models/{model}`
             * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ImportModelEvaluationRequest}
             * @since 1.13
             */
            protected AiplatformImport(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ImportModelEvaluationRequest content) {
              super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ModelEvaluation.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/models/[^/]+$");
              }
            }

            @Override
            public AiplatformImport set$Xgafv(java.lang.String $Xgafv) {
              return (AiplatformImport) super.set$Xgafv($Xgafv);
            }

            @Override
            public AiplatformImport setAccessToken(java.lang.String accessToken) {
              return (AiplatformImport) super.setAccessToken(accessToken);
            }

            @Override
            public AiplatformImport setAlt(java.lang.String alt) {
              return (AiplatformImport) super.setAlt(alt);
            }

            @Override
            public AiplatformImport setCallback(java.lang.String callback) {
              return (AiplatformImport) super.setCallback(callback);
            }

            @Override
            public AiplatformImport setFields(java.lang.String fields) {
              return (AiplatformImport) super.setFields(fields);
            }

            @Override
            public AiplatformImport setKey(java.lang.String key) {
              return (AiplatformImport) super.setKey(key);
            }

            @Override
            public AiplatformImport setOauthToken(java.lang.String oauthToken) {
              return (AiplatformImport) super.setOauthToken(oauthToken);
            }

            @Override
            public AiplatformImport setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (AiplatformImport) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public AiplatformImport setQuotaUser(java.lang.String quotaUser) {
              return (AiplatformImport) super.setQuotaUser(quotaUser);
            }

            @Override
            public AiplatformImport setUploadType(java.lang.String uploadType) {
              return (AiplatformImport) super.setUploadType(uploadType);
            }

            @Override
            public AiplatformImport setUploadProtocol(java.lang.String uploadProtocol) {
              return (AiplatformImport) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the parent model resource. Format:
             * `projects/{project}/locations/{location}/models/{model}`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The name of the parent model resource. Format:
           `projects/{project}/locations/{location}/models/{model}`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The name of the parent model resource. Format:
             * `projects/{project}/locations/{location}/models/{model}`
             */
            public AiplatformImport setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/models/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public AiplatformImport set(String parameterName, Object value) {
              return (AiplatformImport) super.set(parameterName, value);
            }
          }
          /**
           * Lists ModelEvaluations in a Model.
           *
           * Create a request for the method "evaluations.list".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The resource name of the Model to list the ModelEvaluations from. Format:
           *        `projects/{project}/locations/{location}/models/{model}`
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListModelEvaluationsResponse> {

            private static final String REST_PATH = "v1/{+parent}/evaluations";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/models/[^/]+$");

            /**
             * Lists ModelEvaluations in a Model.
             *
             * Create a request for the method "evaluations.list".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The resource name of the Model to list the ModelEvaluations from. Format:
           *        `projects/{project}/locations/{location}/models/{model}`
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListModelEvaluationsResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/models/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The resource name of the Model to list the ModelEvaluations from. Format:
             * `projects/{project}/locations/{location}/models/{model}`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The resource name of the Model to list the ModelEvaluations from. Format:
           `projects/{project}/locations/{location}/models/{model}`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The resource name of the Model to list the ModelEvaluations from. Format:
             * `projects/{project}/locations/{location}/models/{model}`
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/models/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /** The standard list filter. */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** The standard list filter.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /** The standard list filter. */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /** The standard list page size. */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** The standard list page size.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /** The standard list page size. */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /**
             * The standard list page token. Typically obtained via
             * ListModelEvaluationsResponse.next_page_token of the previous
             * ModelService.ListModelEvaluations call.
             */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** The standard list page token. Typically obtained via ListModelEvaluationsResponse.next_page_token
           of the previous ModelService.ListModelEvaluations call.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /**
             * The standard list page token. Typically obtained via
             * ListModelEvaluationsResponse.next_page_token of the previous
             * ModelService.ListModelEvaluations call.
             */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            /** Mask specifying which fields to read. */
            @com.google.api.client.util.Key
            private String readMask;

            /** Mask specifying which fields to read.
             */
            public String getReadMask() {
              return readMask;
            }

            /** Mask specifying which fields to read. */
            public List setReadMask(String readMask) {
              this.readMask = readMask;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }

          /**
           * An accessor for creating requests from the Operations collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code Aiplatform aiplatform = new Aiplatform(...);}
           *   {@code Aiplatform.Operations.List request = aiplatform.operations().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public Operations operations() {
            return new Operations();
          }

          /**
           * The "operations" collection of methods.
           */
          public class Operations {

            /**
             * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
             * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
             * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
             * methods to check whether the cancellation succeeded or whether the operation completed despite
             * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
             * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
             * `Code.CANCELLED`.
             *
             * Create a request for the method "operations.cancel".
             *
             * This request holds the parameters needed by the aiplatform server.  After setting any optional
             * parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
             *
             * @param name The name of the operation resource to be cancelled.
             * @return the request
             */
            public Cancel cancel(java.lang.String name) throws java.io.IOException {
              Cancel result = new Cancel(name);
              initialize(result);
              return result;
            }

            public class Cancel extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

              private static final String REST_PATH = "v1/{+name}:cancel";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/models/[^/]+/evaluations/[^/]+/operations/[^/]+$");

              /**
               * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
               * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
               * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
               * methods to check whether the cancellation succeeded or whether the operation completed despite
               * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
               * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
               * `Code.CANCELLED`.
               *
               * Create a request for the method "operations.cancel".
               *
               * This request holds the parameters needed by the the aiplatform server.  After setting any
               * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
               * <p> {@link
               * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The name of the operation resource to be cancelled.
               * @since 1.13
               */
              protected Cancel(java.lang.String name) {
                super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/models/[^/]+/evaluations/[^/]+/operations/[^/]+$");
                }
              }

              @Override
              public Cancel set$Xgafv(java.lang.String $Xgafv) {
                return (Cancel) super.set$Xgafv($Xgafv);
              }

              @Override
              public Cancel setAccessToken(java.lang.String accessToken) {
                return (Cancel) super.setAccessToken(accessToken);
              }

              @Override
              public Cancel setAlt(java.lang.String alt) {
                return (Cancel) super.setAlt(alt);
              }

              @Override
              public Cancel setCallback(java.lang.String callback) {
                return (Cancel) super.setCallback(callback);
              }

              @Override
              public Cancel setFields(java.lang.String fields) {
                return (Cancel) super.setFields(fields);
              }

              @Override
              public Cancel setKey(java.lang.String key) {
                return (Cancel) super.setKey(key);
              }

              @Override
              public Cancel setOauthToken(java.lang.String oauthToken) {
                return (Cancel) super.setOauthToken(oauthToken);
              }

              @Override
              public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Cancel) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Cancel setQuotaUser(java.lang.String quotaUser) {
                return (Cancel) super.setQuotaUser(quotaUser);
              }

              @Override
              public Cancel setUploadType(java.lang.String uploadType) {
                return (Cancel) super.setUploadType(uploadType);
              }

              @Override
              public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
                return (Cancel) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the operation resource to be cancelled. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The name of the operation resource to be cancelled.
               */
              public java.lang.String getName() {
                return name;
              }

              /** The name of the operation resource to be cancelled. */
              public Cancel setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/models/[^/]+/evaluations/[^/]+/operations/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Cancel set(String parameterName, Object value) {
                return (Cancel) super.set(parameterName, value);
              }
            }
            /**
             * Deletes a long-running operation. This method indicates that the client is no longer interested
             * in the operation result. It does not cancel the operation. If the server doesn't support this
             * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.delete".
             *
             * This request holds the parameters needed by the aiplatform server.  After setting any optional
             * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             *
             * @param name The name of the operation resource to be deleted.
             * @return the request
             */
            public Delete delete(java.lang.String name) throws java.io.IOException {
              Delete result = new Delete(name);
              initialize(result);
              return result;
            }

            public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/models/[^/]+/evaluations/[^/]+/operations/[^/]+$");

              /**
               * Deletes a long-running operation. This method indicates that the client is no longer interested
               * in the operation result. It does not cancel the operation. If the server doesn't support this
               * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
               *
               * Create a request for the method "operations.delete".
               *
               * This request holds the parameters needed by the the aiplatform server.  After setting any
               * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
               * <p> {@link
               * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The name of the operation resource to be deleted.
               * @since 1.13
               */
              protected Delete(java.lang.String name) {
                super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/models/[^/]+/evaluations/[^/]+/operations/[^/]+$");
                }
              }

              @Override
              public Delete set$Xgafv(java.lang.String $Xgafv) {
                return (Delete) super.set$Xgafv($Xgafv);
              }

              @Override
              public Delete setAccessToken(java.lang.String accessToken) {
                return (Delete) super.setAccessToken(accessToken);
              }

              @Override
              public Delete setAlt(java.lang.String alt) {
                return (Delete) super.setAlt(alt);
              }

              @Override
              public Delete setCallback(java.lang.String callback) {
                return (Delete) super.setCallback(callback);
              }

              @Override
              public Delete setFields(java.lang.String fields) {
                return (Delete) super.setFields(fields);
              }

              @Override
              public Delete setKey(java.lang.String key) {
                return (Delete) super.setKey(key);
              }

              @Override
              public Delete setOauthToken(java.lang.String oauthToken) {
                return (Delete) super.setOauthToken(oauthToken);
              }

              @Override
              public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Delete) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Delete setQuotaUser(java.lang.String quotaUser) {
                return (Delete) super.setQuotaUser(quotaUser);
              }

              @Override
              public Delete setUploadType(java.lang.String uploadType) {
                return (Delete) super.setUploadType(uploadType);
              }

              @Override
              public Delete setUploadProtocol(java.lang.String uploadProtocol) {
                return (Delete) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the operation resource to be deleted. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The name of the operation resource to be deleted.
               */
              public java.lang.String getName() {
                return name;
              }

              /** The name of the operation resource to be deleted. */
              public Delete setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/models/[^/]+/evaluations/[^/]+/operations/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Delete set(String parameterName, Object value) {
                return (Delete) super.set(parameterName, value);
              }
            }
            /**
             * Gets the latest state of a long-running operation. Clients can use this method to poll the
             * operation result at intervals as recommended by the API service.
             *
             * Create a request for the method "operations.get".
             *
             * This request holds the parameters needed by the aiplatform server.  After setting any optional
             * parameters, call the {@link Get#execute()} method to invoke the remote operation.
             *
             * @param name The name of the operation resource.
             * @return the request
             */
            public Get get(java.lang.String name) throws java.io.IOException {
              Get result = new Get(name);
              initialize(result);
              return result;
            }

            public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/models/[^/]+/evaluations/[^/]+/operations/[^/]+$");

              /**
               * Gets the latest state of a long-running operation. Clients can use this method to poll the
               * operation result at intervals as recommended by the API service.
               *
               * Create a request for the method "operations.get".
               *
               * This request holds the parameters needed by the the aiplatform server.  After setting any
               * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
               * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The name of the operation resource.
               * @since 1.13
               */
              protected Get(java.lang.String name) {
                super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/models/[^/]+/evaluations/[^/]+/operations/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public Get set$Xgafv(java.lang.String $Xgafv) {
                return (Get) super.set$Xgafv($Xgafv);
              }

              @Override
              public Get setAccessToken(java.lang.String accessToken) {
                return (Get) super.setAccessToken(accessToken);
              }

              @Override
              public Get setAlt(java.lang.String alt) {
                return (Get) super.setAlt(alt);
              }

              @Override
              public Get setCallback(java.lang.String callback) {
                return (Get) super.setCallback(callback);
              }

              @Override
              public Get setFields(java.lang.String fields) {
                return (Get) super.setFields(fields);
              }

              @Override
              public Get setKey(java.lang.String key) {
                return (Get) super.setKey(key);
              }

              @Override
              public Get setOauthToken(java.lang.String oauthToken) {
                return (Get) super.setOauthToken(oauthToken);
              }

              @Override
              public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Get) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Get setQuotaUser(java.lang.String quotaUser) {
                return (Get) super.setQuotaUser(quotaUser);
              }

              @Override
              public Get setUploadType(java.lang.String uploadType) {
                return (Get) super.setUploadType(uploadType);
              }

              @Override
              public Get setUploadProtocol(java.lang.String uploadProtocol) {
                return (Get) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the operation resource. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The name of the operation resource.
               */
              public java.lang.String getName() {
                return name;
              }

              /** The name of the operation resource. */
              public Get setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/models/[^/]+/evaluations/[^/]+/operations/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Get set(String parameterName, Object value) {
                return (Get) super.set(parameterName, value);
              }
            }
            /**
             * Lists operations that match the specified filter in the request. If the server doesn't support
             * this method, it returns `UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.list".
             *
             * This request holds the parameters needed by the aiplatform server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation.
             *
             * @param name The name of the operation's parent resource.
             * @return the request
             */
            public List list(java.lang.String name) throws java.io.IOException {
              List result = new List(name);
              initialize(result);
              return result;
            }

            public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse> {

              private static final String REST_PATH = "v1/{+name}/operations";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/models/[^/]+/evaluations/[^/]+$");

              /**
               * Lists operations that match the specified filter in the request. If the server doesn't support
               * this method, it returns `UNIMPLEMENTED`.
               *
               * Create a request for the method "operations.list".
               *
               * This request holds the parameters needed by the the aiplatform server.  After setting any
               * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
               * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The name of the operation's parent resource.
               * @since 1.13
               */
              protected List(java.lang.String name) {
                super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/models/[^/]+/evaluations/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public List set$Xgafv(java.lang.String $Xgafv) {
                return (List) super.set$Xgafv($Xgafv);
              }

              @Override
              public List setAccessToken(java.lang.String accessToken) {
                return (List) super.setAccessToken(accessToken);
              }

              @Override
              public List setAlt(java.lang.String alt) {
                return (List) super.setAlt(alt);
              }

              @Override
              public List setCallback(java.lang.String callback) {
                return (List) super.setCallback(callback);
              }

              @Override
              public List setFields(java.lang.String fields) {
                return (List) super.setFields(fields);
              }

              @Override
              public List setKey(java.lang.String key) {
                return (List) super.setKey(key);
              }

              @Override
              public List setOauthToken(java.lang.String oauthToken) {
                return (List) super.setOauthToken(oauthToken);
              }

              @Override
              public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (List) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public List setQuotaUser(java.lang.String quotaUser) {
                return (List) super.setQuotaUser(quotaUser);
              }

              @Override
              public List setUploadType(java.lang.String uploadType) {
                return (List) super.setUploadType(uploadType);
              }

              @Override
              public List setUploadProtocol(java.lang.String uploadProtocol) {
                return (List) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the operation's parent resource. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The name of the operation's parent resource.
               */
              public java.lang.String getName() {
                return name;
              }

              /** The name of the operation's parent resource. */
              public List setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/models/[^/]+/evaluations/[^/]+$");
                }
                this.name = name;
                return this;
              }

              /** The standard list filter. */
              @com.google.api.client.util.Key
              private java.lang.String filter;

              /** The standard list filter.
               */
              public java.lang.String getFilter() {
                return filter;
              }

              /** The standard list filter. */
              public List setFilter(java.lang.String filter) {
                this.filter = filter;
                return this;
              }

              /** The standard list page size. */
              @com.google.api.client.util.Key
              private java.lang.Integer pageSize;

              /** The standard list page size.
               */
              public java.lang.Integer getPageSize() {
                return pageSize;
              }

              /** The standard list page size. */
              public List setPageSize(java.lang.Integer pageSize) {
                this.pageSize = pageSize;
                return this;
              }

              /** The standard list page token. */
              @com.google.api.client.util.Key
              private java.lang.String pageToken;

              /** The standard list page token.
               */
              public java.lang.String getPageToken() {
                return pageToken;
              }

              /** The standard list page token. */
              public List setPageToken(java.lang.String pageToken) {
                this.pageToken = pageToken;
                return this;
              }

              @Override
              public List set(String parameterName, Object value) {
                return (List) super.set(parameterName, value);
              }
            }
            /**
             * Waits until the specified long-running operation is done or reaches at most a specified timeout,
             * returning the latest state. If the operation is already done, the latest state is immediately
             * returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC
             * timeout is used. If the server does not support this method, it returns
             * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
             * the latest state before the specified timeout (including immediately), meaning even an immediate
             * response is no guarantee that the operation is done.
             *
             * Create a request for the method "operations.wait".
             *
             * This request holds the parameters needed by the aiplatform server.  After setting any optional
             * parameters, call the {@link Wait#execute()} method to invoke the remote operation.
             *
             * @param name The name of the operation resource to wait on.
             * @return the request
             */
            public Wait wait(java.lang.String name) throws java.io.IOException {
              Wait result = new Wait(name);
              initialize(result);
              return result;
            }

            public class Wait extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

              private static final String REST_PATH = "v1/{+name}:wait";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/models/[^/]+/evaluations/[^/]+/operations/[^/]+$");

              /**
               * Waits until the specified long-running operation is done or reaches at most a specified
               * timeout, returning the latest state. If the operation is already done, the latest state is
               * immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout,
               * the HTTP/RPC timeout is used. If the server does not support this method, it returns
               * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
               * the latest state before the specified timeout (including immediately), meaning even an
               * immediate response is no guarantee that the operation is done.
               *
               * Create a request for the method "operations.wait".
               *
               * This request holds the parameters needed by the the aiplatform server.  After setting any
               * optional parameters, call the {@link Wait#execute()} method to invoke the remote operation. <p>
               * {@link Wait#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The name of the operation resource to wait on.
               * @since 1.13
               */
              protected Wait(java.lang.String name) {
                super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/models/[^/]+/evaluations/[^/]+/operations/[^/]+$");
                }
              }

              @Override
              public Wait set$Xgafv(java.lang.String $Xgafv) {
                return (Wait) super.set$Xgafv($Xgafv);
              }

              @Override
              public Wait setAccessToken(java.lang.String accessToken) {
                return (Wait) super.setAccessToken(accessToken);
              }

              @Override
              public Wait setAlt(java.lang.String alt) {
                return (Wait) super.setAlt(alt);
              }

              @Override
              public Wait setCallback(java.lang.String callback) {
                return (Wait) super.setCallback(callback);
              }

              @Override
              public Wait setFields(java.lang.String fields) {
                return (Wait) super.setFields(fields);
              }

              @Override
              public Wait setKey(java.lang.String key) {
                return (Wait) super.setKey(key);
              }

              @Override
              public Wait setOauthToken(java.lang.String oauthToken) {
                return (Wait) super.setOauthToken(oauthToken);
              }

              @Override
              public Wait setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Wait) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Wait setQuotaUser(java.lang.String quotaUser) {
                return (Wait) super.setQuotaUser(quotaUser);
              }

              @Override
              public Wait setUploadType(java.lang.String uploadType) {
                return (Wait) super.setUploadType(uploadType);
              }

              @Override
              public Wait setUploadProtocol(java.lang.String uploadProtocol) {
                return (Wait) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the operation resource to wait on. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The name of the operation resource to wait on.
               */
              public java.lang.String getName() {
                return name;
              }

              /** The name of the operation resource to wait on. */
              public Wait setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/models/[^/]+/evaluations/[^/]+/operations/[^/]+$");
                }
                this.name = name;
                return this;
              }

              /**
               * The maximum duration to wait before timing out. If left blank, the wait will be at
               * most the time permitted by the underlying HTTP/RPC protocol. If RPC context
               * deadline is also specified, the shorter one will be used.
               */
              @com.google.api.client.util.Key
              private String timeout;

              /** The maximum duration to wait before timing out. If left blank, the wait will be at most the time
             permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the
             shorter one will be used.
               */
              public String getTimeout() {
                return timeout;
              }

              /**
               * The maximum duration to wait before timing out. If left blank, the wait will be at
               * most the time permitted by the underlying HTTP/RPC protocol. If RPC context
               * deadline is also specified, the shorter one will be used.
               */
              public Wait setTimeout(String timeout) {
                this.timeout = timeout;
                return this;
              }

              @Override
              public Wait set(String parameterName, Object value) {
                return (Wait) super.set(parameterName, value);
              }
            }

          }
          /**
           * An accessor for creating requests from the Slices collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code Aiplatform aiplatform = new Aiplatform(...);}
           *   {@code Aiplatform.Slices.List request = aiplatform.slices().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public Slices slices() {
            return new Slices();
          }

          /**
           * The "slices" collection of methods.
           */
          public class Slices {

            /**
             * Imports a list of externally generated EvaluatedAnnotations.
             *
             * Create a request for the method "slices.batchImport".
             *
             * This request holds the parameters needed by the aiplatform server.  After setting any optional
             * parameters, call the {@link BatchImport#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The name of the parent ModelEvaluationSlice resource. Format:
             *        `projects/{project}/locations/{location}/models/{model}/evaluations/{evaluation}/slices/{s
             *        lice}`
             * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1BatchImportEvaluatedAnnotationsRequest}
             * @return the request
             */
            public BatchImport batchImport(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1BatchImportEvaluatedAnnotationsRequest content) throws java.io.IOException {
              BatchImport result = new BatchImport(parent, content);
              initialize(result);
              return result;
            }

            public class BatchImport extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1BatchImportEvaluatedAnnotationsResponse> {

              private static final String REST_PATH = "v1/{+parent}:batchImport";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/models/[^/]+/evaluations/[^/]+/slices/[^/]+$");

              /**
               * Imports a list of externally generated EvaluatedAnnotations.
               *
               * Create a request for the method "slices.batchImport".
               *
               * This request holds the parameters needed by the the aiplatform server.  After setting any
               * optional parameters, call the {@link BatchImport#execute()} method to invoke the remote
               * operation. <p> {@link
               * BatchImport#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. The name of the parent ModelEvaluationSlice resource. Format:
             *        `projects/{project}/locations/{location}/models/{model}/evaluations/{evaluation}/slices/{s
             *        lice}`
               * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1BatchImportEvaluatedAnnotationsRequest}
               * @since 1.13
               */
              protected BatchImport(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1BatchImportEvaluatedAnnotationsRequest content) {
                super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1BatchImportEvaluatedAnnotationsResponse.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/models/[^/]+/evaluations/[^/]+/slices/[^/]+$");
                }
              }

              @Override
              public BatchImport set$Xgafv(java.lang.String $Xgafv) {
                return (BatchImport) super.set$Xgafv($Xgafv);
              }

              @Override
              public BatchImport setAccessToken(java.lang.String accessToken) {
                return (BatchImport) super.setAccessToken(accessToken);
              }

              @Override
              public BatchImport setAlt(java.lang.String alt) {
                return (BatchImport) super.setAlt(alt);
              }

              @Override
              public BatchImport setCallback(java.lang.String callback) {
                return (BatchImport) super.setCallback(callback);
              }

              @Override
              public BatchImport setFields(java.lang.String fields) {
                return (BatchImport) super.setFields(fields);
              }

              @Override
              public BatchImport setKey(java.lang.String key) {
                return (BatchImport) super.setKey(key);
              }

              @Override
              public BatchImport setOauthToken(java.lang.String oauthToken) {
                return (BatchImport) super.setOauthToken(oauthToken);
              }

              @Override
              public BatchImport setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (BatchImport) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public BatchImport setQuotaUser(java.lang.String quotaUser) {
                return (BatchImport) super.setQuotaUser(quotaUser);
              }

              @Override
              public BatchImport setUploadType(java.lang.String uploadType) {
                return (BatchImport) super.setUploadType(uploadType);
              }

              @Override
              public BatchImport setUploadProtocol(java.lang.String uploadProtocol) {
                return (BatchImport) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The name of the parent ModelEvaluationSlice resource. Format: `projects/{
               * project}/locations/{location}/models/{model}/evaluations/{evaluation}/slices/{slice
               * }`
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The name of the parent ModelEvaluationSlice resource. Format:
             `projects/{project}/locations/{location}/models/{model}/evaluations/{evaluation}/slices/{slice}`
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. The name of the parent ModelEvaluationSlice resource. Format: `projects/{
               * project}/locations/{location}/models/{model}/evaluations/{evaluation}/slices/{slice
               * }`
               */
              public BatchImport setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/models/[^/]+/evaluations/[^/]+/slices/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              @Override
              public BatchImport set(String parameterName, Object value) {
                return (BatchImport) super.set(parameterName, value);
              }
            }
            /**
             * Gets a ModelEvaluationSlice.
             *
             * Create a request for the method "slices.get".
             *
             * This request holds the parameters needed by the aiplatform server.  After setting any optional
             * parameters, call the {@link Get#execute()} method to invoke the remote operation.
             *
             * @param name Required. The name of the ModelEvaluationSlice resource. Format:
             *        `projects/{project}/locations/{location}/models/{model}/evaluations/{evaluation}/slices/{s
             *        lice}`
             * @return the request
             */
            public Get get(java.lang.String name) throws java.io.IOException {
              Get result = new Get(name);
              initialize(result);
              return result;
            }

            public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ModelEvaluationSlice> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/models/[^/]+/evaluations/[^/]+/slices/[^/]+$");

              /**
               * Gets a ModelEvaluationSlice.
               *
               * Create a request for the method "slices.get".
               *
               * This request holds the parameters needed by the the aiplatform server.  After setting any
               * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
               * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The name of the ModelEvaluationSlice resource. Format:
             *        `projects/{project}/locations/{location}/models/{model}/evaluations/{evaluation}/slices/{s
             *        lice}`
               * @since 1.13
               */
              protected Get(java.lang.String name) {
                super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ModelEvaluationSlice.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/models/[^/]+/evaluations/[^/]+/slices/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public Get set$Xgafv(java.lang.String $Xgafv) {
                return (Get) super.set$Xgafv($Xgafv);
              }

              @Override
              public Get setAccessToken(java.lang.String accessToken) {
                return (Get) super.setAccessToken(accessToken);
              }

              @Override
              public Get setAlt(java.lang.String alt) {
                return (Get) super.setAlt(alt);
              }

              @Override
              public Get setCallback(java.lang.String callback) {
                return (Get) super.setCallback(callback);
              }

              @Override
              public Get setFields(java.lang.String fields) {
                return (Get) super.setFields(fields);
              }

              @Override
              public Get setKey(java.lang.String key) {
                return (Get) super.setKey(key);
              }

              @Override
              public Get setOauthToken(java.lang.String oauthToken) {
                return (Get) super.setOauthToken(oauthToken);
              }

              @Override
              public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Get) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Get setQuotaUser(java.lang.String quotaUser) {
                return (Get) super.setQuotaUser(quotaUser);
              }

              @Override
              public Get setUploadType(java.lang.String uploadType) {
                return (Get) super.setUploadType(uploadType);
              }

              @Override
              public Get setUploadProtocol(java.lang.String uploadProtocol) {
                return (Get) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The name of the ModelEvaluationSlice resource. Format: `projects/{project
               * }/locations/{location}/models/{model}/evaluations/{evaluation}/slices/{slice}`
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The name of the ModelEvaluationSlice resource. Format:
             `projects/{project}/locations/{location}/models/{model}/evaluations/{evaluation}/slices/{slice}`
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Required. The name of the ModelEvaluationSlice resource. Format: `projects/{project
               * }/locations/{location}/models/{model}/evaluations/{evaluation}/slices/{slice}`
               */
              public Get setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/models/[^/]+/evaluations/[^/]+/slices/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Get set(String parameterName, Object value) {
                return (Get) super.set(parameterName, value);
              }
            }
            /**
             * Lists ModelEvaluationSlices in a ModelEvaluation.
             *
             * Create a request for the method "slices.list".
             *
             * This request holds the parameters needed by the aiplatform server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The resource name of the ModelEvaluation to list the ModelEvaluationSlices from. Format:
             *        `projects/{project}/locations/{location}/models/{model}/evaluations/{evaluation}`
             * @return the request
             */
            public List list(java.lang.String parent) throws java.io.IOException {
              List result = new List(parent);
              initialize(result);
              return result;
            }

            public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListModelEvaluationSlicesResponse> {

              private static final String REST_PATH = "v1/{+parent}/slices";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/models/[^/]+/evaluations/[^/]+$");

              /**
               * Lists ModelEvaluationSlices in a ModelEvaluation.
               *
               * Create a request for the method "slices.list".
               *
               * This request holds the parameters needed by the the aiplatform server.  After setting any
               * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
               * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. The resource name of the ModelEvaluation to list the ModelEvaluationSlices from. Format:
             *        `projects/{project}/locations/{location}/models/{model}/evaluations/{evaluation}`
               * @since 1.13
               */
              protected List(java.lang.String parent) {
                super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListModelEvaluationSlicesResponse.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/models/[^/]+/evaluations/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public List set$Xgafv(java.lang.String $Xgafv) {
                return (List) super.set$Xgafv($Xgafv);
              }

              @Override
              public List setAccessToken(java.lang.String accessToken) {
                return (List) super.setAccessToken(accessToken);
              }

              @Override
              public List setAlt(java.lang.String alt) {
                return (List) super.setAlt(alt);
              }

              @Override
              public List setCallback(java.lang.String callback) {
                return (List) super.setCallback(callback);
              }

              @Override
              public List setFields(java.lang.String fields) {
                return (List) super.setFields(fields);
              }

              @Override
              public List setKey(java.lang.String key) {
                return (List) super.setKey(key);
              }

              @Override
              public List setOauthToken(java.lang.String oauthToken) {
                return (List) super.setOauthToken(oauthToken);
              }

              @Override
              public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (List) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public List setQuotaUser(java.lang.String quotaUser) {
                return (List) super.setQuotaUser(quotaUser);
              }

              @Override
              public List setUploadType(java.lang.String uploadType) {
                return (List) super.setUploadType(uploadType);
              }

              @Override
              public List setUploadProtocol(java.lang.String uploadProtocol) {
                return (List) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The resource name of the ModelEvaluation to list the
               * ModelEvaluationSlices from. Format:
               * `projects/{project}/locations/{location}/models/{model}/evaluations/{evaluation}`
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The resource name of the ModelEvaluation to list the ModelEvaluationSlices from. Format:
             `projects/{project}/locations/{location}/models/{model}/evaluations/{evaluation}`
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. The resource name of the ModelEvaluation to list the
               * ModelEvaluationSlices from. Format:
               * `projects/{project}/locations/{location}/models/{model}/evaluations/{evaluation}`
               */
              public List setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/models/[^/]+/evaluations/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /** The standard list filter. * `slice.dimension` - for =. */
              @com.google.api.client.util.Key
              private java.lang.String filter;

              /** The standard list filter. * `slice.dimension` - for =.
               */
              public java.lang.String getFilter() {
                return filter;
              }

              /** The standard list filter. * `slice.dimension` - for =. */
              public List setFilter(java.lang.String filter) {
                this.filter = filter;
                return this;
              }

              /** The standard list page size. */
              @com.google.api.client.util.Key
              private java.lang.Integer pageSize;

              /** The standard list page size.
               */
              public java.lang.Integer getPageSize() {
                return pageSize;
              }

              /** The standard list page size. */
              public List setPageSize(java.lang.Integer pageSize) {
                this.pageSize = pageSize;
                return this;
              }

              /**
               * The standard list page token. Typically obtained via
               * ListModelEvaluationSlicesResponse.next_page_token of the previous
               * ModelService.ListModelEvaluationSlices call.
               */
              @com.google.api.client.util.Key
              private java.lang.String pageToken;

              /** The standard list page token. Typically obtained via
             ListModelEvaluationSlicesResponse.next_page_token of the previous
             ModelService.ListModelEvaluationSlices call.
               */
              public java.lang.String getPageToken() {
                return pageToken;
              }

              /**
               * The standard list page token. Typically obtained via
               * ListModelEvaluationSlicesResponse.next_page_token of the previous
               * ModelService.ListModelEvaluationSlices call.
               */
              public List setPageToken(java.lang.String pageToken) {
                this.pageToken = pageToken;
                return this;
              }

              /** Mask specifying which fields to read. */
              @com.google.api.client.util.Key
              private String readMask;

              /** Mask specifying which fields to read.
               */
              public String getReadMask() {
                return readMask;
              }

              /** Mask specifying which fields to read. */
              public List setReadMask(String readMask) {
                this.readMask = readMask;
                return this;
              }

              @Override
              public List set(String parameterName, Object value) {
                return (List) super.set(parameterName, value);
              }
            }

          }
        }
        /**
         * An accessor for creating requests from the Operations collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Aiplatform aiplatform = new Aiplatform(...);}
         *   {@code Aiplatform.Operations.List request = aiplatform.operations().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Operations operations() {
          return new Operations();
        }

        /**
         * The "operations" collection of methods.
         */
        public class Operations {

          /**
           * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
           * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
           * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
           * methods to check whether the cancellation succeeded or whether the operation completed despite
           * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
           * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
           * `Code.CANCELLED`.
           *
           * Create a request for the method "operations.cancel".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource to be cancelled.
           * @return the request
           */
          public Cancel cancel(java.lang.String name) throws java.io.IOException {
            Cancel result = new Cancel(name);
            initialize(result);
            return result;
          }

          public class Cancel extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

            private static final String REST_PATH = "v1/{+name}:cancel";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/models/[^/]+/operations/[^/]+$");

            /**
             * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
             * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
             * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
             * methods to check whether the cancellation succeeded or whether the operation completed despite
             * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
             * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
             * `Code.CANCELLED`.
             *
             * Create a request for the method "operations.cancel".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
             * <p> {@link
             * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource to be cancelled.
             * @since 1.13
             */
            protected Cancel(java.lang.String name) {
              super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/models/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public Cancel set$Xgafv(java.lang.String $Xgafv) {
              return (Cancel) super.set$Xgafv($Xgafv);
            }

            @Override
            public Cancel setAccessToken(java.lang.String accessToken) {
              return (Cancel) super.setAccessToken(accessToken);
            }

            @Override
            public Cancel setAlt(java.lang.String alt) {
              return (Cancel) super.setAlt(alt);
            }

            @Override
            public Cancel setCallback(java.lang.String callback) {
              return (Cancel) super.setCallback(callback);
            }

            @Override
            public Cancel setFields(java.lang.String fields) {
              return (Cancel) super.setFields(fields);
            }

            @Override
            public Cancel setKey(java.lang.String key) {
              return (Cancel) super.setKey(key);
            }

            @Override
            public Cancel setOauthToken(java.lang.String oauthToken) {
              return (Cancel) super.setOauthToken(oauthToken);
            }

            @Override
            public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Cancel) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Cancel setQuotaUser(java.lang.String quotaUser) {
              return (Cancel) super.setQuotaUser(quotaUser);
            }

            @Override
            public Cancel setUploadType(java.lang.String uploadType) {
              return (Cancel) super.setUploadType(uploadType);
            }

            @Override
            public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
              return (Cancel) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource to be cancelled. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource to be cancelled.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource to be cancelled. */
            public Cancel setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/models/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Cancel set(String parameterName, Object value) {
              return (Cancel) super.set(parameterName, value);
            }
          }
          /**
           * Deletes a long-running operation. This method indicates that the client is no longer interested
           * in the operation result. It does not cancel the operation. If the server doesn't support this
           * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.delete".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource to be deleted.
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/models/[^/]+/operations/[^/]+$");

            /**
             * Deletes a long-running operation. This method indicates that the client is no longer interested
             * in the operation result. It does not cancel the operation. If the server doesn't support this
             * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.delete".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource to be deleted.
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/models/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource to be deleted. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource to be deleted.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource to be deleted. */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/models/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Gets the latest state of a long-running operation. Clients can use this method to poll the
           * operation result at intervals as recommended by the API service.
           *
           * Create a request for the method "operations.get".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource.
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/models/[^/]+/operations/[^/]+$");

            /**
             * Gets the latest state of a long-running operation. Clients can use this method to poll the
             * operation result at intervals as recommended by the API service.
             *
             * Create a request for the method "operations.get".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource.
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/models/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource. */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/models/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Lists operations that match the specified filter in the request. If the server doesn't support
           * this method, it returns `UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.list".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation's parent resource.
           * @return the request
           */
          public List list(java.lang.String name) throws java.io.IOException {
            List result = new List(name);
            initialize(result);
            return result;
          }

          public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse> {

            private static final String REST_PATH = "v1/{+name}/operations";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/models/[^/]+$");

            /**
             * Lists operations that match the specified filter in the request. If the server doesn't support
             * this method, it returns `UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.list".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation's parent resource.
             * @since 1.13
             */
            protected List(java.lang.String name) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/models/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation's parent resource. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation's parent resource.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation's parent resource. */
            public List setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/models/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /** The standard list filter. */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** The standard list filter.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /** The standard list filter. */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /** The standard list page size. */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** The standard list page size.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /** The standard list page size. */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** The standard list page token. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** The standard list page token.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** The standard list page token. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Waits until the specified long-running operation is done or reaches at most a specified timeout,
           * returning the latest state. If the operation is already done, the latest state is immediately
           * returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC
           * timeout is used. If the server does not support this method, it returns
           * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
           * the latest state before the specified timeout (including immediately), meaning even an immediate
           * response is no guarantee that the operation is done.
           *
           * Create a request for the method "operations.wait".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Wait#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource to wait on.
           * @return the request
           */
          public Wait wait(java.lang.String name) throws java.io.IOException {
            Wait result = new Wait(name);
            initialize(result);
            return result;
          }

          public class Wait extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+name}:wait";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/models/[^/]+/operations/[^/]+$");

            /**
             * Waits until the specified long-running operation is done or reaches at most a specified
             * timeout, returning the latest state. If the operation is already done, the latest state is
             * immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout,
             * the HTTP/RPC timeout is used. If the server does not support this method, it returns
             * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
             * the latest state before the specified timeout (including immediately), meaning even an
             * immediate response is no guarantee that the operation is done.
             *
             * Create a request for the method "operations.wait".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Wait#execute()} method to invoke the remote operation. <p>
             * {@link Wait#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource to wait on.
             * @since 1.13
             */
            protected Wait(java.lang.String name) {
              super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/models/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public Wait set$Xgafv(java.lang.String $Xgafv) {
              return (Wait) super.set$Xgafv($Xgafv);
            }

            @Override
            public Wait setAccessToken(java.lang.String accessToken) {
              return (Wait) super.setAccessToken(accessToken);
            }

            @Override
            public Wait setAlt(java.lang.String alt) {
              return (Wait) super.setAlt(alt);
            }

            @Override
            public Wait setCallback(java.lang.String callback) {
              return (Wait) super.setCallback(callback);
            }

            @Override
            public Wait setFields(java.lang.String fields) {
              return (Wait) super.setFields(fields);
            }

            @Override
            public Wait setKey(java.lang.String key) {
              return (Wait) super.setKey(key);
            }

            @Override
            public Wait setOauthToken(java.lang.String oauthToken) {
              return (Wait) super.setOauthToken(oauthToken);
            }

            @Override
            public Wait setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Wait) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Wait setQuotaUser(java.lang.String quotaUser) {
              return (Wait) super.setQuotaUser(quotaUser);
            }

            @Override
            public Wait setUploadType(java.lang.String uploadType) {
              return (Wait) super.setUploadType(uploadType);
            }

            @Override
            public Wait setUploadProtocol(java.lang.String uploadProtocol) {
              return (Wait) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource to wait on. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource to wait on.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource to wait on. */
            public Wait setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/models/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * The maximum duration to wait before timing out. If left blank, the wait will be at
             * most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline
             * is also specified, the shorter one will be used.
             */
            @com.google.api.client.util.Key
            private String timeout;

            /** The maximum duration to wait before timing out. If left blank, the wait will be at most the time
           permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the
           shorter one will be used.
             */
            public String getTimeout() {
              return timeout;
            }

            /**
             * The maximum duration to wait before timing out. If left blank, the wait will be at
             * most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline
             * is also specified, the shorter one will be used.
             */
            public Wait setTimeout(String timeout) {
              this.timeout = timeout;
              return this;
            }

            @Override
            public Wait set(String parameterName, Object value) {
              return (Wait) super.set(parameterName, value);
            }
          }

        }
      }
      /**
       * An accessor for creating requests from the NasJobs collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Aiplatform aiplatform = new Aiplatform(...);}
       *   {@code Aiplatform.NasJobs.List request = aiplatform.nasJobs().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public NasJobs nasJobs() {
        return new NasJobs();
      }

      /**
       * The "nasJobs" collection of methods.
       */
      public class NasJobs {

        /**
         * Cancels a NasJob. Starts asynchronous cancellation on the NasJob. The server makes a best effort
         * to cancel the job, but success is not guaranteed. Clients can use JobService.GetNasJob or other
         * methods to check whether the cancellation succeeded or whether the job completed despite
         * cancellation. On successful cancellation, the NasJob is not deleted; instead it becomes a job
         * with a NasJob.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`,
         * and NasJob.state is set to `CANCELLED`.
         *
         * Create a request for the method "nasJobs.cancel".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the NasJob to cancel. Format:
         *        `projects/{project}/locations/{location}/nasJobs/{nas_job}`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CancelNasJobRequest}
         * @return the request
         */
        public Cancel cancel(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CancelNasJobRequest content) throws java.io.IOException {
          Cancel result = new Cancel(name, content);
          initialize(result);
          return result;
        }

        public class Cancel extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

          private static final String REST_PATH = "v1/{+name}:cancel";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/nasJobs/[^/]+$");

          /**
           * Cancels a NasJob. Starts asynchronous cancellation on the NasJob. The server makes a best
           * effort to cancel the job, but success is not guaranteed. Clients can use JobService.GetNasJob
           * or other methods to check whether the cancellation succeeded or whether the job completed
           * despite cancellation. On successful cancellation, the NasJob is not deleted; instead it becomes
           * a job with a NasJob.error value with a google.rpc.Status.code of 1, corresponding to
           * `Code.CANCELLED`, and NasJob.state is set to `CANCELLED`.
           *
           * Create a request for the method "nasJobs.cancel".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
           * <p> {@link
           * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the NasJob to cancel. Format:
         *        `projects/{project}/locations/{location}/nasJobs/{nas_job}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CancelNasJobRequest}
           * @since 1.13
           */
          protected Cancel(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CancelNasJobRequest content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/nasJobs/[^/]+$");
            }
          }

          @Override
          public Cancel set$Xgafv(java.lang.String $Xgafv) {
            return (Cancel) super.set$Xgafv($Xgafv);
          }

          @Override
          public Cancel setAccessToken(java.lang.String accessToken) {
            return (Cancel) super.setAccessToken(accessToken);
          }

          @Override
          public Cancel setAlt(java.lang.String alt) {
            return (Cancel) super.setAlt(alt);
          }

          @Override
          public Cancel setCallback(java.lang.String callback) {
            return (Cancel) super.setCallback(callback);
          }

          @Override
          public Cancel setFields(java.lang.String fields) {
            return (Cancel) super.setFields(fields);
          }

          @Override
          public Cancel setKey(java.lang.String key) {
            return (Cancel) super.setKey(key);
          }

          @Override
          public Cancel setOauthToken(java.lang.String oauthToken) {
            return (Cancel) super.setOauthToken(oauthToken);
          }

          @Override
          public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Cancel) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Cancel setQuotaUser(java.lang.String quotaUser) {
            return (Cancel) super.setQuotaUser(quotaUser);
          }

          @Override
          public Cancel setUploadType(java.lang.String uploadType) {
            return (Cancel) super.setUploadType(uploadType);
          }

          @Override
          public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
            return (Cancel) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the NasJob to cancel. Format:
           * `projects/{project}/locations/{location}/nasJobs/{nas_job}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the NasJob to cancel. Format:
         `projects/{project}/locations/{location}/nasJobs/{nas_job}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the NasJob to cancel. Format:
           * `projects/{project}/locations/{location}/nasJobs/{nas_job}`
           */
          public Cancel setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/nasJobs/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Cancel set(String parameterName, Object value) {
            return (Cancel) super.set(parameterName, value);
          }
        }
        /**
         * Creates a NasJob
         *
         * Create a request for the method "nasJobs.create".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The resource name of the Location to create the NasJob in. Format:
         *        `projects/{project}/locations/{location}`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1NasJob}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1NasJob content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1NasJob> {

          private static final String REST_PATH = "v1/{+parent}/nasJobs";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Creates a NasJob
           *
           * Create a request for the method "nasJobs.create".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The resource name of the Location to create the NasJob in. Format:
         *        `projects/{project}/locations/{location}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1NasJob}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1NasJob content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1NasJob.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the Location to create the NasJob in. Format:
           * `projects/{project}/locations/{location}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The resource name of the Location to create the NasJob in. Format:
         `projects/{project}/locations/{location}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The resource name of the Location to create the NasJob in. Format:
           * `projects/{project}/locations/{location}`
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a NasJob.
         *
         * Create a request for the method "nasJobs.delete".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the NasJob resource to be deleted. Format:
         *        `projects/{project}/locations/{location}/nasJobs/{nas_job}`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/nasJobs/[^/]+$");

          /**
           * Deletes a NasJob.
           *
           * Create a request for the method "nasJobs.delete".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the NasJob resource to be deleted. Format:
         *        `projects/{project}/locations/{location}/nasJobs/{nas_job}`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/nasJobs/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the NasJob resource to be deleted. Format:
           * `projects/{project}/locations/{location}/nasJobs/{nas_job}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the NasJob resource to be deleted. Format:
         `projects/{project}/locations/{location}/nasJobs/{nas_job}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the NasJob resource to be deleted. Format:
           * `projects/{project}/locations/{location}/nasJobs/{nas_job}`
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/nasJobs/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets a NasJob
         *
         * Create a request for the method "nasJobs.get".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the NasJob resource. Format:
         *        `projects/{project}/locations/{location}/nasJobs/{nas_job}`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1NasJob> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/nasJobs/[^/]+$");

          /**
           * Gets a NasJob
           *
           * Create a request for the method "nasJobs.get".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the NasJob resource. Format:
         *        `projects/{project}/locations/{location}/nasJobs/{nas_job}`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1NasJob.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/nasJobs/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the NasJob resource. Format:
           * `projects/{project}/locations/{location}/nasJobs/{nas_job}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the NasJob resource. Format:
         `projects/{project}/locations/{location}/nasJobs/{nas_job}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the NasJob resource. Format:
           * `projects/{project}/locations/{location}/nasJobs/{nas_job}`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/nasJobs/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists NasJobs in a Location.
         *
         * Create a request for the method "nasJobs.list".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The resource name of the Location to list the NasJobs from. Format:
         *        `projects/{project}/locations/{location}`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListNasJobsResponse> {

          private static final String REST_PATH = "v1/{+parent}/nasJobs";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists NasJobs in a Location.
           *
           * Create a request for the method "nasJobs.list".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The resource name of the Location to list the NasJobs from. Format:
         *        `projects/{project}/locations/{location}`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListNasJobsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the Location to list the NasJobs from. Format:
           * `projects/{project}/locations/{location}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The resource name of the Location to list the NasJobs from. Format:
         `projects/{project}/locations/{location}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The resource name of the Location to list the NasJobs from. Format:
           * `projects/{project}/locations/{location}`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * The standard list filter. Supported fields: * `display_name` supports `=`, `!=`
           * comparisons, and `:` wildcard. * `state` supports `=`, `!=` comparisons. *
           * `create_time` supports `=`, `!=`,`<`, `<=`,`>`, `>=` comparisons. `create_time` must be
           * in RFC 3339 format. * `labels` supports general map functions that is:
           * `labels.key=value` - key:value equality `labels.key:* - key existence Some examples of
           * using the filter are: * `state="JOB_STATE_SUCCEEDED" AND display_name:"my_job_*"` *
           * `state!="JOB_STATE_FAILED" OR display_name="my_job"` * `NOT display_name="my_job"` *
           * `create_time>"2021-05-18T00:00:00Z"` * `labels.keyA=valueA` * `labels.keyB:*`
           */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** The standard list filter. Supported fields: * `display_name` supports `=`, `!=` comparisons, and
         `:` wildcard. * `state` supports `=`, `!=` comparisons. * `create_time` supports `=`, `!=`,`<`,
         `<=`,`>`, `>=` comparisons. `create_time` must be in RFC 3339 format. * `labels` supports general
         map functions that is: `labels.key=value` - key:value equality `labels.key:* - key existence Some
         examples of using the filter are: * `state="JOB_STATE_SUCCEEDED" AND display_name:"my_job_*"` *
         `state!="JOB_STATE_FAILED" OR display_name="my_job"` * `NOT display_name="my_job"` *
         `create_time>"2021-05-18T00:00:00Z"` * `labels.keyA=valueA` * `labels.keyB:*`
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /**
           * The standard list filter. Supported fields: * `display_name` supports `=`, `!=`
           * comparisons, and `:` wildcard. * `state` supports `=`, `!=` comparisons. *
           * `create_time` supports `=`, `!=`,`<`, `<=`,`>`, `>=` comparisons. `create_time` must be
           * in RFC 3339 format. * `labels` supports general map functions that is:
           * `labels.key=value` - key:value equality `labels.key:* - key existence Some examples of
           * using the filter are: * `state="JOB_STATE_SUCCEEDED" AND display_name:"my_job_*"` *
           * `state!="JOB_STATE_FAILED" OR display_name="my_job"` * `NOT display_name="my_job"` *
           * `create_time>"2021-05-18T00:00:00Z"` * `labels.keyA=valueA` * `labels.keyB:*`
           */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /** The standard list page size. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The standard list page size.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** The standard list page size. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * The standard list page token. Typically obtained via
           * ListNasJobsResponse.next_page_token of the previous JobService.ListNasJobs call.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The standard list page token. Typically obtained via ListNasJobsResponse.next_page_token of the
         previous JobService.ListNasJobs call.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * The standard list page token. Typically obtained via
           * ListNasJobsResponse.next_page_token of the previous JobService.ListNasJobs call.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          /** Mask specifying which fields to read. */
          @com.google.api.client.util.Key
          private String readMask;

          /** Mask specifying which fields to read.
           */
          public String getReadMask() {
            return readMask;
          }

          /** Mask specifying which fields to read. */
          public List setReadMask(String readMask) {
            this.readMask = readMask;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the NasTrialDetails collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Aiplatform aiplatform = new Aiplatform(...);}
         *   {@code Aiplatform.NasTrialDetails.List request = aiplatform.nasTrialDetails().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public NasTrialDetails nasTrialDetails() {
          return new NasTrialDetails();
        }

        /**
         * The "nasTrialDetails" collection of methods.
         */
        public class NasTrialDetails {

          /**
           * Gets a NasTrialDetail.
           *
           * Create a request for the method "nasTrialDetails.get".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the NasTrialDetail resource. Format:
           *        `projects/{project}/locations/{location}/nasJobs/{nas_job}/nasTrialDetails/{nas_trial_deta
           *        il}`
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1NasTrialDetail> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/nasJobs/[^/]+/nasTrialDetails/[^/]+$");

            /**
             * Gets a NasTrialDetail.
             *
             * Create a request for the method "nasTrialDetails.get".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the NasTrialDetail resource. Format:
           *        `projects/{project}/locations/{location}/nasJobs/{nas_job}/nasTrialDetails/{nas_trial_deta
           *        il}`
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1NasTrialDetail.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/nasJobs/[^/]+/nasTrialDetails/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the NasTrialDetail resource. Format: `projects/{project}/locati
             * ons/{location}/nasJobs/{nas_job}/nasTrialDetails/{nas_trial_detail}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the NasTrialDetail resource. Format:
           `projects/{project}/locations/{location}/nasJobs/{nas_job}/nasTrialDetails/{nas_trial_detail}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The name of the NasTrialDetail resource. Format: `projects/{project}/locati
             * ons/{location}/nasJobs/{nas_job}/nasTrialDetails/{nas_trial_detail}`
             */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/nasJobs/[^/]+/nasTrialDetails/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * List top NasTrialDetails of a NasJob.
           *
           * Create a request for the method "nasTrialDetails.list".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The name of the NasJob resource. Format:
           *        `projects/{project}/locations/{location}/nasJobs/{nas_job}`
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListNasTrialDetailsResponse> {

            private static final String REST_PATH = "v1/{+parent}/nasTrialDetails";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/nasJobs/[^/]+$");

            /**
             * List top NasTrialDetails of a NasJob.
             *
             * Create a request for the method "nasTrialDetails.list".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The name of the NasJob resource. Format:
           *        `projects/{project}/locations/{location}/nasJobs/{nas_job}`
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListNasTrialDetailsResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/nasJobs/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the NasJob resource. Format:
             * `projects/{project}/locations/{location}/nasJobs/{nas_job}`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The name of the NasJob resource. Format:
           `projects/{project}/locations/{location}/nasJobs/{nas_job}`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The name of the NasJob resource. Format:
             * `projects/{project}/locations/{location}/nasJobs/{nas_job}`
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/nasJobs/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /** The standard list page size. */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** The standard list page size.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /** The standard list page size. */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /**
             * The standard list page token. Typically obtained via
             * ListNasTrialDetailsResponse.next_page_token of the previous
             * JobService.ListNasTrialDetails call.
             */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** The standard list page token. Typically obtained via ListNasTrialDetailsResponse.next_page_token of
           the previous JobService.ListNasTrialDetails call.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /**
             * The standard list page token. Typically obtained via
             * ListNasTrialDetailsResponse.next_page_token of the previous
             * JobService.ListNasTrialDetails call.
             */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }

        }
      }
      /**
       * An accessor for creating requests from the NotebookExecutionJobs collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Aiplatform aiplatform = new Aiplatform(...);}
       *   {@code Aiplatform.NotebookExecutionJobs.List request = aiplatform.notebookExecutionJobs().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public NotebookExecutionJobs notebookExecutionJobs() {
        return new NotebookExecutionJobs();
      }

      /**
       * The "notebookExecutionJobs" collection of methods.
       */
      public class NotebookExecutionJobs {

        /**
         * Creates a NotebookExecutionJob.
         *
         * Create a request for the method "notebookExecutionJobs.create".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The resource name of the Location to create the NotebookExecutionJob. Format:
         *        `projects/{project}/locations/{location}`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1NotebookExecutionJob}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1NotebookExecutionJob content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+parent}/notebookExecutionJobs";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Creates a NotebookExecutionJob.
           *
           * Create a request for the method "notebookExecutionJobs.create".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The resource name of the Location to create the NotebookExecutionJob. Format:
         *        `projects/{project}/locations/{location}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1NotebookExecutionJob}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1NotebookExecutionJob content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the Location to create the NotebookExecutionJob. Format:
           * `projects/{project}/locations/{location}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The resource name of the Location to create the NotebookExecutionJob. Format:
         `projects/{project}/locations/{location}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The resource name of the Location to create the NotebookExecutionJob. Format:
           * `projects/{project}/locations/{location}`
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** Optional. User specified ID for the NotebookExecutionJob. */
          @com.google.api.client.util.Key
          private java.lang.String notebookExecutionJobId;

          /** Optional. User specified ID for the NotebookExecutionJob.
           */
          public java.lang.String getNotebookExecutionJobId() {
            return notebookExecutionJobId;
          }

          /** Optional. User specified ID for the NotebookExecutionJob. */
          public Create setNotebookExecutionJobId(java.lang.String notebookExecutionJobId) {
            this.notebookExecutionJobId = notebookExecutionJobId;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a NotebookExecutionJob.
         *
         * Create a request for the method "notebookExecutionJobs.delete".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the NotebookExecutionJob resource to be deleted.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/notebookExecutionJobs/[^/]+$");

          /**
           * Deletes a NotebookExecutionJob.
           *
           * Create a request for the method "notebookExecutionJobs.delete".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the NotebookExecutionJob resource to be deleted.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/notebookExecutionJobs/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The name of the NotebookExecutionJob resource to be deleted. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the NotebookExecutionJob resource to be deleted.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. The name of the NotebookExecutionJob resource to be deleted. */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/notebookExecutionJobs/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets a NotebookExecutionJob.
         *
         * Create a request for the method "notebookExecutionJobs.get".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the NotebookExecutionJob resource.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1NotebookExecutionJob> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/notebookExecutionJobs/[^/]+$");

          /**
           * Gets a NotebookExecutionJob.
           *
           * Create a request for the method "notebookExecutionJobs.get".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the NotebookExecutionJob resource.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1NotebookExecutionJob.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/notebookExecutionJobs/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The name of the NotebookExecutionJob resource. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the NotebookExecutionJob resource.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. The name of the NotebookExecutionJob resource. */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/notebookExecutionJobs/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /** Optional. The NotebookExecutionJob view. Defaults to BASIC. */
          @com.google.api.client.util.Key
          private java.lang.String view;

          /** Optional. The NotebookExecutionJob view. Defaults to BASIC.
           */
          public java.lang.String getView() {
            return view;
          }

          /** Optional. The NotebookExecutionJob view. Defaults to BASIC. */
          public Get setView(java.lang.String view) {
            this.view = view;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists NotebookExecutionJobs in a Location.
         *
         * Create a request for the method "notebookExecutionJobs.list".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The resource name of the Location from which to list the NotebookExecutionJobs. Format:
         *        `projects/{project}/locations/{location}`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListNotebookExecutionJobsResponse> {

          private static final String REST_PATH = "v1/{+parent}/notebookExecutionJobs";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists NotebookExecutionJobs in a Location.
           *
           * Create a request for the method "notebookExecutionJobs.list".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The resource name of the Location from which to list the NotebookExecutionJobs. Format:
         *        `projects/{project}/locations/{location}`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListNotebookExecutionJobsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the Location from which to list the
           * NotebookExecutionJobs. Format: `projects/{project}/locations/{location}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The resource name of the Location from which to list the NotebookExecutionJobs. Format:
         `projects/{project}/locations/{location}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The resource name of the Location from which to list the
           * NotebookExecutionJobs. Format: `projects/{project}/locations/{location}`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Optional. An expression for filtering the results of the request. For field names both
           * snake_case and camelCase are supported. * `notebookExecutionJob` supports = and !=.
           * `notebookExecutionJob` represents the NotebookExecutionJob ID. * `displayName` supports
           * = and != and regex. * `schedule` supports = and != and regex. Some examples: *
           * `notebookExecutionJob="123"` * `notebookExecutionJob="my-execution-job"` *
           * `displayName="myDisplayName"` and `displayName=~"myDisplayNameRegex"`
           */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** Optional. An expression for filtering the results of the request. For field names both snake_case
         and camelCase are supported. * `notebookExecutionJob` supports = and !=. `notebookExecutionJob`
         represents the NotebookExecutionJob ID. * `displayName` supports = and != and regex. * `schedule`
         supports = and != and regex. Some examples: * `notebookExecutionJob="123"` *
         `notebookExecutionJob="my-execution-job"` * `displayName="myDisplayName"` and
         `displayName=~"myDisplayNameRegex"`
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /**
           * Optional. An expression for filtering the results of the request. For field names both
           * snake_case and camelCase are supported. * `notebookExecutionJob` supports = and !=.
           * `notebookExecutionJob` represents the NotebookExecutionJob ID. * `displayName` supports
           * = and != and regex. * `schedule` supports = and != and regex. Some examples: *
           * `notebookExecutionJob="123"` * `notebookExecutionJob="my-execution-job"` *
           * `displayName="myDisplayName"` and `displayName=~"myDisplayNameRegex"`
           */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /**
           * Optional. A comma-separated list of fields to order by, sorted in ascending order. Use
           * "desc" after a field name for descending. Supported fields: * `display_name` *
           * `create_time` * `update_time` Example: `display_name, create_time desc`.
           */
          @com.google.api.client.util.Key
          private java.lang.String orderBy;

          /** Optional. A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after
         a field name for descending. Supported fields: * `display_name` * `create_time` * `update_time`
         Example: `display_name, create_time desc`.
           */
          public java.lang.String getOrderBy() {
            return orderBy;
          }

          /**
           * Optional. A comma-separated list of fields to order by, sorted in ascending order. Use
           * "desc" after a field name for descending. Supported fields: * `display_name` *
           * `create_time` * `update_time` Example: `display_name, create_time desc`.
           */
          public List setOrderBy(java.lang.String orderBy) {
            this.orderBy = orderBy;
            return this;
          }

          /** Optional. The standard list page size. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Optional. The standard list page size.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** Optional. The standard list page size. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * Optional. The standard list page token. Typically obtained via
           * ListNotebookExecutionJobs.next_page_token of the previous
           * NotebookService.ListNotebookExecutionJobs call.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Optional. The standard list page token. Typically obtained via
         ListNotebookExecutionJobs.next_page_token of the previous NotebookService.ListNotebookExecutionJobs
         call.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * Optional. The standard list page token. Typically obtained via
           * ListNotebookExecutionJobs.next_page_token of the previous
           * NotebookService.ListNotebookExecutionJobs call.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          /** Optional. The NotebookExecutionJob view. Defaults to BASIC. */
          @com.google.api.client.util.Key
          private java.lang.String view;

          /** Optional. The NotebookExecutionJob view. Defaults to BASIC.
           */
          public java.lang.String getView() {
            return view;
          }

          /** Optional. The NotebookExecutionJob view. Defaults to BASIC. */
          public List setView(java.lang.String view) {
            this.view = view;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the Operations collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Aiplatform aiplatform = new Aiplatform(...);}
         *   {@code Aiplatform.Operations.List request = aiplatform.operations().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Operations operations() {
          return new Operations();
        }

        /**
         * The "operations" collection of methods.
         */
        public class Operations {

          /**
           * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
           * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
           * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
           * methods to check whether the cancellation succeeded or whether the operation completed despite
           * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
           * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
           * `Code.CANCELLED`.
           *
           * Create a request for the method "operations.cancel".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource to be cancelled.
           * @return the request
           */
          public Cancel cancel(java.lang.String name) throws java.io.IOException {
            Cancel result = new Cancel(name);
            initialize(result);
            return result;
          }

          public class Cancel extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

            private static final String REST_PATH = "v1/{+name}:cancel";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/notebookExecutionJobs/[^/]+/operations/[^/]+$");

            /**
             * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
             * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
             * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
             * methods to check whether the cancellation succeeded or whether the operation completed despite
             * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
             * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
             * `Code.CANCELLED`.
             *
             * Create a request for the method "operations.cancel".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
             * <p> {@link
             * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource to be cancelled.
             * @since 1.13
             */
            protected Cancel(java.lang.String name) {
              super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/notebookExecutionJobs/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public Cancel set$Xgafv(java.lang.String $Xgafv) {
              return (Cancel) super.set$Xgafv($Xgafv);
            }

            @Override
            public Cancel setAccessToken(java.lang.String accessToken) {
              return (Cancel) super.setAccessToken(accessToken);
            }

            @Override
            public Cancel setAlt(java.lang.String alt) {
              return (Cancel) super.setAlt(alt);
            }

            @Override
            public Cancel setCallback(java.lang.String callback) {
              return (Cancel) super.setCallback(callback);
            }

            @Override
            public Cancel setFields(java.lang.String fields) {
              return (Cancel) super.setFields(fields);
            }

            @Override
            public Cancel setKey(java.lang.String key) {
              return (Cancel) super.setKey(key);
            }

            @Override
            public Cancel setOauthToken(java.lang.String oauthToken) {
              return (Cancel) super.setOauthToken(oauthToken);
            }

            @Override
            public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Cancel) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Cancel setQuotaUser(java.lang.String quotaUser) {
              return (Cancel) super.setQuotaUser(quotaUser);
            }

            @Override
            public Cancel setUploadType(java.lang.String uploadType) {
              return (Cancel) super.setUploadType(uploadType);
            }

            @Override
            public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
              return (Cancel) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource to be cancelled. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource to be cancelled.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource to be cancelled. */
            public Cancel setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/notebookExecutionJobs/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Cancel set(String parameterName, Object value) {
              return (Cancel) super.set(parameterName, value);
            }
          }
          /**
           * Deletes a long-running operation. This method indicates that the client is no longer interested
           * in the operation result. It does not cancel the operation. If the server doesn't support this
           * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.delete".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource to be deleted.
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/notebookExecutionJobs/[^/]+/operations/[^/]+$");

            /**
             * Deletes a long-running operation. This method indicates that the client is no longer interested
             * in the operation result. It does not cancel the operation. If the server doesn't support this
             * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.delete".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource to be deleted.
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/notebookExecutionJobs/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource to be deleted. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource to be deleted.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource to be deleted. */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/notebookExecutionJobs/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Gets the latest state of a long-running operation. Clients can use this method to poll the
           * operation result at intervals as recommended by the API service.
           *
           * Create a request for the method "operations.get".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource.
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/notebookExecutionJobs/[^/]+/operations/[^/]+$");

            /**
             * Gets the latest state of a long-running operation. Clients can use this method to poll the
             * operation result at intervals as recommended by the API service.
             *
             * Create a request for the method "operations.get".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource.
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/notebookExecutionJobs/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource. */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/notebookExecutionJobs/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Lists operations that match the specified filter in the request. If the server doesn't support
           * this method, it returns `UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.list".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation's parent resource.
           * @return the request
           */
          public List list(java.lang.String name) throws java.io.IOException {
            List result = new List(name);
            initialize(result);
            return result;
          }

          public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse> {

            private static final String REST_PATH = "v1/{+name}/operations";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/notebookExecutionJobs/[^/]+$");

            /**
             * Lists operations that match the specified filter in the request. If the server doesn't support
             * this method, it returns `UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.list".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation's parent resource.
             * @since 1.13
             */
            protected List(java.lang.String name) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/notebookExecutionJobs/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation's parent resource. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation's parent resource.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation's parent resource. */
            public List setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/notebookExecutionJobs/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /** The standard list filter. */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** The standard list filter.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /** The standard list filter. */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /** The standard list page size. */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** The standard list page size.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /** The standard list page size. */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** The standard list page token. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** The standard list page token.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** The standard list page token. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Waits until the specified long-running operation is done or reaches at most a specified timeout,
           * returning the latest state. If the operation is already done, the latest state is immediately
           * returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC
           * timeout is used. If the server does not support this method, it returns
           * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
           * the latest state before the specified timeout (including immediately), meaning even an immediate
           * response is no guarantee that the operation is done.
           *
           * Create a request for the method "operations.wait".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Wait#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource to wait on.
           * @return the request
           */
          public Wait wait(java.lang.String name) throws java.io.IOException {
            Wait result = new Wait(name);
            initialize(result);
            return result;
          }

          public class Wait extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+name}:wait";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/notebookExecutionJobs/[^/]+/operations/[^/]+$");

            /**
             * Waits until the specified long-running operation is done or reaches at most a specified
             * timeout, returning the latest state. If the operation is already done, the latest state is
             * immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout,
             * the HTTP/RPC timeout is used. If the server does not support this method, it returns
             * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
             * the latest state before the specified timeout (including immediately), meaning even an
             * immediate response is no guarantee that the operation is done.
             *
             * Create a request for the method "operations.wait".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Wait#execute()} method to invoke the remote operation. <p>
             * {@link Wait#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource to wait on.
             * @since 1.13
             */
            protected Wait(java.lang.String name) {
              super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/notebookExecutionJobs/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public Wait set$Xgafv(java.lang.String $Xgafv) {
              return (Wait) super.set$Xgafv($Xgafv);
            }

            @Override
            public Wait setAccessToken(java.lang.String accessToken) {
              return (Wait) super.setAccessToken(accessToken);
            }

            @Override
            public Wait setAlt(java.lang.String alt) {
              return (Wait) super.setAlt(alt);
            }

            @Override
            public Wait setCallback(java.lang.String callback) {
              return (Wait) super.setCallback(callback);
            }

            @Override
            public Wait setFields(java.lang.String fields) {
              return (Wait) super.setFields(fields);
            }

            @Override
            public Wait setKey(java.lang.String key) {
              return (Wait) super.setKey(key);
            }

            @Override
            public Wait setOauthToken(java.lang.String oauthToken) {
              return (Wait) super.setOauthToken(oauthToken);
            }

            @Override
            public Wait setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Wait) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Wait setQuotaUser(java.lang.String quotaUser) {
              return (Wait) super.setQuotaUser(quotaUser);
            }

            @Override
            public Wait setUploadType(java.lang.String uploadType) {
              return (Wait) super.setUploadType(uploadType);
            }

            @Override
            public Wait setUploadProtocol(java.lang.String uploadProtocol) {
              return (Wait) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource to wait on. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource to wait on.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource to wait on. */
            public Wait setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/notebookExecutionJobs/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * The maximum duration to wait before timing out. If left blank, the wait will be at
             * most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline
             * is also specified, the shorter one will be used.
             */
            @com.google.api.client.util.Key
            private String timeout;

            /** The maximum duration to wait before timing out. If left blank, the wait will be at most the time
           permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the
           shorter one will be used.
             */
            public String getTimeout() {
              return timeout;
            }

            /**
             * The maximum duration to wait before timing out. If left blank, the wait will be at
             * most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline
             * is also specified, the shorter one will be used.
             */
            public Wait setTimeout(String timeout) {
              this.timeout = timeout;
              return this;
            }

            @Override
            public Wait set(String parameterName, Object value) {
              return (Wait) super.set(parameterName, value);
            }
          }

        }
      }
      /**
       * An accessor for creating requests from the NotebookRuntimeTemplates collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Aiplatform aiplatform = new Aiplatform(...);}
       *   {@code Aiplatform.NotebookRuntimeTemplates.List request = aiplatform.notebookRuntimeTemplates().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public NotebookRuntimeTemplates notebookRuntimeTemplates() {
        return new NotebookRuntimeTemplates();
      }

      /**
       * The "notebookRuntimeTemplates" collection of methods.
       */
      public class NotebookRuntimeTemplates {

        /**
         * Creates a NotebookRuntimeTemplate.
         *
         * Create a request for the method "notebookRuntimeTemplates.create".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The resource name of the Location to create the NotebookRuntimeTemplate. Format:
         *        `projects/{project}/locations/{location}`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1NotebookRuntimeTemplate}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1NotebookRuntimeTemplate content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+parent}/notebookRuntimeTemplates";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Creates a NotebookRuntimeTemplate.
           *
           * Create a request for the method "notebookRuntimeTemplates.create".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The resource name of the Location to create the NotebookRuntimeTemplate. Format:
         *        `projects/{project}/locations/{location}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1NotebookRuntimeTemplate}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1NotebookRuntimeTemplate content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the Location to create the NotebookRuntimeTemplate.
           * Format: `projects/{project}/locations/{location}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The resource name of the Location to create the NotebookRuntimeTemplate. Format:
         `projects/{project}/locations/{location}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The resource name of the Location to create the NotebookRuntimeTemplate.
           * Format: `projects/{project}/locations/{location}`
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** Optional. User specified ID for the notebook runtime template. */
          @com.google.api.client.util.Key
          private java.lang.String notebookRuntimeTemplateId;

          /** Optional. User specified ID for the notebook runtime template.
           */
          public java.lang.String getNotebookRuntimeTemplateId() {
            return notebookRuntimeTemplateId;
          }

          /** Optional. User specified ID for the notebook runtime template. */
          public Create setNotebookRuntimeTemplateId(java.lang.String notebookRuntimeTemplateId) {
            this.notebookRuntimeTemplateId = notebookRuntimeTemplateId;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a NotebookRuntimeTemplate.
         *
         * Create a request for the method "notebookRuntimeTemplates.delete".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the NotebookRuntimeTemplate resource to be deleted. Format:
         *        `projects/{project}/locations/{location}/notebookRuntimeTemplates/{notebook_runtime_templa
         *        te}`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/notebookRuntimeTemplates/[^/]+$");

          /**
           * Deletes a NotebookRuntimeTemplate.
           *
           * Create a request for the method "notebookRuntimeTemplates.delete".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the NotebookRuntimeTemplate resource to be deleted. Format:
         *        `projects/{project}/locations/{location}/notebookRuntimeTemplates/{notebook_runtime_templa
         *        te}`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/notebookRuntimeTemplates/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the NotebookRuntimeTemplate resource to be deleted. Format: `proj
           * ects/{project}/locations/{location}/notebookRuntimeTemplates/{notebook_runtime_template
           * }`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the NotebookRuntimeTemplate resource to be deleted. Format:
         `projects/{project}/locations/{location}/notebookRuntimeTemplates/{notebook_runtime_template}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the NotebookRuntimeTemplate resource to be deleted. Format: `proj
           * ects/{project}/locations/{location}/notebookRuntimeTemplates/{notebook_runtime_template
           * }`
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/notebookRuntimeTemplates/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets a NotebookRuntimeTemplate.
         *
         * Create a request for the method "notebookRuntimeTemplates.get".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the NotebookRuntimeTemplate resource. Format:
         *        `projects/{project}/locations/{location}/notebookRuntimeTemplates/{notebook_runtime_templa
         *        te}`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1NotebookRuntimeTemplate> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/notebookRuntimeTemplates/[^/]+$");

          /**
           * Gets a NotebookRuntimeTemplate.
           *
           * Create a request for the method "notebookRuntimeTemplates.get".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the NotebookRuntimeTemplate resource. Format:
         *        `projects/{project}/locations/{location}/notebookRuntimeTemplates/{notebook_runtime_templa
         *        te}`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1NotebookRuntimeTemplate.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/notebookRuntimeTemplates/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the NotebookRuntimeTemplate resource. Format: `projects/{project}
           * /locations/{location}/notebookRuntimeTemplates/{notebook_runtime_template}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the NotebookRuntimeTemplate resource. Format:
         `projects/{project}/locations/{location}/notebookRuntimeTemplates/{notebook_runtime_template}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the NotebookRuntimeTemplate resource. Format: `projects/{project}
           * /locations/{location}/notebookRuntimeTemplates/{notebook_runtime_template}`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/notebookRuntimeTemplates/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Gets the access control policy for a resource. Returns an empty policy if the resource exists and
         * does not have a policy set.
         *
         * Create a request for the method "notebookRuntimeTemplates.getIamPolicy".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
         * @return the request
         */
        public GetIamPolicy getIamPolicy(java.lang.String resource) throws java.io.IOException {
          GetIamPolicy result = new GetIamPolicy(resource);
          initialize(result);
          return result;
        }

        public class GetIamPolicy extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleIamV1Policy> {

          private static final String REST_PATH = "v1/{+resource}:getIamPolicy";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/notebookRuntimeTemplates/[^/]+$");

          /**
           * Gets the access control policy for a resource. Returns an empty policy if the resource exists
           * and does not have a policy set.
           *
           * Create a request for the method "notebookRuntimeTemplates.getIamPolicy".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
           * operation. <p> {@link
           * GetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
           * @since 1.13
           */
          protected GetIamPolicy(java.lang.String resource) {
            super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleIamV1Policy.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/notebookRuntimeTemplates/[^/]+$");
            }
          }

          @Override
          public GetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
            return (GetIamPolicy) super.set$Xgafv($Xgafv);
          }

          @Override
          public GetIamPolicy setAccessToken(java.lang.String accessToken) {
            return (GetIamPolicy) super.setAccessToken(accessToken);
          }

          @Override
          public GetIamPolicy setAlt(java.lang.String alt) {
            return (GetIamPolicy) super.setAlt(alt);
          }

          @Override
          public GetIamPolicy setCallback(java.lang.String callback) {
            return (GetIamPolicy) super.setCallback(callback);
          }

          @Override
          public GetIamPolicy setFields(java.lang.String fields) {
            return (GetIamPolicy) super.setFields(fields);
          }

          @Override
          public GetIamPolicy setKey(java.lang.String key) {
            return (GetIamPolicy) super.setKey(key);
          }

          @Override
          public GetIamPolicy setOauthToken(java.lang.String oauthToken) {
            return (GetIamPolicy) super.setOauthToken(oauthToken);
          }

          @Override
          public GetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (GetIamPolicy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public GetIamPolicy setQuotaUser(java.lang.String quotaUser) {
            return (GetIamPolicy) super.setQuotaUser(quotaUser);
          }

          @Override
          public GetIamPolicy setUploadType(java.lang.String uploadType) {
            return (GetIamPolicy) super.setUploadType(uploadType);
          }

          @Override
          public GetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
            return (GetIamPolicy) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy is being requested. See [Resource
         names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          public GetIamPolicy setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/notebookRuntimeTemplates/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          /**
           * Optional. The maximum policy version that will be used to format the policy. Valid
           * values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests
           * for policies with any conditional role bindings must specify version 3. Policies with
           * no conditional role bindings may specify any valid value or leave the field unset. The
           * policy in the response might use the policy version that you specified, or it might use
           * a lower policy version. For example, if you specify version 3, but the policy has no
           * conditional role bindings, the response uses version 1. To learn which resources
           * support conditions in their IAM policies, see the [IAM
           * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
           */
          @com.google.api.client.util.Key("options.requestedPolicyVersion")
          private java.lang.Integer optionsRequestedPolicyVersion;

          /** Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1,
         and 3. Requests specifying an invalid value will be rejected. Requests for policies with any
         conditional role bindings must specify version 3. Policies with no conditional role bindings may
         specify any valid value or leave the field unset. The policy in the response might use the policy
         version that you specified, or it might use a lower policy version. For example, if you specify
         version 3, but the policy has no conditional role bindings, the response uses version 1. To learn
         which resources support conditions in their IAM policies, see the [IAM
         documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
           */
          public java.lang.Integer getOptionsRequestedPolicyVersion() {
            return optionsRequestedPolicyVersion;
          }

          /**
           * Optional. The maximum policy version that will be used to format the policy. Valid
           * values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests
           * for policies with any conditional role bindings must specify version 3. Policies with
           * no conditional role bindings may specify any valid value or leave the field unset. The
           * policy in the response might use the policy version that you specified, or it might use
           * a lower policy version. For example, if you specify version 3, but the policy has no
           * conditional role bindings, the response uses version 1. To learn which resources
           * support conditions in their IAM policies, see the [IAM
           * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
           */
          public GetIamPolicy setOptionsRequestedPolicyVersion(java.lang.Integer optionsRequestedPolicyVersion) {
            this.optionsRequestedPolicyVersion = optionsRequestedPolicyVersion;
            return this;
          }

          @Override
          public GetIamPolicy set(String parameterName, Object value) {
            return (GetIamPolicy) super.set(parameterName, value);
          }
        }
        /**
         * Lists NotebookRuntimeTemplates in a Location.
         *
         * Create a request for the method "notebookRuntimeTemplates.list".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The resource name of the Location from which to list the NotebookRuntimeTemplates. Format:
         *        `projects/{project}/locations/{location}`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListNotebookRuntimeTemplatesResponse> {

          private static final String REST_PATH = "v1/{+parent}/notebookRuntimeTemplates";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists NotebookRuntimeTemplates in a Location.
           *
           * Create a request for the method "notebookRuntimeTemplates.list".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The resource name of the Location from which to list the NotebookRuntimeTemplates. Format:
         *        `projects/{project}/locations/{location}`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListNotebookRuntimeTemplatesResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the Location from which to list the
           * NotebookRuntimeTemplates. Format: `projects/{project}/locations/{location}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The resource name of the Location from which to list the NotebookRuntimeTemplates.
         Format: `projects/{project}/locations/{location}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The resource name of the Location from which to list the
           * NotebookRuntimeTemplates. Format: `projects/{project}/locations/{location}`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Optional. An expression for filtering the results of the request. For field names both
           * snake_case and camelCase are supported. * `notebookRuntimeTemplate` supports = and !=.
           * `notebookRuntimeTemplate` represents the NotebookRuntimeTemplate ID, i.e. the last
           * segment of the NotebookRuntimeTemplate's resource name. * `display_name` supports = and
           * != * `labels` supports general map functions that is: * `labels.key=value` - key:value
           * equality * `labels.key:* or labels:key - key existence * A key including a space must
           * be quoted. `labels."a key"`. * `notebookRuntimeType` supports = and !=.
           * notebookRuntimeType enum: [USER_DEFINED, ONE_CLICK]. Some examples: *
           * `notebookRuntimeTemplate=notebookRuntimeTemplate123` * `displayName="myDisplayName"` *
           * `labels.myKey="myValue"` * `notebookRuntimeType=USER_DEFINED`
           */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** Optional. An expression for filtering the results of the request. For field names both snake_case
         and camelCase are supported. * `notebookRuntimeTemplate` supports = and !=.
         `notebookRuntimeTemplate` represents the NotebookRuntimeTemplate ID, i.e. the last segment of the
         NotebookRuntimeTemplate's resource name. * `display_name` supports = and != * `labels` supports
         general map functions that is: * `labels.key=value` - key:value equality * `labels.key:* or
         labels:key - key existence * A key including a space must be quoted. `labels."a key"`. *
         `notebookRuntimeType` supports = and !=. notebookRuntimeType enum: [USER_DEFINED, ONE_CLICK]. Some
         examples: * `notebookRuntimeTemplate=notebookRuntimeTemplate123` * `displayName="myDisplayName"` *
         `labels.myKey="myValue"` * `notebookRuntimeType=USER_DEFINED`
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /**
           * Optional. An expression for filtering the results of the request. For field names both
           * snake_case and camelCase are supported. * `notebookRuntimeTemplate` supports = and !=.
           * `notebookRuntimeTemplate` represents the NotebookRuntimeTemplate ID, i.e. the last
           * segment of the NotebookRuntimeTemplate's resource name. * `display_name` supports = and
           * != * `labels` supports general map functions that is: * `labels.key=value` - key:value
           * equality * `labels.key:* or labels:key - key existence * A key including a space must
           * be quoted. `labels."a key"`. * `notebookRuntimeType` supports = and !=.
           * notebookRuntimeType enum: [USER_DEFINED, ONE_CLICK]. Some examples: *
           * `notebookRuntimeTemplate=notebookRuntimeTemplate123` * `displayName="myDisplayName"` *
           * `labels.myKey="myValue"` * `notebookRuntimeType=USER_DEFINED`
           */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /**
           * Optional. A comma-separated list of fields to order by, sorted in ascending order. Use
           * "desc" after a field name for descending. Supported fields: * `display_name` *
           * `create_time` * `update_time` Example: `display_name, create_time desc`.
           */
          @com.google.api.client.util.Key
          private java.lang.String orderBy;

          /** Optional. A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after
         a field name for descending. Supported fields: * `display_name` * `create_time` * `update_time`
         Example: `display_name, create_time desc`.
           */
          public java.lang.String getOrderBy() {
            return orderBy;
          }

          /**
           * Optional. A comma-separated list of fields to order by, sorted in ascending order. Use
           * "desc" after a field name for descending. Supported fields: * `display_name` *
           * `create_time` * `update_time` Example: `display_name, create_time desc`.
           */
          public List setOrderBy(java.lang.String orderBy) {
            this.orderBy = orderBy;
            return this;
          }

          /** Optional. The standard list page size. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Optional. The standard list page size.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** Optional. The standard list page size. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * Optional. The standard list page token. Typically obtained via
           * ListNotebookRuntimeTemplatesResponse.next_page_token of the previous
           * NotebookService.ListNotebookRuntimeTemplates call.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Optional. The standard list page token. Typically obtained via
         ListNotebookRuntimeTemplatesResponse.next_page_token of the previous
         NotebookService.ListNotebookRuntimeTemplates call.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * Optional. The standard list page token. Typically obtained via
           * ListNotebookRuntimeTemplatesResponse.next_page_token of the previous
           * NotebookService.ListNotebookRuntimeTemplates call.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          /** Optional. Mask specifying which fields to read. */
          @com.google.api.client.util.Key
          private String readMask;

          /** Optional. Mask specifying which fields to read.
           */
          public String getReadMask() {
            return readMask;
          }

          /** Optional. Mask specifying which fields to read. */
          public List setReadMask(String readMask) {
            this.readMask = readMask;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates a NotebookRuntimeTemplate.
         *
         * Create a request for the method "notebookRuntimeTemplates.patch".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name The resource name of the NotebookRuntimeTemplate.
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1NotebookRuntimeTemplate}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1NotebookRuntimeTemplate content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1NotebookRuntimeTemplate> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/notebookRuntimeTemplates/[^/]+$");

          /**
           * Updates a NotebookRuntimeTemplate.
           *
           * Create a request for the method "notebookRuntimeTemplates.patch".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           * <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The resource name of the NotebookRuntimeTemplate.
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1NotebookRuntimeTemplate}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1NotebookRuntimeTemplate content) {
            super(Aiplatform.this, "PATCH", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1NotebookRuntimeTemplate.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/notebookRuntimeTemplates/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /** The resource name of the NotebookRuntimeTemplate. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The resource name of the NotebookRuntimeTemplate.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The resource name of the NotebookRuntimeTemplate. */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/notebookRuntimeTemplates/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Required. The update mask applies to the resource. For the `FieldMask` definition, see
           * google.protobuf.FieldMask. Input format: `{paths: "${updated_filed}"}` Updatable
           * fields: * `encryption_spec.kms_key_name`
           */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Required. The update mask applies to the resource. For the `FieldMask` definition, see
         google.protobuf.FieldMask. Input format: `{paths: "${updated_filed}"}` Updatable fields: *
         `encryption_spec.kms_key_name`
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /**
           * Required. The update mask applies to the resource. For the `FieldMask` definition, see
           * google.protobuf.FieldMask. Input format: `{paths: "${updated_filed}"}` Updatable
           * fields: * `encryption_spec.kms_key_name`
           */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }
        /**
         * Sets the access control policy on the specified resource. Replaces any existing policy. Can
         * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
         *
         * Create a request for the method "notebookRuntimeTemplates.setIamPolicy".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleIamV1SetIamPolicyRequest}
         * @return the request
         */
        public SetIamPolicy setIamPolicy(java.lang.String resource, com.google.api.services.aiplatform.v1.model.GoogleIamV1SetIamPolicyRequest content) throws java.io.IOException {
          SetIamPolicy result = new SetIamPolicy(resource, content);
          initialize(result);
          return result;
        }

        public class SetIamPolicy extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleIamV1Policy> {

          private static final String REST_PATH = "v1/{+resource}:setIamPolicy";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/notebookRuntimeTemplates/[^/]+$");

          /**
           * Sets the access control policy on the specified resource. Replaces any existing policy. Can
           * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
           *
           * Create a request for the method "notebookRuntimeTemplates.setIamPolicy".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
           * operation. <p> {@link
           * SetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleIamV1SetIamPolicyRequest}
           * @since 1.13
           */
          protected SetIamPolicy(java.lang.String resource, com.google.api.services.aiplatform.v1.model.GoogleIamV1SetIamPolicyRequest content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleIamV1Policy.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/notebookRuntimeTemplates/[^/]+$");
            }
          }

          @Override
          public SetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
            return (SetIamPolicy) super.set$Xgafv($Xgafv);
          }

          @Override
          public SetIamPolicy setAccessToken(java.lang.String accessToken) {
            return (SetIamPolicy) super.setAccessToken(accessToken);
          }

          @Override
          public SetIamPolicy setAlt(java.lang.String alt) {
            return (SetIamPolicy) super.setAlt(alt);
          }

          @Override
          public SetIamPolicy setCallback(java.lang.String callback) {
            return (SetIamPolicy) super.setCallback(callback);
          }

          @Override
          public SetIamPolicy setFields(java.lang.String fields) {
            return (SetIamPolicy) super.setFields(fields);
          }

          @Override
          public SetIamPolicy setKey(java.lang.String key) {
            return (SetIamPolicy) super.setKey(key);
          }

          @Override
          public SetIamPolicy setOauthToken(java.lang.String oauthToken) {
            return (SetIamPolicy) super.setOauthToken(oauthToken);
          }

          @Override
          public SetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (SetIamPolicy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public SetIamPolicy setQuotaUser(java.lang.String quotaUser) {
            return (SetIamPolicy) super.setQuotaUser(quotaUser);
          }

          @Override
          public SetIamPolicy setUploadType(java.lang.String uploadType) {
            return (SetIamPolicy) super.setUploadType(uploadType);
          }

          @Override
          public SetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
            return (SetIamPolicy) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy is being specified. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy is being specified. See [Resource
         names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy is being specified. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          public SetIamPolicy setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/notebookRuntimeTemplates/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public SetIamPolicy set(String parameterName, Object value) {
            return (SetIamPolicy) super.set(parameterName, value);
          }
        }
        /**
         * Returns permissions that a caller has on the specified resource. If the resource does not exist,
         * this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is
         * designed to be used for building permission-aware UIs and command-line tools, not for
         * authorization checking. This operation may "fail open" without warning.
         *
         * Create a request for the method "notebookRuntimeTemplates.testIamPermissions".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
         * @return the request
         */
        public TestIamPermissions testIamPermissions(java.lang.String resource) throws java.io.IOException {
          TestIamPermissions result = new TestIamPermissions(resource);
          initialize(result);
          return result;
        }

        public class TestIamPermissions extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleIamV1TestIamPermissionsResponse> {

          private static final String REST_PATH = "v1/{+resource}:testIamPermissions";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/notebookRuntimeTemplates/[^/]+$");

          /**
           * Returns permissions that a caller has on the specified resource. If the resource does not
           * exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This
           * operation is designed to be used for building permission-aware UIs and command-line tools, not
           * for authorization checking. This operation may "fail open" without warning.
           *
           * Create a request for the method "notebookRuntimeTemplates.testIamPermissions".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
           * operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.services.A
           * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
           * @since 1.13
           */
          protected TestIamPermissions(java.lang.String resource) {
            super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleIamV1TestIamPermissionsResponse.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/notebookRuntimeTemplates/[^/]+$");
            }
          }

          @Override
          public TestIamPermissions set$Xgafv(java.lang.String $Xgafv) {
            return (TestIamPermissions) super.set$Xgafv($Xgafv);
          }

          @Override
          public TestIamPermissions setAccessToken(java.lang.String accessToken) {
            return (TestIamPermissions) super.setAccessToken(accessToken);
          }

          @Override
          public TestIamPermissions setAlt(java.lang.String alt) {
            return (TestIamPermissions) super.setAlt(alt);
          }

          @Override
          public TestIamPermissions setCallback(java.lang.String callback) {
            return (TestIamPermissions) super.setCallback(callback);
          }

          @Override
          public TestIamPermissions setFields(java.lang.String fields) {
            return (TestIamPermissions) super.setFields(fields);
          }

          @Override
          public TestIamPermissions setKey(java.lang.String key) {
            return (TestIamPermissions) super.setKey(key);
          }

          @Override
          public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
            return (TestIamPermissions) super.setOauthToken(oauthToken);
          }

          @Override
          public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
            return (TestIamPermissions) super.setQuotaUser(quotaUser);
          }

          @Override
          public TestIamPermissions setUploadType(java.lang.String uploadType) {
            return (TestIamPermissions) super.setUploadType(uploadType);
          }

          @Override
          public TestIamPermissions setUploadProtocol(java.lang.String uploadProtocol) {
            return (TestIamPermissions) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy detail is being requested. See [Resource
         names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          public TestIamPermissions setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/notebookRuntimeTemplates/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          /**
           * The set of permissions to check for the `resource`. Permissions with wildcards (such as
           * `*` or `storage.*`) are not allowed. For more information see [IAM
           * Overview](https://cloud.google.com/iam/docs/overview#permissions).
           */
          @com.google.api.client.util.Key
          private java.util.List<java.lang.String> permissions;

          /** The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or
         `storage.*`) are not allowed. For more information see [IAM
         Overview](https://cloud.google.com/iam/docs/overview#permissions).
           */
          public java.util.List<java.lang.String> getPermissions() {
            return permissions;
          }

          /**
           * The set of permissions to check for the `resource`. Permissions with wildcards (such as
           * `*` or `storage.*`) are not allowed. For more information see [IAM
           * Overview](https://cloud.google.com/iam/docs/overview#permissions).
           */
          public TestIamPermissions setPermissions(java.util.List<java.lang.String> permissions) {
            this.permissions = permissions;
            return this;
          }

          @Override
          public TestIamPermissions set(String parameterName, Object value) {
            return (TestIamPermissions) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the Operations collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Aiplatform aiplatform = new Aiplatform(...);}
         *   {@code Aiplatform.Operations.List request = aiplatform.operations().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Operations operations() {
          return new Operations();
        }

        /**
         * The "operations" collection of methods.
         */
        public class Operations {

          /**
           * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
           * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
           * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
           * methods to check whether the cancellation succeeded or whether the operation completed despite
           * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
           * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
           * `Code.CANCELLED`.
           *
           * Create a request for the method "operations.cancel".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource to be cancelled.
           * @return the request
           */
          public Cancel cancel(java.lang.String name) throws java.io.IOException {
            Cancel result = new Cancel(name);
            initialize(result);
            return result;
          }

          public class Cancel extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

            private static final String REST_PATH = "v1/{+name}:cancel";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/notebookRuntimeTemplates/[^/]+/operations/[^/]+$");

            /**
             * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
             * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
             * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
             * methods to check whether the cancellation succeeded or whether the operation completed despite
             * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
             * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
             * `Code.CANCELLED`.
             *
             * Create a request for the method "operations.cancel".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
             * <p> {@link
             * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource to be cancelled.
             * @since 1.13
             */
            protected Cancel(java.lang.String name) {
              super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/notebookRuntimeTemplates/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public Cancel set$Xgafv(java.lang.String $Xgafv) {
              return (Cancel) super.set$Xgafv($Xgafv);
            }

            @Override
            public Cancel setAccessToken(java.lang.String accessToken) {
              return (Cancel) super.setAccessToken(accessToken);
            }

            @Override
            public Cancel setAlt(java.lang.String alt) {
              return (Cancel) super.setAlt(alt);
            }

            @Override
            public Cancel setCallback(java.lang.String callback) {
              return (Cancel) super.setCallback(callback);
            }

            @Override
            public Cancel setFields(java.lang.String fields) {
              return (Cancel) super.setFields(fields);
            }

            @Override
            public Cancel setKey(java.lang.String key) {
              return (Cancel) super.setKey(key);
            }

            @Override
            public Cancel setOauthToken(java.lang.String oauthToken) {
              return (Cancel) super.setOauthToken(oauthToken);
            }

            @Override
            public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Cancel) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Cancel setQuotaUser(java.lang.String quotaUser) {
              return (Cancel) super.setQuotaUser(quotaUser);
            }

            @Override
            public Cancel setUploadType(java.lang.String uploadType) {
              return (Cancel) super.setUploadType(uploadType);
            }

            @Override
            public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
              return (Cancel) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource to be cancelled. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource to be cancelled.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource to be cancelled. */
            public Cancel setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/notebookRuntimeTemplates/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Cancel set(String parameterName, Object value) {
              return (Cancel) super.set(parameterName, value);
            }
          }
          /**
           * Deletes a long-running operation. This method indicates that the client is no longer interested
           * in the operation result. It does not cancel the operation. If the server doesn't support this
           * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.delete".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource to be deleted.
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/notebookRuntimeTemplates/[^/]+/operations/[^/]+$");

            /**
             * Deletes a long-running operation. This method indicates that the client is no longer interested
             * in the operation result. It does not cancel the operation. If the server doesn't support this
             * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.delete".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource to be deleted.
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/notebookRuntimeTemplates/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource to be deleted. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource to be deleted.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource to be deleted. */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/notebookRuntimeTemplates/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Gets the latest state of a long-running operation. Clients can use this method to poll the
           * operation result at intervals as recommended by the API service.
           *
           * Create a request for the method "operations.get".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource.
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/notebookRuntimeTemplates/[^/]+/operations/[^/]+$");

            /**
             * Gets the latest state of a long-running operation. Clients can use this method to poll the
             * operation result at intervals as recommended by the API service.
             *
             * Create a request for the method "operations.get".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource.
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/notebookRuntimeTemplates/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource. */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/notebookRuntimeTemplates/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Lists operations that match the specified filter in the request. If the server doesn't support
           * this method, it returns `UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.list".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation's parent resource.
           * @return the request
           */
          public List list(java.lang.String name) throws java.io.IOException {
            List result = new List(name);
            initialize(result);
            return result;
          }

          public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse> {

            private static final String REST_PATH = "v1/{+name}/operations";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/notebookRuntimeTemplates/[^/]+$");

            /**
             * Lists operations that match the specified filter in the request. If the server doesn't support
             * this method, it returns `UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.list".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation's parent resource.
             * @since 1.13
             */
            protected List(java.lang.String name) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/notebookRuntimeTemplates/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation's parent resource. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation's parent resource.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation's parent resource. */
            public List setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/notebookRuntimeTemplates/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /** The standard list filter. */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** The standard list filter.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /** The standard list filter. */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /** The standard list page size. */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** The standard list page size.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /** The standard list page size. */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** The standard list page token. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** The standard list page token.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** The standard list page token. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Waits until the specified long-running operation is done or reaches at most a specified timeout,
           * returning the latest state. If the operation is already done, the latest state is immediately
           * returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC
           * timeout is used. If the server does not support this method, it returns
           * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
           * the latest state before the specified timeout (including immediately), meaning even an immediate
           * response is no guarantee that the operation is done.
           *
           * Create a request for the method "operations.wait".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Wait#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource to wait on.
           * @return the request
           */
          public Wait wait(java.lang.String name) throws java.io.IOException {
            Wait result = new Wait(name);
            initialize(result);
            return result;
          }

          public class Wait extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+name}:wait";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/notebookRuntimeTemplates/[^/]+/operations/[^/]+$");

            /**
             * Waits until the specified long-running operation is done or reaches at most a specified
             * timeout, returning the latest state. If the operation is already done, the latest state is
             * immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout,
             * the HTTP/RPC timeout is used. If the server does not support this method, it returns
             * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
             * the latest state before the specified timeout (including immediately), meaning even an
             * immediate response is no guarantee that the operation is done.
             *
             * Create a request for the method "operations.wait".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Wait#execute()} method to invoke the remote operation. <p>
             * {@link Wait#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource to wait on.
             * @since 1.13
             */
            protected Wait(java.lang.String name) {
              super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/notebookRuntimeTemplates/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public Wait set$Xgafv(java.lang.String $Xgafv) {
              return (Wait) super.set$Xgafv($Xgafv);
            }

            @Override
            public Wait setAccessToken(java.lang.String accessToken) {
              return (Wait) super.setAccessToken(accessToken);
            }

            @Override
            public Wait setAlt(java.lang.String alt) {
              return (Wait) super.setAlt(alt);
            }

            @Override
            public Wait setCallback(java.lang.String callback) {
              return (Wait) super.setCallback(callback);
            }

            @Override
            public Wait setFields(java.lang.String fields) {
              return (Wait) super.setFields(fields);
            }

            @Override
            public Wait setKey(java.lang.String key) {
              return (Wait) super.setKey(key);
            }

            @Override
            public Wait setOauthToken(java.lang.String oauthToken) {
              return (Wait) super.setOauthToken(oauthToken);
            }

            @Override
            public Wait setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Wait) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Wait setQuotaUser(java.lang.String quotaUser) {
              return (Wait) super.setQuotaUser(quotaUser);
            }

            @Override
            public Wait setUploadType(java.lang.String uploadType) {
              return (Wait) super.setUploadType(uploadType);
            }

            @Override
            public Wait setUploadProtocol(java.lang.String uploadProtocol) {
              return (Wait) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource to wait on. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource to wait on.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource to wait on. */
            public Wait setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/notebookRuntimeTemplates/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * The maximum duration to wait before timing out. If left blank, the wait will be at
             * most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline
             * is also specified, the shorter one will be used.
             */
            @com.google.api.client.util.Key
            private String timeout;

            /** The maximum duration to wait before timing out. If left blank, the wait will be at most the time
           permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the
           shorter one will be used.
             */
            public String getTimeout() {
              return timeout;
            }

            /**
             * The maximum duration to wait before timing out. If left blank, the wait will be at
             * most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline
             * is also specified, the shorter one will be used.
             */
            public Wait setTimeout(String timeout) {
              this.timeout = timeout;
              return this;
            }

            @Override
            public Wait set(String parameterName, Object value) {
              return (Wait) super.set(parameterName, value);
            }
          }

        }
      }
      /**
       * An accessor for creating requests from the NotebookRuntimes collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Aiplatform aiplatform = new Aiplatform(...);}
       *   {@code Aiplatform.NotebookRuntimes.List request = aiplatform.notebookRuntimes().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public NotebookRuntimes notebookRuntimes() {
        return new NotebookRuntimes();
      }

      /**
       * The "notebookRuntimes" collection of methods.
       */
      public class NotebookRuntimes {

        /**
         * Assigns a NotebookRuntime to a user for a particular Notebook file. This method will either
         * returns an existing assignment or generates a new one.
         *
         * Create a request for the method "notebookRuntimes.assign".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Assign#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The resource name of the Location to get the NotebookRuntime assignment. Format:
         *        `projects/{project}/locations/{location}`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1AssignNotebookRuntimeRequest}
         * @return the request
         */
        public Assign assign(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1AssignNotebookRuntimeRequest content) throws java.io.IOException {
          Assign result = new Assign(parent, content);
          initialize(result);
          return result;
        }

        public class Assign extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+parent}/notebookRuntimes:assign";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Assigns a NotebookRuntime to a user for a particular Notebook file. This method will either
           * returns an existing assignment or generates a new one.
           *
           * Create a request for the method "notebookRuntimes.assign".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Assign#execute()} method to invoke the remote operation.
           * <p> {@link
           * Assign#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The resource name of the Location to get the NotebookRuntime assignment. Format:
         *        `projects/{project}/locations/{location}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1AssignNotebookRuntimeRequest}
           * @since 1.13
           */
          protected Assign(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1AssignNotebookRuntimeRequest content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Assign set$Xgafv(java.lang.String $Xgafv) {
            return (Assign) super.set$Xgafv($Xgafv);
          }

          @Override
          public Assign setAccessToken(java.lang.String accessToken) {
            return (Assign) super.setAccessToken(accessToken);
          }

          @Override
          public Assign setAlt(java.lang.String alt) {
            return (Assign) super.setAlt(alt);
          }

          @Override
          public Assign setCallback(java.lang.String callback) {
            return (Assign) super.setCallback(callback);
          }

          @Override
          public Assign setFields(java.lang.String fields) {
            return (Assign) super.setFields(fields);
          }

          @Override
          public Assign setKey(java.lang.String key) {
            return (Assign) super.setKey(key);
          }

          @Override
          public Assign setOauthToken(java.lang.String oauthToken) {
            return (Assign) super.setOauthToken(oauthToken);
          }

          @Override
          public Assign setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Assign) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Assign setQuotaUser(java.lang.String quotaUser) {
            return (Assign) super.setQuotaUser(quotaUser);
          }

          @Override
          public Assign setUploadType(java.lang.String uploadType) {
            return (Assign) super.setUploadType(uploadType);
          }

          @Override
          public Assign setUploadProtocol(java.lang.String uploadProtocol) {
            return (Assign) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the Location to get the NotebookRuntime assignment.
           * Format: `projects/{project}/locations/{location}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The resource name of the Location to get the NotebookRuntime assignment. Format:
         `projects/{project}/locations/{location}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The resource name of the Location to get the NotebookRuntime assignment.
           * Format: `projects/{project}/locations/{location}`
           */
          public Assign setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Assign set(String parameterName, Object value) {
            return (Assign) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a NotebookRuntime.
         *
         * Create a request for the method "notebookRuntimes.delete".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the NotebookRuntime resource to be deleted. Instead of checking whether the
         *        name is in valid NotebookRuntime resource name format, directly throw NotFound exception
         *        if there is no such NotebookRuntime in spanner.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/notebookRuntimes/[^/]+$");

          /**
           * Deletes a NotebookRuntime.
           *
           * Create a request for the method "notebookRuntimes.delete".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the NotebookRuntime resource to be deleted. Instead of checking whether the
         *        name is in valid NotebookRuntime resource name format, directly throw NotFound exception
         *        if there is no such NotebookRuntime in spanner.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/notebookRuntimes/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the NotebookRuntime resource to be deleted. Instead of checking
           * whether the name is in valid NotebookRuntime resource name format, directly throw
           * NotFound exception if there is no such NotebookRuntime in spanner.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the NotebookRuntime resource to be deleted. Instead of checking whether the
         name is in valid NotebookRuntime resource name format, directly throw NotFound exception if there
         is no such NotebookRuntime in spanner.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the NotebookRuntime resource to be deleted. Instead of checking
           * whether the name is in valid NotebookRuntime resource name format, directly throw
           * NotFound exception if there is no such NotebookRuntime in spanner.
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/notebookRuntimes/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets a NotebookRuntime.
         *
         * Create a request for the method "notebookRuntimes.get".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the NotebookRuntime resource. Instead of checking whether the name is in valid
         *        NotebookRuntime resource name format, directly throw NotFound exception if there is no
         *        such NotebookRuntime in spanner.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1NotebookRuntime> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/notebookRuntimes/[^/]+$");

          /**
           * Gets a NotebookRuntime.
           *
           * Create a request for the method "notebookRuntimes.get".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the NotebookRuntime resource. Instead of checking whether the name is in valid
         *        NotebookRuntime resource name format, directly throw NotFound exception if there is no
         *        such NotebookRuntime in spanner.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1NotebookRuntime.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/notebookRuntimes/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the NotebookRuntime resource. Instead of checking whether the
           * name is in valid NotebookRuntime resource name format, directly throw NotFound
           * exception if there is no such NotebookRuntime in spanner.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the NotebookRuntime resource. Instead of checking whether the name is in
         valid NotebookRuntime resource name format, directly throw NotFound exception if there is no such
         NotebookRuntime in spanner.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the NotebookRuntime resource. Instead of checking whether the
           * name is in valid NotebookRuntime resource name format, directly throw NotFound
           * exception if there is no such NotebookRuntime in spanner.
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/notebookRuntimes/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists NotebookRuntimes in a Location.
         *
         * Create a request for the method "notebookRuntimes.list".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The resource name of the Location from which to list the NotebookRuntimes. Format:
         *        `projects/{project}/locations/{location}`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListNotebookRuntimesResponse> {

          private static final String REST_PATH = "v1/{+parent}/notebookRuntimes";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists NotebookRuntimes in a Location.
           *
           * Create a request for the method "notebookRuntimes.list".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The resource name of the Location from which to list the NotebookRuntimes. Format:
         *        `projects/{project}/locations/{location}`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListNotebookRuntimesResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the Location from which to list the NotebookRuntimes.
           * Format: `projects/{project}/locations/{location}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The resource name of the Location from which to list the NotebookRuntimes. Format:
         `projects/{project}/locations/{location}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The resource name of the Location from which to list the NotebookRuntimes.
           * Format: `projects/{project}/locations/{location}`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Optional. An expression for filtering the results of the request. For field names both
           * snake_case and camelCase are supported. * `notebookRuntime` supports = and !=.
           * `notebookRuntime` represents the NotebookRuntime ID, i.e. the last segment of the
           * NotebookRuntime's resource name. * `displayName` supports = and != and regex. *
           * `notebookRuntimeTemplate` supports = and !=. `notebookRuntimeTemplate` represents the
           * NotebookRuntimeTemplate ID, i.e. the last segment of the NotebookRuntimeTemplate's
           * resource name. * `healthState` supports = and !=. healthState enum: [HEALTHY,
           * UNHEALTHY, HEALTH_STATE_UNSPECIFIED]. * `runtimeState` supports = and !=. runtimeState
           * enum: [RUNTIME_STATE_UNSPECIFIED, RUNNING, BEING_STARTED, BEING_STOPPED, STOPPED,
           * BEING_UPGRADED, ERROR, INVALID]. * `runtimeUser` supports = and !=. * API version is UI
           * only: `uiState` supports = and !=. uiState enum: [UI_RESOURCE_STATE_UNSPECIFIED,
           * UI_RESOURCE_STATE_BEING_CREATED, UI_RESOURCE_STATE_ACTIVE,
           * UI_RESOURCE_STATE_BEING_DELETED, UI_RESOURCE_STATE_CREATION_FAILED]. *
           * `notebookRuntimeType` supports = and !=. notebookRuntimeType enum: [USER_DEFINED,
           * ONE_CLICK]. Some examples: * `notebookRuntime="notebookRuntime123"` *
           * `displayName="myDisplayName"` and `displayName=~"myDisplayNameRegex"` *
           * `notebookRuntimeTemplate="notebookRuntimeTemplate321"` * `healthState=HEALTHY` *
           * `runtimeState=RUNNING` * `runtimeUser="test@google.com"` *
           * `uiState=UI_RESOURCE_STATE_BEING_DELETED` * `notebookRuntimeType=USER_DEFINED`
           */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** Optional. An expression for filtering the results of the request. For field names both snake_case
         and camelCase are supported. * `notebookRuntime` supports = and !=. `notebookRuntime` represents
         the NotebookRuntime ID, i.e. the last segment of the NotebookRuntime's resource name. *
         `displayName` supports = and != and regex. * `notebookRuntimeTemplate` supports = and !=.
         `notebookRuntimeTemplate` represents the NotebookRuntimeTemplate ID, i.e. the last segment of the
         NotebookRuntimeTemplate's resource name. * `healthState` supports = and !=. healthState enum:
         [HEALTHY, UNHEALTHY, HEALTH_STATE_UNSPECIFIED]. * `runtimeState` supports = and !=. runtimeState
         enum: [RUNTIME_STATE_UNSPECIFIED, RUNNING, BEING_STARTED, BEING_STOPPED, STOPPED, BEING_UPGRADED,
         ERROR, INVALID]. * `runtimeUser` supports = and !=. * API version is UI only: `uiState` supports =
         and !=. uiState enum: [UI_RESOURCE_STATE_UNSPECIFIED, UI_RESOURCE_STATE_BEING_CREATED,
         UI_RESOURCE_STATE_ACTIVE, UI_RESOURCE_STATE_BEING_DELETED, UI_RESOURCE_STATE_CREATION_FAILED]. *
         `notebookRuntimeType` supports = and !=. notebookRuntimeType enum: [USER_DEFINED, ONE_CLICK]. Some
         examples: * `notebookRuntime="notebookRuntime123"` * `displayName="myDisplayName"` and
         `displayName=~"myDisplayNameRegex"` * `notebookRuntimeTemplate="notebookRuntimeTemplate321"` *
         `healthState=HEALTHY` * `runtimeState=RUNNING` * `runtimeUser="test@google.com"` *
         `uiState=UI_RESOURCE_STATE_BEING_DELETED` * `notebookRuntimeType=USER_DEFINED`
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /**
           * Optional. An expression for filtering the results of the request. For field names both
           * snake_case and camelCase are supported. * `notebookRuntime` supports = and !=.
           * `notebookRuntime` represents the NotebookRuntime ID, i.e. the last segment of the
           * NotebookRuntime's resource name. * `displayName` supports = and != and regex. *
           * `notebookRuntimeTemplate` supports = and !=. `notebookRuntimeTemplate` represents the
           * NotebookRuntimeTemplate ID, i.e. the last segment of the NotebookRuntimeTemplate's
           * resource name. * `healthState` supports = and !=. healthState enum: [HEALTHY,
           * UNHEALTHY, HEALTH_STATE_UNSPECIFIED]. * `runtimeState` supports = and !=. runtimeState
           * enum: [RUNTIME_STATE_UNSPECIFIED, RUNNING, BEING_STARTED, BEING_STOPPED, STOPPED,
           * BEING_UPGRADED, ERROR, INVALID]. * `runtimeUser` supports = and !=. * API version is UI
           * only: `uiState` supports = and !=. uiState enum: [UI_RESOURCE_STATE_UNSPECIFIED,
           * UI_RESOURCE_STATE_BEING_CREATED, UI_RESOURCE_STATE_ACTIVE,
           * UI_RESOURCE_STATE_BEING_DELETED, UI_RESOURCE_STATE_CREATION_FAILED]. *
           * `notebookRuntimeType` supports = and !=. notebookRuntimeType enum: [USER_DEFINED,
           * ONE_CLICK]. Some examples: * `notebookRuntime="notebookRuntime123"` *
           * `displayName="myDisplayName"` and `displayName=~"myDisplayNameRegex"` *
           * `notebookRuntimeTemplate="notebookRuntimeTemplate321"` * `healthState=HEALTHY` *
           * `runtimeState=RUNNING` * `runtimeUser="test@google.com"` *
           * `uiState=UI_RESOURCE_STATE_BEING_DELETED` * `notebookRuntimeType=USER_DEFINED`
           */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /**
           * Optional. A comma-separated list of fields to order by, sorted in ascending order. Use
           * "desc" after a field name for descending. Supported fields: * `display_name` *
           * `create_time` * `update_time` Example: `display_name, create_time desc`.
           */
          @com.google.api.client.util.Key
          private java.lang.String orderBy;

          /** Optional. A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after
         a field name for descending. Supported fields: * `display_name` * `create_time` * `update_time`
         Example: `display_name, create_time desc`.
           */
          public java.lang.String getOrderBy() {
            return orderBy;
          }

          /**
           * Optional. A comma-separated list of fields to order by, sorted in ascending order. Use
           * "desc" after a field name for descending. Supported fields: * `display_name` *
           * `create_time` * `update_time` Example: `display_name, create_time desc`.
           */
          public List setOrderBy(java.lang.String orderBy) {
            this.orderBy = orderBy;
            return this;
          }

          /** Optional. The standard list page size. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Optional. The standard list page size.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** Optional. The standard list page size. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * Optional. The standard list page token. Typically obtained via
           * ListNotebookRuntimesResponse.next_page_token of the previous
           * NotebookService.ListNotebookRuntimes call.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Optional. The standard list page token. Typically obtained via
         ListNotebookRuntimesResponse.next_page_token of the previous NotebookService.ListNotebookRuntimes
         call.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * Optional. The standard list page token. Typically obtained via
           * ListNotebookRuntimesResponse.next_page_token of the previous
           * NotebookService.ListNotebookRuntimes call.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          /** Optional. Mask specifying which fields to read. */
          @com.google.api.client.util.Key
          private String readMask;

          /** Optional. Mask specifying which fields to read.
           */
          public String getReadMask() {
            return readMask;
          }

          /** Optional. Mask specifying which fields to read. */
          public List setReadMask(String readMask) {
            this.readMask = readMask;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Starts a NotebookRuntime.
         *
         * Create a request for the method "notebookRuntimes.start".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Start#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the NotebookRuntime resource to be started. Instead of checking whether the
         *        name is in valid NotebookRuntime resource name format, directly throw NotFound exception
         *        if there is no such NotebookRuntime in spanner.
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1StartNotebookRuntimeRequest}
         * @return the request
         */
        public Start start(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1StartNotebookRuntimeRequest content) throws java.io.IOException {
          Start result = new Start(name, content);
          initialize(result);
          return result;
        }

        public class Start extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+name}:start";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/notebookRuntimes/[^/]+$");

          /**
           * Starts a NotebookRuntime.
           *
           * Create a request for the method "notebookRuntimes.start".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Start#execute()} method to invoke the remote operation.
           * <p> {@link
           * Start#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the NotebookRuntime resource to be started. Instead of checking whether the
         *        name is in valid NotebookRuntime resource name format, directly throw NotFound exception
         *        if there is no such NotebookRuntime in spanner.
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1StartNotebookRuntimeRequest}
           * @since 1.13
           */
          protected Start(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1StartNotebookRuntimeRequest content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/notebookRuntimes/[^/]+$");
            }
          }

          @Override
          public Start set$Xgafv(java.lang.String $Xgafv) {
            return (Start) super.set$Xgafv($Xgafv);
          }

          @Override
          public Start setAccessToken(java.lang.String accessToken) {
            return (Start) super.setAccessToken(accessToken);
          }

          @Override
          public Start setAlt(java.lang.String alt) {
            return (Start) super.setAlt(alt);
          }

          @Override
          public Start setCallback(java.lang.String callback) {
            return (Start) super.setCallback(callback);
          }

          @Override
          public Start setFields(java.lang.String fields) {
            return (Start) super.setFields(fields);
          }

          @Override
          public Start setKey(java.lang.String key) {
            return (Start) super.setKey(key);
          }

          @Override
          public Start setOauthToken(java.lang.String oauthToken) {
            return (Start) super.setOauthToken(oauthToken);
          }

          @Override
          public Start setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Start) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Start setQuotaUser(java.lang.String quotaUser) {
            return (Start) super.setQuotaUser(quotaUser);
          }

          @Override
          public Start setUploadType(java.lang.String uploadType) {
            return (Start) super.setUploadType(uploadType);
          }

          @Override
          public Start setUploadProtocol(java.lang.String uploadProtocol) {
            return (Start) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the NotebookRuntime resource to be started. Instead of checking
           * whether the name is in valid NotebookRuntime resource name format, directly throw
           * NotFound exception if there is no such NotebookRuntime in spanner.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the NotebookRuntime resource to be started. Instead of checking whether the
         name is in valid NotebookRuntime resource name format, directly throw NotFound exception if there
         is no such NotebookRuntime in spanner.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the NotebookRuntime resource to be started. Instead of checking
           * whether the name is in valid NotebookRuntime resource name format, directly throw
           * NotFound exception if there is no such NotebookRuntime in spanner.
           */
          public Start setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/notebookRuntimes/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Start set(String parameterName, Object value) {
            return (Start) super.set(parameterName, value);
          }
        }
        /**
         * Upgrades a NotebookRuntime.
         *
         * Create a request for the method "notebookRuntimes.upgrade".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Upgrade#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the NotebookRuntime resource to be upgrade. Instead of checking whether the
         *        name is in valid NotebookRuntime resource name format, directly throw NotFound exception
         *        if there is no such NotebookRuntime in spanner.
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1UpgradeNotebookRuntimeRequest}
         * @return the request
         */
        public Upgrade upgrade(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1UpgradeNotebookRuntimeRequest content) throws java.io.IOException {
          Upgrade result = new Upgrade(name, content);
          initialize(result);
          return result;
        }

        public class Upgrade extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+name}:upgrade";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/notebookRuntimes/[^/]+$");

          /**
           * Upgrades a NotebookRuntime.
           *
           * Create a request for the method "notebookRuntimes.upgrade".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Upgrade#execute()} method to invoke the remote operation.
           * <p> {@link
           * Upgrade#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the NotebookRuntime resource to be upgrade. Instead of checking whether the
         *        name is in valid NotebookRuntime resource name format, directly throw NotFound exception
         *        if there is no such NotebookRuntime in spanner.
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1UpgradeNotebookRuntimeRequest}
           * @since 1.13
           */
          protected Upgrade(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1UpgradeNotebookRuntimeRequest content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/notebookRuntimes/[^/]+$");
            }
          }

          @Override
          public Upgrade set$Xgafv(java.lang.String $Xgafv) {
            return (Upgrade) super.set$Xgafv($Xgafv);
          }

          @Override
          public Upgrade setAccessToken(java.lang.String accessToken) {
            return (Upgrade) super.setAccessToken(accessToken);
          }

          @Override
          public Upgrade setAlt(java.lang.String alt) {
            return (Upgrade) super.setAlt(alt);
          }

          @Override
          public Upgrade setCallback(java.lang.String callback) {
            return (Upgrade) super.setCallback(callback);
          }

          @Override
          public Upgrade setFields(java.lang.String fields) {
            return (Upgrade) super.setFields(fields);
          }

          @Override
          public Upgrade setKey(java.lang.String key) {
            return (Upgrade) super.setKey(key);
          }

          @Override
          public Upgrade setOauthToken(java.lang.String oauthToken) {
            return (Upgrade) super.setOauthToken(oauthToken);
          }

          @Override
          public Upgrade setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Upgrade) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Upgrade setQuotaUser(java.lang.String quotaUser) {
            return (Upgrade) super.setQuotaUser(quotaUser);
          }

          @Override
          public Upgrade setUploadType(java.lang.String uploadType) {
            return (Upgrade) super.setUploadType(uploadType);
          }

          @Override
          public Upgrade setUploadProtocol(java.lang.String uploadProtocol) {
            return (Upgrade) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the NotebookRuntime resource to be upgrade. Instead of checking
           * whether the name is in valid NotebookRuntime resource name format, directly throw
           * NotFound exception if there is no such NotebookRuntime in spanner.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the NotebookRuntime resource to be upgrade. Instead of checking whether the
         name is in valid NotebookRuntime resource name format, directly throw NotFound exception if there
         is no such NotebookRuntime in spanner.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the NotebookRuntime resource to be upgrade. Instead of checking
           * whether the name is in valid NotebookRuntime resource name format, directly throw
           * NotFound exception if there is no such NotebookRuntime in spanner.
           */
          public Upgrade setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/notebookRuntimes/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Upgrade set(String parameterName, Object value) {
            return (Upgrade) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the Operations collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Aiplatform aiplatform = new Aiplatform(...);}
         *   {@code Aiplatform.Operations.List request = aiplatform.operations().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Operations operations() {
          return new Operations();
        }

        /**
         * The "operations" collection of methods.
         */
        public class Operations {

          /**
           * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
           * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
           * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
           * methods to check whether the cancellation succeeded or whether the operation completed despite
           * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
           * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
           * `Code.CANCELLED`.
           *
           * Create a request for the method "operations.cancel".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource to be cancelled.
           * @return the request
           */
          public Cancel cancel(java.lang.String name) throws java.io.IOException {
            Cancel result = new Cancel(name);
            initialize(result);
            return result;
          }

          public class Cancel extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

            private static final String REST_PATH = "v1/{+name}:cancel";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/notebookRuntimes/[^/]+/operations/[^/]+$");

            /**
             * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
             * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
             * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
             * methods to check whether the cancellation succeeded or whether the operation completed despite
             * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
             * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
             * `Code.CANCELLED`.
             *
             * Create a request for the method "operations.cancel".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
             * <p> {@link
             * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource to be cancelled.
             * @since 1.13
             */
            protected Cancel(java.lang.String name) {
              super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/notebookRuntimes/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public Cancel set$Xgafv(java.lang.String $Xgafv) {
              return (Cancel) super.set$Xgafv($Xgafv);
            }

            @Override
            public Cancel setAccessToken(java.lang.String accessToken) {
              return (Cancel) super.setAccessToken(accessToken);
            }

            @Override
            public Cancel setAlt(java.lang.String alt) {
              return (Cancel) super.setAlt(alt);
            }

            @Override
            public Cancel setCallback(java.lang.String callback) {
              return (Cancel) super.setCallback(callback);
            }

            @Override
            public Cancel setFields(java.lang.String fields) {
              return (Cancel) super.setFields(fields);
            }

            @Override
            public Cancel setKey(java.lang.String key) {
              return (Cancel) super.setKey(key);
            }

            @Override
            public Cancel setOauthToken(java.lang.String oauthToken) {
              return (Cancel) super.setOauthToken(oauthToken);
            }

            @Override
            public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Cancel) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Cancel setQuotaUser(java.lang.String quotaUser) {
              return (Cancel) super.setQuotaUser(quotaUser);
            }

            @Override
            public Cancel setUploadType(java.lang.String uploadType) {
              return (Cancel) super.setUploadType(uploadType);
            }

            @Override
            public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
              return (Cancel) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource to be cancelled. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource to be cancelled.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource to be cancelled. */
            public Cancel setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/notebookRuntimes/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Cancel set(String parameterName, Object value) {
              return (Cancel) super.set(parameterName, value);
            }
          }
          /**
           * Deletes a long-running operation. This method indicates that the client is no longer interested
           * in the operation result. It does not cancel the operation. If the server doesn't support this
           * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.delete".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource to be deleted.
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/notebookRuntimes/[^/]+/operations/[^/]+$");

            /**
             * Deletes a long-running operation. This method indicates that the client is no longer interested
             * in the operation result. It does not cancel the operation. If the server doesn't support this
             * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.delete".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource to be deleted.
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/notebookRuntimes/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource to be deleted. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource to be deleted.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource to be deleted. */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/notebookRuntimes/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Gets the latest state of a long-running operation. Clients can use this method to poll the
           * operation result at intervals as recommended by the API service.
           *
           * Create a request for the method "operations.get".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource.
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/notebookRuntimes/[^/]+/operations/[^/]+$");

            /**
             * Gets the latest state of a long-running operation. Clients can use this method to poll the
             * operation result at intervals as recommended by the API service.
             *
             * Create a request for the method "operations.get".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource.
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/notebookRuntimes/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource. */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/notebookRuntimes/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Lists operations that match the specified filter in the request. If the server doesn't support
           * this method, it returns `UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.list".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation's parent resource.
           * @return the request
           */
          public List list(java.lang.String name) throws java.io.IOException {
            List result = new List(name);
            initialize(result);
            return result;
          }

          public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse> {

            private static final String REST_PATH = "v1/{+name}/operations";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/notebookRuntimes/[^/]+$");

            /**
             * Lists operations that match the specified filter in the request. If the server doesn't support
             * this method, it returns `UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.list".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation's parent resource.
             * @since 1.13
             */
            protected List(java.lang.String name) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/notebookRuntimes/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation's parent resource. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation's parent resource.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation's parent resource. */
            public List setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/notebookRuntimes/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /** The standard list filter. */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** The standard list filter.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /** The standard list filter. */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /** The standard list page size. */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** The standard list page size.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /** The standard list page size. */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** The standard list page token. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** The standard list page token.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** The standard list page token. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Waits until the specified long-running operation is done or reaches at most a specified timeout,
           * returning the latest state. If the operation is already done, the latest state is immediately
           * returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC
           * timeout is used. If the server does not support this method, it returns
           * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
           * the latest state before the specified timeout (including immediately), meaning even an immediate
           * response is no guarantee that the operation is done.
           *
           * Create a request for the method "operations.wait".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Wait#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource to wait on.
           * @return the request
           */
          public Wait wait(java.lang.String name) throws java.io.IOException {
            Wait result = new Wait(name);
            initialize(result);
            return result;
          }

          public class Wait extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+name}:wait";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/notebookRuntimes/[^/]+/operations/[^/]+$");

            /**
             * Waits until the specified long-running operation is done or reaches at most a specified
             * timeout, returning the latest state. If the operation is already done, the latest state is
             * immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout,
             * the HTTP/RPC timeout is used. If the server does not support this method, it returns
             * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
             * the latest state before the specified timeout (including immediately), meaning even an
             * immediate response is no guarantee that the operation is done.
             *
             * Create a request for the method "operations.wait".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Wait#execute()} method to invoke the remote operation. <p>
             * {@link Wait#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource to wait on.
             * @since 1.13
             */
            protected Wait(java.lang.String name) {
              super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/notebookRuntimes/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public Wait set$Xgafv(java.lang.String $Xgafv) {
              return (Wait) super.set$Xgafv($Xgafv);
            }

            @Override
            public Wait setAccessToken(java.lang.String accessToken) {
              return (Wait) super.setAccessToken(accessToken);
            }

            @Override
            public Wait setAlt(java.lang.String alt) {
              return (Wait) super.setAlt(alt);
            }

            @Override
            public Wait setCallback(java.lang.String callback) {
              return (Wait) super.setCallback(callback);
            }

            @Override
            public Wait setFields(java.lang.String fields) {
              return (Wait) super.setFields(fields);
            }

            @Override
            public Wait setKey(java.lang.String key) {
              return (Wait) super.setKey(key);
            }

            @Override
            public Wait setOauthToken(java.lang.String oauthToken) {
              return (Wait) super.setOauthToken(oauthToken);
            }

            @Override
            public Wait setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Wait) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Wait setQuotaUser(java.lang.String quotaUser) {
              return (Wait) super.setQuotaUser(quotaUser);
            }

            @Override
            public Wait setUploadType(java.lang.String uploadType) {
              return (Wait) super.setUploadType(uploadType);
            }

            @Override
            public Wait setUploadProtocol(java.lang.String uploadProtocol) {
              return (Wait) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource to wait on. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource to wait on.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource to wait on. */
            public Wait setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/notebookRuntimes/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * The maximum duration to wait before timing out. If left blank, the wait will be at
             * most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline
             * is also specified, the shorter one will be used.
             */
            @com.google.api.client.util.Key
            private String timeout;

            /** The maximum duration to wait before timing out. If left blank, the wait will be at most the time
           permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the
           shorter one will be used.
             */
            public String getTimeout() {
              return timeout;
            }

            /**
             * The maximum duration to wait before timing out. If left blank, the wait will be at
             * most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline
             * is also specified, the shorter one will be used.
             */
            public Wait setTimeout(String timeout) {
              this.timeout = timeout;
              return this;
            }

            @Override
            public Wait set(String parameterName, Object value) {
              return (Wait) super.set(parameterName, value);
            }
          }

        }
      }
      /**
       * An accessor for creating requests from the Operations collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Aiplatform aiplatform = new Aiplatform(...);}
       *   {@code Aiplatform.Operations.List request = aiplatform.operations().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Operations operations() {
        return new Operations();
      }

      /**
       * The "operations" collection of methods.
       */
      public class Operations {

        /**
         * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
         * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
         * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
         * methods to check whether the cancellation succeeded or whether the operation completed despite
         * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
         * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
         * `Code.CANCELLED`.
         *
         * Create a request for the method "operations.cancel".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation resource to be cancelled.
         * @return the request
         */
        public Cancel cancel(java.lang.String name) throws java.io.IOException {
          Cancel result = new Cancel(name);
          initialize(result);
          return result;
        }

        public class Cancel extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

          private static final String REST_PATH = "v1/{+name}:cancel";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/operations/[^/]+$");

          /**
           * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
           * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
           * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
           * methods to check whether the cancellation succeeded or whether the operation completed despite
           * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
           * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
           * `Code.CANCELLED`.
           *
           * Create a request for the method "operations.cancel".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
           * <p> {@link
           * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation resource to be cancelled.
           * @since 1.13
           */
          protected Cancel(java.lang.String name) {
            super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
          }

          @Override
          public Cancel set$Xgafv(java.lang.String $Xgafv) {
            return (Cancel) super.set$Xgafv($Xgafv);
          }

          @Override
          public Cancel setAccessToken(java.lang.String accessToken) {
            return (Cancel) super.setAccessToken(accessToken);
          }

          @Override
          public Cancel setAlt(java.lang.String alt) {
            return (Cancel) super.setAlt(alt);
          }

          @Override
          public Cancel setCallback(java.lang.String callback) {
            return (Cancel) super.setCallback(callback);
          }

          @Override
          public Cancel setFields(java.lang.String fields) {
            return (Cancel) super.setFields(fields);
          }

          @Override
          public Cancel setKey(java.lang.String key) {
            return (Cancel) super.setKey(key);
          }

          @Override
          public Cancel setOauthToken(java.lang.String oauthToken) {
            return (Cancel) super.setOauthToken(oauthToken);
          }

          @Override
          public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Cancel) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Cancel setQuotaUser(java.lang.String quotaUser) {
            return (Cancel) super.setQuotaUser(quotaUser);
          }

          @Override
          public Cancel setUploadType(java.lang.String uploadType) {
            return (Cancel) super.setUploadType(uploadType);
          }

          @Override
          public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
            return (Cancel) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation resource to be cancelled. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation resource to be cancelled.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation resource to be cancelled. */
          public Cancel setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Cancel set(String parameterName, Object value) {
            return (Cancel) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a long-running operation. This method indicates that the client is no longer interested
         * in the operation result. It does not cancel the operation. If the server doesn't support this
         * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
         *
         * Create a request for the method "operations.delete".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation resource to be deleted.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/operations/[^/]+$");

          /**
           * Deletes a long-running operation. This method indicates that the client is no longer interested
           * in the operation result. It does not cancel the operation. If the server doesn't support this
           * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.delete".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation resource to be deleted.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation resource to be deleted. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation resource to be deleted.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation resource to be deleted. */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets the latest state of a long-running operation. Clients can use this method to poll the
         * operation result at intervals as recommended by the API service.
         *
         * Create a request for the method "operations.get".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation resource.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/operations/[^/]+$");

          /**
           * Gets the latest state of a long-running operation. Clients can use this method to poll the
           * operation result at intervals as recommended by the API service.
           *
           * Create a request for the method "operations.get".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation resource.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation resource. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation resource.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation resource. */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists operations that match the specified filter in the request. If the server doesn't support
         * this method, it returns `UNIMPLEMENTED`.
         *
         * Create a request for the method "operations.list".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation's parent resource.
         * @return the request
         */
        public List list(java.lang.String name) throws java.io.IOException {
          List result = new List(name);
          initialize(result);
          return result;
        }

        public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse> {

          private static final String REST_PATH = "v1/{+name}/operations";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists operations that match the specified filter in the request. If the server doesn't support
           * this method, it returns `UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.list".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation's parent resource.
           * @since 1.13
           */
          protected List(java.lang.String name) {
            super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation's parent resource. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation's parent resource.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation's parent resource. */
          public List setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /** The standard list filter. */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** The standard list filter.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /** The standard list filter. */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /** The standard list page size. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The standard list page size.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** The standard list page size. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** The standard list page token. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The standard list page token.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** The standard list page token. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Waits until the specified long-running operation is done or reaches at most a specified timeout,
         * returning the latest state. If the operation is already done, the latest state is immediately
         * returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC
         * timeout is used. If the server does not support this method, it returns
         * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
         * the latest state before the specified timeout (including immediately), meaning even an immediate
         * response is no guarantee that the operation is done.
         *
         * Create a request for the method "operations.wait".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Wait#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation resource to wait on.
         * @return the request
         */
        public Wait wait(java.lang.String name) throws java.io.IOException {
          Wait result = new Wait(name);
          initialize(result);
          return result;
        }

        public class Wait extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+name}:wait";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/operations/[^/]+$");

          /**
           * Waits until the specified long-running operation is done or reaches at most a specified
           * timeout, returning the latest state. If the operation is already done, the latest state is
           * immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout,
           * the HTTP/RPC timeout is used. If the server does not support this method, it returns
           * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
           * the latest state before the specified timeout (including immediately), meaning even an
           * immediate response is no guarantee that the operation is done.
           *
           * Create a request for the method "operations.wait".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Wait#execute()} method to invoke the remote operation. <p>
           * {@link Wait#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation resource to wait on.
           * @since 1.13
           */
          protected Wait(java.lang.String name) {
            super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
          }

          @Override
          public Wait set$Xgafv(java.lang.String $Xgafv) {
            return (Wait) super.set$Xgafv($Xgafv);
          }

          @Override
          public Wait setAccessToken(java.lang.String accessToken) {
            return (Wait) super.setAccessToken(accessToken);
          }

          @Override
          public Wait setAlt(java.lang.String alt) {
            return (Wait) super.setAlt(alt);
          }

          @Override
          public Wait setCallback(java.lang.String callback) {
            return (Wait) super.setCallback(callback);
          }

          @Override
          public Wait setFields(java.lang.String fields) {
            return (Wait) super.setFields(fields);
          }

          @Override
          public Wait setKey(java.lang.String key) {
            return (Wait) super.setKey(key);
          }

          @Override
          public Wait setOauthToken(java.lang.String oauthToken) {
            return (Wait) super.setOauthToken(oauthToken);
          }

          @Override
          public Wait setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Wait) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Wait setQuotaUser(java.lang.String quotaUser) {
            return (Wait) super.setQuotaUser(quotaUser);
          }

          @Override
          public Wait setUploadType(java.lang.String uploadType) {
            return (Wait) super.setUploadType(uploadType);
          }

          @Override
          public Wait setUploadProtocol(java.lang.String uploadProtocol) {
            return (Wait) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation resource to wait on. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation resource to wait on.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation resource to wait on. */
          public Wait setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * The maximum duration to wait before timing out. If left blank, the wait will be at most
           * the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also
           * specified, the shorter one will be used.
           */
          @com.google.api.client.util.Key
          private String timeout;

          /** The maximum duration to wait before timing out. If left blank, the wait will be at most the time
         permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the
         shorter one will be used.
           */
          public String getTimeout() {
            return timeout;
          }

          /**
           * The maximum duration to wait before timing out. If left blank, the wait will be at most
           * the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also
           * specified, the shorter one will be used.
           */
          public Wait setTimeout(String timeout) {
            this.timeout = timeout;
            return this;
          }

          @Override
          public Wait set(String parameterName, Object value) {
            return (Wait) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the PersistentResources collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Aiplatform aiplatform = new Aiplatform(...);}
       *   {@code Aiplatform.PersistentResources.List request = aiplatform.persistentResources().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public PersistentResources persistentResources() {
        return new PersistentResources();
      }

      /**
       * The "persistentResources" collection of methods.
       */
      public class PersistentResources {

        /**
         * Creates a PersistentResource.
         *
         * Create a request for the method "persistentResources.create".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The resource name of the Location to create the PersistentResource in. Format:
         *        `projects/{project}/locations/{location}`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1PersistentResource}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1PersistentResource content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+parent}/persistentResources";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Creates a PersistentResource.
           *
           * Create a request for the method "persistentResources.create".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The resource name of the Location to create the PersistentResource in. Format:
         *        `projects/{project}/locations/{location}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1PersistentResource}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1PersistentResource content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the Location to create the PersistentResource in.
           * Format: `projects/{project}/locations/{location}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The resource name of the Location to create the PersistentResource in. Format:
         `projects/{project}/locations/{location}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The resource name of the Location to create the PersistentResource in.
           * Format: `projects/{project}/locations/{location}`
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Required. The ID to use for the PersistentResource, which become the final component of
           * the PersistentResource's resource name. The maximum length is 63 characters, and valid
           * characters are `/^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String persistentResourceId;

          /** Required. The ID to use for the PersistentResource, which become the final component of the
         PersistentResource's resource name. The maximum length is 63 characters, and valid characters are
         `/^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$/`.
           */
          public java.lang.String getPersistentResourceId() {
            return persistentResourceId;
          }

          /**
           * Required. The ID to use for the PersistentResource, which become the final component of
           * the PersistentResource's resource name. The maximum length is 63 characters, and valid
           * characters are `/^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$/`.
           */
          public Create setPersistentResourceId(java.lang.String persistentResourceId) {
            this.persistentResourceId = persistentResourceId;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a PersistentResource.
         *
         * Create a request for the method "persistentResources.delete".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the PersistentResource to be deleted. Format:
         *        `projects/{project}/locations/{location}/persistentResources/{persistent_resource}`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/persistentResources/[^/]+$");

          /**
           * Deletes a PersistentResource.
           *
           * Create a request for the method "persistentResources.delete".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the PersistentResource to be deleted. Format:
         *        `projects/{project}/locations/{location}/persistentResources/{persistent_resource}`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/persistentResources/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the PersistentResource to be deleted. Format:
           * `projects/{project}/locations/{location}/persistentResources/{persistent_resource}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the PersistentResource to be deleted. Format:
         `projects/{project}/locations/{location}/persistentResources/{persistent_resource}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the PersistentResource to be deleted. Format:
           * `projects/{project}/locations/{location}/persistentResources/{persistent_resource}`
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/persistentResources/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets a PersistentResource.
         *
         * Create a request for the method "persistentResources.get".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the PersistentResource resource. Format: `projects/{project_id_or_number}/loca
         *        tions/{location_id}/persistentResources/{persistent_resource_id}`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1PersistentResource> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/persistentResources/[^/]+$");

          /**
           * Gets a PersistentResource.
           *
           * Create a request for the method "persistentResources.get".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the PersistentResource resource. Format: `projects/{project_id_or_number}/loca
         *        tions/{location_id}/persistentResources/{persistent_resource_id}`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1PersistentResource.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/persistentResources/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the PersistentResource resource. Format: `projects/{project_id_or
           * _number}/locations/{location_id}/persistentResources/{persistent_resource_id}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the PersistentResource resource. Format: `projects/{project_id_or_number}/loc
         ations/{location_id}/persistentResources/{persistent_resource_id}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the PersistentResource resource. Format: `projects/{project_id_or
           * _number}/locations/{location_id}/persistentResources/{persistent_resource_id}`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/persistentResources/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists PersistentResources in a Location.
         *
         * Create a request for the method "persistentResources.list".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The resource name of the Location to list the PersistentResources from. Format:
         *        `projects/{project}/locations/{location}`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListPersistentResourcesResponse> {

          private static final String REST_PATH = "v1/{+parent}/persistentResources";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists PersistentResources in a Location.
           *
           * Create a request for the method "persistentResources.list".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The resource name of the Location to list the PersistentResources from. Format:
         *        `projects/{project}/locations/{location}`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListPersistentResourcesResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the Location to list the PersistentResources from.
           * Format: `projects/{project}/locations/{location}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The resource name of the Location to list the PersistentResources from. Format:
         `projects/{project}/locations/{location}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The resource name of the Location to list the PersistentResources from.
           * Format: `projects/{project}/locations/{location}`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** Optional. The standard list page size. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Optional. The standard list page size.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** Optional. The standard list page size. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * Optional. The standard list page token. Typically obtained via
           * ListPersistentResourceResponse.next_page_token of the previous
           * PersistentResourceService.ListPersistentResource call.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Optional. The standard list page token. Typically obtained via
         ListPersistentResourceResponse.next_page_token of the previous
         PersistentResourceService.ListPersistentResource call.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * Optional. The standard list page token. Typically obtained via
           * ListPersistentResourceResponse.next_page_token of the previous
           * PersistentResourceService.ListPersistentResource call.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates a PersistentResource.
         *
         * Create a request for the method "persistentResources.patch".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Immutable. Resource name of a PersistentResource.
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1PersistentResource}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1PersistentResource content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/persistentResources/[^/]+$");

          /**
           * Updates a PersistentResource.
           *
           * Create a request for the method "persistentResources.patch".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           * <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Immutable. Resource name of a PersistentResource.
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1PersistentResource}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1PersistentResource content) {
            super(Aiplatform.this, "PATCH", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/persistentResources/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /** Immutable. Resource name of a PersistentResource. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Immutable. Resource name of a PersistentResource.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Immutable. Resource name of a PersistentResource. */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/persistentResources/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Required. Specify the fields to be overwritten in the PersistentResource by the update
           * method.
           */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Required. Specify the fields to be overwritten in the PersistentResource by the update method.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /**
           * Required. Specify the fields to be overwritten in the PersistentResource by the update
           * method.
           */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }
        /**
         * Reboots a PersistentResource.
         *
         * Create a request for the method "persistentResources.reboot".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Reboot#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the PersistentResource resource. Format: `projects/{project_id_or_number}/loca
         *        tions/{location_id}/persistentResources/{persistent_resource_id}`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1RebootPersistentResourceRequest}
         * @return the request
         */
        public Reboot reboot(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1RebootPersistentResourceRequest content) throws java.io.IOException {
          Reboot result = new Reboot(name, content);
          initialize(result);
          return result;
        }

        public class Reboot extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+name}:reboot";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/persistentResources/[^/]+$");

          /**
           * Reboots a PersistentResource.
           *
           * Create a request for the method "persistentResources.reboot".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Reboot#execute()} method to invoke the remote operation.
           * <p> {@link
           * Reboot#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the PersistentResource resource. Format: `projects/{project_id_or_number}/loca
         *        tions/{location_id}/persistentResources/{persistent_resource_id}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1RebootPersistentResourceRequest}
           * @since 1.13
           */
          protected Reboot(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1RebootPersistentResourceRequest content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/persistentResources/[^/]+$");
            }
          }

          @Override
          public Reboot set$Xgafv(java.lang.String $Xgafv) {
            return (Reboot) super.set$Xgafv($Xgafv);
          }

          @Override
          public Reboot setAccessToken(java.lang.String accessToken) {
            return (Reboot) super.setAccessToken(accessToken);
          }

          @Override
          public Reboot setAlt(java.lang.String alt) {
            return (Reboot) super.setAlt(alt);
          }

          @Override
          public Reboot setCallback(java.lang.String callback) {
            return (Reboot) super.setCallback(callback);
          }

          @Override
          public Reboot setFields(java.lang.String fields) {
            return (Reboot) super.setFields(fields);
          }

          @Override
          public Reboot setKey(java.lang.String key) {
            return (Reboot) super.setKey(key);
          }

          @Override
          public Reboot setOauthToken(java.lang.String oauthToken) {
            return (Reboot) super.setOauthToken(oauthToken);
          }

          @Override
          public Reboot setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Reboot) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Reboot setQuotaUser(java.lang.String quotaUser) {
            return (Reboot) super.setQuotaUser(quotaUser);
          }

          @Override
          public Reboot setUploadType(java.lang.String uploadType) {
            return (Reboot) super.setUploadType(uploadType);
          }

          @Override
          public Reboot setUploadProtocol(java.lang.String uploadProtocol) {
            return (Reboot) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the PersistentResource resource. Format: `projects/{project_id_or
           * _number}/locations/{location_id}/persistentResources/{persistent_resource_id}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the PersistentResource resource. Format: `projects/{project_id_or_number}/loc
         ations/{location_id}/persistentResources/{persistent_resource_id}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the PersistentResource resource. Format: `projects/{project_id_or
           * _number}/locations/{location_id}/persistentResources/{persistent_resource_id}`
           */
          public Reboot setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/persistentResources/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Reboot set(String parameterName, Object value) {
            return (Reboot) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the Operations collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Aiplatform aiplatform = new Aiplatform(...);}
         *   {@code Aiplatform.Operations.List request = aiplatform.operations().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Operations operations() {
          return new Operations();
        }

        /**
         * The "operations" collection of methods.
         */
        public class Operations {

          /**
           * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
           * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
           * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
           * methods to check whether the cancellation succeeded or whether the operation completed despite
           * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
           * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
           * `Code.CANCELLED`.
           *
           * Create a request for the method "operations.cancel".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource to be cancelled.
           * @return the request
           */
          public Cancel cancel(java.lang.String name) throws java.io.IOException {
            Cancel result = new Cancel(name);
            initialize(result);
            return result;
          }

          public class Cancel extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

            private static final String REST_PATH = "v1/{+name}:cancel";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/persistentResources/[^/]+/operations/[^/]+$");

            /**
             * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
             * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
             * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
             * methods to check whether the cancellation succeeded or whether the operation completed despite
             * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
             * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
             * `Code.CANCELLED`.
             *
             * Create a request for the method "operations.cancel".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
             * <p> {@link
             * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource to be cancelled.
             * @since 1.13
             */
            protected Cancel(java.lang.String name) {
              super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/persistentResources/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public Cancel set$Xgafv(java.lang.String $Xgafv) {
              return (Cancel) super.set$Xgafv($Xgafv);
            }

            @Override
            public Cancel setAccessToken(java.lang.String accessToken) {
              return (Cancel) super.setAccessToken(accessToken);
            }

            @Override
            public Cancel setAlt(java.lang.String alt) {
              return (Cancel) super.setAlt(alt);
            }

            @Override
            public Cancel setCallback(java.lang.String callback) {
              return (Cancel) super.setCallback(callback);
            }

            @Override
            public Cancel setFields(java.lang.String fields) {
              return (Cancel) super.setFields(fields);
            }

            @Override
            public Cancel setKey(java.lang.String key) {
              return (Cancel) super.setKey(key);
            }

            @Override
            public Cancel setOauthToken(java.lang.String oauthToken) {
              return (Cancel) super.setOauthToken(oauthToken);
            }

            @Override
            public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Cancel) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Cancel setQuotaUser(java.lang.String quotaUser) {
              return (Cancel) super.setQuotaUser(quotaUser);
            }

            @Override
            public Cancel setUploadType(java.lang.String uploadType) {
              return (Cancel) super.setUploadType(uploadType);
            }

            @Override
            public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
              return (Cancel) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource to be cancelled. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource to be cancelled.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource to be cancelled. */
            public Cancel setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/persistentResources/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Cancel set(String parameterName, Object value) {
              return (Cancel) super.set(parameterName, value);
            }
          }
          /**
           * Deletes a long-running operation. This method indicates that the client is no longer interested
           * in the operation result. It does not cancel the operation. If the server doesn't support this
           * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.delete".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource to be deleted.
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/persistentResources/[^/]+/operations/[^/]+$");

            /**
             * Deletes a long-running operation. This method indicates that the client is no longer interested
             * in the operation result. It does not cancel the operation. If the server doesn't support this
             * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.delete".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource to be deleted.
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/persistentResources/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource to be deleted. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource to be deleted.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource to be deleted. */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/persistentResources/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Gets the latest state of a long-running operation. Clients can use this method to poll the
           * operation result at intervals as recommended by the API service.
           *
           * Create a request for the method "operations.get".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource.
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/persistentResources/[^/]+/operations/[^/]+$");

            /**
             * Gets the latest state of a long-running operation. Clients can use this method to poll the
             * operation result at intervals as recommended by the API service.
             *
             * Create a request for the method "operations.get".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource.
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/persistentResources/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource. */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/persistentResources/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Lists operations that match the specified filter in the request. If the server doesn't support
           * this method, it returns `UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.list".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation's parent resource.
           * @return the request
           */
          public List list(java.lang.String name) throws java.io.IOException {
            List result = new List(name);
            initialize(result);
            return result;
          }

          public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse> {

            private static final String REST_PATH = "v1/{+name}/operations";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/persistentResources/[^/]+$");

            /**
             * Lists operations that match the specified filter in the request. If the server doesn't support
             * this method, it returns `UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.list".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation's parent resource.
             * @since 1.13
             */
            protected List(java.lang.String name) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/persistentResources/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation's parent resource. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation's parent resource.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation's parent resource. */
            public List setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/persistentResources/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /** The standard list filter. */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** The standard list filter.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /** The standard list filter. */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /** The standard list page size. */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** The standard list page size.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /** The standard list page size. */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** The standard list page token. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** The standard list page token.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** The standard list page token. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Waits until the specified long-running operation is done or reaches at most a specified timeout,
           * returning the latest state. If the operation is already done, the latest state is immediately
           * returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC
           * timeout is used. If the server does not support this method, it returns
           * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
           * the latest state before the specified timeout (including immediately), meaning even an immediate
           * response is no guarantee that the operation is done.
           *
           * Create a request for the method "operations.wait".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Wait#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource to wait on.
           * @return the request
           */
          public Wait wait(java.lang.String name) throws java.io.IOException {
            Wait result = new Wait(name);
            initialize(result);
            return result;
          }

          public class Wait extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+name}:wait";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/persistentResources/[^/]+/operations/[^/]+$");

            /**
             * Waits until the specified long-running operation is done or reaches at most a specified
             * timeout, returning the latest state. If the operation is already done, the latest state is
             * immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout,
             * the HTTP/RPC timeout is used. If the server does not support this method, it returns
             * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
             * the latest state before the specified timeout (including immediately), meaning even an
             * immediate response is no guarantee that the operation is done.
             *
             * Create a request for the method "operations.wait".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Wait#execute()} method to invoke the remote operation. <p>
             * {@link Wait#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource to wait on.
             * @since 1.13
             */
            protected Wait(java.lang.String name) {
              super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/persistentResources/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public Wait set$Xgafv(java.lang.String $Xgafv) {
              return (Wait) super.set$Xgafv($Xgafv);
            }

            @Override
            public Wait setAccessToken(java.lang.String accessToken) {
              return (Wait) super.setAccessToken(accessToken);
            }

            @Override
            public Wait setAlt(java.lang.String alt) {
              return (Wait) super.setAlt(alt);
            }

            @Override
            public Wait setCallback(java.lang.String callback) {
              return (Wait) super.setCallback(callback);
            }

            @Override
            public Wait setFields(java.lang.String fields) {
              return (Wait) super.setFields(fields);
            }

            @Override
            public Wait setKey(java.lang.String key) {
              return (Wait) super.setKey(key);
            }

            @Override
            public Wait setOauthToken(java.lang.String oauthToken) {
              return (Wait) super.setOauthToken(oauthToken);
            }

            @Override
            public Wait setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Wait) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Wait setQuotaUser(java.lang.String quotaUser) {
              return (Wait) super.setQuotaUser(quotaUser);
            }

            @Override
            public Wait setUploadType(java.lang.String uploadType) {
              return (Wait) super.setUploadType(uploadType);
            }

            @Override
            public Wait setUploadProtocol(java.lang.String uploadProtocol) {
              return (Wait) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource to wait on. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource to wait on.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource to wait on. */
            public Wait setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/persistentResources/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * The maximum duration to wait before timing out. If left blank, the wait will be at
             * most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline
             * is also specified, the shorter one will be used.
             */
            @com.google.api.client.util.Key
            private String timeout;

            /** The maximum duration to wait before timing out. If left blank, the wait will be at most the time
           permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the
           shorter one will be used.
             */
            public String getTimeout() {
              return timeout;
            }

            /**
             * The maximum duration to wait before timing out. If left blank, the wait will be at
             * most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline
             * is also specified, the shorter one will be used.
             */
            public Wait setTimeout(String timeout) {
              this.timeout = timeout;
              return this;
            }

            @Override
            public Wait set(String parameterName, Object value) {
              return (Wait) super.set(parameterName, value);
            }
          }

        }
      }
      /**
       * An accessor for creating requests from the PipelineJobs collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Aiplatform aiplatform = new Aiplatform(...);}
       *   {@code Aiplatform.PipelineJobs.List request = aiplatform.pipelineJobs().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public PipelineJobs pipelineJobs() {
        return new PipelineJobs();
      }

      /**
       * The "pipelineJobs" collection of methods.
       */
      public class PipelineJobs {

        /**
         * Batch cancel PipelineJobs. Firstly the server will check if all the jobs are in non-terminal
         * states, and skip the jobs that are already terminated. If the operation failed, none of the
         * pipeline jobs are cancelled. The server will poll the states of all the pipeline jobs
         * periodically to check the cancellation status. This operation will return an LRO.
         *
         * Create a request for the method "pipelineJobs.batchCancel".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link BatchCancel#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The name of the PipelineJobs' parent resource. Format:
         *        `projects/{project}/locations/{location}`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1BatchCancelPipelineJobsRequest}
         * @return the request
         */
        public BatchCancel batchCancel(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1BatchCancelPipelineJobsRequest content) throws java.io.IOException {
          BatchCancel result = new BatchCancel(parent, content);
          initialize(result);
          return result;
        }

        public class BatchCancel extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+parent}/pipelineJobs:batchCancel";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Batch cancel PipelineJobs. Firstly the server will check if all the jobs are in non-terminal
           * states, and skip the jobs that are already terminated. If the operation failed, none of the
           * pipeline jobs are cancelled. The server will poll the states of all the pipeline jobs
           * periodically to check the cancellation status. This operation will return an LRO.
           *
           * Create a request for the method "pipelineJobs.batchCancel".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link BatchCancel#execute()} method to invoke the remote
           * operation. <p> {@link
           * BatchCancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The name of the PipelineJobs' parent resource. Format:
         *        `projects/{project}/locations/{location}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1BatchCancelPipelineJobsRequest}
           * @since 1.13
           */
          protected BatchCancel(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1BatchCancelPipelineJobsRequest content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public BatchCancel set$Xgafv(java.lang.String $Xgafv) {
            return (BatchCancel) super.set$Xgafv($Xgafv);
          }

          @Override
          public BatchCancel setAccessToken(java.lang.String accessToken) {
            return (BatchCancel) super.setAccessToken(accessToken);
          }

          @Override
          public BatchCancel setAlt(java.lang.String alt) {
            return (BatchCancel) super.setAlt(alt);
          }

          @Override
          public BatchCancel setCallback(java.lang.String callback) {
            return (BatchCancel) super.setCallback(callback);
          }

          @Override
          public BatchCancel setFields(java.lang.String fields) {
            return (BatchCancel) super.setFields(fields);
          }

          @Override
          public BatchCancel setKey(java.lang.String key) {
            return (BatchCancel) super.setKey(key);
          }

          @Override
          public BatchCancel setOauthToken(java.lang.String oauthToken) {
            return (BatchCancel) super.setOauthToken(oauthToken);
          }

          @Override
          public BatchCancel setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (BatchCancel) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public BatchCancel setQuotaUser(java.lang.String quotaUser) {
            return (BatchCancel) super.setQuotaUser(quotaUser);
          }

          @Override
          public BatchCancel setUploadType(java.lang.String uploadType) {
            return (BatchCancel) super.setUploadType(uploadType);
          }

          @Override
          public BatchCancel setUploadProtocol(java.lang.String uploadProtocol) {
            return (BatchCancel) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the PipelineJobs' parent resource. Format:
           * `projects/{project}/locations/{location}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The name of the PipelineJobs' parent resource. Format:
         `projects/{project}/locations/{location}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The name of the PipelineJobs' parent resource. Format:
           * `projects/{project}/locations/{location}`
           */
          public BatchCancel setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public BatchCancel set(String parameterName, Object value) {
            return (BatchCancel) super.set(parameterName, value);
          }
        }
        /**
         * Batch deletes PipelineJobs The Operation is atomic. If it fails, none of the PipelineJobs are
         * deleted. If it succeeds, all of the PipelineJobs are deleted.
         *
         * Create a request for the method "pipelineJobs.batchDelete".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link BatchDelete#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The name of the PipelineJobs' parent resource. Format:
         *        `projects/{project}/locations/{location}`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1BatchDeletePipelineJobsRequest}
         * @return the request
         */
        public BatchDelete batchDelete(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1BatchDeletePipelineJobsRequest content) throws java.io.IOException {
          BatchDelete result = new BatchDelete(parent, content);
          initialize(result);
          return result;
        }

        public class BatchDelete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+parent}/pipelineJobs:batchDelete";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Batch deletes PipelineJobs The Operation is atomic. If it fails, none of the PipelineJobs are
           * deleted. If it succeeds, all of the PipelineJobs are deleted.
           *
           * Create a request for the method "pipelineJobs.batchDelete".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link BatchDelete#execute()} method to invoke the remote
           * operation. <p> {@link
           * BatchDelete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The name of the PipelineJobs' parent resource. Format:
         *        `projects/{project}/locations/{location}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1BatchDeletePipelineJobsRequest}
           * @since 1.13
           */
          protected BatchDelete(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1BatchDeletePipelineJobsRequest content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public BatchDelete set$Xgafv(java.lang.String $Xgafv) {
            return (BatchDelete) super.set$Xgafv($Xgafv);
          }

          @Override
          public BatchDelete setAccessToken(java.lang.String accessToken) {
            return (BatchDelete) super.setAccessToken(accessToken);
          }

          @Override
          public BatchDelete setAlt(java.lang.String alt) {
            return (BatchDelete) super.setAlt(alt);
          }

          @Override
          public BatchDelete setCallback(java.lang.String callback) {
            return (BatchDelete) super.setCallback(callback);
          }

          @Override
          public BatchDelete setFields(java.lang.String fields) {
            return (BatchDelete) super.setFields(fields);
          }

          @Override
          public BatchDelete setKey(java.lang.String key) {
            return (BatchDelete) super.setKey(key);
          }

          @Override
          public BatchDelete setOauthToken(java.lang.String oauthToken) {
            return (BatchDelete) super.setOauthToken(oauthToken);
          }

          @Override
          public BatchDelete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (BatchDelete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public BatchDelete setQuotaUser(java.lang.String quotaUser) {
            return (BatchDelete) super.setQuotaUser(quotaUser);
          }

          @Override
          public BatchDelete setUploadType(java.lang.String uploadType) {
            return (BatchDelete) super.setUploadType(uploadType);
          }

          @Override
          public BatchDelete setUploadProtocol(java.lang.String uploadProtocol) {
            return (BatchDelete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the PipelineJobs' parent resource. Format:
           * `projects/{project}/locations/{location}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The name of the PipelineJobs' parent resource. Format:
         `projects/{project}/locations/{location}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The name of the PipelineJobs' parent resource. Format:
           * `projects/{project}/locations/{location}`
           */
          public BatchDelete setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public BatchDelete set(String parameterName, Object value) {
            return (BatchDelete) super.set(parameterName, value);
          }
        }
        /**
         * Cancels a PipelineJob. Starts asynchronous cancellation on the PipelineJob. The server makes a
         * best effort to cancel the pipeline, but success is not guaranteed. Clients can use
         * PipelineService.GetPipelineJob or other methods to check whether the cancellation succeeded or
         * whether the pipeline completed despite cancellation. On successful cancellation, the PipelineJob
         * is not deleted; instead it becomes a pipeline with a PipelineJob.error value with a
         * google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`, and PipelineJob.state is set to
         * `CANCELLED`.
         *
         * Create a request for the method "pipelineJobs.cancel".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the PipelineJob to cancel. Format:
         *        `projects/{project}/locations/{location}/pipelineJobs/{pipeline_job}`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CancelPipelineJobRequest}
         * @return the request
         */
        public Cancel cancel(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CancelPipelineJobRequest content) throws java.io.IOException {
          Cancel result = new Cancel(name, content);
          initialize(result);
          return result;
        }

        public class Cancel extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

          private static final String REST_PATH = "v1/{+name}:cancel";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/pipelineJobs/[^/]+$");

          /**
           * Cancels a PipelineJob. Starts asynchronous cancellation on the PipelineJob. The server makes a
           * best effort to cancel the pipeline, but success is not guaranteed. Clients can use
           * PipelineService.GetPipelineJob or other methods to check whether the cancellation succeeded or
           * whether the pipeline completed despite cancellation. On successful cancellation, the
           * PipelineJob is not deleted; instead it becomes a pipeline with a PipelineJob.error value with a
           * google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`, and PipelineJob.state is set to
           * `CANCELLED`.
           *
           * Create a request for the method "pipelineJobs.cancel".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
           * <p> {@link
           * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the PipelineJob to cancel. Format:
         *        `projects/{project}/locations/{location}/pipelineJobs/{pipeline_job}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CancelPipelineJobRequest}
           * @since 1.13
           */
          protected Cancel(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CancelPipelineJobRequest content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/pipelineJobs/[^/]+$");
            }
          }

          @Override
          public Cancel set$Xgafv(java.lang.String $Xgafv) {
            return (Cancel) super.set$Xgafv($Xgafv);
          }

          @Override
          public Cancel setAccessToken(java.lang.String accessToken) {
            return (Cancel) super.setAccessToken(accessToken);
          }

          @Override
          public Cancel setAlt(java.lang.String alt) {
            return (Cancel) super.setAlt(alt);
          }

          @Override
          public Cancel setCallback(java.lang.String callback) {
            return (Cancel) super.setCallback(callback);
          }

          @Override
          public Cancel setFields(java.lang.String fields) {
            return (Cancel) super.setFields(fields);
          }

          @Override
          public Cancel setKey(java.lang.String key) {
            return (Cancel) super.setKey(key);
          }

          @Override
          public Cancel setOauthToken(java.lang.String oauthToken) {
            return (Cancel) super.setOauthToken(oauthToken);
          }

          @Override
          public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Cancel) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Cancel setQuotaUser(java.lang.String quotaUser) {
            return (Cancel) super.setQuotaUser(quotaUser);
          }

          @Override
          public Cancel setUploadType(java.lang.String uploadType) {
            return (Cancel) super.setUploadType(uploadType);
          }

          @Override
          public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
            return (Cancel) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the PipelineJob to cancel. Format:
           * `projects/{project}/locations/{location}/pipelineJobs/{pipeline_job}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the PipelineJob to cancel. Format:
         `projects/{project}/locations/{location}/pipelineJobs/{pipeline_job}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the PipelineJob to cancel. Format:
           * `projects/{project}/locations/{location}/pipelineJobs/{pipeline_job}`
           */
          public Cancel setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/pipelineJobs/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Cancel set(String parameterName, Object value) {
            return (Cancel) super.set(parameterName, value);
          }
        }
        /**
         * Creates a PipelineJob. A PipelineJob will run immediately when created.
         *
         * Create a request for the method "pipelineJobs.create".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The resource name of the Location to create the PipelineJob in. Format:
         *        `projects/{project}/locations/{location}`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1PipelineJob}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1PipelineJob content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1PipelineJob> {

          private static final String REST_PATH = "v1/{+parent}/pipelineJobs";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Creates a PipelineJob. A PipelineJob will run immediately when created.
           *
           * Create a request for the method "pipelineJobs.create".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The resource name of the Location to create the PipelineJob in. Format:
         *        `projects/{project}/locations/{location}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1PipelineJob}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1PipelineJob content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1PipelineJob.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the Location to create the PipelineJob in. Format:
           * `projects/{project}/locations/{location}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The resource name of the Location to create the PipelineJob in. Format:
         `projects/{project}/locations/{location}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The resource name of the Location to create the PipelineJob in. Format:
           * `projects/{project}/locations/{location}`
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * The ID to use for the PipelineJob, which will become the final component of the
           * PipelineJob name. If not provided, an ID will be automatically generated. This value
           * should be less than 128 characters, and valid characters are `/a-z-/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String pipelineJobId;

          /** The ID to use for the PipelineJob, which will become the final component of the PipelineJob name.
         If not provided, an ID will be automatically generated. This value should be less than 128
         characters, and valid characters are `/a-z-/`.
           */
          public java.lang.String getPipelineJobId() {
            return pipelineJobId;
          }

          /**
           * The ID to use for the PipelineJob, which will become the final component of the
           * PipelineJob name. If not provided, an ID will be automatically generated. This value
           * should be less than 128 characters, and valid characters are `/a-z-/`.
           */
          public Create setPipelineJobId(java.lang.String pipelineJobId) {
            this.pipelineJobId = pipelineJobId;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a PipelineJob.
         *
         * Create a request for the method "pipelineJobs.delete".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the PipelineJob resource to be deleted. Format:
         *        `projects/{project}/locations/{location}/pipelineJobs/{pipeline_job}`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/pipelineJobs/[^/]+$");

          /**
           * Deletes a PipelineJob.
           *
           * Create a request for the method "pipelineJobs.delete".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the PipelineJob resource to be deleted. Format:
         *        `projects/{project}/locations/{location}/pipelineJobs/{pipeline_job}`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/pipelineJobs/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the PipelineJob resource to be deleted. Format:
           * `projects/{project}/locations/{location}/pipelineJobs/{pipeline_job}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the PipelineJob resource to be deleted. Format:
         `projects/{project}/locations/{location}/pipelineJobs/{pipeline_job}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the PipelineJob resource to be deleted. Format:
           * `projects/{project}/locations/{location}/pipelineJobs/{pipeline_job}`
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/pipelineJobs/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets a PipelineJob.
         *
         * Create a request for the method "pipelineJobs.get".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the PipelineJob resource. Format:
         *        `projects/{project}/locations/{location}/pipelineJobs/{pipeline_job}`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1PipelineJob> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/pipelineJobs/[^/]+$");

          /**
           * Gets a PipelineJob.
           *
           * Create a request for the method "pipelineJobs.get".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the PipelineJob resource. Format:
         *        `projects/{project}/locations/{location}/pipelineJobs/{pipeline_job}`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1PipelineJob.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/pipelineJobs/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the PipelineJob resource. Format:
           * `projects/{project}/locations/{location}/pipelineJobs/{pipeline_job}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the PipelineJob resource. Format:
         `projects/{project}/locations/{location}/pipelineJobs/{pipeline_job}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the PipelineJob resource. Format:
           * `projects/{project}/locations/{location}/pipelineJobs/{pipeline_job}`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/pipelineJobs/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists PipelineJobs in a Location.
         *
         * Create a request for the method "pipelineJobs.list".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The resource name of the Location to list the PipelineJobs from. Format:
         *        `projects/{project}/locations/{location}`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListPipelineJobsResponse> {

          private static final String REST_PATH = "v1/{+parent}/pipelineJobs";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists PipelineJobs in a Location.
           *
           * Create a request for the method "pipelineJobs.list".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The resource name of the Location to list the PipelineJobs from. Format:
         *        `projects/{project}/locations/{location}`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListPipelineJobsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the Location to list the PipelineJobs from. Format:
           * `projects/{project}/locations/{location}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The resource name of the Location to list the PipelineJobs from. Format:
         `projects/{project}/locations/{location}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The resource name of the Location to list the PipelineJobs from. Format:
           * `projects/{project}/locations/{location}`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Lists the PipelineJobs that match the filter expression. The following fields are
           * supported: * `pipeline_name`: Supports `=` and `!=` comparisons. * `display_name`:
           * Supports `=`, `!=` comparisons, and `:` wildcard. * `pipeline_job_user_id`: Supports
           * `=`, `!=` comparisons, and `:` wildcard. for example, can check if pipeline's
           * display_name contains *step* by doing display_name:\"*step*\" * `state`: Supports `=`
           * and `!=` comparisons. * `create_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=`
           * comparisons. Values must be in RFC 3339 format. * `update_time`: Supports `=`, `!=`,
           * `<`, `>`, `<=`, and `>=` comparisons. Values must be in RFC 3339 format. * `end_time`:
           * Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. Values must be in RFC 3339
           * format. * `labels`: Supports key-value equality and key presence. * `template_uri`:
           * Supports `=`, `!=` comparisons, and `:` wildcard. * `template_metadata.version`:
           * Supports `=`, `!=` comparisons, and `:` wildcard. Filter expressions can be combined
           * together using logical operators (`AND` & `OR`). For example: `pipeline_name="test" AND
           * create_time>"2020-05-18T13:30:00Z"`. The syntax to define filter expression is based on
           * https://google.aip.dev/160. Examples: * `create_time>"2021-05-18T00:00:00Z" OR
           * update_time>"2020-05-18T00:00:00Z"` PipelineJobs created or updated after 2020-05-18
           * 00:00:00 UTC. * `labels.env = "prod"` PipelineJobs with label "env" set to "prod".
           */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** Lists the PipelineJobs that match the filter expression. The following fields are supported: *
         `pipeline_name`: Supports `=` and `!=` comparisons. * `display_name`: Supports `=`, `!=`
         comparisons, and `:` wildcard. * `pipeline_job_user_id`: Supports `=`, `!=` comparisons, and `:`
         wildcard. for example, can check if pipeline's display_name contains *step* by doing
         display_name:\"*step*\" * `state`: Supports `=` and `!=` comparisons. * `create_time`: Supports
         `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. Values must be in RFC 3339 format. *
         `update_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. Values must be in RFC 3339
         format. * `end_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. Values must be in
         RFC 3339 format. * `labels`: Supports key-value equality and key presence. * `template_uri`:
         Supports `=`, `!=` comparisons, and `:` wildcard. * `template_metadata.version`: Supports `=`, `!=`
         comparisons, and `:` wildcard. Filter expressions can be combined together using logical operators
         (`AND` & `OR`). For example: `pipeline_name="test" AND create_time>"2020-05-18T13:30:00Z"`. The
         syntax to define filter expression is based on https://google.aip.dev/160. Examples: *
         `create_time>"2021-05-18T00:00:00Z" OR update_time>"2020-05-18T00:00:00Z"` PipelineJobs created or
         updated after 2020-05-18 00:00:00 UTC. * `labels.env = "prod"` PipelineJobs with label "env" set to
         "prod".
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /**
           * Lists the PipelineJobs that match the filter expression. The following fields are
           * supported: * `pipeline_name`: Supports `=` and `!=` comparisons. * `display_name`:
           * Supports `=`, `!=` comparisons, and `:` wildcard. * `pipeline_job_user_id`: Supports
           * `=`, `!=` comparisons, and `:` wildcard. for example, can check if pipeline's
           * display_name contains *step* by doing display_name:\"*step*\" * `state`: Supports `=`
           * and `!=` comparisons. * `create_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=`
           * comparisons. Values must be in RFC 3339 format. * `update_time`: Supports `=`, `!=`,
           * `<`, `>`, `<=`, and `>=` comparisons. Values must be in RFC 3339 format. * `end_time`:
           * Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. Values must be in RFC 3339
           * format. * `labels`: Supports key-value equality and key presence. * `template_uri`:
           * Supports `=`, `!=` comparisons, and `:` wildcard. * `template_metadata.version`:
           * Supports `=`, `!=` comparisons, and `:` wildcard. Filter expressions can be combined
           * together using logical operators (`AND` & `OR`). For example: `pipeline_name="test" AND
           * create_time>"2020-05-18T13:30:00Z"`. The syntax to define filter expression is based on
           * https://google.aip.dev/160. Examples: * `create_time>"2021-05-18T00:00:00Z" OR
           * update_time>"2020-05-18T00:00:00Z"` PipelineJobs created or updated after 2020-05-18
           * 00:00:00 UTC. * `labels.env = "prod"` PipelineJobs with label "env" set to "prod".
           */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /**
           * A comma-separated list of fields to order by. The default sort order is in ascending
           * order. Use "desc" after a field name for descending. You can have multiple order_by
           * fields provided e.g. "create_time desc, end_time", "end_time, start_time, update_time"
           * For example, using "create_time desc, end_time" will order results by create time in
           * descending order, and if there are multiple jobs having the same create time, order
           * them by the end time in ascending order. if order_by is not specified, it will order by
           * default order is create time in descending order. Supported fields: * `create_time` *
           * `update_time` * `end_time` * `start_time`
           */
          @com.google.api.client.util.Key
          private java.lang.String orderBy;

          /** A comma-separated list of fields to order by. The default sort order is in ascending order. Use
         "desc" after a field name for descending. You can have multiple order_by fields provided e.g.
         "create_time desc, end_time", "end_time, start_time, update_time" For example, using "create_time
         desc, end_time" will order results by create time in descending order, and if there are multiple
         jobs having the same create time, order them by the end time in ascending order. if order_by is not
         specified, it will order by default order is create time in descending order. Supported fields: *
         `create_time` * `update_time` * `end_time` * `start_time`
           */
          public java.lang.String getOrderBy() {
            return orderBy;
          }

          /**
           * A comma-separated list of fields to order by. The default sort order is in ascending
           * order. Use "desc" after a field name for descending. You can have multiple order_by
           * fields provided e.g. "create_time desc, end_time", "end_time, start_time, update_time"
           * For example, using "create_time desc, end_time" will order results by create time in
           * descending order, and if there are multiple jobs having the same create time, order
           * them by the end time in ascending order. if order_by is not specified, it will order by
           * default order is create time in descending order. Supported fields: * `create_time` *
           * `update_time` * `end_time` * `start_time`
           */
          public List setOrderBy(java.lang.String orderBy) {
            this.orderBy = orderBy;
            return this;
          }

          /** The standard list page size. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The standard list page size.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** The standard list page size. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * The standard list page token. Typically obtained via
           * ListPipelineJobsResponse.next_page_token of the previous
           * PipelineService.ListPipelineJobs call.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The standard list page token. Typically obtained via ListPipelineJobsResponse.next_page_token of
         the previous PipelineService.ListPipelineJobs call.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * The standard list page token. Typically obtained via
           * ListPipelineJobsResponse.next_page_token of the previous
           * PipelineService.ListPipelineJobs call.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          /** Mask specifying which fields to read. */
          @com.google.api.client.util.Key
          private String readMask;

          /** Mask specifying which fields to read.
           */
          public String getReadMask() {
            return readMask;
          }

          /** Mask specifying which fields to read. */
          public List setReadMask(String readMask) {
            this.readMask = readMask;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the Operations collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Aiplatform aiplatform = new Aiplatform(...);}
         *   {@code Aiplatform.Operations.List request = aiplatform.operations().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Operations operations() {
          return new Operations();
        }

        /**
         * The "operations" collection of methods.
         */
        public class Operations {

          /**
           * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
           * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
           * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
           * methods to check whether the cancellation succeeded or whether the operation completed despite
           * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
           * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
           * `Code.CANCELLED`.
           *
           * Create a request for the method "operations.cancel".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource to be cancelled.
           * @return the request
           */
          public Cancel cancel(java.lang.String name) throws java.io.IOException {
            Cancel result = new Cancel(name);
            initialize(result);
            return result;
          }

          public class Cancel extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

            private static final String REST_PATH = "v1/{+name}:cancel";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/pipelineJobs/[^/]+/operations/[^/]+$");

            /**
             * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
             * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
             * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
             * methods to check whether the cancellation succeeded or whether the operation completed despite
             * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
             * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
             * `Code.CANCELLED`.
             *
             * Create a request for the method "operations.cancel".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
             * <p> {@link
             * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource to be cancelled.
             * @since 1.13
             */
            protected Cancel(java.lang.String name) {
              super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/pipelineJobs/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public Cancel set$Xgafv(java.lang.String $Xgafv) {
              return (Cancel) super.set$Xgafv($Xgafv);
            }

            @Override
            public Cancel setAccessToken(java.lang.String accessToken) {
              return (Cancel) super.setAccessToken(accessToken);
            }

            @Override
            public Cancel setAlt(java.lang.String alt) {
              return (Cancel) super.setAlt(alt);
            }

            @Override
            public Cancel setCallback(java.lang.String callback) {
              return (Cancel) super.setCallback(callback);
            }

            @Override
            public Cancel setFields(java.lang.String fields) {
              return (Cancel) super.setFields(fields);
            }

            @Override
            public Cancel setKey(java.lang.String key) {
              return (Cancel) super.setKey(key);
            }

            @Override
            public Cancel setOauthToken(java.lang.String oauthToken) {
              return (Cancel) super.setOauthToken(oauthToken);
            }

            @Override
            public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Cancel) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Cancel setQuotaUser(java.lang.String quotaUser) {
              return (Cancel) super.setQuotaUser(quotaUser);
            }

            @Override
            public Cancel setUploadType(java.lang.String uploadType) {
              return (Cancel) super.setUploadType(uploadType);
            }

            @Override
            public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
              return (Cancel) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource to be cancelled. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource to be cancelled.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource to be cancelled. */
            public Cancel setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/pipelineJobs/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Cancel set(String parameterName, Object value) {
              return (Cancel) super.set(parameterName, value);
            }
          }
          /**
           * Deletes a long-running operation. This method indicates that the client is no longer interested
           * in the operation result. It does not cancel the operation. If the server doesn't support this
           * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.delete".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource to be deleted.
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/pipelineJobs/[^/]+/operations/[^/]+$");

            /**
             * Deletes a long-running operation. This method indicates that the client is no longer interested
             * in the operation result. It does not cancel the operation. If the server doesn't support this
             * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.delete".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource to be deleted.
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/pipelineJobs/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource to be deleted. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource to be deleted.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource to be deleted. */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/pipelineJobs/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Gets the latest state of a long-running operation. Clients can use this method to poll the
           * operation result at intervals as recommended by the API service.
           *
           * Create a request for the method "operations.get".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource.
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/pipelineJobs/[^/]+/operations/[^/]+$");

            /**
             * Gets the latest state of a long-running operation. Clients can use this method to poll the
             * operation result at intervals as recommended by the API service.
             *
             * Create a request for the method "operations.get".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource.
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/pipelineJobs/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource. */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/pipelineJobs/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Lists operations that match the specified filter in the request. If the server doesn't support
           * this method, it returns `UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.list".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation's parent resource.
           * @return the request
           */
          public List list(java.lang.String name) throws java.io.IOException {
            List result = new List(name);
            initialize(result);
            return result;
          }

          public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse> {

            private static final String REST_PATH = "v1/{+name}/operations";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/pipelineJobs/[^/]+$");

            /**
             * Lists operations that match the specified filter in the request. If the server doesn't support
             * this method, it returns `UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.list".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation's parent resource.
             * @since 1.13
             */
            protected List(java.lang.String name) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/pipelineJobs/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation's parent resource. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation's parent resource.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation's parent resource. */
            public List setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/pipelineJobs/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /** The standard list filter. */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** The standard list filter.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /** The standard list filter. */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /** The standard list page size. */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** The standard list page size.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /** The standard list page size. */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** The standard list page token. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** The standard list page token.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** The standard list page token. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Waits until the specified long-running operation is done or reaches at most a specified timeout,
           * returning the latest state. If the operation is already done, the latest state is immediately
           * returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC
           * timeout is used. If the server does not support this method, it returns
           * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
           * the latest state before the specified timeout (including immediately), meaning even an immediate
           * response is no guarantee that the operation is done.
           *
           * Create a request for the method "operations.wait".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Wait#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource to wait on.
           * @return the request
           */
          public Wait wait(java.lang.String name) throws java.io.IOException {
            Wait result = new Wait(name);
            initialize(result);
            return result;
          }

          public class Wait extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+name}:wait";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/pipelineJobs/[^/]+/operations/[^/]+$");

            /**
             * Waits until the specified long-running operation is done or reaches at most a specified
             * timeout, returning the latest state. If the operation is already done, the latest state is
             * immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout,
             * the HTTP/RPC timeout is used. If the server does not support this method, it returns
             * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
             * the latest state before the specified timeout (including immediately), meaning even an
             * immediate response is no guarantee that the operation is done.
             *
             * Create a request for the method "operations.wait".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Wait#execute()} method to invoke the remote operation. <p>
             * {@link Wait#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource to wait on.
             * @since 1.13
             */
            protected Wait(java.lang.String name) {
              super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/pipelineJobs/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public Wait set$Xgafv(java.lang.String $Xgafv) {
              return (Wait) super.set$Xgafv($Xgafv);
            }

            @Override
            public Wait setAccessToken(java.lang.String accessToken) {
              return (Wait) super.setAccessToken(accessToken);
            }

            @Override
            public Wait setAlt(java.lang.String alt) {
              return (Wait) super.setAlt(alt);
            }

            @Override
            public Wait setCallback(java.lang.String callback) {
              return (Wait) super.setCallback(callback);
            }

            @Override
            public Wait setFields(java.lang.String fields) {
              return (Wait) super.setFields(fields);
            }

            @Override
            public Wait setKey(java.lang.String key) {
              return (Wait) super.setKey(key);
            }

            @Override
            public Wait setOauthToken(java.lang.String oauthToken) {
              return (Wait) super.setOauthToken(oauthToken);
            }

            @Override
            public Wait setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Wait) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Wait setQuotaUser(java.lang.String quotaUser) {
              return (Wait) super.setQuotaUser(quotaUser);
            }

            @Override
            public Wait setUploadType(java.lang.String uploadType) {
              return (Wait) super.setUploadType(uploadType);
            }

            @Override
            public Wait setUploadProtocol(java.lang.String uploadProtocol) {
              return (Wait) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource to wait on. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource to wait on.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource to wait on. */
            public Wait setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/pipelineJobs/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * The maximum duration to wait before timing out. If left blank, the wait will be at
             * most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline
             * is also specified, the shorter one will be used.
             */
            @com.google.api.client.util.Key
            private String timeout;

            /** The maximum duration to wait before timing out. If left blank, the wait will be at most the time
           permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the
           shorter one will be used.
             */
            public String getTimeout() {
              return timeout;
            }

            /**
             * The maximum duration to wait before timing out. If left blank, the wait will be at
             * most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline
             * is also specified, the shorter one will be used.
             */
            public Wait setTimeout(String timeout) {
              this.timeout = timeout;
              return this;
            }

            @Override
            public Wait set(String parameterName, Object value) {
              return (Wait) super.set(parameterName, value);
            }
          }

        }
      }
      /**
       * An accessor for creating requests from the Publishers collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Aiplatform aiplatform = new Aiplatform(...);}
       *   {@code Aiplatform.Publishers.List request = aiplatform.publishers().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Publishers publishers() {
        return new Publishers();
      }

      /**
       * The "publishers" collection of methods.
       */
      public class Publishers {

        /**
         * An accessor for creating requests from the Models collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Aiplatform aiplatform = new Aiplatform(...);}
         *   {@code Aiplatform.Models.List request = aiplatform.models().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Models models() {
          return new Models();
        }

        /**
         * The "models" collection of methods.
         */
        public class Models {

          /**
           * Return a list of tokens based on the input text.
           *
           * Create a request for the method "models.computeTokens".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link ComputeTokens#execute()} method to invoke the remote operation.
           *
           * @param endpoint Required. The name of the Endpoint requested to get lists of tokens and token ids.
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ComputeTokensRequest}
           * @return the request
           */
          public ComputeTokens computeTokens(java.lang.String endpoint, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ComputeTokensRequest content) throws java.io.IOException {
            ComputeTokens result = new ComputeTokens(endpoint, content);
            initialize(result);
            return result;
          }

          public class ComputeTokens extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ComputeTokensResponse> {

            private static final String REST_PATH = "v1/{+endpoint}:computeTokens";

            private final java.util.regex.Pattern ENDPOINT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/publishers/[^/]+/models/[^/]+$");

            /**
             * Return a list of tokens based on the input text.
             *
             * Create a request for the method "models.computeTokens".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link ComputeTokens#execute()} method to invoke the remote
             * operation. <p> {@link ComputeTokens#initialize(com.google.api.client.googleapis.services.Abstra
             * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
             * the constructor. </p>
             *
             * @param endpoint Required. The name of the Endpoint requested to get lists of tokens and token ids.
             * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ComputeTokensRequest}
             * @since 1.13
             */
            protected ComputeTokens(java.lang.String endpoint, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ComputeTokensRequest content) {
              super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ComputeTokensResponse.class);
              this.endpoint = com.google.api.client.util.Preconditions.checkNotNull(endpoint, "Required parameter endpoint must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(ENDPOINT_PATTERN.matcher(endpoint).matches(),
                    "Parameter endpoint must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/publishers/[^/]+/models/[^/]+$");
              }
            }

            @Override
            public ComputeTokens set$Xgafv(java.lang.String $Xgafv) {
              return (ComputeTokens) super.set$Xgafv($Xgafv);
            }

            @Override
            public ComputeTokens setAccessToken(java.lang.String accessToken) {
              return (ComputeTokens) super.setAccessToken(accessToken);
            }

            @Override
            public ComputeTokens setAlt(java.lang.String alt) {
              return (ComputeTokens) super.setAlt(alt);
            }

            @Override
            public ComputeTokens setCallback(java.lang.String callback) {
              return (ComputeTokens) super.setCallback(callback);
            }

            @Override
            public ComputeTokens setFields(java.lang.String fields) {
              return (ComputeTokens) super.setFields(fields);
            }

            @Override
            public ComputeTokens setKey(java.lang.String key) {
              return (ComputeTokens) super.setKey(key);
            }

            @Override
            public ComputeTokens setOauthToken(java.lang.String oauthToken) {
              return (ComputeTokens) super.setOauthToken(oauthToken);
            }

            @Override
            public ComputeTokens setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (ComputeTokens) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public ComputeTokens setQuotaUser(java.lang.String quotaUser) {
              return (ComputeTokens) super.setQuotaUser(quotaUser);
            }

            @Override
            public ComputeTokens setUploadType(java.lang.String uploadType) {
              return (ComputeTokens) super.setUploadType(uploadType);
            }

            @Override
            public ComputeTokens setUploadProtocol(java.lang.String uploadProtocol) {
              return (ComputeTokens) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the Endpoint requested to get lists of tokens and token ids.
             */
            @com.google.api.client.util.Key
            private java.lang.String endpoint;

            /** Required. The name of the Endpoint requested to get lists of tokens and token ids.
             */
            public java.lang.String getEndpoint() {
              return endpoint;
            }

            /**
             * Required. The name of the Endpoint requested to get lists of tokens and token ids.
             */
            public ComputeTokens setEndpoint(java.lang.String endpoint) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(ENDPOINT_PATTERN.matcher(endpoint).matches(),
                    "Parameter endpoint must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/publishers/[^/]+/models/[^/]+$");
              }
              this.endpoint = endpoint;
              return this;
            }

            @Override
            public ComputeTokens set(String parameterName, Object value) {
              return (ComputeTokens) super.set(parameterName, value);
            }
          }
          /**
           * Perform a token counting.
           *
           * Create a request for the method "models.countTokens".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link CountTokens#execute()} method to invoke the remote operation.
           *
           * @param endpoint Required. The name of the Endpoint requested to perform token counting. Format:
           *        `projects/{project}/locations/{location}/endpoints/{endpoint}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CountTokensRequest}
           * @return the request
           */
          public CountTokens countTokens(java.lang.String endpoint, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CountTokensRequest content) throws java.io.IOException {
            CountTokens result = new CountTokens(endpoint, content);
            initialize(result);
            return result;
          }

          public class CountTokens extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CountTokensResponse> {

            private static final String REST_PATH = "v1/{+endpoint}:countTokens";

            private final java.util.regex.Pattern ENDPOINT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/publishers/[^/]+/models/[^/]+$");

            /**
             * Perform a token counting.
             *
             * Create a request for the method "models.countTokens".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link CountTokens#execute()} method to invoke the remote
             * operation. <p> {@link
             * CountTokens#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param endpoint Required. The name of the Endpoint requested to perform token counting. Format:
           *        `projects/{project}/locations/{location}/endpoints/{endpoint}`
             * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CountTokensRequest}
             * @since 1.13
             */
            protected CountTokens(java.lang.String endpoint, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CountTokensRequest content) {
              super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CountTokensResponse.class);
              this.endpoint = com.google.api.client.util.Preconditions.checkNotNull(endpoint, "Required parameter endpoint must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(ENDPOINT_PATTERN.matcher(endpoint).matches(),
                    "Parameter endpoint must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/publishers/[^/]+/models/[^/]+$");
              }
            }

            @Override
            public CountTokens set$Xgafv(java.lang.String $Xgafv) {
              return (CountTokens) super.set$Xgafv($Xgafv);
            }

            @Override
            public CountTokens setAccessToken(java.lang.String accessToken) {
              return (CountTokens) super.setAccessToken(accessToken);
            }

            @Override
            public CountTokens setAlt(java.lang.String alt) {
              return (CountTokens) super.setAlt(alt);
            }

            @Override
            public CountTokens setCallback(java.lang.String callback) {
              return (CountTokens) super.setCallback(callback);
            }

            @Override
            public CountTokens setFields(java.lang.String fields) {
              return (CountTokens) super.setFields(fields);
            }

            @Override
            public CountTokens setKey(java.lang.String key) {
              return (CountTokens) super.setKey(key);
            }

            @Override
            public CountTokens setOauthToken(java.lang.String oauthToken) {
              return (CountTokens) super.setOauthToken(oauthToken);
            }

            @Override
            public CountTokens setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (CountTokens) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public CountTokens setQuotaUser(java.lang.String quotaUser) {
              return (CountTokens) super.setQuotaUser(quotaUser);
            }

            @Override
            public CountTokens setUploadType(java.lang.String uploadType) {
              return (CountTokens) super.setUploadType(uploadType);
            }

            @Override
            public CountTokens setUploadProtocol(java.lang.String uploadProtocol) {
              return (CountTokens) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the Endpoint requested to perform token counting. Format:
             * `projects/{project}/locations/{location}/endpoints/{endpoint}`
             */
            @com.google.api.client.util.Key
            private java.lang.String endpoint;

            /** Required. The name of the Endpoint requested to perform token counting. Format:
           `projects/{project}/locations/{location}/endpoints/{endpoint}`
             */
            public java.lang.String getEndpoint() {
              return endpoint;
            }

            /**
             * Required. The name of the Endpoint requested to perform token counting. Format:
             * `projects/{project}/locations/{location}/endpoints/{endpoint}`
             */
            public CountTokens setEndpoint(java.lang.String endpoint) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(ENDPOINT_PATTERN.matcher(endpoint).matches(),
                    "Parameter endpoint must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/publishers/[^/]+/models/[^/]+$");
              }
              this.endpoint = endpoint;
              return this;
            }

            @Override
            public CountTokens set(String parameterName, Object value) {
              return (CountTokens) super.set(parameterName, value);
            }
          }
          /**
           * Generate content with multimodal inputs.
           *
           * Create a request for the method "models.generateContent".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link GenerateContent#execute()} method to invoke the remote operation.
           *
           * @param model Required. The fully qualified name of the publisher model or tuned model endpoint to use. Publisher
           *        model format: `projects/{project}/locations/{location}/publishers/models` Tuned model
           *        endpoint format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1GenerateContentRequest}
           * @return the request
           */
          public GenerateContent generateContent(java.lang.String model, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1GenerateContentRequest content) throws java.io.IOException {
            GenerateContent result = new GenerateContent(model, content);
            initialize(result);
            return result;
          }

          public class GenerateContent extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1GenerateContentResponse> {

            private static final String REST_PATH = "v1/{+model}:generateContent";

            private final java.util.regex.Pattern MODEL_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/publishers/[^/]+/models/[^/]+$");

            /**
             * Generate content with multimodal inputs.
             *
             * Create a request for the method "models.generateContent".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link GenerateContent#execute()} method to invoke the remote
             * operation. <p> {@link GenerateContent#initialize(com.google.api.client.googleapis.services.Abst
             * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
             * the constructor. </p>
             *
             * @param model Required. The fully qualified name of the publisher model or tuned model endpoint to use. Publisher
           *        model format: `projects/{project}/locations/{location}/publishers/models` Tuned model
           *        endpoint format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
             * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1GenerateContentRequest}
             * @since 1.13
             */
            protected GenerateContent(java.lang.String model, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1GenerateContentRequest content) {
              super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1GenerateContentResponse.class);
              this.model = com.google.api.client.util.Preconditions.checkNotNull(model, "Required parameter model must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(MODEL_PATTERN.matcher(model).matches(),
                    "Parameter model must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/publishers/[^/]+/models/[^/]+$");
              }
            }

            @Override
            public GenerateContent set$Xgafv(java.lang.String $Xgafv) {
              return (GenerateContent) super.set$Xgafv($Xgafv);
            }

            @Override
            public GenerateContent setAccessToken(java.lang.String accessToken) {
              return (GenerateContent) super.setAccessToken(accessToken);
            }

            @Override
            public GenerateContent setAlt(java.lang.String alt) {
              return (GenerateContent) super.setAlt(alt);
            }

            @Override
            public GenerateContent setCallback(java.lang.String callback) {
              return (GenerateContent) super.setCallback(callback);
            }

            @Override
            public GenerateContent setFields(java.lang.String fields) {
              return (GenerateContent) super.setFields(fields);
            }

            @Override
            public GenerateContent setKey(java.lang.String key) {
              return (GenerateContent) super.setKey(key);
            }

            @Override
            public GenerateContent setOauthToken(java.lang.String oauthToken) {
              return (GenerateContent) super.setOauthToken(oauthToken);
            }

            @Override
            public GenerateContent setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (GenerateContent) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public GenerateContent setQuotaUser(java.lang.String quotaUser) {
              return (GenerateContent) super.setQuotaUser(quotaUser);
            }

            @Override
            public GenerateContent setUploadType(java.lang.String uploadType) {
              return (GenerateContent) super.setUploadType(uploadType);
            }

            @Override
            public GenerateContent setUploadProtocol(java.lang.String uploadProtocol) {
              return (GenerateContent) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The fully qualified name of the publisher model or tuned model endpoint to
             * use. Publisher model format:
             * `projects/{project}/locations/{location}/publishers/models` Tuned model endpoint
             * format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
             */
            @com.google.api.client.util.Key
            private java.lang.String model;

            /** Required. The fully qualified name of the publisher model or tuned model endpoint to use. Publisher
           model format: `projects/{project}/locations/{location}/publishers/models` Tuned model endpoint
           format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
             */
            public java.lang.String getModel() {
              return model;
            }

            /**
             * Required. The fully qualified name of the publisher model or tuned model endpoint to
             * use. Publisher model format:
             * `projects/{project}/locations/{location}/publishers/models` Tuned model endpoint
             * format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
             */
            public GenerateContent setModel(java.lang.String model) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(MODEL_PATTERN.matcher(model).matches(),
                    "Parameter model must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/publishers/[^/]+/models/[^/]+$");
              }
              this.model = model;
              return this;
            }

            @Override
            public GenerateContent set(String parameterName, Object value) {
              return (GenerateContent) super.set(parameterName, value);
            }
          }
          /**
           * Perform an online prediction.
           *
           * Create a request for the method "models.predict".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Predict#execute()} method to invoke the remote operation.
           *
           * @param endpoint Required. The name of the Endpoint requested to serve the prediction. Format:
           *        `projects/{project}/locations/{location}/endpoints/{endpoint}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1PredictRequest}
           * @return the request
           */
          public Predict predict(java.lang.String endpoint, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1PredictRequest content) throws java.io.IOException {
            Predict result = new Predict(endpoint, content);
            initialize(result);
            return result;
          }

          public class Predict extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1PredictResponse> {

            private static final String REST_PATH = "v1/{+endpoint}:predict";

            private final java.util.regex.Pattern ENDPOINT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/publishers/[^/]+/models/[^/]+$");

            /**
             * Perform an online prediction.
             *
             * Create a request for the method "models.predict".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Predict#execute()} method to invoke the remote operation.
             * <p> {@link
             * Predict#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param endpoint Required. The name of the Endpoint requested to serve the prediction. Format:
           *        `projects/{project}/locations/{location}/endpoints/{endpoint}`
             * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1PredictRequest}
             * @since 1.13
             */
            protected Predict(java.lang.String endpoint, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1PredictRequest content) {
              super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1PredictResponse.class);
              this.endpoint = com.google.api.client.util.Preconditions.checkNotNull(endpoint, "Required parameter endpoint must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(ENDPOINT_PATTERN.matcher(endpoint).matches(),
                    "Parameter endpoint must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/publishers/[^/]+/models/[^/]+$");
              }
            }

            @Override
            public Predict set$Xgafv(java.lang.String $Xgafv) {
              return (Predict) super.set$Xgafv($Xgafv);
            }

            @Override
            public Predict setAccessToken(java.lang.String accessToken) {
              return (Predict) super.setAccessToken(accessToken);
            }

            @Override
            public Predict setAlt(java.lang.String alt) {
              return (Predict) super.setAlt(alt);
            }

            @Override
            public Predict setCallback(java.lang.String callback) {
              return (Predict) super.setCallback(callback);
            }

            @Override
            public Predict setFields(java.lang.String fields) {
              return (Predict) super.setFields(fields);
            }

            @Override
            public Predict setKey(java.lang.String key) {
              return (Predict) super.setKey(key);
            }

            @Override
            public Predict setOauthToken(java.lang.String oauthToken) {
              return (Predict) super.setOauthToken(oauthToken);
            }

            @Override
            public Predict setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Predict) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Predict setQuotaUser(java.lang.String quotaUser) {
              return (Predict) super.setQuotaUser(quotaUser);
            }

            @Override
            public Predict setUploadType(java.lang.String uploadType) {
              return (Predict) super.setUploadType(uploadType);
            }

            @Override
            public Predict setUploadProtocol(java.lang.String uploadProtocol) {
              return (Predict) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the Endpoint requested to serve the prediction. Format:
             * `projects/{project}/locations/{location}/endpoints/{endpoint}`
             */
            @com.google.api.client.util.Key
            private java.lang.String endpoint;

            /** Required. The name of the Endpoint requested to serve the prediction. Format:
           `projects/{project}/locations/{location}/endpoints/{endpoint}`
             */
            public java.lang.String getEndpoint() {
              return endpoint;
            }

            /**
             * Required. The name of the Endpoint requested to serve the prediction. Format:
             * `projects/{project}/locations/{location}/endpoints/{endpoint}`
             */
            public Predict setEndpoint(java.lang.String endpoint) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(ENDPOINT_PATTERN.matcher(endpoint).matches(),
                    "Parameter endpoint must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/publishers/[^/]+/models/[^/]+$");
              }
              this.endpoint = endpoint;
              return this;
            }

            @Override
            public Predict set(String parameterName, Object value) {
              return (Predict) super.set(parameterName, value);
            }
          }
          /**
           * Perform an online prediction with an arbitrary HTTP payload. The response includes the following
           * HTTP headers: * `X-Vertex-AI-Endpoint-Id`: ID of the Endpoint that served this prediction. *
           * `X-Vertex-AI-Deployed-Model-Id`: ID of the Endpoint's DeployedModel that served this prediction.
           *
           * Create a request for the method "models.rawPredict".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link RawPredict#execute()} method to invoke the remote operation.
           *
           * @param endpoint Required. The name of the Endpoint requested to serve the prediction. Format:
           *        `projects/{project}/locations/{location}/endpoints/{endpoint}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1RawPredictRequest}
           * @return the request
           */
          public RawPredict rawPredict(java.lang.String endpoint, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1RawPredictRequest content) throws java.io.IOException {
            RawPredict result = new RawPredict(endpoint, content);
            initialize(result);
            return result;
          }

          public class RawPredict extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleApiHttpBody> {

            private static final String REST_PATH = "v1/{+endpoint}:rawPredict";

            private final java.util.regex.Pattern ENDPOINT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/publishers/[^/]+/models/[^/]+$");

            /**
             * Perform an online prediction with an arbitrary HTTP payload. The response includes the
             * following HTTP headers: * `X-Vertex-AI-Endpoint-Id`: ID of the Endpoint that served this
             * prediction. * `X-Vertex-AI-Deployed-Model-Id`: ID of the Endpoint's DeployedModel that served
             * this prediction.
             *
             * Create a request for the method "models.rawPredict".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link RawPredict#execute()} method to invoke the remote
             * operation. <p> {@link
             * RawPredict#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param endpoint Required. The name of the Endpoint requested to serve the prediction. Format:
           *        `projects/{project}/locations/{location}/endpoints/{endpoint}`
             * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1RawPredictRequest}
             * @since 1.13
             */
            protected RawPredict(java.lang.String endpoint, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1RawPredictRequest content) {
              super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleApiHttpBody.class);
              this.endpoint = com.google.api.client.util.Preconditions.checkNotNull(endpoint, "Required parameter endpoint must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(ENDPOINT_PATTERN.matcher(endpoint).matches(),
                    "Parameter endpoint must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/publishers/[^/]+/models/[^/]+$");
              }
            }

            @Override
            public RawPredict set$Xgafv(java.lang.String $Xgafv) {
              return (RawPredict) super.set$Xgafv($Xgafv);
            }

            @Override
            public RawPredict setAccessToken(java.lang.String accessToken) {
              return (RawPredict) super.setAccessToken(accessToken);
            }

            @Override
            public RawPredict setAlt(java.lang.String alt) {
              return (RawPredict) super.setAlt(alt);
            }

            @Override
            public RawPredict setCallback(java.lang.String callback) {
              return (RawPredict) super.setCallback(callback);
            }

            @Override
            public RawPredict setFields(java.lang.String fields) {
              return (RawPredict) super.setFields(fields);
            }

            @Override
            public RawPredict setKey(java.lang.String key) {
              return (RawPredict) super.setKey(key);
            }

            @Override
            public RawPredict setOauthToken(java.lang.String oauthToken) {
              return (RawPredict) super.setOauthToken(oauthToken);
            }

            @Override
            public RawPredict setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (RawPredict) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public RawPredict setQuotaUser(java.lang.String quotaUser) {
              return (RawPredict) super.setQuotaUser(quotaUser);
            }

            @Override
            public RawPredict setUploadType(java.lang.String uploadType) {
              return (RawPredict) super.setUploadType(uploadType);
            }

            @Override
            public RawPredict setUploadProtocol(java.lang.String uploadProtocol) {
              return (RawPredict) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the Endpoint requested to serve the prediction. Format:
             * `projects/{project}/locations/{location}/endpoints/{endpoint}`
             */
            @com.google.api.client.util.Key
            private java.lang.String endpoint;

            /** Required. The name of the Endpoint requested to serve the prediction. Format:
           `projects/{project}/locations/{location}/endpoints/{endpoint}`
             */
            public java.lang.String getEndpoint() {
              return endpoint;
            }

            /**
             * Required. The name of the Endpoint requested to serve the prediction. Format:
             * `projects/{project}/locations/{location}/endpoints/{endpoint}`
             */
            public RawPredict setEndpoint(java.lang.String endpoint) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(ENDPOINT_PATTERN.matcher(endpoint).matches(),
                    "Parameter endpoint must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/publishers/[^/]+/models/[^/]+$");
              }
              this.endpoint = endpoint;
              return this;
            }

            @Override
            public RawPredict set(String parameterName, Object value) {
              return (RawPredict) super.set(parameterName, value);
            }
          }
          /**
           * Perform a server-side streaming online prediction request for Vertex LLM streaming.
           *
           * Create a request for the method "models.serverStreamingPredict".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link ServerStreamingPredict#execute()} method to invoke the remote
           * operation.
           *
           * @param endpoint Required. The name of the Endpoint requested to serve the prediction. Format:
           *        `projects/{project}/locations/{location}/endpoints/{endpoint}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1StreamingPredictRequest}
           * @return the request
           */
          public ServerStreamingPredict serverStreamingPredict(java.lang.String endpoint, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1StreamingPredictRequest content) throws java.io.IOException {
            ServerStreamingPredict result = new ServerStreamingPredict(endpoint, content);
            initialize(result);
            return result;
          }

          public class ServerStreamingPredict extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1StreamingPredictResponse> {

            private static final String REST_PATH = "v1/{+endpoint}:serverStreamingPredict";

            private final java.util.regex.Pattern ENDPOINT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/publishers/[^/]+/models/[^/]+$");

            /**
             * Perform a server-side streaming online prediction request for Vertex LLM streaming.
             *
             * Create a request for the method "models.serverStreamingPredict".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link ServerStreamingPredict#execute()} method to invoke the
             * remote operation. <p> {@link ServerStreamingPredict#initialize(com.google.api.client.googleapis
             * .services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
             * after invoking the constructor. </p>
             *
             * @param endpoint Required. The name of the Endpoint requested to serve the prediction. Format:
           *        `projects/{project}/locations/{location}/endpoints/{endpoint}`
             * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1StreamingPredictRequest}
             * @since 1.13
             */
            protected ServerStreamingPredict(java.lang.String endpoint, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1StreamingPredictRequest content) {
              super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1StreamingPredictResponse.class);
              this.endpoint = com.google.api.client.util.Preconditions.checkNotNull(endpoint, "Required parameter endpoint must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(ENDPOINT_PATTERN.matcher(endpoint).matches(),
                    "Parameter endpoint must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/publishers/[^/]+/models/[^/]+$");
              }
            }

            @Override
            public ServerStreamingPredict set$Xgafv(java.lang.String $Xgafv) {
              return (ServerStreamingPredict) super.set$Xgafv($Xgafv);
            }

            @Override
            public ServerStreamingPredict setAccessToken(java.lang.String accessToken) {
              return (ServerStreamingPredict) super.setAccessToken(accessToken);
            }

            @Override
            public ServerStreamingPredict setAlt(java.lang.String alt) {
              return (ServerStreamingPredict) super.setAlt(alt);
            }

            @Override
            public ServerStreamingPredict setCallback(java.lang.String callback) {
              return (ServerStreamingPredict) super.setCallback(callback);
            }

            @Override
            public ServerStreamingPredict setFields(java.lang.String fields) {
              return (ServerStreamingPredict) super.setFields(fields);
            }

            @Override
            public ServerStreamingPredict setKey(java.lang.String key) {
              return (ServerStreamingPredict) super.setKey(key);
            }

            @Override
            public ServerStreamingPredict setOauthToken(java.lang.String oauthToken) {
              return (ServerStreamingPredict) super.setOauthToken(oauthToken);
            }

            @Override
            public ServerStreamingPredict setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (ServerStreamingPredict) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public ServerStreamingPredict setQuotaUser(java.lang.String quotaUser) {
              return (ServerStreamingPredict) super.setQuotaUser(quotaUser);
            }

            @Override
            public ServerStreamingPredict setUploadType(java.lang.String uploadType) {
              return (ServerStreamingPredict) super.setUploadType(uploadType);
            }

            @Override
            public ServerStreamingPredict setUploadProtocol(java.lang.String uploadProtocol) {
              return (ServerStreamingPredict) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the Endpoint requested to serve the prediction. Format:
             * `projects/{project}/locations/{location}/endpoints/{endpoint}`
             */
            @com.google.api.client.util.Key
            private java.lang.String endpoint;

            /** Required. The name of the Endpoint requested to serve the prediction. Format:
           `projects/{project}/locations/{location}/endpoints/{endpoint}`
             */
            public java.lang.String getEndpoint() {
              return endpoint;
            }

            /**
             * Required. The name of the Endpoint requested to serve the prediction. Format:
             * `projects/{project}/locations/{location}/endpoints/{endpoint}`
             */
            public ServerStreamingPredict setEndpoint(java.lang.String endpoint) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(ENDPOINT_PATTERN.matcher(endpoint).matches(),
                    "Parameter endpoint must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/publishers/[^/]+/models/[^/]+$");
              }
              this.endpoint = endpoint;
              return this;
            }

            @Override
            public ServerStreamingPredict set(String parameterName, Object value) {
              return (ServerStreamingPredict) super.set(parameterName, value);
            }
          }
          /**
           * Generate content with multimodal inputs with streaming support.
           *
           * Create a request for the method "models.streamGenerateContent".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link StreamGenerateContent#execute()} method to invoke the remote
           * operation.
           *
           * @param model Required. The fully qualified name of the publisher model or tuned model endpoint to use. Publisher
           *        model format: `projects/{project}/locations/{location}/publishers/models` Tuned model
           *        endpoint format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1GenerateContentRequest}
           * @return the request
           */
          public StreamGenerateContent streamGenerateContent(java.lang.String model, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1GenerateContentRequest content) throws java.io.IOException {
            StreamGenerateContent result = new StreamGenerateContent(model, content);
            initialize(result);
            return result;
          }

          public class StreamGenerateContent extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1GenerateContentResponse> {

            private static final String REST_PATH = "v1/{+model}:streamGenerateContent";

            private final java.util.regex.Pattern MODEL_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/publishers/[^/]+/models/[^/]+$");

            /**
             * Generate content with multimodal inputs with streaming support.
             *
             * Create a request for the method "models.streamGenerateContent".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link StreamGenerateContent#execute()} method to invoke the
             * remote operation. <p> {@link StreamGenerateContent#initialize(com.google.api.client.googleapis.
             * services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
             * after invoking the constructor. </p>
             *
             * @param model Required. The fully qualified name of the publisher model or tuned model endpoint to use. Publisher
           *        model format: `projects/{project}/locations/{location}/publishers/models` Tuned model
           *        endpoint format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
             * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1GenerateContentRequest}
             * @since 1.13
             */
            protected StreamGenerateContent(java.lang.String model, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1GenerateContentRequest content) {
              super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1GenerateContentResponse.class);
              this.model = com.google.api.client.util.Preconditions.checkNotNull(model, "Required parameter model must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(MODEL_PATTERN.matcher(model).matches(),
                    "Parameter model must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/publishers/[^/]+/models/[^/]+$");
              }
            }

            @Override
            public StreamGenerateContent set$Xgafv(java.lang.String $Xgafv) {
              return (StreamGenerateContent) super.set$Xgafv($Xgafv);
            }

            @Override
            public StreamGenerateContent setAccessToken(java.lang.String accessToken) {
              return (StreamGenerateContent) super.setAccessToken(accessToken);
            }

            @Override
            public StreamGenerateContent setAlt(java.lang.String alt) {
              return (StreamGenerateContent) super.setAlt(alt);
            }

            @Override
            public StreamGenerateContent setCallback(java.lang.String callback) {
              return (StreamGenerateContent) super.setCallback(callback);
            }

            @Override
            public StreamGenerateContent setFields(java.lang.String fields) {
              return (StreamGenerateContent) super.setFields(fields);
            }

            @Override
            public StreamGenerateContent setKey(java.lang.String key) {
              return (StreamGenerateContent) super.setKey(key);
            }

            @Override
            public StreamGenerateContent setOauthToken(java.lang.String oauthToken) {
              return (StreamGenerateContent) super.setOauthToken(oauthToken);
            }

            @Override
            public StreamGenerateContent setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (StreamGenerateContent) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public StreamGenerateContent setQuotaUser(java.lang.String quotaUser) {
              return (StreamGenerateContent) super.setQuotaUser(quotaUser);
            }

            @Override
            public StreamGenerateContent setUploadType(java.lang.String uploadType) {
              return (StreamGenerateContent) super.setUploadType(uploadType);
            }

            @Override
            public StreamGenerateContent setUploadProtocol(java.lang.String uploadProtocol) {
              return (StreamGenerateContent) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The fully qualified name of the publisher model or tuned model endpoint to
             * use. Publisher model format:
             * `projects/{project}/locations/{location}/publishers/models` Tuned model endpoint
             * format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
             */
            @com.google.api.client.util.Key
            private java.lang.String model;

            /** Required. The fully qualified name of the publisher model or tuned model endpoint to use. Publisher
           model format: `projects/{project}/locations/{location}/publishers/models` Tuned model endpoint
           format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
             */
            public java.lang.String getModel() {
              return model;
            }

            /**
             * Required. The fully qualified name of the publisher model or tuned model endpoint to
             * use. Publisher model format:
             * `projects/{project}/locations/{location}/publishers/models` Tuned model endpoint
             * format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
             */
            public StreamGenerateContent setModel(java.lang.String model) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(MODEL_PATTERN.matcher(model).matches(),
                    "Parameter model must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/publishers/[^/]+/models/[^/]+$");
              }
              this.model = model;
              return this;
            }

            @Override
            public StreamGenerateContent set(String parameterName, Object value) {
              return (StreamGenerateContent) super.set(parameterName, value);
            }
          }
          /**
           * Perform a streaming online prediction with an arbitrary HTTP payload.
           *
           * Create a request for the method "models.streamRawPredict".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link StreamRawPredict#execute()} method to invoke the remote operation.
           *
           * @param endpoint Required. The name of the Endpoint requested to serve the prediction. Format:
           *        `projects/{project}/locations/{location}/endpoints/{endpoint}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1StreamRawPredictRequest}
           * @return the request
           */
          public StreamRawPredict streamRawPredict(java.lang.String endpoint, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1StreamRawPredictRequest content) throws java.io.IOException {
            StreamRawPredict result = new StreamRawPredict(endpoint, content);
            initialize(result);
            return result;
          }

          public class StreamRawPredict extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleApiHttpBody> {

            private static final String REST_PATH = "v1/{+endpoint}:streamRawPredict";

            private final java.util.regex.Pattern ENDPOINT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/publishers/[^/]+/models/[^/]+$");

            /**
             * Perform a streaming online prediction with an arbitrary HTTP payload.
             *
             * Create a request for the method "models.streamRawPredict".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link StreamRawPredict#execute()} method to invoke the remote
             * operation. <p> {@link StreamRawPredict#initialize(com.google.api.client.googleapis.services.Abs
             * tractGoogleClientRequest)} must be called to initialize this instance immediately after
             * invoking the constructor. </p>
             *
             * @param endpoint Required. The name of the Endpoint requested to serve the prediction. Format:
           *        `projects/{project}/locations/{location}/endpoints/{endpoint}`
             * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1StreamRawPredictRequest}
             * @since 1.13
             */
            protected StreamRawPredict(java.lang.String endpoint, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1StreamRawPredictRequest content) {
              super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleApiHttpBody.class);
              this.endpoint = com.google.api.client.util.Preconditions.checkNotNull(endpoint, "Required parameter endpoint must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(ENDPOINT_PATTERN.matcher(endpoint).matches(),
                    "Parameter endpoint must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/publishers/[^/]+/models/[^/]+$");
              }
            }

            @Override
            public StreamRawPredict set$Xgafv(java.lang.String $Xgafv) {
              return (StreamRawPredict) super.set$Xgafv($Xgafv);
            }

            @Override
            public StreamRawPredict setAccessToken(java.lang.String accessToken) {
              return (StreamRawPredict) super.setAccessToken(accessToken);
            }

            @Override
            public StreamRawPredict setAlt(java.lang.String alt) {
              return (StreamRawPredict) super.setAlt(alt);
            }

            @Override
            public StreamRawPredict setCallback(java.lang.String callback) {
              return (StreamRawPredict) super.setCallback(callback);
            }

            @Override
            public StreamRawPredict setFields(java.lang.String fields) {
              return (StreamRawPredict) super.setFields(fields);
            }

            @Override
            public StreamRawPredict setKey(java.lang.String key) {
              return (StreamRawPredict) super.setKey(key);
            }

            @Override
            public StreamRawPredict setOauthToken(java.lang.String oauthToken) {
              return (StreamRawPredict) super.setOauthToken(oauthToken);
            }

            @Override
            public StreamRawPredict setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (StreamRawPredict) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public StreamRawPredict setQuotaUser(java.lang.String quotaUser) {
              return (StreamRawPredict) super.setQuotaUser(quotaUser);
            }

            @Override
            public StreamRawPredict setUploadType(java.lang.String uploadType) {
              return (StreamRawPredict) super.setUploadType(uploadType);
            }

            @Override
            public StreamRawPredict setUploadProtocol(java.lang.String uploadProtocol) {
              return (StreamRawPredict) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the Endpoint requested to serve the prediction. Format:
             * `projects/{project}/locations/{location}/endpoints/{endpoint}`
             */
            @com.google.api.client.util.Key
            private java.lang.String endpoint;

            /** Required. The name of the Endpoint requested to serve the prediction. Format:
           `projects/{project}/locations/{location}/endpoints/{endpoint}`
             */
            public java.lang.String getEndpoint() {
              return endpoint;
            }

            /**
             * Required. The name of the Endpoint requested to serve the prediction. Format:
             * `projects/{project}/locations/{location}/endpoints/{endpoint}`
             */
            public StreamRawPredict setEndpoint(java.lang.String endpoint) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(ENDPOINT_PATTERN.matcher(endpoint).matches(),
                    "Parameter endpoint must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/publishers/[^/]+/models/[^/]+$");
              }
              this.endpoint = endpoint;
              return this;
            }

            @Override
            public StreamRawPredict set(String parameterName, Object value) {
              return (StreamRawPredict) super.set(parameterName, value);
            }
          }

        }
      }
      /**
       * An accessor for creating requests from the Schedules collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Aiplatform aiplatform = new Aiplatform(...);}
       *   {@code Aiplatform.Schedules.List request = aiplatform.schedules().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Schedules schedules() {
        return new Schedules();
      }

      /**
       * The "schedules" collection of methods.
       */
      public class Schedules {

        /**
         * Creates a Schedule.
         *
         * Create a request for the method "schedules.create".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The resource name of the Location to create the Schedule in. Format:
         *        `projects/{project}/locations/{location}`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Schedule}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Schedule content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Schedule> {

          private static final String REST_PATH = "v1/{+parent}/schedules";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Creates a Schedule.
           *
           * Create a request for the method "schedules.create".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The resource name of the Location to create the Schedule in. Format:
         *        `projects/{project}/locations/{location}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Schedule}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Schedule content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Schedule.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the Location to create the Schedule in. Format:
           * `projects/{project}/locations/{location}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The resource name of the Location to create the Schedule in. Format:
         `projects/{project}/locations/{location}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The resource name of the Location to create the Schedule in. Format:
           * `projects/{project}/locations/{location}`
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a Schedule.
         *
         * Create a request for the method "schedules.delete".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the Schedule resource to be deleted. Format:
         *        `projects/{project}/locations/{location}/schedules/{schedule}`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/schedules/[^/]+$");

          /**
           * Deletes a Schedule.
           *
           * Create a request for the method "schedules.delete".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the Schedule resource to be deleted. Format:
         *        `projects/{project}/locations/{location}/schedules/{schedule}`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/schedules/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the Schedule resource to be deleted. Format:
           * `projects/{project}/locations/{location}/schedules/{schedule}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the Schedule resource to be deleted. Format:
         `projects/{project}/locations/{location}/schedules/{schedule}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the Schedule resource to be deleted. Format:
           * `projects/{project}/locations/{location}/schedules/{schedule}`
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/schedules/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets a Schedule.
         *
         * Create a request for the method "schedules.get".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the Schedule resource. Format:
         *        `projects/{project}/locations/{location}/schedules/{schedule}`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Schedule> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/schedules/[^/]+$");

          /**
           * Gets a Schedule.
           *
           * Create a request for the method "schedules.get".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the Schedule resource. Format:
         *        `projects/{project}/locations/{location}/schedules/{schedule}`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Schedule.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/schedules/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the Schedule resource. Format:
           * `projects/{project}/locations/{location}/schedules/{schedule}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the Schedule resource. Format:
         `projects/{project}/locations/{location}/schedules/{schedule}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the Schedule resource. Format:
           * `projects/{project}/locations/{location}/schedules/{schedule}`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/schedules/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists Schedules in a Location.
         *
         * Create a request for the method "schedules.list".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The resource name of the Location to list the Schedules from. Format:
         *        `projects/{project}/locations/{location}`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListSchedulesResponse> {

          private static final String REST_PATH = "v1/{+parent}/schedules";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists Schedules in a Location.
           *
           * Create a request for the method "schedules.list".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The resource name of the Location to list the Schedules from. Format:
         *        `projects/{project}/locations/{location}`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListSchedulesResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the Location to list the Schedules from. Format:
           * `projects/{project}/locations/{location}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The resource name of the Location to list the Schedules from. Format:
         `projects/{project}/locations/{location}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The resource name of the Location to list the Schedules from. Format:
           * `projects/{project}/locations/{location}`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Lists the Schedules that match the filter expression. The following fields are
           * supported: * `display_name`: Supports `=`, `!=` comparisons, and `:` wildcard. *
           * `state`: Supports `=` and `!=` comparisons. * `request`: Supports existence of the
           * check. (e.g. `create_pipeline_job_request:*` --> Schedule has
           * create_pipeline_job_request). * `create_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and
           * `>=` comparisons. Values must be in RFC 3339 format. * `start_time`: Supports `=`,
           * `!=`, `<`, `>`, `<=`, and `>=` comparisons. Values must be in RFC 3339 format. *
           * `end_time`: Supports `=`, `!=`, `<`, `>`, `<=`, `>=` comparisons and `:*` existence
           * check. Values must be in RFC 3339 format. * `next_run_time`: Supports `=`, `!=`, `<`,
           * `>`, `<=`, and `>=` comparisons. Values must be in RFC 3339 format. Filter expressions
           * can be combined together using logical operators (`NOT`, `AND` & `OR`). The syntax to
           * define filter expression is based on https://google.aip.dev/160. Examples: *
           * `state="ACTIVE" AND display_name:"my_schedule_*"` * `NOT display_name="my_schedule"` *
           * `create_time>"2021-05-18T00:00:00Z"` * `end_time>"2021-05-18T00:00:00Z" OR NOT
           * end_time:*` * `create_pipeline_job_request:*`
           */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** Lists the Schedules that match the filter expression. The following fields are supported: *
         `display_name`: Supports `=`, `!=` comparisons, and `:` wildcard. * `state`: Supports `=` and `!=`
         comparisons. * `request`: Supports existence of the check. (e.g. `create_pipeline_job_request:*`
         --> Schedule has create_pipeline_job_request). * `create_time`: Supports `=`, `!=`, `<`, `>`, `<=`,
         and `>=` comparisons. Values must be in RFC 3339 format. * `start_time`: Supports `=`, `!=`, `<`,
         `>`, `<=`, and `>=` comparisons. Values must be in RFC 3339 format. * `end_time`: Supports `=`,
         `!=`, `<`, `>`, `<=`, `>=` comparisons and `:*` existence check. Values must be in RFC 3339 format.
         * `next_run_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. Values must be in RFC
         3339 format. Filter expressions can be combined together using logical operators (`NOT`, `AND` &
         `OR`). The syntax to define filter expression is based on https://google.aip.dev/160. Examples: *
         `state="ACTIVE" AND display_name:"my_schedule_*"` * `NOT display_name="my_schedule"` *
         `create_time>"2021-05-18T00:00:00Z"` * `end_time>"2021-05-18T00:00:00Z" OR NOT end_time:*` *
         `create_pipeline_job_request:*`
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /**
           * Lists the Schedules that match the filter expression. The following fields are
           * supported: * `display_name`: Supports `=`, `!=` comparisons, and `:` wildcard. *
           * `state`: Supports `=` and `!=` comparisons. * `request`: Supports existence of the
           * check. (e.g. `create_pipeline_job_request:*` --> Schedule has
           * create_pipeline_job_request). * `create_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and
           * `>=` comparisons. Values must be in RFC 3339 format. * `start_time`: Supports `=`,
           * `!=`, `<`, `>`, `<=`, and `>=` comparisons. Values must be in RFC 3339 format. *
           * `end_time`: Supports `=`, `!=`, `<`, `>`, `<=`, `>=` comparisons and `:*` existence
           * check. Values must be in RFC 3339 format. * `next_run_time`: Supports `=`, `!=`, `<`,
           * `>`, `<=`, and `>=` comparisons. Values must be in RFC 3339 format. Filter expressions
           * can be combined together using logical operators (`NOT`, `AND` & `OR`). The syntax to
           * define filter expression is based on https://google.aip.dev/160. Examples: *
           * `state="ACTIVE" AND display_name:"my_schedule_*"` * `NOT display_name="my_schedule"` *
           * `create_time>"2021-05-18T00:00:00Z"` * `end_time>"2021-05-18T00:00:00Z" OR NOT
           * end_time:*` * `create_pipeline_job_request:*`
           */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /**
           * A comma-separated list of fields to order by. The default sort order is in ascending
           * order. Use "desc" after a field name for descending. You can have multiple order_by
           * fields provided. For example, using "create_time desc, end_time" will order results by
           * create time in descending order, and if there are multiple schedules having the same
           * create time, order them by the end time in ascending order. If order_by is not
           * specified, it will order by default with create_time in descending order. Supported
           * fields: * `create_time` * `start_time` * `end_time` * `next_run_time`
           */
          @com.google.api.client.util.Key
          private java.lang.String orderBy;

          /** A comma-separated list of fields to order by. The default sort order is in ascending order. Use
         "desc" after a field name for descending. You can have multiple order_by fields provided. For
         example, using "create_time desc, end_time" will order results by create time in descending order,
         and if there are multiple schedules having the same create time, order them by the end time in
         ascending order. If order_by is not specified, it will order by default with create_time in
         descending order. Supported fields: * `create_time` * `start_time` * `end_time` * `next_run_time`
           */
          public java.lang.String getOrderBy() {
            return orderBy;
          }

          /**
           * A comma-separated list of fields to order by. The default sort order is in ascending
           * order. Use "desc" after a field name for descending. You can have multiple order_by
           * fields provided. For example, using "create_time desc, end_time" will order results by
           * create time in descending order, and if there are multiple schedules having the same
           * create time, order them by the end time in ascending order. If order_by is not
           * specified, it will order by default with create_time in descending order. Supported
           * fields: * `create_time` * `start_time` * `end_time` * `next_run_time`
           */
          public List setOrderBy(java.lang.String orderBy) {
            this.orderBy = orderBy;
            return this;
          }

          /** The standard list page size. Default to 100 if not specified. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The standard list page size. Default to 100 if not specified.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** The standard list page size. Default to 100 if not specified. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * The standard list page token. Typically obtained via
           * ListSchedulesResponse.next_page_token of the previous ScheduleService.ListSchedules
           * call.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The standard list page token. Typically obtained via ListSchedulesResponse.next_page_token of the
         previous ScheduleService.ListSchedules call.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * The standard list page token. Typically obtained via
           * ListSchedulesResponse.next_page_token of the previous ScheduleService.ListSchedules
           * call.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates an active or paused Schedule. When the Schedule is updated, new runs will be scheduled
         * starting from the updated next execution time after the update time based on the
         * time_specification in the updated Schedule. All unstarted runs before the update time will be
         * skipped while already created runs will NOT be paused or canceled.
         *
         * Create a request for the method "schedules.patch".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Immutable. The resource name of the Schedule.
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Schedule}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Schedule content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Schedule> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/schedules/[^/]+$");

          /**
           * Updates an active or paused Schedule. When the Schedule is updated, new runs will be scheduled
           * starting from the updated next execution time after the update time based on the
           * time_specification in the updated Schedule. All unstarted runs before the update time will be
           * skipped while already created runs will NOT be paused or canceled.
           *
           * Create a request for the method "schedules.patch".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           * <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Immutable. The resource name of the Schedule.
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Schedule}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Schedule content) {
            super(Aiplatform.this, "PATCH", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Schedule.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/schedules/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /** Immutable. The resource name of the Schedule. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Immutable. The resource name of the Schedule.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Immutable. The resource name of the Schedule. */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/schedules/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /** Required. The update mask applies to the resource. See google.protobuf.FieldMask. */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Required. The update mask applies to the resource. See google.protobuf.FieldMask.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /** Required. The update mask applies to the resource. See google.protobuf.FieldMask. */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }
        /**
         * Pauses a Schedule. Will mark Schedule.state to 'PAUSED'. If the schedule is paused, no new runs
         * will be created. Already created runs will NOT be paused or canceled.
         *
         * Create a request for the method "schedules.pause".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Pause#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the Schedule resource to be paused. Format:
         *        `projects/{project}/locations/{location}/schedules/{schedule}`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1PauseScheduleRequest}
         * @return the request
         */
        public Pause pause(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1PauseScheduleRequest content) throws java.io.IOException {
          Pause result = new Pause(name, content);
          initialize(result);
          return result;
        }

        public class Pause extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

          private static final String REST_PATH = "v1/{+name}:pause";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/schedules/[^/]+$");

          /**
           * Pauses a Schedule. Will mark Schedule.state to 'PAUSED'. If the schedule is paused, no new runs
           * will be created. Already created runs will NOT be paused or canceled.
           *
           * Create a request for the method "schedules.pause".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Pause#execute()} method to invoke the remote operation.
           * <p> {@link
           * Pause#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the Schedule resource to be paused. Format:
         *        `projects/{project}/locations/{location}/schedules/{schedule}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1PauseScheduleRequest}
           * @since 1.13
           */
          protected Pause(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1PauseScheduleRequest content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/schedules/[^/]+$");
            }
          }

          @Override
          public Pause set$Xgafv(java.lang.String $Xgafv) {
            return (Pause) super.set$Xgafv($Xgafv);
          }

          @Override
          public Pause setAccessToken(java.lang.String accessToken) {
            return (Pause) super.setAccessToken(accessToken);
          }

          @Override
          public Pause setAlt(java.lang.String alt) {
            return (Pause) super.setAlt(alt);
          }

          @Override
          public Pause setCallback(java.lang.String callback) {
            return (Pause) super.setCallback(callback);
          }

          @Override
          public Pause setFields(java.lang.String fields) {
            return (Pause) super.setFields(fields);
          }

          @Override
          public Pause setKey(java.lang.String key) {
            return (Pause) super.setKey(key);
          }

          @Override
          public Pause setOauthToken(java.lang.String oauthToken) {
            return (Pause) super.setOauthToken(oauthToken);
          }

          @Override
          public Pause setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Pause) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Pause setQuotaUser(java.lang.String quotaUser) {
            return (Pause) super.setQuotaUser(quotaUser);
          }

          @Override
          public Pause setUploadType(java.lang.String uploadType) {
            return (Pause) super.setUploadType(uploadType);
          }

          @Override
          public Pause setUploadProtocol(java.lang.String uploadProtocol) {
            return (Pause) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the Schedule resource to be paused. Format:
           * `projects/{project}/locations/{location}/schedules/{schedule}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the Schedule resource to be paused. Format:
         `projects/{project}/locations/{location}/schedules/{schedule}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the Schedule resource to be paused. Format:
           * `projects/{project}/locations/{location}/schedules/{schedule}`
           */
          public Pause setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/schedules/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Pause set(String parameterName, Object value) {
            return (Pause) super.set(parameterName, value);
          }
        }
        /**
         * Resumes a paused Schedule to start scheduling new runs. Will mark Schedule.state to 'ACTIVE'.
         * Only paused Schedule can be resumed. When the Schedule is resumed, new runs will be scheduled
         * starting from the next execution time after the current time based on the time_specification in
         * the Schedule. If Schedule.catchUp is set up true, all missed runs will be scheduled for backfill
         * first.
         *
         * Create a request for the method "schedules.resume".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Resume#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the Schedule resource to be resumed. Format:
         *        `projects/{project}/locations/{location}/schedules/{schedule}`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ResumeScheduleRequest}
         * @return the request
         */
        public Resume resume(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ResumeScheduleRequest content) throws java.io.IOException {
          Resume result = new Resume(name, content);
          initialize(result);
          return result;
        }

        public class Resume extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

          private static final String REST_PATH = "v1/{+name}:resume";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/schedules/[^/]+$");

          /**
           * Resumes a paused Schedule to start scheduling new runs. Will mark Schedule.state to 'ACTIVE'.
           * Only paused Schedule can be resumed. When the Schedule is resumed, new runs will be scheduled
           * starting from the next execution time after the current time based on the time_specification in
           * the Schedule. If Schedule.catchUp is set up true, all missed runs will be scheduled for
           * backfill first.
           *
           * Create a request for the method "schedules.resume".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Resume#execute()} method to invoke the remote operation.
           * <p> {@link
           * Resume#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the Schedule resource to be resumed. Format:
         *        `projects/{project}/locations/{location}/schedules/{schedule}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ResumeScheduleRequest}
           * @since 1.13
           */
          protected Resume(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ResumeScheduleRequest content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/schedules/[^/]+$");
            }
          }

          @Override
          public Resume set$Xgafv(java.lang.String $Xgafv) {
            return (Resume) super.set$Xgafv($Xgafv);
          }

          @Override
          public Resume setAccessToken(java.lang.String accessToken) {
            return (Resume) super.setAccessToken(accessToken);
          }

          @Override
          public Resume setAlt(java.lang.String alt) {
            return (Resume) super.setAlt(alt);
          }

          @Override
          public Resume setCallback(java.lang.String callback) {
            return (Resume) super.setCallback(callback);
          }

          @Override
          public Resume setFields(java.lang.String fields) {
            return (Resume) super.setFields(fields);
          }

          @Override
          public Resume setKey(java.lang.String key) {
            return (Resume) super.setKey(key);
          }

          @Override
          public Resume setOauthToken(java.lang.String oauthToken) {
            return (Resume) super.setOauthToken(oauthToken);
          }

          @Override
          public Resume setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Resume) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Resume setQuotaUser(java.lang.String quotaUser) {
            return (Resume) super.setQuotaUser(quotaUser);
          }

          @Override
          public Resume setUploadType(java.lang.String uploadType) {
            return (Resume) super.setUploadType(uploadType);
          }

          @Override
          public Resume setUploadProtocol(java.lang.String uploadProtocol) {
            return (Resume) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the Schedule resource to be resumed. Format:
           * `projects/{project}/locations/{location}/schedules/{schedule}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the Schedule resource to be resumed. Format:
         `projects/{project}/locations/{location}/schedules/{schedule}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the Schedule resource to be resumed. Format:
           * `projects/{project}/locations/{location}/schedules/{schedule}`
           */
          public Resume setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/schedules/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Resume set(String parameterName, Object value) {
            return (Resume) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the Operations collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Aiplatform aiplatform = new Aiplatform(...);}
         *   {@code Aiplatform.Operations.List request = aiplatform.operations().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Operations operations() {
          return new Operations();
        }

        /**
         * The "operations" collection of methods.
         */
        public class Operations {

          /**
           * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
           * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
           * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
           * methods to check whether the cancellation succeeded or whether the operation completed despite
           * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
           * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
           * `Code.CANCELLED`.
           *
           * Create a request for the method "operations.cancel".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource to be cancelled.
           * @return the request
           */
          public Cancel cancel(java.lang.String name) throws java.io.IOException {
            Cancel result = new Cancel(name);
            initialize(result);
            return result;
          }

          public class Cancel extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

            private static final String REST_PATH = "v1/{+name}:cancel";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/schedules/[^/]+/operations/[^/]+$");

            /**
             * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
             * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
             * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
             * methods to check whether the cancellation succeeded or whether the operation completed despite
             * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
             * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
             * `Code.CANCELLED`.
             *
             * Create a request for the method "operations.cancel".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
             * <p> {@link
             * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource to be cancelled.
             * @since 1.13
             */
            protected Cancel(java.lang.String name) {
              super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/schedules/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public Cancel set$Xgafv(java.lang.String $Xgafv) {
              return (Cancel) super.set$Xgafv($Xgafv);
            }

            @Override
            public Cancel setAccessToken(java.lang.String accessToken) {
              return (Cancel) super.setAccessToken(accessToken);
            }

            @Override
            public Cancel setAlt(java.lang.String alt) {
              return (Cancel) super.setAlt(alt);
            }

            @Override
            public Cancel setCallback(java.lang.String callback) {
              return (Cancel) super.setCallback(callback);
            }

            @Override
            public Cancel setFields(java.lang.String fields) {
              return (Cancel) super.setFields(fields);
            }

            @Override
            public Cancel setKey(java.lang.String key) {
              return (Cancel) super.setKey(key);
            }

            @Override
            public Cancel setOauthToken(java.lang.String oauthToken) {
              return (Cancel) super.setOauthToken(oauthToken);
            }

            @Override
            public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Cancel) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Cancel setQuotaUser(java.lang.String quotaUser) {
              return (Cancel) super.setQuotaUser(quotaUser);
            }

            @Override
            public Cancel setUploadType(java.lang.String uploadType) {
              return (Cancel) super.setUploadType(uploadType);
            }

            @Override
            public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
              return (Cancel) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource to be cancelled. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource to be cancelled.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource to be cancelled. */
            public Cancel setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/schedules/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Cancel set(String parameterName, Object value) {
              return (Cancel) super.set(parameterName, value);
            }
          }
          /**
           * Deletes a long-running operation. This method indicates that the client is no longer interested
           * in the operation result. It does not cancel the operation. If the server doesn't support this
           * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.delete".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource to be deleted.
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/schedules/[^/]+/operations/[^/]+$");

            /**
             * Deletes a long-running operation. This method indicates that the client is no longer interested
             * in the operation result. It does not cancel the operation. If the server doesn't support this
             * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.delete".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource to be deleted.
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/schedules/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource to be deleted. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource to be deleted.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource to be deleted. */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/schedules/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Gets the latest state of a long-running operation. Clients can use this method to poll the
           * operation result at intervals as recommended by the API service.
           *
           * Create a request for the method "operations.get".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource.
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/schedules/[^/]+/operations/[^/]+$");

            /**
             * Gets the latest state of a long-running operation. Clients can use this method to poll the
             * operation result at intervals as recommended by the API service.
             *
             * Create a request for the method "operations.get".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource.
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/schedules/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource. */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/schedules/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Lists operations that match the specified filter in the request. If the server doesn't support
           * this method, it returns `UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.list".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation's parent resource.
           * @return the request
           */
          public List list(java.lang.String name) throws java.io.IOException {
            List result = new List(name);
            initialize(result);
            return result;
          }

          public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse> {

            private static final String REST_PATH = "v1/{+name}/operations";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/schedules/[^/]+$");

            /**
             * Lists operations that match the specified filter in the request. If the server doesn't support
             * this method, it returns `UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.list".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation's parent resource.
             * @since 1.13
             */
            protected List(java.lang.String name) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/schedules/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation's parent resource. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation's parent resource.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation's parent resource. */
            public List setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/schedules/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /** The standard list filter. */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** The standard list filter.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /** The standard list filter. */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /** The standard list page size. */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** The standard list page size.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /** The standard list page size. */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** The standard list page token. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** The standard list page token.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** The standard list page token. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Waits until the specified long-running operation is done or reaches at most a specified timeout,
           * returning the latest state. If the operation is already done, the latest state is immediately
           * returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC
           * timeout is used. If the server does not support this method, it returns
           * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
           * the latest state before the specified timeout (including immediately), meaning even an immediate
           * response is no guarantee that the operation is done.
           *
           * Create a request for the method "operations.wait".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Wait#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource to wait on.
           * @return the request
           */
          public Wait wait(java.lang.String name) throws java.io.IOException {
            Wait result = new Wait(name);
            initialize(result);
            return result;
          }

          public class Wait extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+name}:wait";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/schedules/[^/]+/operations/[^/]+$");

            /**
             * Waits until the specified long-running operation is done or reaches at most a specified
             * timeout, returning the latest state. If the operation is already done, the latest state is
             * immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout,
             * the HTTP/RPC timeout is used. If the server does not support this method, it returns
             * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
             * the latest state before the specified timeout (including immediately), meaning even an
             * immediate response is no guarantee that the operation is done.
             *
             * Create a request for the method "operations.wait".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Wait#execute()} method to invoke the remote operation. <p>
             * {@link Wait#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource to wait on.
             * @since 1.13
             */
            protected Wait(java.lang.String name) {
              super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/schedules/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public Wait set$Xgafv(java.lang.String $Xgafv) {
              return (Wait) super.set$Xgafv($Xgafv);
            }

            @Override
            public Wait setAccessToken(java.lang.String accessToken) {
              return (Wait) super.setAccessToken(accessToken);
            }

            @Override
            public Wait setAlt(java.lang.String alt) {
              return (Wait) super.setAlt(alt);
            }

            @Override
            public Wait setCallback(java.lang.String callback) {
              return (Wait) super.setCallback(callback);
            }

            @Override
            public Wait setFields(java.lang.String fields) {
              return (Wait) super.setFields(fields);
            }

            @Override
            public Wait setKey(java.lang.String key) {
              return (Wait) super.setKey(key);
            }

            @Override
            public Wait setOauthToken(java.lang.String oauthToken) {
              return (Wait) super.setOauthToken(oauthToken);
            }

            @Override
            public Wait setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Wait) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Wait setQuotaUser(java.lang.String quotaUser) {
              return (Wait) super.setQuotaUser(quotaUser);
            }

            @Override
            public Wait setUploadType(java.lang.String uploadType) {
              return (Wait) super.setUploadType(uploadType);
            }

            @Override
            public Wait setUploadProtocol(java.lang.String uploadProtocol) {
              return (Wait) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource to wait on. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource to wait on.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource to wait on. */
            public Wait setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/schedules/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * The maximum duration to wait before timing out. If left blank, the wait will be at
             * most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline
             * is also specified, the shorter one will be used.
             */
            @com.google.api.client.util.Key
            private String timeout;

            /** The maximum duration to wait before timing out. If left blank, the wait will be at most the time
           permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the
           shorter one will be used.
             */
            public String getTimeout() {
              return timeout;
            }

            /**
             * The maximum duration to wait before timing out. If left blank, the wait will be at
             * most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline
             * is also specified, the shorter one will be used.
             */
            public Wait setTimeout(String timeout) {
              this.timeout = timeout;
              return this;
            }

            @Override
            public Wait set(String parameterName, Object value) {
              return (Wait) super.set(parameterName, value);
            }
          }

        }
      }
      /**
       * An accessor for creating requests from the SpecialistPools collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Aiplatform aiplatform = new Aiplatform(...);}
       *   {@code Aiplatform.SpecialistPools.List request = aiplatform.specialistPools().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public SpecialistPools specialistPools() {
        return new SpecialistPools();
      }

      /**
       * The "specialistPools" collection of methods.
       */
      public class SpecialistPools {

        /**
         * Creates a SpecialistPool.
         *
         * Create a request for the method "specialistPools.create".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent Project name for the new SpecialistPool. The form is
         *        `projects/{project}/locations/{location}`.
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1SpecialistPool}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1SpecialistPool content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+parent}/specialistPools";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Creates a SpecialistPool.
           *
           * Create a request for the method "specialistPools.create".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent Project name for the new SpecialistPool. The form is
         *        `projects/{project}/locations/{location}`.
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1SpecialistPool}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1SpecialistPool content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The parent Project name for the new SpecialistPool. The form is
           * `projects/{project}/locations/{location}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent Project name for the new SpecialistPool. The form is
         `projects/{project}/locations/{location}`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The parent Project name for the new SpecialistPool. The form is
           * `projects/{project}/locations/{location}`.
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a SpecialistPool as well as all Specialists in the pool.
         *
         * Create a request for the method "specialistPools.delete".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The resource name of the SpecialistPool to delete. Format:
         *        `projects/{project}/locations/{location}/specialistPools/{specialist_pool}`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/specialistPools/[^/]+$");

          /**
           * Deletes a SpecialistPool as well as all Specialists in the pool.
           *
           * Create a request for the method "specialistPools.delete".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The resource name of the SpecialistPool to delete. Format:
         *        `projects/{project}/locations/{location}/specialistPools/{specialist_pool}`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/specialistPools/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the SpecialistPool to delete. Format:
           * `projects/{project}/locations/{location}/specialistPools/{specialist_pool}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The resource name of the SpecialistPool to delete. Format:
         `projects/{project}/locations/{location}/specialistPools/{specialist_pool}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The resource name of the SpecialistPool to delete. Format:
           * `projects/{project}/locations/{location}/specialistPools/{specialist_pool}`
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/specialistPools/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * If set to true, any specialist managers in this SpecialistPool will also be deleted.
           * (Otherwise, the request will only work if the SpecialistPool has no specialist
           * managers.)
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean force;

          /** If set to true, any specialist managers in this SpecialistPool will also be deleted. (Otherwise,
         the request will only work if the SpecialistPool has no specialist managers.)
           */
          public java.lang.Boolean getForce() {
            return force;
          }

          /**
           * If set to true, any specialist managers in this SpecialistPool will also be deleted.
           * (Otherwise, the request will only work if the SpecialistPool has no specialist
           * managers.)
           */
          public Delete setForce(java.lang.Boolean force) {
            this.force = force;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets a SpecialistPool.
         *
         * Create a request for the method "specialistPools.get".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the SpecialistPool resource. The form is
         *        `projects/{project}/locations/{location}/specialistPools/{specialist_pool}`.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1SpecialistPool> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/specialistPools/[^/]+$");

          /**
           * Gets a SpecialistPool.
           *
           * Create a request for the method "specialistPools.get".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the SpecialistPool resource. The form is
         *        `projects/{project}/locations/{location}/specialistPools/{specialist_pool}`.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1SpecialistPool.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/specialistPools/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the SpecialistPool resource. The form is
           * `projects/{project}/locations/{location}/specialistPools/{specialist_pool}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the SpecialistPool resource. The form is
         `projects/{project}/locations/{location}/specialistPools/{specialist_pool}`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the SpecialistPool resource. The form is
           * `projects/{project}/locations/{location}/specialistPools/{specialist_pool}`.
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/specialistPools/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists SpecialistPools in a Location.
         *
         * Create a request for the method "specialistPools.list".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The name of the SpecialistPool's parent resource. Format:
         *        `projects/{project}/locations/{location}`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListSpecialistPoolsResponse> {

          private static final String REST_PATH = "v1/{+parent}/specialistPools";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists SpecialistPools in a Location.
           *
           * Create a request for the method "specialistPools.list".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The name of the SpecialistPool's parent resource. Format:
         *        `projects/{project}/locations/{location}`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListSpecialistPoolsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the SpecialistPool's parent resource. Format:
           * `projects/{project}/locations/{location}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The name of the SpecialistPool's parent resource. Format:
         `projects/{project}/locations/{location}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The name of the SpecialistPool's parent resource. Format:
           * `projects/{project}/locations/{location}`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** The standard list page size. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The standard list page size.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** The standard list page size. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * The standard list page token. Typically obtained by
           * ListSpecialistPoolsResponse.next_page_token of the previous
           * SpecialistPoolService.ListSpecialistPools call. Return first page if empty.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The standard list page token. Typically obtained by ListSpecialistPoolsResponse.next_page_token of
         the previous SpecialistPoolService.ListSpecialistPools call. Return first page if empty.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * The standard list page token. Typically obtained by
           * ListSpecialistPoolsResponse.next_page_token of the previous
           * SpecialistPoolService.ListSpecialistPools call. Return first page if empty.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          /** Mask specifying which fields to read. FieldMask represents a set of */
          @com.google.api.client.util.Key
          private String readMask;

          /** Mask specifying which fields to read. FieldMask represents a set of
           */
          public String getReadMask() {
            return readMask;
          }

          /** Mask specifying which fields to read. FieldMask represents a set of */
          public List setReadMask(String readMask) {
            this.readMask = readMask;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates a SpecialistPool.
         *
         * Create a request for the method "specialistPools.patch".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Required. The resource name of the SpecialistPool.
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1SpecialistPool}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1SpecialistPool content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/specialistPools/[^/]+$");

          /**
           * Updates a SpecialistPool.
           *
           * Create a request for the method "specialistPools.patch".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           * <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The resource name of the SpecialistPool.
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1SpecialistPool}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1SpecialistPool content) {
            super(Aiplatform.this, "PATCH", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/specialistPools/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The resource name of the SpecialistPool. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The resource name of the SpecialistPool.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. The resource name of the SpecialistPool. */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/specialistPools/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /** Required. The update mask applies to the resource. */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Required. The update mask applies to the resource.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /** Required. The update mask applies to the resource. */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the Operations collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Aiplatform aiplatform = new Aiplatform(...);}
         *   {@code Aiplatform.Operations.List request = aiplatform.operations().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Operations operations() {
          return new Operations();
        }

        /**
         * The "operations" collection of methods.
         */
        public class Operations {

          /**
           * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
           * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
           * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
           * methods to check whether the cancellation succeeded or whether the operation completed despite
           * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
           * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
           * `Code.CANCELLED`.
           *
           * Create a request for the method "operations.cancel".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource to be cancelled.
           * @return the request
           */
          public Cancel cancel(java.lang.String name) throws java.io.IOException {
            Cancel result = new Cancel(name);
            initialize(result);
            return result;
          }

          public class Cancel extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

            private static final String REST_PATH = "v1/{+name}:cancel";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/specialistPools/[^/]+/operations/[^/]+$");

            /**
             * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
             * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
             * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
             * methods to check whether the cancellation succeeded or whether the operation completed despite
             * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
             * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
             * `Code.CANCELLED`.
             *
             * Create a request for the method "operations.cancel".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
             * <p> {@link
             * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource to be cancelled.
             * @since 1.13
             */
            protected Cancel(java.lang.String name) {
              super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/specialistPools/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public Cancel set$Xgafv(java.lang.String $Xgafv) {
              return (Cancel) super.set$Xgafv($Xgafv);
            }

            @Override
            public Cancel setAccessToken(java.lang.String accessToken) {
              return (Cancel) super.setAccessToken(accessToken);
            }

            @Override
            public Cancel setAlt(java.lang.String alt) {
              return (Cancel) super.setAlt(alt);
            }

            @Override
            public Cancel setCallback(java.lang.String callback) {
              return (Cancel) super.setCallback(callback);
            }

            @Override
            public Cancel setFields(java.lang.String fields) {
              return (Cancel) super.setFields(fields);
            }

            @Override
            public Cancel setKey(java.lang.String key) {
              return (Cancel) super.setKey(key);
            }

            @Override
            public Cancel setOauthToken(java.lang.String oauthToken) {
              return (Cancel) super.setOauthToken(oauthToken);
            }

            @Override
            public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Cancel) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Cancel setQuotaUser(java.lang.String quotaUser) {
              return (Cancel) super.setQuotaUser(quotaUser);
            }

            @Override
            public Cancel setUploadType(java.lang.String uploadType) {
              return (Cancel) super.setUploadType(uploadType);
            }

            @Override
            public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
              return (Cancel) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource to be cancelled. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource to be cancelled.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource to be cancelled. */
            public Cancel setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/specialistPools/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Cancel set(String parameterName, Object value) {
              return (Cancel) super.set(parameterName, value);
            }
          }
          /**
           * Deletes a long-running operation. This method indicates that the client is no longer interested
           * in the operation result. It does not cancel the operation. If the server doesn't support this
           * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.delete".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource to be deleted.
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/specialistPools/[^/]+/operations/[^/]+$");

            /**
             * Deletes a long-running operation. This method indicates that the client is no longer interested
             * in the operation result. It does not cancel the operation. If the server doesn't support this
             * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.delete".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource to be deleted.
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/specialistPools/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource to be deleted. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource to be deleted.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource to be deleted. */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/specialistPools/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Gets the latest state of a long-running operation. Clients can use this method to poll the
           * operation result at intervals as recommended by the API service.
           *
           * Create a request for the method "operations.get".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource.
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/specialistPools/[^/]+/operations/[^/]+$");

            /**
             * Gets the latest state of a long-running operation. Clients can use this method to poll the
             * operation result at intervals as recommended by the API service.
             *
             * Create a request for the method "operations.get".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource.
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/specialistPools/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource. */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/specialistPools/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Lists operations that match the specified filter in the request. If the server doesn't support
           * this method, it returns `UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.list".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation's parent resource.
           * @return the request
           */
          public List list(java.lang.String name) throws java.io.IOException {
            List result = new List(name);
            initialize(result);
            return result;
          }

          public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse> {

            private static final String REST_PATH = "v1/{+name}/operations";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/specialistPools/[^/]+$");

            /**
             * Lists operations that match the specified filter in the request. If the server doesn't support
             * this method, it returns `UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.list".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation's parent resource.
             * @since 1.13
             */
            protected List(java.lang.String name) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/specialistPools/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation's parent resource. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation's parent resource.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation's parent resource. */
            public List setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/specialistPools/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /** The standard list filter. */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** The standard list filter.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /** The standard list filter. */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /** The standard list page size. */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** The standard list page size.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /** The standard list page size. */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** The standard list page token. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** The standard list page token.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** The standard list page token. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Waits until the specified long-running operation is done or reaches at most a specified timeout,
           * returning the latest state. If the operation is already done, the latest state is immediately
           * returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC
           * timeout is used. If the server does not support this method, it returns
           * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
           * the latest state before the specified timeout (including immediately), meaning even an immediate
           * response is no guarantee that the operation is done.
           *
           * Create a request for the method "operations.wait".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Wait#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource to wait on.
           * @return the request
           */
          public Wait wait(java.lang.String name) throws java.io.IOException {
            Wait result = new Wait(name);
            initialize(result);
            return result;
          }

          public class Wait extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+name}:wait";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/specialistPools/[^/]+/operations/[^/]+$");

            /**
             * Waits until the specified long-running operation is done or reaches at most a specified
             * timeout, returning the latest state. If the operation is already done, the latest state is
             * immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout,
             * the HTTP/RPC timeout is used. If the server does not support this method, it returns
             * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
             * the latest state before the specified timeout (including immediately), meaning even an
             * immediate response is no guarantee that the operation is done.
             *
             * Create a request for the method "operations.wait".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Wait#execute()} method to invoke the remote operation. <p>
             * {@link Wait#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource to wait on.
             * @since 1.13
             */
            protected Wait(java.lang.String name) {
              super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/specialistPools/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public Wait set$Xgafv(java.lang.String $Xgafv) {
              return (Wait) super.set$Xgafv($Xgafv);
            }

            @Override
            public Wait setAccessToken(java.lang.String accessToken) {
              return (Wait) super.setAccessToken(accessToken);
            }

            @Override
            public Wait setAlt(java.lang.String alt) {
              return (Wait) super.setAlt(alt);
            }

            @Override
            public Wait setCallback(java.lang.String callback) {
              return (Wait) super.setCallback(callback);
            }

            @Override
            public Wait setFields(java.lang.String fields) {
              return (Wait) super.setFields(fields);
            }

            @Override
            public Wait setKey(java.lang.String key) {
              return (Wait) super.setKey(key);
            }

            @Override
            public Wait setOauthToken(java.lang.String oauthToken) {
              return (Wait) super.setOauthToken(oauthToken);
            }

            @Override
            public Wait setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Wait) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Wait setQuotaUser(java.lang.String quotaUser) {
              return (Wait) super.setQuotaUser(quotaUser);
            }

            @Override
            public Wait setUploadType(java.lang.String uploadType) {
              return (Wait) super.setUploadType(uploadType);
            }

            @Override
            public Wait setUploadProtocol(java.lang.String uploadProtocol) {
              return (Wait) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource to wait on. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource to wait on.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource to wait on. */
            public Wait setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/specialistPools/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * The maximum duration to wait before timing out. If left blank, the wait will be at
             * most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline
             * is also specified, the shorter one will be used.
             */
            @com.google.api.client.util.Key
            private String timeout;

            /** The maximum duration to wait before timing out. If left blank, the wait will be at most the time
           permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the
           shorter one will be used.
             */
            public String getTimeout() {
              return timeout;
            }

            /**
             * The maximum duration to wait before timing out. If left blank, the wait will be at
             * most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline
             * is also specified, the shorter one will be used.
             */
            public Wait setTimeout(String timeout) {
              this.timeout = timeout;
              return this;
            }

            @Override
            public Wait set(String parameterName, Object value) {
              return (Wait) super.set(parameterName, value);
            }
          }

        }
      }
      /**
       * An accessor for creating requests from the Studies collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Aiplatform aiplatform = new Aiplatform(...);}
       *   {@code Aiplatform.Studies.List request = aiplatform.studies().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Studies studies() {
        return new Studies();
      }

      /**
       * The "studies" collection of methods.
       */
      public class Studies {

        /**
         * Creates a Study. A resource name will be generated after creation of the Study.
         *
         * Create a request for the method "studies.create".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The resource name of the Location to create the CustomJob in. Format:
         *        `projects/{project}/locations/{location}`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Study}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Study content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Study> {

          private static final String REST_PATH = "v1/{+parent}/studies";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Creates a Study. A resource name will be generated after creation of the Study.
           *
           * Create a request for the method "studies.create".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The resource name of the Location to create the CustomJob in. Format:
         *        `projects/{project}/locations/{location}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Study}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Study content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Study.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the Location to create the CustomJob in. Format:
           * `projects/{project}/locations/{location}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The resource name of the Location to create the CustomJob in. Format:
         `projects/{project}/locations/{location}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The resource name of the Location to create the CustomJob in. Format:
           * `projects/{project}/locations/{location}`
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a Study.
         *
         * Create a request for the method "studies.delete".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the Study resource to be deleted. Format:
         *        `projects/{project}/locations/{location}/studies/{study}`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/studies/[^/]+$");

          /**
           * Deletes a Study.
           *
           * Create a request for the method "studies.delete".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the Study resource to be deleted. Format:
         *        `projects/{project}/locations/{location}/studies/{study}`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/studies/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the Study resource to be deleted. Format:
           * `projects/{project}/locations/{location}/studies/{study}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the Study resource to be deleted. Format:
         `projects/{project}/locations/{location}/studies/{study}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the Study resource to be deleted. Format:
           * `projects/{project}/locations/{location}/studies/{study}`
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/studies/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets a Study by name.
         *
         * Create a request for the method "studies.get".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the Study resource. Format:
         *        `projects/{project}/locations/{location}/studies/{study}`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Study> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/studies/[^/]+$");

          /**
           * Gets a Study by name.
           *
           * Create a request for the method "studies.get".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the Study resource. Format:
         *        `projects/{project}/locations/{location}/studies/{study}`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Study.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/studies/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the Study resource. Format:
           * `projects/{project}/locations/{location}/studies/{study}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the Study resource. Format:
         `projects/{project}/locations/{location}/studies/{study}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the Study resource. Format:
           * `projects/{project}/locations/{location}/studies/{study}`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/studies/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists all the studies in a region for an associated project.
         *
         * Create a request for the method "studies.list".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The resource name of the Location to list the Study from. Format:
         *        `projects/{project}/locations/{location}`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListStudiesResponse> {

          private static final String REST_PATH = "v1/{+parent}/studies";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists all the studies in a region for an associated project.
           *
           * Create a request for the method "studies.list".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The resource name of the Location to list the Study from. Format:
         *        `projects/{project}/locations/{location}`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListStudiesResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the Location to list the Study from. Format:
           * `projects/{project}/locations/{location}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The resource name of the Location to list the Study from. Format:
         `projects/{project}/locations/{location}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The resource name of the Location to list the Study from. Format:
           * `projects/{project}/locations/{location}`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Optional. The maximum number of studies to return per "page" of results. If
           * unspecified, service will pick an appropriate default.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Optional. The maximum number of studies to return per "page" of results. If unspecified, service
         will pick an appropriate default.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Optional. The maximum number of studies to return per "page" of results. If
           * unspecified, service will pick an appropriate default.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * Optional. A page token to request the next page of results. If unspecified, there are
           * no subsequent pages.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Optional. A page token to request the next page of results. If unspecified, there are no subsequent
         pages.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * Optional. A page token to request the next page of results. If unspecified, there are
           * no subsequent pages.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Looks a study up using the user-defined display_name field instead of the fully qualified
         * resource name.
         *
         * Create a request for the method "studies.lookup".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Lookup#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The resource name of the Location to get the Study from. Format:
         *        `projects/{project}/locations/{location}`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1LookupStudyRequest}
         * @return the request
         */
        public Lookup lookup(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1LookupStudyRequest content) throws java.io.IOException {
          Lookup result = new Lookup(parent, content);
          initialize(result);
          return result;
        }

        public class Lookup extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Study> {

          private static final String REST_PATH = "v1/{+parent}/studies:lookup";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Looks a study up using the user-defined display_name field instead of the fully qualified
           * resource name.
           *
           * Create a request for the method "studies.lookup".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Lookup#execute()} method to invoke the remote operation.
           * <p> {@link
           * Lookup#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The resource name of the Location to get the Study from. Format:
         *        `projects/{project}/locations/{location}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1LookupStudyRequest}
           * @since 1.13
           */
          protected Lookup(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1LookupStudyRequest content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Study.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Lookup set$Xgafv(java.lang.String $Xgafv) {
            return (Lookup) super.set$Xgafv($Xgafv);
          }

          @Override
          public Lookup setAccessToken(java.lang.String accessToken) {
            return (Lookup) super.setAccessToken(accessToken);
          }

          @Override
          public Lookup setAlt(java.lang.String alt) {
            return (Lookup) super.setAlt(alt);
          }

          @Override
          public Lookup setCallback(java.lang.String callback) {
            return (Lookup) super.setCallback(callback);
          }

          @Override
          public Lookup setFields(java.lang.String fields) {
            return (Lookup) super.setFields(fields);
          }

          @Override
          public Lookup setKey(java.lang.String key) {
            return (Lookup) super.setKey(key);
          }

          @Override
          public Lookup setOauthToken(java.lang.String oauthToken) {
            return (Lookup) super.setOauthToken(oauthToken);
          }

          @Override
          public Lookup setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Lookup) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Lookup setQuotaUser(java.lang.String quotaUser) {
            return (Lookup) super.setQuotaUser(quotaUser);
          }

          @Override
          public Lookup setUploadType(java.lang.String uploadType) {
            return (Lookup) super.setUploadType(uploadType);
          }

          @Override
          public Lookup setUploadProtocol(java.lang.String uploadProtocol) {
            return (Lookup) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the Location to get the Study from. Format:
           * `projects/{project}/locations/{location}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The resource name of the Location to get the Study from. Format:
         `projects/{project}/locations/{location}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The resource name of the Location to get the Study from. Format:
           * `projects/{project}/locations/{location}`
           */
          public Lookup setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Lookup set(String parameterName, Object value) {
            return (Lookup) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the Operations collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Aiplatform aiplatform = new Aiplatform(...);}
         *   {@code Aiplatform.Operations.List request = aiplatform.operations().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Operations operations() {
          return new Operations();
        }

        /**
         * The "operations" collection of methods.
         */
        public class Operations {

          /**
           * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
           * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
           * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
           * methods to check whether the cancellation succeeded or whether the operation completed despite
           * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
           * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
           * `Code.CANCELLED`.
           *
           * Create a request for the method "operations.cancel".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource to be cancelled.
           * @return the request
           */
          public Cancel cancel(java.lang.String name) throws java.io.IOException {
            Cancel result = new Cancel(name);
            initialize(result);
            return result;
          }

          public class Cancel extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

            private static final String REST_PATH = "v1/{+name}:cancel";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/studies/[^/]+/operations/[^/]+$");

            /**
             * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
             * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
             * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
             * methods to check whether the cancellation succeeded or whether the operation completed despite
             * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
             * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
             * `Code.CANCELLED`.
             *
             * Create a request for the method "operations.cancel".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
             * <p> {@link
             * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource to be cancelled.
             * @since 1.13
             */
            protected Cancel(java.lang.String name) {
              super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/studies/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public Cancel set$Xgafv(java.lang.String $Xgafv) {
              return (Cancel) super.set$Xgafv($Xgafv);
            }

            @Override
            public Cancel setAccessToken(java.lang.String accessToken) {
              return (Cancel) super.setAccessToken(accessToken);
            }

            @Override
            public Cancel setAlt(java.lang.String alt) {
              return (Cancel) super.setAlt(alt);
            }

            @Override
            public Cancel setCallback(java.lang.String callback) {
              return (Cancel) super.setCallback(callback);
            }

            @Override
            public Cancel setFields(java.lang.String fields) {
              return (Cancel) super.setFields(fields);
            }

            @Override
            public Cancel setKey(java.lang.String key) {
              return (Cancel) super.setKey(key);
            }

            @Override
            public Cancel setOauthToken(java.lang.String oauthToken) {
              return (Cancel) super.setOauthToken(oauthToken);
            }

            @Override
            public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Cancel) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Cancel setQuotaUser(java.lang.String quotaUser) {
              return (Cancel) super.setQuotaUser(quotaUser);
            }

            @Override
            public Cancel setUploadType(java.lang.String uploadType) {
              return (Cancel) super.setUploadType(uploadType);
            }

            @Override
            public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
              return (Cancel) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource to be cancelled. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource to be cancelled.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource to be cancelled. */
            public Cancel setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/studies/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Cancel set(String parameterName, Object value) {
              return (Cancel) super.set(parameterName, value);
            }
          }
          /**
           * Deletes a long-running operation. This method indicates that the client is no longer interested
           * in the operation result. It does not cancel the operation. If the server doesn't support this
           * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.delete".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource to be deleted.
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/studies/[^/]+/operations/[^/]+$");

            /**
             * Deletes a long-running operation. This method indicates that the client is no longer interested
             * in the operation result. It does not cancel the operation. If the server doesn't support this
             * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.delete".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource to be deleted.
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/studies/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource to be deleted. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource to be deleted.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource to be deleted. */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/studies/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Gets the latest state of a long-running operation. Clients can use this method to poll the
           * operation result at intervals as recommended by the API service.
           *
           * Create a request for the method "operations.get".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource.
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/studies/[^/]+/operations/[^/]+$");

            /**
             * Gets the latest state of a long-running operation. Clients can use this method to poll the
             * operation result at intervals as recommended by the API service.
             *
             * Create a request for the method "operations.get".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource.
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/studies/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource. */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/studies/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Lists operations that match the specified filter in the request. If the server doesn't support
           * this method, it returns `UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.list".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation's parent resource.
           * @return the request
           */
          public List list(java.lang.String name) throws java.io.IOException {
            List result = new List(name);
            initialize(result);
            return result;
          }

          public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse> {

            private static final String REST_PATH = "v1/{+name}/operations";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/studies/[^/]+$");

            /**
             * Lists operations that match the specified filter in the request. If the server doesn't support
             * this method, it returns `UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.list".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation's parent resource.
             * @since 1.13
             */
            protected List(java.lang.String name) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/studies/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation's parent resource. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation's parent resource.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation's parent resource. */
            public List setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/studies/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /** The standard list filter. */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** The standard list filter.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /** The standard list filter. */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /** The standard list page size. */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** The standard list page size.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /** The standard list page size. */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** The standard list page token. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** The standard list page token.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** The standard list page token. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Waits until the specified long-running operation is done or reaches at most a specified timeout,
           * returning the latest state. If the operation is already done, the latest state is immediately
           * returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC
           * timeout is used. If the server does not support this method, it returns
           * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
           * the latest state before the specified timeout (including immediately), meaning even an immediate
           * response is no guarantee that the operation is done.
           *
           * Create a request for the method "operations.wait".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Wait#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource to wait on.
           * @return the request
           */
          public Wait wait(java.lang.String name) throws java.io.IOException {
            Wait result = new Wait(name);
            initialize(result);
            return result;
          }

          public class Wait extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+name}:wait";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/studies/[^/]+/operations/[^/]+$");

            /**
             * Waits until the specified long-running operation is done or reaches at most a specified
             * timeout, returning the latest state. If the operation is already done, the latest state is
             * immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout,
             * the HTTP/RPC timeout is used. If the server does not support this method, it returns
             * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
             * the latest state before the specified timeout (including immediately), meaning even an
             * immediate response is no guarantee that the operation is done.
             *
             * Create a request for the method "operations.wait".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Wait#execute()} method to invoke the remote operation. <p>
             * {@link Wait#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource to wait on.
             * @since 1.13
             */
            protected Wait(java.lang.String name) {
              super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/studies/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public Wait set$Xgafv(java.lang.String $Xgafv) {
              return (Wait) super.set$Xgafv($Xgafv);
            }

            @Override
            public Wait setAccessToken(java.lang.String accessToken) {
              return (Wait) super.setAccessToken(accessToken);
            }

            @Override
            public Wait setAlt(java.lang.String alt) {
              return (Wait) super.setAlt(alt);
            }

            @Override
            public Wait setCallback(java.lang.String callback) {
              return (Wait) super.setCallback(callback);
            }

            @Override
            public Wait setFields(java.lang.String fields) {
              return (Wait) super.setFields(fields);
            }

            @Override
            public Wait setKey(java.lang.String key) {
              return (Wait) super.setKey(key);
            }

            @Override
            public Wait setOauthToken(java.lang.String oauthToken) {
              return (Wait) super.setOauthToken(oauthToken);
            }

            @Override
            public Wait setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Wait) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Wait setQuotaUser(java.lang.String quotaUser) {
              return (Wait) super.setQuotaUser(quotaUser);
            }

            @Override
            public Wait setUploadType(java.lang.String uploadType) {
              return (Wait) super.setUploadType(uploadType);
            }

            @Override
            public Wait setUploadProtocol(java.lang.String uploadProtocol) {
              return (Wait) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource to wait on. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource to wait on.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource to wait on. */
            public Wait setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/studies/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * The maximum duration to wait before timing out. If left blank, the wait will be at
             * most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline
             * is also specified, the shorter one will be used.
             */
            @com.google.api.client.util.Key
            private String timeout;

            /** The maximum duration to wait before timing out. If left blank, the wait will be at most the time
           permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the
           shorter one will be used.
             */
            public String getTimeout() {
              return timeout;
            }

            /**
             * The maximum duration to wait before timing out. If left blank, the wait will be at
             * most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline
             * is also specified, the shorter one will be used.
             */
            public Wait setTimeout(String timeout) {
              this.timeout = timeout;
              return this;
            }

            @Override
            public Wait set(String parameterName, Object value) {
              return (Wait) super.set(parameterName, value);
            }
          }

        }
        /**
         * An accessor for creating requests from the Trials collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Aiplatform aiplatform = new Aiplatform(...);}
         *   {@code Aiplatform.Trials.List request = aiplatform.trials().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Trials trials() {
          return new Trials();
        }

        /**
         * The "trials" collection of methods.
         */
        public class Trials {

          /**
           * Adds a measurement of the objective metrics to a Trial. This measurement is assumed to have been
           * taken before the Trial is complete.
           *
           * Create a request for the method "trials.addTrialMeasurement".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link AddTrialMeasurement#execute()} method to invoke the remote operation.
           *
           * @param trialName Required. The name of the trial to add measurement. Format:
           *        `projects/{project}/locations/{location}/studies/{study}/trials/{trial}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1AddTrialMeasurementRequest}
           * @return the request
           */
          public AddTrialMeasurement addTrialMeasurement(java.lang.String trialName, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1AddTrialMeasurementRequest content) throws java.io.IOException {
            AddTrialMeasurement result = new AddTrialMeasurement(trialName, content);
            initialize(result);
            return result;
          }

          public class AddTrialMeasurement extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Trial> {

            private static final String REST_PATH = "v1/{+trialName}:addTrialMeasurement";

            private final java.util.regex.Pattern TRIAL_NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/studies/[^/]+/trials/[^/]+$");

            /**
             * Adds a measurement of the objective metrics to a Trial. This measurement is assumed to have
             * been taken before the Trial is complete.
             *
             * Create a request for the method "trials.addTrialMeasurement".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link AddTrialMeasurement#execute()} method to invoke the remote
             * operation. <p> {@link AddTrialMeasurement#initialize(com.google.api.client.googleapis.services.
             * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
             * invoking the constructor. </p>
             *
             * @param trialName Required. The name of the trial to add measurement. Format:
           *        `projects/{project}/locations/{location}/studies/{study}/trials/{trial}`
             * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1AddTrialMeasurementRequest}
             * @since 1.13
             */
            protected AddTrialMeasurement(java.lang.String trialName, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1AddTrialMeasurementRequest content) {
              super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Trial.class);
              this.trialName = com.google.api.client.util.Preconditions.checkNotNull(trialName, "Required parameter trialName must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(TRIAL_NAME_PATTERN.matcher(trialName).matches(),
                    "Parameter trialName must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/studies/[^/]+/trials/[^/]+$");
              }
            }

            @Override
            public AddTrialMeasurement set$Xgafv(java.lang.String $Xgafv) {
              return (AddTrialMeasurement) super.set$Xgafv($Xgafv);
            }

            @Override
            public AddTrialMeasurement setAccessToken(java.lang.String accessToken) {
              return (AddTrialMeasurement) super.setAccessToken(accessToken);
            }

            @Override
            public AddTrialMeasurement setAlt(java.lang.String alt) {
              return (AddTrialMeasurement) super.setAlt(alt);
            }

            @Override
            public AddTrialMeasurement setCallback(java.lang.String callback) {
              return (AddTrialMeasurement) super.setCallback(callback);
            }

            @Override
            public AddTrialMeasurement setFields(java.lang.String fields) {
              return (AddTrialMeasurement) super.setFields(fields);
            }

            @Override
            public AddTrialMeasurement setKey(java.lang.String key) {
              return (AddTrialMeasurement) super.setKey(key);
            }

            @Override
            public AddTrialMeasurement setOauthToken(java.lang.String oauthToken) {
              return (AddTrialMeasurement) super.setOauthToken(oauthToken);
            }

            @Override
            public AddTrialMeasurement setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (AddTrialMeasurement) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public AddTrialMeasurement setQuotaUser(java.lang.String quotaUser) {
              return (AddTrialMeasurement) super.setQuotaUser(quotaUser);
            }

            @Override
            public AddTrialMeasurement setUploadType(java.lang.String uploadType) {
              return (AddTrialMeasurement) super.setUploadType(uploadType);
            }

            @Override
            public AddTrialMeasurement setUploadProtocol(java.lang.String uploadProtocol) {
              return (AddTrialMeasurement) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the trial to add measurement. Format:
             * `projects/{project}/locations/{location}/studies/{study}/trials/{trial}`
             */
            @com.google.api.client.util.Key
            private java.lang.String trialName;

            /** Required. The name of the trial to add measurement. Format:
           `projects/{project}/locations/{location}/studies/{study}/trials/{trial}`
             */
            public java.lang.String getTrialName() {
              return trialName;
            }

            /**
             * Required. The name of the trial to add measurement. Format:
             * `projects/{project}/locations/{location}/studies/{study}/trials/{trial}`
             */
            public AddTrialMeasurement setTrialName(java.lang.String trialName) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(TRIAL_NAME_PATTERN.matcher(trialName).matches(),
                    "Parameter trialName must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/studies/[^/]+/trials/[^/]+$");
              }
              this.trialName = trialName;
              return this;
            }

            @Override
            public AddTrialMeasurement set(String parameterName, Object value) {
              return (AddTrialMeasurement) super.set(parameterName, value);
            }
          }
          /**
           * Checks whether a Trial should stop or not. Returns a long-running operation. When the operation
           * is successful, it will contain a CheckTrialEarlyStoppingStateResponse.
           *
           * Create a request for the method "trials.checkTrialEarlyStoppingState".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link CheckTrialEarlyStoppingState#execute()} method to invoke the remote
           * operation.
           *
           * @param trialName Required. The Trial's name. Format:
           *        `projects/{project}/locations/{location}/studies/{study}/trials/{trial}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CheckTrialEarlyStoppingStateRequest}
           * @return the request
           */
          public CheckTrialEarlyStoppingState checkTrialEarlyStoppingState(java.lang.String trialName, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CheckTrialEarlyStoppingStateRequest content) throws java.io.IOException {
            CheckTrialEarlyStoppingState result = new CheckTrialEarlyStoppingState(trialName, content);
            initialize(result);
            return result;
          }

          public class CheckTrialEarlyStoppingState extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+trialName}:checkTrialEarlyStoppingState";

            private final java.util.regex.Pattern TRIAL_NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/studies/[^/]+/trials/[^/]+$");

            /**
             * Checks whether a Trial should stop or not. Returns a long-running operation. When the operation
             * is successful, it will contain a CheckTrialEarlyStoppingStateResponse.
             *
             * Create a request for the method "trials.checkTrialEarlyStoppingState".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link CheckTrialEarlyStoppingState#execute()} method to invoke
             * the remote operation. <p> {@link CheckTrialEarlyStoppingState#initialize(com.google.api.client.
             * googleapis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
             * immediately after invoking the constructor. </p>
             *
             * @param trialName Required. The Trial's name. Format:
           *        `projects/{project}/locations/{location}/studies/{study}/trials/{trial}`
             * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CheckTrialEarlyStoppingStateRequest}
             * @since 1.13
             */
            protected CheckTrialEarlyStoppingState(java.lang.String trialName, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CheckTrialEarlyStoppingStateRequest content) {
              super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
              this.trialName = com.google.api.client.util.Preconditions.checkNotNull(trialName, "Required parameter trialName must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(TRIAL_NAME_PATTERN.matcher(trialName).matches(),
                    "Parameter trialName must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/studies/[^/]+/trials/[^/]+$");
              }
            }

            @Override
            public CheckTrialEarlyStoppingState set$Xgafv(java.lang.String $Xgafv) {
              return (CheckTrialEarlyStoppingState) super.set$Xgafv($Xgafv);
            }

            @Override
            public CheckTrialEarlyStoppingState setAccessToken(java.lang.String accessToken) {
              return (CheckTrialEarlyStoppingState) super.setAccessToken(accessToken);
            }

            @Override
            public CheckTrialEarlyStoppingState setAlt(java.lang.String alt) {
              return (CheckTrialEarlyStoppingState) super.setAlt(alt);
            }

            @Override
            public CheckTrialEarlyStoppingState setCallback(java.lang.String callback) {
              return (CheckTrialEarlyStoppingState) super.setCallback(callback);
            }

            @Override
            public CheckTrialEarlyStoppingState setFields(java.lang.String fields) {
              return (CheckTrialEarlyStoppingState) super.setFields(fields);
            }

            @Override
            public CheckTrialEarlyStoppingState setKey(java.lang.String key) {
              return (CheckTrialEarlyStoppingState) super.setKey(key);
            }

            @Override
            public CheckTrialEarlyStoppingState setOauthToken(java.lang.String oauthToken) {
              return (CheckTrialEarlyStoppingState) super.setOauthToken(oauthToken);
            }

            @Override
            public CheckTrialEarlyStoppingState setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (CheckTrialEarlyStoppingState) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public CheckTrialEarlyStoppingState setQuotaUser(java.lang.String quotaUser) {
              return (CheckTrialEarlyStoppingState) super.setQuotaUser(quotaUser);
            }

            @Override
            public CheckTrialEarlyStoppingState setUploadType(java.lang.String uploadType) {
              return (CheckTrialEarlyStoppingState) super.setUploadType(uploadType);
            }

            @Override
            public CheckTrialEarlyStoppingState setUploadProtocol(java.lang.String uploadProtocol) {
              return (CheckTrialEarlyStoppingState) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The Trial's name. Format:
             * `projects/{project}/locations/{location}/studies/{study}/trials/{trial}`
             */
            @com.google.api.client.util.Key
            private java.lang.String trialName;

            /** Required. The Trial's name. Format:
           `projects/{project}/locations/{location}/studies/{study}/trials/{trial}`
             */
            public java.lang.String getTrialName() {
              return trialName;
            }

            /**
             * Required. The Trial's name. Format:
             * `projects/{project}/locations/{location}/studies/{study}/trials/{trial}`
             */
            public CheckTrialEarlyStoppingState setTrialName(java.lang.String trialName) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(TRIAL_NAME_PATTERN.matcher(trialName).matches(),
                    "Parameter trialName must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/studies/[^/]+/trials/[^/]+$");
              }
              this.trialName = trialName;
              return this;
            }

            @Override
            public CheckTrialEarlyStoppingState set(String parameterName, Object value) {
              return (CheckTrialEarlyStoppingState) super.set(parameterName, value);
            }
          }
          /**
           * Marks a Trial as complete.
           *
           * Create a request for the method "trials.complete".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Complete#execute()} method to invoke the remote operation.
           *
           * @param name Required. The Trial's name. Format:
           *        `projects/{project}/locations/{location}/studies/{study}/trials/{trial}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CompleteTrialRequest}
           * @return the request
           */
          public Complete complete(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CompleteTrialRequest content) throws java.io.IOException {
            Complete result = new Complete(name, content);
            initialize(result);
            return result;
          }

          public class Complete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Trial> {

            private static final String REST_PATH = "v1/{+name}:complete";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/studies/[^/]+/trials/[^/]+$");

            /**
             * Marks a Trial as complete.
             *
             * Create a request for the method "trials.complete".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Complete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Complete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The Trial's name. Format:
           *        `projects/{project}/locations/{location}/studies/{study}/trials/{trial}`
             * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CompleteTrialRequest}
             * @since 1.13
             */
            protected Complete(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CompleteTrialRequest content) {
              super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Trial.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/studies/[^/]+/trials/[^/]+$");
              }
            }

            @Override
            public Complete set$Xgafv(java.lang.String $Xgafv) {
              return (Complete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Complete setAccessToken(java.lang.String accessToken) {
              return (Complete) super.setAccessToken(accessToken);
            }

            @Override
            public Complete setAlt(java.lang.String alt) {
              return (Complete) super.setAlt(alt);
            }

            @Override
            public Complete setCallback(java.lang.String callback) {
              return (Complete) super.setCallback(callback);
            }

            @Override
            public Complete setFields(java.lang.String fields) {
              return (Complete) super.setFields(fields);
            }

            @Override
            public Complete setKey(java.lang.String key) {
              return (Complete) super.setKey(key);
            }

            @Override
            public Complete setOauthToken(java.lang.String oauthToken) {
              return (Complete) super.setOauthToken(oauthToken);
            }

            @Override
            public Complete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Complete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Complete setQuotaUser(java.lang.String quotaUser) {
              return (Complete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Complete setUploadType(java.lang.String uploadType) {
              return (Complete) super.setUploadType(uploadType);
            }

            @Override
            public Complete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Complete) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The Trial's name. Format:
             * `projects/{project}/locations/{location}/studies/{study}/trials/{trial}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The Trial's name. Format:
           `projects/{project}/locations/{location}/studies/{study}/trials/{trial}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The Trial's name. Format:
             * `projects/{project}/locations/{location}/studies/{study}/trials/{trial}`
             */
            public Complete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/studies/[^/]+/trials/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Complete set(String parameterName, Object value) {
              return (Complete) super.set(parameterName, value);
            }
          }
          /**
           * Adds a user provided Trial to a Study.
           *
           * Create a request for the method "trials.create".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The resource name of the Study to create the Trial in. Format:
           *        `projects/{project}/locations/{location}/studies/{study}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Trial}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Trial content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Trial> {

            private static final String REST_PATH = "v1/{+parent}/trials";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/studies/[^/]+$");

            /**
             * Adds a user provided Trial to a Study.
             *
             * Create a request for the method "trials.create".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
             * <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The resource name of the Study to create the Trial in. Format:
           *        `projects/{project}/locations/{location}/studies/{study}`
             * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Trial}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Trial content) {
              super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Trial.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/studies/[^/]+$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The resource name of the Study to create the Trial in. Format:
             * `projects/{project}/locations/{location}/studies/{study}`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The resource name of the Study to create the Trial in. Format:
           `projects/{project}/locations/{location}/studies/{study}`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The resource name of the Study to create the Trial in. Format:
             * `projects/{project}/locations/{location}/studies/{study}`
             */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/studies/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Deletes a Trial.
           *
           * Create a request for the method "trials.delete".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name Required. The Trial's name. Format:
           *        `projects/{project}/locations/{location}/studies/{study}/trials/{trial}`
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/studies/[^/]+/trials/[^/]+$");

            /**
             * Deletes a Trial.
             *
             * Create a request for the method "trials.delete".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The Trial's name. Format:
           *        `projects/{project}/locations/{location}/studies/{study}/trials/{trial}`
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/studies/[^/]+/trials/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The Trial's name. Format:
             * `projects/{project}/locations/{location}/studies/{study}/trials/{trial}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The Trial's name. Format:
           `projects/{project}/locations/{location}/studies/{study}/trials/{trial}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The Trial's name. Format:
             * `projects/{project}/locations/{location}/studies/{study}/trials/{trial}`
             */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/studies/[^/]+/trials/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Gets a Trial.
           *
           * Create a request for the method "trials.get".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the Trial resource. Format:
           *        `projects/{project}/locations/{location}/studies/{study}/trials/{trial}`
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Trial> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/studies/[^/]+/trials/[^/]+$");

            /**
             * Gets a Trial.
             *
             * Create a request for the method "trials.get".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the Trial resource. Format:
           *        `projects/{project}/locations/{location}/studies/{study}/trials/{trial}`
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Trial.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/studies/[^/]+/trials/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the Trial resource. Format:
             * `projects/{project}/locations/{location}/studies/{study}/trials/{trial}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the Trial resource. Format:
           `projects/{project}/locations/{location}/studies/{study}/trials/{trial}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The name of the Trial resource. Format:
             * `projects/{project}/locations/{location}/studies/{study}/trials/{trial}`
             */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/studies/[^/]+/trials/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Lists the Trials associated with a Study.
           *
           * Create a request for the method "trials.list".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The resource name of the Study to list the Trial from. Format:
           *        `projects/{project}/locations/{location}/studies/{study}`
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListTrialsResponse> {

            private static final String REST_PATH = "v1/{+parent}/trials";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/studies/[^/]+$");

            /**
             * Lists the Trials associated with a Study.
             *
             * Create a request for the method "trials.list".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The resource name of the Study to list the Trial from. Format:
           *        `projects/{project}/locations/{location}/studies/{study}`
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListTrialsResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/studies/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The resource name of the Study to list the Trial from. Format:
             * `projects/{project}/locations/{location}/studies/{study}`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The resource name of the Study to list the Trial from. Format:
           `projects/{project}/locations/{location}/studies/{study}`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The resource name of the Study to list the Trial from. Format:
             * `projects/{project}/locations/{location}/studies/{study}`
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/studies/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Optional. The number of Trials to retrieve per "page" of results. If unspecified, the
             * service will pick an appropriate default.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Optional. The number of Trials to retrieve per "page" of results. If unspecified, the service will
           pick an appropriate default.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * Optional. The number of Trials to retrieve per "page" of results. If unspecified, the
             * service will pick an appropriate default.
             */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /**
             * Optional. A page token to request the next page of results. If unspecified, there are
             * no subsequent pages.
             */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** Optional. A page token to request the next page of results. If unspecified, there are no subsequent
           pages.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /**
             * Optional. A page token to request the next page of results. If unspecified, there are
             * no subsequent pages.
             */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Lists the pareto-optimal Trials for multi-objective Study or the optimal Trials for single-
           * objective Study. The definition of pareto-optimal can be checked in wiki page.
           * https://en.wikipedia.org/wiki/Pareto_efficiency
           *
           * Create a request for the method "trials.listOptimalTrials".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link ListOptimalTrials#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The name of the Study that the optimal Trial belongs to.
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListOptimalTrialsRequest}
           * @return the request
           */
          public ListOptimalTrials listOptimalTrials(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListOptimalTrialsRequest content) throws java.io.IOException {
            ListOptimalTrials result = new ListOptimalTrials(parent, content);
            initialize(result);
            return result;
          }

          public class ListOptimalTrials extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListOptimalTrialsResponse> {

            private static final String REST_PATH = "v1/{+parent}/trials:listOptimalTrials";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/studies/[^/]+$");

            /**
             * Lists the pareto-optimal Trials for multi-objective Study or the optimal Trials for single-
             * objective Study. The definition of pareto-optimal can be checked in wiki page.
             * https://en.wikipedia.org/wiki/Pareto_efficiency
             *
             * Create a request for the method "trials.listOptimalTrials".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link ListOptimalTrials#execute()} method to invoke the remote
             * operation. <p> {@link ListOptimalTrials#initialize(com.google.api.client.googleapis.services.Ab
             * stractGoogleClientRequest)} must be called to initialize this instance immediately after
             * invoking the constructor. </p>
             *
             * @param parent Required. The name of the Study that the optimal Trial belongs to.
             * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListOptimalTrialsRequest}
             * @since 1.13
             */
            protected ListOptimalTrials(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListOptimalTrialsRequest content) {
              super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListOptimalTrialsResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/studies/[^/]+$");
              }
            }

            @Override
            public ListOptimalTrials set$Xgafv(java.lang.String $Xgafv) {
              return (ListOptimalTrials) super.set$Xgafv($Xgafv);
            }

            @Override
            public ListOptimalTrials setAccessToken(java.lang.String accessToken) {
              return (ListOptimalTrials) super.setAccessToken(accessToken);
            }

            @Override
            public ListOptimalTrials setAlt(java.lang.String alt) {
              return (ListOptimalTrials) super.setAlt(alt);
            }

            @Override
            public ListOptimalTrials setCallback(java.lang.String callback) {
              return (ListOptimalTrials) super.setCallback(callback);
            }

            @Override
            public ListOptimalTrials setFields(java.lang.String fields) {
              return (ListOptimalTrials) super.setFields(fields);
            }

            @Override
            public ListOptimalTrials setKey(java.lang.String key) {
              return (ListOptimalTrials) super.setKey(key);
            }

            @Override
            public ListOptimalTrials setOauthToken(java.lang.String oauthToken) {
              return (ListOptimalTrials) super.setOauthToken(oauthToken);
            }

            @Override
            public ListOptimalTrials setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (ListOptimalTrials) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public ListOptimalTrials setQuotaUser(java.lang.String quotaUser) {
              return (ListOptimalTrials) super.setQuotaUser(quotaUser);
            }

            @Override
            public ListOptimalTrials setUploadType(java.lang.String uploadType) {
              return (ListOptimalTrials) super.setUploadType(uploadType);
            }

            @Override
            public ListOptimalTrials setUploadProtocol(java.lang.String uploadProtocol) {
              return (ListOptimalTrials) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. The name of the Study that the optimal Trial belongs to. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The name of the Study that the optimal Trial belongs to.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Required. The name of the Study that the optimal Trial belongs to. */
            public ListOptimalTrials setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/studies/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public ListOptimalTrials set(String parameterName, Object value) {
              return (ListOptimalTrials) super.set(parameterName, value);
            }
          }
          /**
           * Stops a Trial.
           *
           * Create a request for the method "trials.stop".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Stop#execute()} method to invoke the remote operation.
           *
           * @param name Required. The Trial's name. Format:
           *        `projects/{project}/locations/{location}/studies/{study}/trials/{trial}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1StopTrialRequest}
           * @return the request
           */
          public Stop stop(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1StopTrialRequest content) throws java.io.IOException {
            Stop result = new Stop(name, content);
            initialize(result);
            return result;
          }

          public class Stop extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Trial> {

            private static final String REST_PATH = "v1/{+name}:stop";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/studies/[^/]+/trials/[^/]+$");

            /**
             * Stops a Trial.
             *
             * Create a request for the method "trials.stop".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Stop#execute()} method to invoke the remote operation. <p>
             * {@link Stop#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The Trial's name. Format:
           *        `projects/{project}/locations/{location}/studies/{study}/trials/{trial}`
             * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1StopTrialRequest}
             * @since 1.13
             */
            protected Stop(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1StopTrialRequest content) {
              super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Trial.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/studies/[^/]+/trials/[^/]+$");
              }
            }

            @Override
            public Stop set$Xgafv(java.lang.String $Xgafv) {
              return (Stop) super.set$Xgafv($Xgafv);
            }

            @Override
            public Stop setAccessToken(java.lang.String accessToken) {
              return (Stop) super.setAccessToken(accessToken);
            }

            @Override
            public Stop setAlt(java.lang.String alt) {
              return (Stop) super.setAlt(alt);
            }

            @Override
            public Stop setCallback(java.lang.String callback) {
              return (Stop) super.setCallback(callback);
            }

            @Override
            public Stop setFields(java.lang.String fields) {
              return (Stop) super.setFields(fields);
            }

            @Override
            public Stop setKey(java.lang.String key) {
              return (Stop) super.setKey(key);
            }

            @Override
            public Stop setOauthToken(java.lang.String oauthToken) {
              return (Stop) super.setOauthToken(oauthToken);
            }

            @Override
            public Stop setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Stop) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Stop setQuotaUser(java.lang.String quotaUser) {
              return (Stop) super.setQuotaUser(quotaUser);
            }

            @Override
            public Stop setUploadType(java.lang.String uploadType) {
              return (Stop) super.setUploadType(uploadType);
            }

            @Override
            public Stop setUploadProtocol(java.lang.String uploadProtocol) {
              return (Stop) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The Trial's name. Format:
             * `projects/{project}/locations/{location}/studies/{study}/trials/{trial}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The Trial's name. Format:
           `projects/{project}/locations/{location}/studies/{study}/trials/{trial}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The Trial's name. Format:
             * `projects/{project}/locations/{location}/studies/{study}/trials/{trial}`
             */
            public Stop setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/studies/[^/]+/trials/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Stop set(String parameterName, Object value) {
              return (Stop) super.set(parameterName, value);
            }
          }
          /**
           * Adds one or more Trials to a Study, with parameter values suggested by Vertex AI Vizier. Returns
           * a long-running operation associated with the generation of Trial suggestions. When this long-
           * running operation succeeds, it will contain a SuggestTrialsResponse.
           *
           * Create a request for the method "trials.suggest".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Suggest#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The project and location that the Study belongs to. Format:
           *        `projects/{project}/locations/{location}/studies/{study}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1SuggestTrialsRequest}
           * @return the request
           */
          public Suggest suggest(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1SuggestTrialsRequest content) throws java.io.IOException {
            Suggest result = new Suggest(parent, content);
            initialize(result);
            return result;
          }

          public class Suggest extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+parent}/trials:suggest";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/studies/[^/]+$");

            /**
             * Adds one or more Trials to a Study, with parameter values suggested by Vertex AI Vizier.
             * Returns a long-running operation associated with the generation of Trial suggestions. When this
             * long-running operation succeeds, it will contain a SuggestTrialsResponse.
             *
             * Create a request for the method "trials.suggest".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Suggest#execute()} method to invoke the remote operation.
             * <p> {@link
             * Suggest#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The project and location that the Study belongs to. Format:
           *        `projects/{project}/locations/{location}/studies/{study}`
             * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1SuggestTrialsRequest}
             * @since 1.13
             */
            protected Suggest(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1SuggestTrialsRequest content) {
              super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/studies/[^/]+$");
              }
            }

            @Override
            public Suggest set$Xgafv(java.lang.String $Xgafv) {
              return (Suggest) super.set$Xgafv($Xgafv);
            }

            @Override
            public Suggest setAccessToken(java.lang.String accessToken) {
              return (Suggest) super.setAccessToken(accessToken);
            }

            @Override
            public Suggest setAlt(java.lang.String alt) {
              return (Suggest) super.setAlt(alt);
            }

            @Override
            public Suggest setCallback(java.lang.String callback) {
              return (Suggest) super.setCallback(callback);
            }

            @Override
            public Suggest setFields(java.lang.String fields) {
              return (Suggest) super.setFields(fields);
            }

            @Override
            public Suggest setKey(java.lang.String key) {
              return (Suggest) super.setKey(key);
            }

            @Override
            public Suggest setOauthToken(java.lang.String oauthToken) {
              return (Suggest) super.setOauthToken(oauthToken);
            }

            @Override
            public Suggest setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Suggest) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Suggest setQuotaUser(java.lang.String quotaUser) {
              return (Suggest) super.setQuotaUser(quotaUser);
            }

            @Override
            public Suggest setUploadType(java.lang.String uploadType) {
              return (Suggest) super.setUploadType(uploadType);
            }

            @Override
            public Suggest setUploadProtocol(java.lang.String uploadProtocol) {
              return (Suggest) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The project and location that the Study belongs to. Format:
             * `projects/{project}/locations/{location}/studies/{study}`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The project and location that the Study belongs to. Format:
           `projects/{project}/locations/{location}/studies/{study}`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The project and location that the Study belongs to. Format:
             * `projects/{project}/locations/{location}/studies/{study}`
             */
            public Suggest setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/studies/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public Suggest set(String parameterName, Object value) {
              return (Suggest) super.set(parameterName, value);
            }
          }

          /**
           * An accessor for creating requests from the Operations collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code Aiplatform aiplatform = new Aiplatform(...);}
           *   {@code Aiplatform.Operations.List request = aiplatform.operations().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public Operations operations() {
            return new Operations();
          }

          /**
           * The "operations" collection of methods.
           */
          public class Operations {

            /**
             * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
             * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
             * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
             * methods to check whether the cancellation succeeded or whether the operation completed despite
             * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
             * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
             * `Code.CANCELLED`.
             *
             * Create a request for the method "operations.cancel".
             *
             * This request holds the parameters needed by the aiplatform server.  After setting any optional
             * parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
             *
             * @param name The name of the operation resource to be cancelled.
             * @return the request
             */
            public Cancel cancel(java.lang.String name) throws java.io.IOException {
              Cancel result = new Cancel(name);
              initialize(result);
              return result;
            }

            public class Cancel extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

              private static final String REST_PATH = "v1/{+name}:cancel";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/studies/[^/]+/trials/[^/]+/operations/[^/]+$");

              /**
               * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
               * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
               * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
               * methods to check whether the cancellation succeeded or whether the operation completed despite
               * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
               * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
               * `Code.CANCELLED`.
               *
               * Create a request for the method "operations.cancel".
               *
               * This request holds the parameters needed by the the aiplatform server.  After setting any
               * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
               * <p> {@link
               * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The name of the operation resource to be cancelled.
               * @since 1.13
               */
              protected Cancel(java.lang.String name) {
                super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/studies/[^/]+/trials/[^/]+/operations/[^/]+$");
                }
              }

              @Override
              public Cancel set$Xgafv(java.lang.String $Xgafv) {
                return (Cancel) super.set$Xgafv($Xgafv);
              }

              @Override
              public Cancel setAccessToken(java.lang.String accessToken) {
                return (Cancel) super.setAccessToken(accessToken);
              }

              @Override
              public Cancel setAlt(java.lang.String alt) {
                return (Cancel) super.setAlt(alt);
              }

              @Override
              public Cancel setCallback(java.lang.String callback) {
                return (Cancel) super.setCallback(callback);
              }

              @Override
              public Cancel setFields(java.lang.String fields) {
                return (Cancel) super.setFields(fields);
              }

              @Override
              public Cancel setKey(java.lang.String key) {
                return (Cancel) super.setKey(key);
              }

              @Override
              public Cancel setOauthToken(java.lang.String oauthToken) {
                return (Cancel) super.setOauthToken(oauthToken);
              }

              @Override
              public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Cancel) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Cancel setQuotaUser(java.lang.String quotaUser) {
                return (Cancel) super.setQuotaUser(quotaUser);
              }

              @Override
              public Cancel setUploadType(java.lang.String uploadType) {
                return (Cancel) super.setUploadType(uploadType);
              }

              @Override
              public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
                return (Cancel) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the operation resource to be cancelled. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The name of the operation resource to be cancelled.
               */
              public java.lang.String getName() {
                return name;
              }

              /** The name of the operation resource to be cancelled. */
              public Cancel setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/studies/[^/]+/trials/[^/]+/operations/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Cancel set(String parameterName, Object value) {
                return (Cancel) super.set(parameterName, value);
              }
            }
            /**
             * Deletes a long-running operation. This method indicates that the client is no longer interested
             * in the operation result. It does not cancel the operation. If the server doesn't support this
             * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.delete".
             *
             * This request holds the parameters needed by the aiplatform server.  After setting any optional
             * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             *
             * @param name The name of the operation resource to be deleted.
             * @return the request
             */
            public Delete delete(java.lang.String name) throws java.io.IOException {
              Delete result = new Delete(name);
              initialize(result);
              return result;
            }

            public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/studies/[^/]+/trials/[^/]+/operations/[^/]+$");

              /**
               * Deletes a long-running operation. This method indicates that the client is no longer interested
               * in the operation result. It does not cancel the operation. If the server doesn't support this
               * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
               *
               * Create a request for the method "operations.delete".
               *
               * This request holds the parameters needed by the the aiplatform server.  After setting any
               * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
               * <p> {@link
               * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The name of the operation resource to be deleted.
               * @since 1.13
               */
              protected Delete(java.lang.String name) {
                super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/studies/[^/]+/trials/[^/]+/operations/[^/]+$");
                }
              }

              @Override
              public Delete set$Xgafv(java.lang.String $Xgafv) {
                return (Delete) super.set$Xgafv($Xgafv);
              }

              @Override
              public Delete setAccessToken(java.lang.String accessToken) {
                return (Delete) super.setAccessToken(accessToken);
              }

              @Override
              public Delete setAlt(java.lang.String alt) {
                return (Delete) super.setAlt(alt);
              }

              @Override
              public Delete setCallback(java.lang.String callback) {
                return (Delete) super.setCallback(callback);
              }

              @Override
              public Delete setFields(java.lang.String fields) {
                return (Delete) super.setFields(fields);
              }

              @Override
              public Delete setKey(java.lang.String key) {
                return (Delete) super.setKey(key);
              }

              @Override
              public Delete setOauthToken(java.lang.String oauthToken) {
                return (Delete) super.setOauthToken(oauthToken);
              }

              @Override
              public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Delete) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Delete setQuotaUser(java.lang.String quotaUser) {
                return (Delete) super.setQuotaUser(quotaUser);
              }

              @Override
              public Delete setUploadType(java.lang.String uploadType) {
                return (Delete) super.setUploadType(uploadType);
              }

              @Override
              public Delete setUploadProtocol(java.lang.String uploadProtocol) {
                return (Delete) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the operation resource to be deleted. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The name of the operation resource to be deleted.
               */
              public java.lang.String getName() {
                return name;
              }

              /** The name of the operation resource to be deleted. */
              public Delete setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/studies/[^/]+/trials/[^/]+/operations/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Delete set(String parameterName, Object value) {
                return (Delete) super.set(parameterName, value);
              }
            }
            /**
             * Gets the latest state of a long-running operation. Clients can use this method to poll the
             * operation result at intervals as recommended by the API service.
             *
             * Create a request for the method "operations.get".
             *
             * This request holds the parameters needed by the aiplatform server.  After setting any optional
             * parameters, call the {@link Get#execute()} method to invoke the remote operation.
             *
             * @param name The name of the operation resource.
             * @return the request
             */
            public Get get(java.lang.String name) throws java.io.IOException {
              Get result = new Get(name);
              initialize(result);
              return result;
            }

            public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/studies/[^/]+/trials/[^/]+/operations/[^/]+$");

              /**
               * Gets the latest state of a long-running operation. Clients can use this method to poll the
               * operation result at intervals as recommended by the API service.
               *
               * Create a request for the method "operations.get".
               *
               * This request holds the parameters needed by the the aiplatform server.  After setting any
               * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
               * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The name of the operation resource.
               * @since 1.13
               */
              protected Get(java.lang.String name) {
                super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/studies/[^/]+/trials/[^/]+/operations/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public Get set$Xgafv(java.lang.String $Xgafv) {
                return (Get) super.set$Xgafv($Xgafv);
              }

              @Override
              public Get setAccessToken(java.lang.String accessToken) {
                return (Get) super.setAccessToken(accessToken);
              }

              @Override
              public Get setAlt(java.lang.String alt) {
                return (Get) super.setAlt(alt);
              }

              @Override
              public Get setCallback(java.lang.String callback) {
                return (Get) super.setCallback(callback);
              }

              @Override
              public Get setFields(java.lang.String fields) {
                return (Get) super.setFields(fields);
              }

              @Override
              public Get setKey(java.lang.String key) {
                return (Get) super.setKey(key);
              }

              @Override
              public Get setOauthToken(java.lang.String oauthToken) {
                return (Get) super.setOauthToken(oauthToken);
              }

              @Override
              public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Get) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Get setQuotaUser(java.lang.String quotaUser) {
                return (Get) super.setQuotaUser(quotaUser);
              }

              @Override
              public Get setUploadType(java.lang.String uploadType) {
                return (Get) super.setUploadType(uploadType);
              }

              @Override
              public Get setUploadProtocol(java.lang.String uploadProtocol) {
                return (Get) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the operation resource. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The name of the operation resource.
               */
              public java.lang.String getName() {
                return name;
              }

              /** The name of the operation resource. */
              public Get setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/studies/[^/]+/trials/[^/]+/operations/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Get set(String parameterName, Object value) {
                return (Get) super.set(parameterName, value);
              }
            }
            /**
             * Lists operations that match the specified filter in the request. If the server doesn't support
             * this method, it returns `UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.list".
             *
             * This request holds the parameters needed by the aiplatform server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation.
             *
             * @param name The name of the operation's parent resource.
             * @return the request
             */
            public List list(java.lang.String name) throws java.io.IOException {
              List result = new List(name);
              initialize(result);
              return result;
            }

            public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse> {

              private static final String REST_PATH = "v1/{+name}/operations";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/studies/[^/]+/trials/[^/]+$");

              /**
               * Lists operations that match the specified filter in the request. If the server doesn't support
               * this method, it returns `UNIMPLEMENTED`.
               *
               * Create a request for the method "operations.list".
               *
               * This request holds the parameters needed by the the aiplatform server.  After setting any
               * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
               * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The name of the operation's parent resource.
               * @since 1.13
               */
              protected List(java.lang.String name) {
                super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/studies/[^/]+/trials/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public List set$Xgafv(java.lang.String $Xgafv) {
                return (List) super.set$Xgafv($Xgafv);
              }

              @Override
              public List setAccessToken(java.lang.String accessToken) {
                return (List) super.setAccessToken(accessToken);
              }

              @Override
              public List setAlt(java.lang.String alt) {
                return (List) super.setAlt(alt);
              }

              @Override
              public List setCallback(java.lang.String callback) {
                return (List) super.setCallback(callback);
              }

              @Override
              public List setFields(java.lang.String fields) {
                return (List) super.setFields(fields);
              }

              @Override
              public List setKey(java.lang.String key) {
                return (List) super.setKey(key);
              }

              @Override
              public List setOauthToken(java.lang.String oauthToken) {
                return (List) super.setOauthToken(oauthToken);
              }

              @Override
              public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (List) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public List setQuotaUser(java.lang.String quotaUser) {
                return (List) super.setQuotaUser(quotaUser);
              }

              @Override
              public List setUploadType(java.lang.String uploadType) {
                return (List) super.setUploadType(uploadType);
              }

              @Override
              public List setUploadProtocol(java.lang.String uploadProtocol) {
                return (List) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the operation's parent resource. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The name of the operation's parent resource.
               */
              public java.lang.String getName() {
                return name;
              }

              /** The name of the operation's parent resource. */
              public List setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/studies/[^/]+/trials/[^/]+$");
                }
                this.name = name;
                return this;
              }

              /** The standard list filter. */
              @com.google.api.client.util.Key
              private java.lang.String filter;

              /** The standard list filter.
               */
              public java.lang.String getFilter() {
                return filter;
              }

              /** The standard list filter. */
              public List setFilter(java.lang.String filter) {
                this.filter = filter;
                return this;
              }

              /** The standard list page size. */
              @com.google.api.client.util.Key
              private java.lang.Integer pageSize;

              /** The standard list page size.
               */
              public java.lang.Integer getPageSize() {
                return pageSize;
              }

              /** The standard list page size. */
              public List setPageSize(java.lang.Integer pageSize) {
                this.pageSize = pageSize;
                return this;
              }

              /** The standard list page token. */
              @com.google.api.client.util.Key
              private java.lang.String pageToken;

              /** The standard list page token.
               */
              public java.lang.String getPageToken() {
                return pageToken;
              }

              /** The standard list page token. */
              public List setPageToken(java.lang.String pageToken) {
                this.pageToken = pageToken;
                return this;
              }

              @Override
              public List set(String parameterName, Object value) {
                return (List) super.set(parameterName, value);
              }
            }
            /**
             * Waits until the specified long-running operation is done or reaches at most a specified timeout,
             * returning the latest state. If the operation is already done, the latest state is immediately
             * returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC
             * timeout is used. If the server does not support this method, it returns
             * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
             * the latest state before the specified timeout (including immediately), meaning even an immediate
             * response is no guarantee that the operation is done.
             *
             * Create a request for the method "operations.wait".
             *
             * This request holds the parameters needed by the aiplatform server.  After setting any optional
             * parameters, call the {@link Wait#execute()} method to invoke the remote operation.
             *
             * @param name The name of the operation resource to wait on.
             * @return the request
             */
            public Wait wait(java.lang.String name) throws java.io.IOException {
              Wait result = new Wait(name);
              initialize(result);
              return result;
            }

            public class Wait extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

              private static final String REST_PATH = "v1/{+name}:wait";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/studies/[^/]+/trials/[^/]+/operations/[^/]+$");

              /**
               * Waits until the specified long-running operation is done or reaches at most a specified
               * timeout, returning the latest state. If the operation is already done, the latest state is
               * immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout,
               * the HTTP/RPC timeout is used. If the server does not support this method, it returns
               * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
               * the latest state before the specified timeout (including immediately), meaning even an
               * immediate response is no guarantee that the operation is done.
               *
               * Create a request for the method "operations.wait".
               *
               * This request holds the parameters needed by the the aiplatform server.  After setting any
               * optional parameters, call the {@link Wait#execute()} method to invoke the remote operation. <p>
               * {@link Wait#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The name of the operation resource to wait on.
               * @since 1.13
               */
              protected Wait(java.lang.String name) {
                super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/studies/[^/]+/trials/[^/]+/operations/[^/]+$");
                }
              }

              @Override
              public Wait set$Xgafv(java.lang.String $Xgafv) {
                return (Wait) super.set$Xgafv($Xgafv);
              }

              @Override
              public Wait setAccessToken(java.lang.String accessToken) {
                return (Wait) super.setAccessToken(accessToken);
              }

              @Override
              public Wait setAlt(java.lang.String alt) {
                return (Wait) super.setAlt(alt);
              }

              @Override
              public Wait setCallback(java.lang.String callback) {
                return (Wait) super.setCallback(callback);
              }

              @Override
              public Wait setFields(java.lang.String fields) {
                return (Wait) super.setFields(fields);
              }

              @Override
              public Wait setKey(java.lang.String key) {
                return (Wait) super.setKey(key);
              }

              @Override
              public Wait setOauthToken(java.lang.String oauthToken) {
                return (Wait) super.setOauthToken(oauthToken);
              }

              @Override
              public Wait setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Wait) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Wait setQuotaUser(java.lang.String quotaUser) {
                return (Wait) super.setQuotaUser(quotaUser);
              }

              @Override
              public Wait setUploadType(java.lang.String uploadType) {
                return (Wait) super.setUploadType(uploadType);
              }

              @Override
              public Wait setUploadProtocol(java.lang.String uploadProtocol) {
                return (Wait) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the operation resource to wait on. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The name of the operation resource to wait on.
               */
              public java.lang.String getName() {
                return name;
              }

              /** The name of the operation resource to wait on. */
              public Wait setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/studies/[^/]+/trials/[^/]+/operations/[^/]+$");
                }
                this.name = name;
                return this;
              }

              /**
               * The maximum duration to wait before timing out. If left blank, the wait will be at
               * most the time permitted by the underlying HTTP/RPC protocol. If RPC context
               * deadline is also specified, the shorter one will be used.
               */
              @com.google.api.client.util.Key
              private String timeout;

              /** The maximum duration to wait before timing out. If left blank, the wait will be at most the time
             permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the
             shorter one will be used.
               */
              public String getTimeout() {
                return timeout;
              }

              /**
               * The maximum duration to wait before timing out. If left blank, the wait will be at
               * most the time permitted by the underlying HTTP/RPC protocol. If RPC context
               * deadline is also specified, the shorter one will be used.
               */
              public Wait setTimeout(String timeout) {
                this.timeout = timeout;
                return this;
              }

              @Override
              public Wait set(String parameterName, Object value) {
                return (Wait) super.set(parameterName, value);
              }
            }

          }
        }
      }
      /**
       * An accessor for creating requests from the Tensorboards collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Aiplatform aiplatform = new Aiplatform(...);}
       *   {@code Aiplatform.Tensorboards.List request = aiplatform.tensorboards().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Tensorboards tensorboards() {
        return new Tensorboards();
      }

      /**
       * The "tensorboards" collection of methods.
       */
      public class Tensorboards {

        /**
         * Reads multiple TensorboardTimeSeries' data. The data point number limit is 1000 for scalars, 100
         * for tensors and blob references. If the number of data points stored is less than the limit, all
         * data is returned. Otherwise, the number limit of data points is randomly selected from this time
         * series and returned.
         *
         * Create a request for the method "tensorboards.batchRead".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link BatchRead#execute()} method to invoke the remote operation.
         *
         * @param tensorboard Required. The resource name of the Tensorboard containing TensorboardTimeSeries to read data from.
         *        Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}`. The
         *        TensorboardTimeSeries referenced by time_series must be sub resources of this Tensorboard.
         * @return the request
         */
        public BatchRead batchRead(java.lang.String tensorboard) throws java.io.IOException {
          BatchRead result = new BatchRead(tensorboard);
          initialize(result);
          return result;
        }

        public class BatchRead extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1BatchReadTensorboardTimeSeriesDataResponse> {

          private static final String REST_PATH = "v1/{+tensorboard}:batchRead";

          private final java.util.regex.Pattern TENSORBOARD_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+$");

          /**
           * Reads multiple TensorboardTimeSeries' data. The data point number limit is 1000 for scalars,
           * 100 for tensors and blob references. If the number of data points stored is less than the
           * limit, all data is returned. Otherwise, the number limit of data points is randomly selected
           * from this time series and returned.
           *
           * Create a request for the method "tensorboards.batchRead".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link BatchRead#execute()} method to invoke the remote
           * operation. <p> {@link
           * BatchRead#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param tensorboard Required. The resource name of the Tensorboard containing TensorboardTimeSeries to read data from.
         *        Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}`. The
         *        TensorboardTimeSeries referenced by time_series must be sub resources of this Tensorboard.
           * @since 1.13
           */
          protected BatchRead(java.lang.String tensorboard) {
            super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1BatchReadTensorboardTimeSeriesDataResponse.class);
            this.tensorboard = com.google.api.client.util.Preconditions.checkNotNull(tensorboard, "Required parameter tensorboard must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(TENSORBOARD_PATTERN.matcher(tensorboard).matches(),
                  "Parameter tensorboard must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public BatchRead set$Xgafv(java.lang.String $Xgafv) {
            return (BatchRead) super.set$Xgafv($Xgafv);
          }

          @Override
          public BatchRead setAccessToken(java.lang.String accessToken) {
            return (BatchRead) super.setAccessToken(accessToken);
          }

          @Override
          public BatchRead setAlt(java.lang.String alt) {
            return (BatchRead) super.setAlt(alt);
          }

          @Override
          public BatchRead setCallback(java.lang.String callback) {
            return (BatchRead) super.setCallback(callback);
          }

          @Override
          public BatchRead setFields(java.lang.String fields) {
            return (BatchRead) super.setFields(fields);
          }

          @Override
          public BatchRead setKey(java.lang.String key) {
            return (BatchRead) super.setKey(key);
          }

          @Override
          public BatchRead setOauthToken(java.lang.String oauthToken) {
            return (BatchRead) super.setOauthToken(oauthToken);
          }

          @Override
          public BatchRead setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (BatchRead) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public BatchRead setQuotaUser(java.lang.String quotaUser) {
            return (BatchRead) super.setQuotaUser(quotaUser);
          }

          @Override
          public BatchRead setUploadType(java.lang.String uploadType) {
            return (BatchRead) super.setUploadType(uploadType);
          }

          @Override
          public BatchRead setUploadProtocol(java.lang.String uploadProtocol) {
            return (BatchRead) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the Tensorboard containing TensorboardTimeSeries to read
           * data from. Format:
           * `projects/{project}/locations/{location}/tensorboards/{tensorboard}`. The
           * TensorboardTimeSeries referenced by time_series must be sub resources of this
           * Tensorboard.
           */
          @com.google.api.client.util.Key
          private java.lang.String tensorboard;

          /** Required. The resource name of the Tensorboard containing TensorboardTimeSeries to read data from.
         Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}`. The
         TensorboardTimeSeries referenced by time_series must be sub resources of this Tensorboard.
           */
          public java.lang.String getTensorboard() {
            return tensorboard;
          }

          /**
           * Required. The resource name of the Tensorboard containing TensorboardTimeSeries to read
           * data from. Format:
           * `projects/{project}/locations/{location}/tensorboards/{tensorboard}`. The
           * TensorboardTimeSeries referenced by time_series must be sub resources of this
           * Tensorboard.
           */
          public BatchRead setTensorboard(java.lang.String tensorboard) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(TENSORBOARD_PATTERN.matcher(tensorboard).matches(),
                  "Parameter tensorboard must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+$");
            }
            this.tensorboard = tensorboard;
            return this;
          }

          /**
           * Required. The resource names of the TensorboardTimeSeries to read data from. Format: `p
           * rojects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experime
           * nt}/runs/{run}/timeSeries/{time_series}`
           */
          @com.google.api.client.util.Key
          private java.util.List<java.lang.String> timeSeries;

          /** Required. The resource names of the TensorboardTimeSeries to read data from. Format: `projects/{pro
         ject}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}/timeSerie
         s/{time_series}`
           */
          public java.util.List<java.lang.String> getTimeSeries() {
            return timeSeries;
          }

          /**
           * Required. The resource names of the TensorboardTimeSeries to read data from. Format: `p
           * rojects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experime
           * nt}/runs/{run}/timeSeries/{time_series}`
           */
          public BatchRead setTimeSeries(java.util.List<java.lang.String> timeSeries) {
            this.timeSeries = timeSeries;
            return this;
          }

          @Override
          public BatchRead set(String parameterName, Object value) {
            return (BatchRead) super.set(parameterName, value);
          }
        }
        /**
         * Creates a Tensorboard.
         *
         * Create a request for the method "tensorboards.create".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The resource name of the Location to create the Tensorboard in. Format:
         *        `projects/{project}/locations/{location}`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Tensorboard}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Tensorboard content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+parent}/tensorboards";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Creates a Tensorboard.
           *
           * Create a request for the method "tensorboards.create".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The resource name of the Location to create the Tensorboard in. Format:
         *        `projects/{project}/locations/{location}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Tensorboard}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Tensorboard content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the Location to create the Tensorboard in. Format:
           * `projects/{project}/locations/{location}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The resource name of the Location to create the Tensorboard in. Format:
         `projects/{project}/locations/{location}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The resource name of the Location to create the Tensorboard in. Format:
           * `projects/{project}/locations/{location}`
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a Tensorboard.
         *
         * Create a request for the method "tensorboards.delete".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the Tensorboard to be deleted. Format:
         *        `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+$");

          /**
           * Deletes a Tensorboard.
           *
           * Create a request for the method "tensorboards.delete".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the Tensorboard to be deleted. Format:
         *        `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the Tensorboard to be deleted. Format:
           * `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the Tensorboard to be deleted. Format:
         `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the Tensorboard to be deleted. Format:
           * `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets a Tensorboard.
         *
         * Create a request for the method "tensorboards.get".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the Tensorboard resource. Format:
         *        `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Tensorboard> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+$");

          /**
           * Gets a Tensorboard.
           *
           * Create a request for the method "tensorboards.get".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the Tensorboard resource. Format:
         *        `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Tensorboard.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the Tensorboard resource. Format:
           * `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the Tensorboard resource. Format:
         `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the Tensorboard resource. Format:
           * `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists Tensorboards in a Location.
         *
         * Create a request for the method "tensorboards.list".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The resource name of the Location to list Tensorboards. Format:
         *        `projects/{project}/locations/{location}`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListTensorboardsResponse> {

          private static final String REST_PATH = "v1/{+parent}/tensorboards";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists Tensorboards in a Location.
           *
           * Create a request for the method "tensorboards.list".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The resource name of the Location to list Tensorboards. Format:
         *        `projects/{project}/locations/{location}`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListTensorboardsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the Location to list Tensorboards. Format:
           * `projects/{project}/locations/{location}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The resource name of the Location to list Tensorboards. Format:
         `projects/{project}/locations/{location}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The resource name of the Location to list Tensorboards. Format:
           * `projects/{project}/locations/{location}`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** Lists the Tensorboards that match the filter expression. */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** Lists the Tensorboards that match the filter expression.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /** Lists the Tensorboards that match the filter expression. */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /** Field to use to sort the list. */
          @com.google.api.client.util.Key
          private java.lang.String orderBy;

          /** Field to use to sort the list.
           */
          public java.lang.String getOrderBy() {
            return orderBy;
          }

          /** Field to use to sort the list. */
          public List setOrderBy(java.lang.String orderBy) {
            this.orderBy = orderBy;
            return this;
          }

          /**
           * The maximum number of Tensorboards to return. The service may return fewer than this
           * value. If unspecified, at most 100 Tensorboards are returned. The maximum value is 100;
           * values above 100 are coerced to 100.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The maximum number of Tensorboards to return. The service may return fewer than this value. If
         unspecified, at most 100 Tensorboards are returned. The maximum value is 100; values above 100 are
         coerced to 100.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * The maximum number of Tensorboards to return. The service may return fewer than this
           * value. If unspecified, at most 100 Tensorboards are returned. The maximum value is 100;
           * values above 100 are coerced to 100.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * A page token, received from a previous TensorboardService.ListTensorboards call.
           * Provide this to retrieve the subsequent page. When paginating, all other parameters
           * provided to TensorboardService.ListTensorboards must match the call that provided the
           * page token.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** A page token, received from a previous TensorboardService.ListTensorboards call. Provide this to
         retrieve the subsequent page. When paginating, all other parameters provided to
         TensorboardService.ListTensorboards must match the call that provided the page token.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * A page token, received from a previous TensorboardService.ListTensorboards call.
           * Provide this to retrieve the subsequent page. When paginating, all other parameters
           * provided to TensorboardService.ListTensorboards must match the call that provided the
           * page token.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          /** Mask specifying which fields to read. */
          @com.google.api.client.util.Key
          private String readMask;

          /** Mask specifying which fields to read.
           */
          public String getReadMask() {
            return readMask;
          }

          /** Mask specifying which fields to read. */
          public List setReadMask(String readMask) {
            this.readMask = readMask;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates a Tensorboard.
         *
         * Create a request for the method "tensorboards.patch".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Output only. Name of the Tensorboard. Format:
         *        `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Tensorboard}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Tensorboard content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+$");

          /**
           * Updates a Tensorboard.
           *
           * Create a request for the method "tensorboards.patch".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           * <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Output only. Name of the Tensorboard. Format:
         *        `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Tensorboard}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1Tensorboard content) {
            super(Aiplatform.this, "PATCH", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Output only. Name of the Tensorboard. Format:
           * `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Output only. Name of the Tensorboard. Format:
         `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Output only. Name of the Tensorboard. Format:
           * `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Required. Field mask is used to specify the fields to be overwritten in the Tensorboard
           * resource by the update. The fields specified in the update_mask are relative to the
           * resource, not the full request. A field is overwritten if it's in the mask. If the user
           * does not provide a mask then all fields are overwritten if new values are specified.
           */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Required. Field mask is used to specify the fields to be overwritten in the Tensorboard resource by
         the update. The fields specified in the update_mask are relative to the resource, not the full
         request. A field is overwritten if it's in the mask. If the user does not provide a mask then all
         fields are overwritten if new values are specified.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /**
           * Required. Field mask is used to specify the fields to be overwritten in the Tensorboard
           * resource by the update. The fields specified in the update_mask are relative to the
           * resource, not the full request. A field is overwritten if it's in the mask. If the user
           * does not provide a mask then all fields are overwritten if new values are specified.
           */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }
        /**
         * Returns the storage size for a given TensorBoard instance.
         *
         * Create a request for the method "tensorboards.readSize".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link ReadSize#execute()} method to invoke the remote operation.
         *
         * @param tensorboard Required. The name of the Tensorboard resource. Format:
         *        `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
         * @return the request
         */
        public ReadSize readSize(java.lang.String tensorboard) throws java.io.IOException {
          ReadSize result = new ReadSize(tensorboard);
          initialize(result);
          return result;
        }

        public class ReadSize extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ReadTensorboardSizeResponse> {

          private static final String REST_PATH = "v1/{+tensorboard}:readSize";

          private final java.util.regex.Pattern TENSORBOARD_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+$");

          /**
           * Returns the storage size for a given TensorBoard instance.
           *
           * Create a request for the method "tensorboards.readSize".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link ReadSize#execute()} method to invoke the remote operation.
           * <p> {@link
           * ReadSize#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param tensorboard Required. The name of the Tensorboard resource. Format:
         *        `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
           * @since 1.13
           */
          protected ReadSize(java.lang.String tensorboard) {
            super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ReadTensorboardSizeResponse.class);
            this.tensorboard = com.google.api.client.util.Preconditions.checkNotNull(tensorboard, "Required parameter tensorboard must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(TENSORBOARD_PATTERN.matcher(tensorboard).matches(),
                  "Parameter tensorboard must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public ReadSize set$Xgafv(java.lang.String $Xgafv) {
            return (ReadSize) super.set$Xgafv($Xgafv);
          }

          @Override
          public ReadSize setAccessToken(java.lang.String accessToken) {
            return (ReadSize) super.setAccessToken(accessToken);
          }

          @Override
          public ReadSize setAlt(java.lang.String alt) {
            return (ReadSize) super.setAlt(alt);
          }

          @Override
          public ReadSize setCallback(java.lang.String callback) {
            return (ReadSize) super.setCallback(callback);
          }

          @Override
          public ReadSize setFields(java.lang.String fields) {
            return (ReadSize) super.setFields(fields);
          }

          @Override
          public ReadSize setKey(java.lang.String key) {
            return (ReadSize) super.setKey(key);
          }

          @Override
          public ReadSize setOauthToken(java.lang.String oauthToken) {
            return (ReadSize) super.setOauthToken(oauthToken);
          }

          @Override
          public ReadSize setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (ReadSize) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public ReadSize setQuotaUser(java.lang.String quotaUser) {
            return (ReadSize) super.setQuotaUser(quotaUser);
          }

          @Override
          public ReadSize setUploadType(java.lang.String uploadType) {
            return (ReadSize) super.setUploadType(uploadType);
          }

          @Override
          public ReadSize setUploadProtocol(java.lang.String uploadProtocol) {
            return (ReadSize) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the Tensorboard resource. Format:
           * `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
           */
          @com.google.api.client.util.Key
          private java.lang.String tensorboard;

          /** Required. The name of the Tensorboard resource. Format:
         `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
           */
          public java.lang.String getTensorboard() {
            return tensorboard;
          }

          /**
           * Required. The name of the Tensorboard resource. Format:
           * `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
           */
          public ReadSize setTensorboard(java.lang.String tensorboard) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(TENSORBOARD_PATTERN.matcher(tensorboard).matches(),
                  "Parameter tensorboard must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+$");
            }
            this.tensorboard = tensorboard;
            return this;
          }

          @Override
          public ReadSize set(String parameterName, Object value) {
            return (ReadSize) super.set(parameterName, value);
          }
        }
        /**
         * Returns a list of monthly active users for a given TensorBoard instance.
         *
         * Create a request for the method "tensorboards.readUsage".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link ReadUsage#execute()} method to invoke the remote operation.
         *
         * @param tensorboard Required. The name of the Tensorboard resource. Format:
         *        `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
         * @return the request
         */
        public ReadUsage readUsage(java.lang.String tensorboard) throws java.io.IOException {
          ReadUsage result = new ReadUsage(tensorboard);
          initialize(result);
          return result;
        }

        public class ReadUsage extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ReadTensorboardUsageResponse> {

          private static final String REST_PATH = "v1/{+tensorboard}:readUsage";

          private final java.util.regex.Pattern TENSORBOARD_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+$");

          /**
           * Returns a list of monthly active users for a given TensorBoard instance.
           *
           * Create a request for the method "tensorboards.readUsage".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link ReadUsage#execute()} method to invoke the remote
           * operation. <p> {@link
           * ReadUsage#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param tensorboard Required. The name of the Tensorboard resource. Format:
         *        `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
           * @since 1.13
           */
          protected ReadUsage(java.lang.String tensorboard) {
            super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ReadTensorboardUsageResponse.class);
            this.tensorboard = com.google.api.client.util.Preconditions.checkNotNull(tensorboard, "Required parameter tensorboard must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(TENSORBOARD_PATTERN.matcher(tensorboard).matches(),
                  "Parameter tensorboard must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public ReadUsage set$Xgafv(java.lang.String $Xgafv) {
            return (ReadUsage) super.set$Xgafv($Xgafv);
          }

          @Override
          public ReadUsage setAccessToken(java.lang.String accessToken) {
            return (ReadUsage) super.setAccessToken(accessToken);
          }

          @Override
          public ReadUsage setAlt(java.lang.String alt) {
            return (ReadUsage) super.setAlt(alt);
          }

          @Override
          public ReadUsage setCallback(java.lang.String callback) {
            return (ReadUsage) super.setCallback(callback);
          }

          @Override
          public ReadUsage setFields(java.lang.String fields) {
            return (ReadUsage) super.setFields(fields);
          }

          @Override
          public ReadUsage setKey(java.lang.String key) {
            return (ReadUsage) super.setKey(key);
          }

          @Override
          public ReadUsage setOauthToken(java.lang.String oauthToken) {
            return (ReadUsage) super.setOauthToken(oauthToken);
          }

          @Override
          public ReadUsage setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (ReadUsage) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public ReadUsage setQuotaUser(java.lang.String quotaUser) {
            return (ReadUsage) super.setQuotaUser(quotaUser);
          }

          @Override
          public ReadUsage setUploadType(java.lang.String uploadType) {
            return (ReadUsage) super.setUploadType(uploadType);
          }

          @Override
          public ReadUsage setUploadProtocol(java.lang.String uploadProtocol) {
            return (ReadUsage) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the Tensorboard resource. Format:
           * `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
           */
          @com.google.api.client.util.Key
          private java.lang.String tensorboard;

          /** Required. The name of the Tensorboard resource. Format:
         `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
           */
          public java.lang.String getTensorboard() {
            return tensorboard;
          }

          /**
           * Required. The name of the Tensorboard resource. Format:
           * `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
           */
          public ReadUsage setTensorboard(java.lang.String tensorboard) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(TENSORBOARD_PATTERN.matcher(tensorboard).matches(),
                  "Parameter tensorboard must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+$");
            }
            this.tensorboard = tensorboard;
            return this;
          }

          @Override
          public ReadUsage set(String parameterName, Object value) {
            return (ReadUsage) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the Experiments collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Aiplatform aiplatform = new Aiplatform(...);}
         *   {@code Aiplatform.Experiments.List request = aiplatform.experiments().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Experiments experiments() {
          return new Experiments();
        }

        /**
         * The "experiments" collection of methods.
         */
        public class Experiments {

          /**
           * Batch create TensorboardTimeSeries that belong to a TensorboardExperiment.
           *
           * Create a request for the method "experiments.batchCreate".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link BatchCreate#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The resource name of the TensorboardExperiment to create the TensorboardTimeSeries in.
           *        Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{e
           *        xperiment}` The TensorboardRuns referenced by the parent fields in the
           *        CreateTensorboardTimeSeriesRequest messages must be sub resources of this
           *        TensorboardExperiment.
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1BatchCreateTensorboardTimeSeriesRequest}
           * @return the request
           */
          public BatchCreate batchCreate(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1BatchCreateTensorboardTimeSeriesRequest content) throws java.io.IOException {
            BatchCreate result = new BatchCreate(parent, content);
            initialize(result);
            return result;
          }

          public class BatchCreate extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1BatchCreateTensorboardTimeSeriesResponse> {

            private static final String REST_PATH = "v1/{+parent}:batchCreate";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+$");

            /**
             * Batch create TensorboardTimeSeries that belong to a TensorboardExperiment.
             *
             * Create a request for the method "experiments.batchCreate".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link BatchCreate#execute()} method to invoke the remote
             * operation. <p> {@link
             * BatchCreate#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The resource name of the TensorboardExperiment to create the TensorboardTimeSeries in.
           *        Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{e
           *        xperiment}` The TensorboardRuns referenced by the parent fields in the
           *        CreateTensorboardTimeSeriesRequest messages must be sub resources of this
           *        TensorboardExperiment.
             * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1BatchCreateTensorboardTimeSeriesRequest}
             * @since 1.13
             */
            protected BatchCreate(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1BatchCreateTensorboardTimeSeriesRequest content) {
              super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1BatchCreateTensorboardTimeSeriesResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+$");
              }
            }

            @Override
            public BatchCreate set$Xgafv(java.lang.String $Xgafv) {
              return (BatchCreate) super.set$Xgafv($Xgafv);
            }

            @Override
            public BatchCreate setAccessToken(java.lang.String accessToken) {
              return (BatchCreate) super.setAccessToken(accessToken);
            }

            @Override
            public BatchCreate setAlt(java.lang.String alt) {
              return (BatchCreate) super.setAlt(alt);
            }

            @Override
            public BatchCreate setCallback(java.lang.String callback) {
              return (BatchCreate) super.setCallback(callback);
            }

            @Override
            public BatchCreate setFields(java.lang.String fields) {
              return (BatchCreate) super.setFields(fields);
            }

            @Override
            public BatchCreate setKey(java.lang.String key) {
              return (BatchCreate) super.setKey(key);
            }

            @Override
            public BatchCreate setOauthToken(java.lang.String oauthToken) {
              return (BatchCreate) super.setOauthToken(oauthToken);
            }

            @Override
            public BatchCreate setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (BatchCreate) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public BatchCreate setQuotaUser(java.lang.String quotaUser) {
              return (BatchCreate) super.setQuotaUser(quotaUser);
            }

            @Override
            public BatchCreate setUploadType(java.lang.String uploadType) {
              return (BatchCreate) super.setUploadType(uploadType);
            }

            @Override
            public BatchCreate setUploadProtocol(java.lang.String uploadProtocol) {
              return (BatchCreate) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The resource name of the TensorboardExperiment to create the
             * TensorboardTimeSeries in. Format: `projects/{project}/locations/{location}/tensorboar
             * ds/{tensorboard}/experiments/{experiment}` The TensorboardRuns referenced by the
             * parent fields in the CreateTensorboardTimeSeriesRequest messages must be sub
             * resources of this TensorboardExperiment.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The resource name of the TensorboardExperiment to create the TensorboardTimeSeries in.
           Format:
           `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}` The
           TensorboardRuns referenced by the parent fields in the CreateTensorboardTimeSeriesRequest messages
           must be sub resources of this TensorboardExperiment.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The resource name of the TensorboardExperiment to create the
             * TensorboardTimeSeries in. Format: `projects/{project}/locations/{location}/tensorboar
             * ds/{tensorboard}/experiments/{experiment}` The TensorboardRuns referenced by the
             * parent fields in the CreateTensorboardTimeSeriesRequest messages must be sub
             * resources of this TensorboardExperiment.
             */
            public BatchCreate setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public BatchCreate set(String parameterName, Object value) {
              return (BatchCreate) super.set(parameterName, value);
            }
          }
          /**
           * Creates a TensorboardExperiment.
           *
           * Create a request for the method "experiments.create".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The resource name of the Tensorboard to create the TensorboardExperiment in. Format:
           *        `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1TensorboardExperiment}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1TensorboardExperiment content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1TensorboardExperiment> {

            private static final String REST_PATH = "v1/{+parent}/experiments";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+$");

            /**
             * Creates a TensorboardExperiment.
             *
             * Create a request for the method "experiments.create".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
             * <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The resource name of the Tensorboard to create the TensorboardExperiment in. Format:
           *        `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
             * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1TensorboardExperiment}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1TensorboardExperiment content) {
              super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1TensorboardExperiment.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The resource name of the Tensorboard to create the TensorboardExperiment
             * in. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The resource name of the Tensorboard to create the TensorboardExperiment in. Format:
           `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The resource name of the Tensorboard to create the TensorboardExperiment
             * in. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
             */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Required. The ID to use for the Tensorboard experiment, which becomes the final
             * component of the Tensorboard experiment's resource name. This value should be 1-128
             * characters, and valid characters are `/a-z-/`.
             */
            @com.google.api.client.util.Key
            private java.lang.String tensorboardExperimentId;

            /** Required. The ID to use for the Tensorboard experiment, which becomes the final component of the
           Tensorboard experiment's resource name. This value should be 1-128 characters, and valid characters
           are `/a-z-/`.
             */
            public java.lang.String getTensorboardExperimentId() {
              return tensorboardExperimentId;
            }

            /**
             * Required. The ID to use for the Tensorboard experiment, which becomes the final
             * component of the Tensorboard experiment's resource name. This value should be 1-128
             * characters, and valid characters are `/a-z-/`.
             */
            public Create setTensorboardExperimentId(java.lang.String tensorboardExperimentId) {
              this.tensorboardExperimentId = tensorboardExperimentId;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Deletes a TensorboardExperiment.
           *
           * Create a request for the method "experiments.delete".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the TensorboardExperiment to be deleted. Format:
           *        `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experimen
           *        t}`
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+$");

            /**
             * Deletes a TensorboardExperiment.
             *
             * Create a request for the method "experiments.delete".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the TensorboardExperiment to be deleted. Format:
           *        `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experimen
           *        t}`
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the TensorboardExperiment to be deleted. Format: `projects/{pro
             * ject}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the TensorboardExperiment to be deleted. Format:
           `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The name of the TensorboardExperiment to be deleted. Format: `projects/{pro
             * ject}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}`
             */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Gets a TensorboardExperiment.
           *
           * Create a request for the method "experiments.get".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the TensorboardExperiment resource. Format:
           *        `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experimen
           *        t}`
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1TensorboardExperiment> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+$");

            /**
             * Gets a TensorboardExperiment.
             *
             * Create a request for the method "experiments.get".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the TensorboardExperiment resource. Format:
           *        `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experimen
           *        t}`
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1TensorboardExperiment.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the TensorboardExperiment resource. Format: `projects/{project}
             * /locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the TensorboardExperiment resource. Format:
           `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The name of the TensorboardExperiment resource. Format: `projects/{project}
             * /locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}`
             */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Lists TensorboardExperiments in a Location.
           *
           * Create a request for the method "experiments.list".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The resource name of the Tensorboard to list TensorboardExperiments. Format:
           *        `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListTensorboardExperimentsResponse> {

            private static final String REST_PATH = "v1/{+parent}/experiments";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+$");

            /**
             * Lists TensorboardExperiments in a Location.
             *
             * Create a request for the method "experiments.list".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The resource name of the Tensorboard to list TensorboardExperiments. Format:
           *        `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListTensorboardExperimentsResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The resource name of the Tensorboard to list TensorboardExperiments.
             * Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The resource name of the Tensorboard to list TensorboardExperiments. Format:
           `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The resource name of the Tensorboard to list TensorboardExperiments.
             * Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /** Lists the TensorboardExperiments that match the filter expression. */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** Lists the TensorboardExperiments that match the filter expression.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /** Lists the TensorboardExperiments that match the filter expression. */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /** Field to use to sort the list. */
            @com.google.api.client.util.Key
            private java.lang.String orderBy;

            /** Field to use to sort the list.
             */
            public java.lang.String getOrderBy() {
              return orderBy;
            }

            /** Field to use to sort the list. */
            public List setOrderBy(java.lang.String orderBy) {
              this.orderBy = orderBy;
              return this;
            }

            /**
             * The maximum number of TensorboardExperiments to return. The service may return fewer
             * than this value. If unspecified, at most 50 TensorboardExperiments are returned. The
             * maximum value is 1000; values above 1000 are coerced to 1000.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** The maximum number of TensorboardExperiments to return. The service may return fewer than this
           value. If unspecified, at most 50 TensorboardExperiments are returned. The maximum value is 1000;
           values above 1000 are coerced to 1000.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * The maximum number of TensorboardExperiments to return. The service may return fewer
             * than this value. If unspecified, at most 50 TensorboardExperiments are returned. The
             * maximum value is 1000; values above 1000 are coerced to 1000.
             */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /**
             * A page token, received from a previous TensorboardService.ListTensorboardExperiments
             * call. Provide this to retrieve the subsequent page. When paginating, all other
             * parameters provided to TensorboardService.ListTensorboardExperiments must match the
             * call that provided the page token.
             */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** A page token, received from a previous TensorboardService.ListTensorboardExperiments call. Provide
           this to retrieve the subsequent page. When paginating, all other parameters provided to
           TensorboardService.ListTensorboardExperiments must match the call that provided the page token.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /**
             * A page token, received from a previous TensorboardService.ListTensorboardExperiments
             * call. Provide this to retrieve the subsequent page. When paginating, all other
             * parameters provided to TensorboardService.ListTensorboardExperiments must match the
             * call that provided the page token.
             */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            /** Mask specifying which fields to read. */
            @com.google.api.client.util.Key
            private String readMask;

            /** Mask specifying which fields to read.
             */
            public String getReadMask() {
              return readMask;
            }

            /** Mask specifying which fields to read. */
            public List setReadMask(String readMask) {
              this.readMask = readMask;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Updates a TensorboardExperiment.
           *
           * Create a request for the method "experiments.patch".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           *
           * @param name Output only. Name of the TensorboardExperiment. Format:
           *        `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experimen
           *        t}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1TensorboardExperiment}
           * @return the request
           */
          public Patch patch(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1TensorboardExperiment content) throws java.io.IOException {
            Patch result = new Patch(name, content);
            initialize(result);
            return result;
          }

          public class Patch extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1TensorboardExperiment> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+$");

            /**
             * Updates a TensorboardExperiment.
             *
             * Create a request for the method "experiments.patch".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             * <p> {@link
             * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Output only. Name of the TensorboardExperiment. Format:
           *        `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experimen
           *        t}`
             * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1TensorboardExperiment}
             * @since 1.13
             */
            protected Patch(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1TensorboardExperiment content) {
              super(Aiplatform.this, "PATCH", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1TensorboardExperiment.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+$");
              }
            }

            @Override
            public Patch set$Xgafv(java.lang.String $Xgafv) {
              return (Patch) super.set$Xgafv($Xgafv);
            }

            @Override
            public Patch setAccessToken(java.lang.String accessToken) {
              return (Patch) super.setAccessToken(accessToken);
            }

            @Override
            public Patch setAlt(java.lang.String alt) {
              return (Patch) super.setAlt(alt);
            }

            @Override
            public Patch setCallback(java.lang.String callback) {
              return (Patch) super.setCallback(callback);
            }

            @Override
            public Patch setFields(java.lang.String fields) {
              return (Patch) super.setFields(fields);
            }

            @Override
            public Patch setKey(java.lang.String key) {
              return (Patch) super.setKey(key);
            }

            @Override
            public Patch setOauthToken(java.lang.String oauthToken) {
              return (Patch) super.setOauthToken(oauthToken);
            }

            @Override
            public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Patch) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Patch setQuotaUser(java.lang.String quotaUser) {
              return (Patch) super.setQuotaUser(quotaUser);
            }

            @Override
            public Patch setUploadType(java.lang.String uploadType) {
              return (Patch) super.setUploadType(uploadType);
            }

            @Override
            public Patch setUploadProtocol(java.lang.String uploadProtocol) {
              return (Patch) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Output only. Name of the TensorboardExperiment. Format: `projects/{project}/locations
             * /{location}/tensorboards/{tensorboard}/experiments/{experiment}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Output only. Name of the TensorboardExperiment. Format:
           `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Output only. Name of the TensorboardExperiment. Format: `projects/{project}/locations
             * /{location}/tensorboards/{tensorboard}/experiments/{experiment}`
             */
            public Patch setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * Required. Field mask is used to specify the fields to be overwritten in the
             * TensorboardExperiment resource by the update. The fields specified in the update_mask
             * are relative to the resource, not the full request. A field is overwritten if it's in
             * the mask. If the user does not provide a mask then all fields are overwritten if new
             * values are specified.
             */
            @com.google.api.client.util.Key
            private String updateMask;

            /** Required. Field mask is used to specify the fields to be overwritten in the TensorboardExperiment
           resource by the update. The fields specified in the update_mask are relative to the resource, not
           the full request. A field is overwritten if it's in the mask. If the user does not provide a mask
           then all fields are overwritten if new values are specified.
             */
            public String getUpdateMask() {
              return updateMask;
            }

            /**
             * Required. Field mask is used to specify the fields to be overwritten in the
             * TensorboardExperiment resource by the update. The fields specified in the update_mask
             * are relative to the resource, not the full request. A field is overwritten if it's in
             * the mask. If the user does not provide a mask then all fields are overwritten if new
             * values are specified.
             */
            public Patch setUpdateMask(String updateMask) {
              this.updateMask = updateMask;
              return this;
            }

            @Override
            public Patch set(String parameterName, Object value) {
              return (Patch) super.set(parameterName, value);
            }
          }
          /**
           * Write time series data points of multiple TensorboardTimeSeries in multiple TensorboardRun's. If
           * any data fail to be ingested, an error is returned.
           *
           * Create a request for the method "experiments.write".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Write#execute()} method to invoke the remote operation.
           *
           * @param tensorboardExperiment Required. The resource name of the TensorboardExperiment to write data to. Format:
           *        `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experimen
           *        t}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1WriteTensorboardExperimentDataRequest}
           * @return the request
           */
          public Write write(java.lang.String tensorboardExperiment, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1WriteTensorboardExperimentDataRequest content) throws java.io.IOException {
            Write result = new Write(tensorboardExperiment, content);
            initialize(result);
            return result;
          }

          public class Write extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1WriteTensorboardExperimentDataResponse> {

            private static final String REST_PATH = "v1/{+tensorboardExperiment}:write";

            private final java.util.regex.Pattern TENSORBOARD_EXPERIMENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+$");

            /**
             * Write time series data points of multiple TensorboardTimeSeries in multiple TensorboardRun's.
             * If any data fail to be ingested, an error is returned.
             *
             * Create a request for the method "experiments.write".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Write#execute()} method to invoke the remote operation.
             * <p> {@link
             * Write#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param tensorboardExperiment Required. The resource name of the TensorboardExperiment to write data to. Format:
           *        `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experimen
           *        t}`
             * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1WriteTensorboardExperimentDataRequest}
             * @since 1.13
             */
            protected Write(java.lang.String tensorboardExperiment, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1WriteTensorboardExperimentDataRequest content) {
              super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1WriteTensorboardExperimentDataResponse.class);
              this.tensorboardExperiment = com.google.api.client.util.Preconditions.checkNotNull(tensorboardExperiment, "Required parameter tensorboardExperiment must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(TENSORBOARD_EXPERIMENT_PATTERN.matcher(tensorboardExperiment).matches(),
                    "Parameter tensorboardExperiment must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+$");
              }
            }

            @Override
            public Write set$Xgafv(java.lang.String $Xgafv) {
              return (Write) super.set$Xgafv($Xgafv);
            }

            @Override
            public Write setAccessToken(java.lang.String accessToken) {
              return (Write) super.setAccessToken(accessToken);
            }

            @Override
            public Write setAlt(java.lang.String alt) {
              return (Write) super.setAlt(alt);
            }

            @Override
            public Write setCallback(java.lang.String callback) {
              return (Write) super.setCallback(callback);
            }

            @Override
            public Write setFields(java.lang.String fields) {
              return (Write) super.setFields(fields);
            }

            @Override
            public Write setKey(java.lang.String key) {
              return (Write) super.setKey(key);
            }

            @Override
            public Write setOauthToken(java.lang.String oauthToken) {
              return (Write) super.setOauthToken(oauthToken);
            }

            @Override
            public Write setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Write) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Write setQuotaUser(java.lang.String quotaUser) {
              return (Write) super.setQuotaUser(quotaUser);
            }

            @Override
            public Write setUploadType(java.lang.String uploadType) {
              return (Write) super.setUploadType(uploadType);
            }

            @Override
            public Write setUploadProtocol(java.lang.String uploadProtocol) {
              return (Write) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The resource name of the TensorboardExperiment to write data to. Format: `p
             * rojects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experi
             * ment}`
             */
            @com.google.api.client.util.Key
            private java.lang.String tensorboardExperiment;

            /** Required. The resource name of the TensorboardExperiment to write data to. Format:
           `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}`
             */
            public java.lang.String getTensorboardExperiment() {
              return tensorboardExperiment;
            }

            /**
             * Required. The resource name of the TensorboardExperiment to write data to. Format: `p
             * rojects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experi
             * ment}`
             */
            public Write setTensorboardExperiment(java.lang.String tensorboardExperiment) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(TENSORBOARD_EXPERIMENT_PATTERN.matcher(tensorboardExperiment).matches(),
                    "Parameter tensorboardExperiment must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+$");
              }
              this.tensorboardExperiment = tensorboardExperiment;
              return this;
            }

            @Override
            public Write set(String parameterName, Object value) {
              return (Write) super.set(parameterName, value);
            }
          }

          /**
           * An accessor for creating requests from the Operations collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code Aiplatform aiplatform = new Aiplatform(...);}
           *   {@code Aiplatform.Operations.List request = aiplatform.operations().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public Operations operations() {
            return new Operations();
          }

          /**
           * The "operations" collection of methods.
           */
          public class Operations {

            /**
             * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
             * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
             * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
             * methods to check whether the cancellation succeeded or whether the operation completed despite
             * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
             * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
             * `Code.CANCELLED`.
             *
             * Create a request for the method "operations.cancel".
             *
             * This request holds the parameters needed by the aiplatform server.  After setting any optional
             * parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
             *
             * @param name The name of the operation resource to be cancelled.
             * @return the request
             */
            public Cancel cancel(java.lang.String name) throws java.io.IOException {
              Cancel result = new Cancel(name);
              initialize(result);
              return result;
            }

            public class Cancel extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

              private static final String REST_PATH = "v1/{+name}:cancel";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/operations/[^/]+$");

              /**
               * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
               * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
               * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
               * methods to check whether the cancellation succeeded or whether the operation completed despite
               * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
               * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
               * `Code.CANCELLED`.
               *
               * Create a request for the method "operations.cancel".
               *
               * This request holds the parameters needed by the the aiplatform server.  After setting any
               * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
               * <p> {@link
               * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The name of the operation resource to be cancelled.
               * @since 1.13
               */
              protected Cancel(java.lang.String name) {
                super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/operations/[^/]+$");
                }
              }

              @Override
              public Cancel set$Xgafv(java.lang.String $Xgafv) {
                return (Cancel) super.set$Xgafv($Xgafv);
              }

              @Override
              public Cancel setAccessToken(java.lang.String accessToken) {
                return (Cancel) super.setAccessToken(accessToken);
              }

              @Override
              public Cancel setAlt(java.lang.String alt) {
                return (Cancel) super.setAlt(alt);
              }

              @Override
              public Cancel setCallback(java.lang.String callback) {
                return (Cancel) super.setCallback(callback);
              }

              @Override
              public Cancel setFields(java.lang.String fields) {
                return (Cancel) super.setFields(fields);
              }

              @Override
              public Cancel setKey(java.lang.String key) {
                return (Cancel) super.setKey(key);
              }

              @Override
              public Cancel setOauthToken(java.lang.String oauthToken) {
                return (Cancel) super.setOauthToken(oauthToken);
              }

              @Override
              public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Cancel) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Cancel setQuotaUser(java.lang.String quotaUser) {
                return (Cancel) super.setQuotaUser(quotaUser);
              }

              @Override
              public Cancel setUploadType(java.lang.String uploadType) {
                return (Cancel) super.setUploadType(uploadType);
              }

              @Override
              public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
                return (Cancel) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the operation resource to be cancelled. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The name of the operation resource to be cancelled.
               */
              public java.lang.String getName() {
                return name;
              }

              /** The name of the operation resource to be cancelled. */
              public Cancel setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/operations/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Cancel set(String parameterName, Object value) {
                return (Cancel) super.set(parameterName, value);
              }
            }
            /**
             * Deletes a long-running operation. This method indicates that the client is no longer interested
             * in the operation result. It does not cancel the operation. If the server doesn't support this
             * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.delete".
             *
             * This request holds the parameters needed by the aiplatform server.  After setting any optional
             * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             *
             * @param name The name of the operation resource to be deleted.
             * @return the request
             */
            public Delete delete(java.lang.String name) throws java.io.IOException {
              Delete result = new Delete(name);
              initialize(result);
              return result;
            }

            public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/operations/[^/]+$");

              /**
               * Deletes a long-running operation. This method indicates that the client is no longer interested
               * in the operation result. It does not cancel the operation. If the server doesn't support this
               * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
               *
               * Create a request for the method "operations.delete".
               *
               * This request holds the parameters needed by the the aiplatform server.  After setting any
               * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
               * <p> {@link
               * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The name of the operation resource to be deleted.
               * @since 1.13
               */
              protected Delete(java.lang.String name) {
                super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/operations/[^/]+$");
                }
              }

              @Override
              public Delete set$Xgafv(java.lang.String $Xgafv) {
                return (Delete) super.set$Xgafv($Xgafv);
              }

              @Override
              public Delete setAccessToken(java.lang.String accessToken) {
                return (Delete) super.setAccessToken(accessToken);
              }

              @Override
              public Delete setAlt(java.lang.String alt) {
                return (Delete) super.setAlt(alt);
              }

              @Override
              public Delete setCallback(java.lang.String callback) {
                return (Delete) super.setCallback(callback);
              }

              @Override
              public Delete setFields(java.lang.String fields) {
                return (Delete) super.setFields(fields);
              }

              @Override
              public Delete setKey(java.lang.String key) {
                return (Delete) super.setKey(key);
              }

              @Override
              public Delete setOauthToken(java.lang.String oauthToken) {
                return (Delete) super.setOauthToken(oauthToken);
              }

              @Override
              public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Delete) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Delete setQuotaUser(java.lang.String quotaUser) {
                return (Delete) super.setQuotaUser(quotaUser);
              }

              @Override
              public Delete setUploadType(java.lang.String uploadType) {
                return (Delete) super.setUploadType(uploadType);
              }

              @Override
              public Delete setUploadProtocol(java.lang.String uploadProtocol) {
                return (Delete) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the operation resource to be deleted. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The name of the operation resource to be deleted.
               */
              public java.lang.String getName() {
                return name;
              }

              /** The name of the operation resource to be deleted. */
              public Delete setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/operations/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Delete set(String parameterName, Object value) {
                return (Delete) super.set(parameterName, value);
              }
            }
            /**
             * Gets the latest state of a long-running operation. Clients can use this method to poll the
             * operation result at intervals as recommended by the API service.
             *
             * Create a request for the method "operations.get".
             *
             * This request holds the parameters needed by the aiplatform server.  After setting any optional
             * parameters, call the {@link Get#execute()} method to invoke the remote operation.
             *
             * @param name The name of the operation resource.
             * @return the request
             */
            public Get get(java.lang.String name) throws java.io.IOException {
              Get result = new Get(name);
              initialize(result);
              return result;
            }

            public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/operations/[^/]+$");

              /**
               * Gets the latest state of a long-running operation. Clients can use this method to poll the
               * operation result at intervals as recommended by the API service.
               *
               * Create a request for the method "operations.get".
               *
               * This request holds the parameters needed by the the aiplatform server.  After setting any
               * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
               * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The name of the operation resource.
               * @since 1.13
               */
              protected Get(java.lang.String name) {
                super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/operations/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public Get set$Xgafv(java.lang.String $Xgafv) {
                return (Get) super.set$Xgafv($Xgafv);
              }

              @Override
              public Get setAccessToken(java.lang.String accessToken) {
                return (Get) super.setAccessToken(accessToken);
              }

              @Override
              public Get setAlt(java.lang.String alt) {
                return (Get) super.setAlt(alt);
              }

              @Override
              public Get setCallback(java.lang.String callback) {
                return (Get) super.setCallback(callback);
              }

              @Override
              public Get setFields(java.lang.String fields) {
                return (Get) super.setFields(fields);
              }

              @Override
              public Get setKey(java.lang.String key) {
                return (Get) super.setKey(key);
              }

              @Override
              public Get setOauthToken(java.lang.String oauthToken) {
                return (Get) super.setOauthToken(oauthToken);
              }

              @Override
              public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Get) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Get setQuotaUser(java.lang.String quotaUser) {
                return (Get) super.setQuotaUser(quotaUser);
              }

              @Override
              public Get setUploadType(java.lang.String uploadType) {
                return (Get) super.setUploadType(uploadType);
              }

              @Override
              public Get setUploadProtocol(java.lang.String uploadProtocol) {
                return (Get) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the operation resource. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The name of the operation resource.
               */
              public java.lang.String getName() {
                return name;
              }

              /** The name of the operation resource. */
              public Get setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/operations/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Get set(String parameterName, Object value) {
                return (Get) super.set(parameterName, value);
              }
            }
            /**
             * Lists operations that match the specified filter in the request. If the server doesn't support
             * this method, it returns `UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.list".
             *
             * This request holds the parameters needed by the aiplatform server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation.
             *
             * @param name The name of the operation's parent resource.
             * @return the request
             */
            public List list(java.lang.String name) throws java.io.IOException {
              List result = new List(name);
              initialize(result);
              return result;
            }

            public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse> {

              private static final String REST_PATH = "v1/{+name}/operations";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+$");

              /**
               * Lists operations that match the specified filter in the request. If the server doesn't support
               * this method, it returns `UNIMPLEMENTED`.
               *
               * Create a request for the method "operations.list".
               *
               * This request holds the parameters needed by the the aiplatform server.  After setting any
               * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
               * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The name of the operation's parent resource.
               * @since 1.13
               */
              protected List(java.lang.String name) {
                super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public List set$Xgafv(java.lang.String $Xgafv) {
                return (List) super.set$Xgafv($Xgafv);
              }

              @Override
              public List setAccessToken(java.lang.String accessToken) {
                return (List) super.setAccessToken(accessToken);
              }

              @Override
              public List setAlt(java.lang.String alt) {
                return (List) super.setAlt(alt);
              }

              @Override
              public List setCallback(java.lang.String callback) {
                return (List) super.setCallback(callback);
              }

              @Override
              public List setFields(java.lang.String fields) {
                return (List) super.setFields(fields);
              }

              @Override
              public List setKey(java.lang.String key) {
                return (List) super.setKey(key);
              }

              @Override
              public List setOauthToken(java.lang.String oauthToken) {
                return (List) super.setOauthToken(oauthToken);
              }

              @Override
              public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (List) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public List setQuotaUser(java.lang.String quotaUser) {
                return (List) super.setQuotaUser(quotaUser);
              }

              @Override
              public List setUploadType(java.lang.String uploadType) {
                return (List) super.setUploadType(uploadType);
              }

              @Override
              public List setUploadProtocol(java.lang.String uploadProtocol) {
                return (List) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the operation's parent resource. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The name of the operation's parent resource.
               */
              public java.lang.String getName() {
                return name;
              }

              /** The name of the operation's parent resource. */
              public List setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+$");
                }
                this.name = name;
                return this;
              }

              /** The standard list filter. */
              @com.google.api.client.util.Key
              private java.lang.String filter;

              /** The standard list filter.
               */
              public java.lang.String getFilter() {
                return filter;
              }

              /** The standard list filter. */
              public List setFilter(java.lang.String filter) {
                this.filter = filter;
                return this;
              }

              /** The standard list page size. */
              @com.google.api.client.util.Key
              private java.lang.Integer pageSize;

              /** The standard list page size.
               */
              public java.lang.Integer getPageSize() {
                return pageSize;
              }

              /** The standard list page size. */
              public List setPageSize(java.lang.Integer pageSize) {
                this.pageSize = pageSize;
                return this;
              }

              /** The standard list page token. */
              @com.google.api.client.util.Key
              private java.lang.String pageToken;

              /** The standard list page token.
               */
              public java.lang.String getPageToken() {
                return pageToken;
              }

              /** The standard list page token. */
              public List setPageToken(java.lang.String pageToken) {
                this.pageToken = pageToken;
                return this;
              }

              @Override
              public List set(String parameterName, Object value) {
                return (List) super.set(parameterName, value);
              }
            }
            /**
             * Waits until the specified long-running operation is done or reaches at most a specified timeout,
             * returning the latest state. If the operation is already done, the latest state is immediately
             * returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC
             * timeout is used. If the server does not support this method, it returns
             * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
             * the latest state before the specified timeout (including immediately), meaning even an immediate
             * response is no guarantee that the operation is done.
             *
             * Create a request for the method "operations.wait".
             *
             * This request holds the parameters needed by the aiplatform server.  After setting any optional
             * parameters, call the {@link Wait#execute()} method to invoke the remote operation.
             *
             * @param name The name of the operation resource to wait on.
             * @return the request
             */
            public Wait wait(java.lang.String name) throws java.io.IOException {
              Wait result = new Wait(name);
              initialize(result);
              return result;
            }

            public class Wait extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

              private static final String REST_PATH = "v1/{+name}:wait";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/operations/[^/]+$");

              /**
               * Waits until the specified long-running operation is done or reaches at most a specified
               * timeout, returning the latest state. If the operation is already done, the latest state is
               * immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout,
               * the HTTP/RPC timeout is used. If the server does not support this method, it returns
               * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
               * the latest state before the specified timeout (including immediately), meaning even an
               * immediate response is no guarantee that the operation is done.
               *
               * Create a request for the method "operations.wait".
               *
               * This request holds the parameters needed by the the aiplatform server.  After setting any
               * optional parameters, call the {@link Wait#execute()} method to invoke the remote operation. <p>
               * {@link Wait#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The name of the operation resource to wait on.
               * @since 1.13
               */
              protected Wait(java.lang.String name) {
                super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/operations/[^/]+$");
                }
              }

              @Override
              public Wait set$Xgafv(java.lang.String $Xgafv) {
                return (Wait) super.set$Xgafv($Xgafv);
              }

              @Override
              public Wait setAccessToken(java.lang.String accessToken) {
                return (Wait) super.setAccessToken(accessToken);
              }

              @Override
              public Wait setAlt(java.lang.String alt) {
                return (Wait) super.setAlt(alt);
              }

              @Override
              public Wait setCallback(java.lang.String callback) {
                return (Wait) super.setCallback(callback);
              }

              @Override
              public Wait setFields(java.lang.String fields) {
                return (Wait) super.setFields(fields);
              }

              @Override
              public Wait setKey(java.lang.String key) {
                return (Wait) super.setKey(key);
              }

              @Override
              public Wait setOauthToken(java.lang.String oauthToken) {
                return (Wait) super.setOauthToken(oauthToken);
              }

              @Override
              public Wait setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Wait) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Wait setQuotaUser(java.lang.String quotaUser) {
                return (Wait) super.setQuotaUser(quotaUser);
              }

              @Override
              public Wait setUploadType(java.lang.String uploadType) {
                return (Wait) super.setUploadType(uploadType);
              }

              @Override
              public Wait setUploadProtocol(java.lang.String uploadProtocol) {
                return (Wait) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the operation resource to wait on. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The name of the operation resource to wait on.
               */
              public java.lang.String getName() {
                return name;
              }

              /** The name of the operation resource to wait on. */
              public Wait setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/operations/[^/]+$");
                }
                this.name = name;
                return this;
              }

              /**
               * The maximum duration to wait before timing out. If left blank, the wait will be at
               * most the time permitted by the underlying HTTP/RPC protocol. If RPC context
               * deadline is also specified, the shorter one will be used.
               */
              @com.google.api.client.util.Key
              private String timeout;

              /** The maximum duration to wait before timing out. If left blank, the wait will be at most the time
             permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the
             shorter one will be used.
               */
              public String getTimeout() {
                return timeout;
              }

              /**
               * The maximum duration to wait before timing out. If left blank, the wait will be at
               * most the time permitted by the underlying HTTP/RPC protocol. If RPC context
               * deadline is also specified, the shorter one will be used.
               */
              public Wait setTimeout(String timeout) {
                this.timeout = timeout;
                return this;
              }

              @Override
              public Wait set(String parameterName, Object value) {
                return (Wait) super.set(parameterName, value);
              }
            }

          }
          /**
           * An accessor for creating requests from the Runs collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code Aiplatform aiplatform = new Aiplatform(...);}
           *   {@code Aiplatform.Runs.List request = aiplatform.runs().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public Runs runs() {
            return new Runs();
          }

          /**
           * The "runs" collection of methods.
           */
          public class Runs {

            /**
             * Batch create TensorboardRuns.
             *
             * Create a request for the method "runs.batchCreate".
             *
             * This request holds the parameters needed by the aiplatform server.  After setting any optional
             * parameters, call the {@link BatchCreate#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The resource name of the TensorboardExperiment to create the TensorboardRuns in. Format:
             *        `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experimen
             *        t}` The parent field in the CreateTensorboardRunRequest messages must match this field.
             * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1BatchCreateTensorboardRunsRequest}
             * @return the request
             */
            public BatchCreate batchCreate(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1BatchCreateTensorboardRunsRequest content) throws java.io.IOException {
              BatchCreate result = new BatchCreate(parent, content);
              initialize(result);
              return result;
            }

            public class BatchCreate extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1BatchCreateTensorboardRunsResponse> {

              private static final String REST_PATH = "v1/{+parent}/runs:batchCreate";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+$");

              /**
               * Batch create TensorboardRuns.
               *
               * Create a request for the method "runs.batchCreate".
               *
               * This request holds the parameters needed by the the aiplatform server.  After setting any
               * optional parameters, call the {@link BatchCreate#execute()} method to invoke the remote
               * operation. <p> {@link
               * BatchCreate#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. The resource name of the TensorboardExperiment to create the TensorboardRuns in. Format:
             *        `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experimen
             *        t}` The parent field in the CreateTensorboardRunRequest messages must match this field.
               * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1BatchCreateTensorboardRunsRequest}
               * @since 1.13
               */
              protected BatchCreate(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1BatchCreateTensorboardRunsRequest content) {
                super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1BatchCreateTensorboardRunsResponse.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+$");
                }
              }

              @Override
              public BatchCreate set$Xgafv(java.lang.String $Xgafv) {
                return (BatchCreate) super.set$Xgafv($Xgafv);
              }

              @Override
              public BatchCreate setAccessToken(java.lang.String accessToken) {
                return (BatchCreate) super.setAccessToken(accessToken);
              }

              @Override
              public BatchCreate setAlt(java.lang.String alt) {
                return (BatchCreate) super.setAlt(alt);
              }

              @Override
              public BatchCreate setCallback(java.lang.String callback) {
                return (BatchCreate) super.setCallback(callback);
              }

              @Override
              public BatchCreate setFields(java.lang.String fields) {
                return (BatchCreate) super.setFields(fields);
              }

              @Override
              public BatchCreate setKey(java.lang.String key) {
                return (BatchCreate) super.setKey(key);
              }

              @Override
              public BatchCreate setOauthToken(java.lang.String oauthToken) {
                return (BatchCreate) super.setOauthToken(oauthToken);
              }

              @Override
              public BatchCreate setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (BatchCreate) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public BatchCreate setQuotaUser(java.lang.String quotaUser) {
                return (BatchCreate) super.setQuotaUser(quotaUser);
              }

              @Override
              public BatchCreate setUploadType(java.lang.String uploadType) {
                return (BatchCreate) super.setUploadType(uploadType);
              }

              @Override
              public BatchCreate setUploadProtocol(java.lang.String uploadProtocol) {
                return (BatchCreate) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The resource name of the TensorboardExperiment to create the
               * TensorboardRuns in. Format: `projects/{project}/locations/{location}/tensorboards/{
               * tensorboard}/experiments/{experiment}` The parent field in the
               * CreateTensorboardRunRequest messages must match this field.
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The resource name of the TensorboardExperiment to create the TensorboardRuns in. Format:
             `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}` The
             parent field in the CreateTensorboardRunRequest messages must match this field.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. The resource name of the TensorboardExperiment to create the
               * TensorboardRuns in. Format: `projects/{project}/locations/{location}/tensorboards/{
               * tensorboard}/experiments/{experiment}` The parent field in the
               * CreateTensorboardRunRequest messages must match this field.
               */
              public BatchCreate setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              @Override
              public BatchCreate set(String parameterName, Object value) {
                return (BatchCreate) super.set(parameterName, value);
              }
            }
            /**
             * Creates a TensorboardRun.
             *
             * Create a request for the method "runs.create".
             *
             * This request holds the parameters needed by the aiplatform server.  After setting any optional
             * parameters, call the {@link Create#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The resource name of the TensorboardExperiment to create the TensorboardRun in. Format:
             *        `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experimen
             *        t}`
             * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1TensorboardRun}
             * @return the request
             */
            public Create create(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1TensorboardRun content) throws java.io.IOException {
              Create result = new Create(parent, content);
              initialize(result);
              return result;
            }

            public class Create extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1TensorboardRun> {

              private static final String REST_PATH = "v1/{+parent}/runs";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+$");

              /**
               * Creates a TensorboardRun.
               *
               * Create a request for the method "runs.create".
               *
               * This request holds the parameters needed by the the aiplatform server.  After setting any
               * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
               * <p> {@link
               * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. The resource name of the TensorboardExperiment to create the TensorboardRun in. Format:
             *        `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experimen
             *        t}`
               * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1TensorboardRun}
               * @since 1.13
               */
              protected Create(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1TensorboardRun content) {
                super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1TensorboardRun.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+$");
                }
              }

              @Override
              public Create set$Xgafv(java.lang.String $Xgafv) {
                return (Create) super.set$Xgafv($Xgafv);
              }

              @Override
              public Create setAccessToken(java.lang.String accessToken) {
                return (Create) super.setAccessToken(accessToken);
              }

              @Override
              public Create setAlt(java.lang.String alt) {
                return (Create) super.setAlt(alt);
              }

              @Override
              public Create setCallback(java.lang.String callback) {
                return (Create) super.setCallback(callback);
              }

              @Override
              public Create setFields(java.lang.String fields) {
                return (Create) super.setFields(fields);
              }

              @Override
              public Create setKey(java.lang.String key) {
                return (Create) super.setKey(key);
              }

              @Override
              public Create setOauthToken(java.lang.String oauthToken) {
                return (Create) super.setOauthToken(oauthToken);
              }

              @Override
              public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Create) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Create setQuotaUser(java.lang.String quotaUser) {
                return (Create) super.setQuotaUser(quotaUser);
              }

              @Override
              public Create setUploadType(java.lang.String uploadType) {
                return (Create) super.setUploadType(uploadType);
              }

              @Override
              public Create setUploadProtocol(java.lang.String uploadProtocol) {
                return (Create) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The resource name of the TensorboardExperiment to create the
               * TensorboardRun in. Format: `projects/{project}/locations/{location}/tensorboards/{t
               * ensorboard}/experiments/{experiment}`
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The resource name of the TensorboardExperiment to create the TensorboardRun in. Format:
             `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}`
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. The resource name of the TensorboardExperiment to create the
               * TensorboardRun in. Format: `projects/{project}/locations/{location}/tensorboards/{t
               * ensorboard}/experiments/{experiment}`
               */
              public Create setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /**
               * Required. The ID to use for the Tensorboard run, which becomes the final component
               * of the Tensorboard run's resource name. This value should be 1-128 characters, and
               * valid characters are `/a-z-/`.
               */
              @com.google.api.client.util.Key
              private java.lang.String tensorboardRunId;

              /** Required. The ID to use for the Tensorboard run, which becomes the final component of the
             Tensorboard run's resource name. This value should be 1-128 characters, and valid characters are
             `/a-z-/`.
               */
              public java.lang.String getTensorboardRunId() {
                return tensorboardRunId;
              }

              /**
               * Required. The ID to use for the Tensorboard run, which becomes the final component
               * of the Tensorboard run's resource name. This value should be 1-128 characters, and
               * valid characters are `/a-z-/`.
               */
              public Create setTensorboardRunId(java.lang.String tensorboardRunId) {
                this.tensorboardRunId = tensorboardRunId;
                return this;
              }

              @Override
              public Create set(String parameterName, Object value) {
                return (Create) super.set(parameterName, value);
              }
            }
            /**
             * Deletes a TensorboardRun.
             *
             * Create a request for the method "runs.delete".
             *
             * This request holds the parameters needed by the aiplatform server.  After setting any optional
             * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             *
             * @param name Required. The name of the TensorboardRun to be deleted. Format: `projects/{project}/locations/{locat
             *        ion}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}`
             * @return the request
             */
            public Delete delete(java.lang.String name) throws java.io.IOException {
              Delete result = new Delete(name);
              initialize(result);
              return result;
            }

            public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+$");

              /**
               * Deletes a TensorboardRun.
               *
               * Create a request for the method "runs.delete".
               *
               * This request holds the parameters needed by the the aiplatform server.  After setting any
               * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
               * <p> {@link
               * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The name of the TensorboardRun to be deleted. Format: `projects/{project}/locations/{locat
             *        ion}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}`
               * @since 1.13
               */
              protected Delete(java.lang.String name) {
                super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+$");
                }
              }

              @Override
              public Delete set$Xgafv(java.lang.String $Xgafv) {
                return (Delete) super.set$Xgafv($Xgafv);
              }

              @Override
              public Delete setAccessToken(java.lang.String accessToken) {
                return (Delete) super.setAccessToken(accessToken);
              }

              @Override
              public Delete setAlt(java.lang.String alt) {
                return (Delete) super.setAlt(alt);
              }

              @Override
              public Delete setCallback(java.lang.String callback) {
                return (Delete) super.setCallback(callback);
              }

              @Override
              public Delete setFields(java.lang.String fields) {
                return (Delete) super.setFields(fields);
              }

              @Override
              public Delete setKey(java.lang.String key) {
                return (Delete) super.setKey(key);
              }

              @Override
              public Delete setOauthToken(java.lang.String oauthToken) {
                return (Delete) super.setOauthToken(oauthToken);
              }

              @Override
              public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Delete) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Delete setQuotaUser(java.lang.String quotaUser) {
                return (Delete) super.setQuotaUser(quotaUser);
              }

              @Override
              public Delete setUploadType(java.lang.String uploadType) {
                return (Delete) super.setUploadType(uploadType);
              }

              @Override
              public Delete setUploadProtocol(java.lang.String uploadProtocol) {
                return (Delete) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The name of the TensorboardRun to be deleted. Format: `projects/{project}
               * /locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run
               * }`
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The name of the TensorboardRun to be deleted. Format: `projects/{project}/locations/{loca
             tion}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}`
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Required. The name of the TensorboardRun to be deleted. Format: `projects/{project}
               * /locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run
               * }`
               */
              public Delete setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Delete set(String parameterName, Object value) {
                return (Delete) super.set(parameterName, value);
              }
            }
            /**
             * Gets a TensorboardRun.
             *
             * Create a request for the method "runs.get".
             *
             * This request holds the parameters needed by the aiplatform server.  After setting any optional
             * parameters, call the {@link Get#execute()} method to invoke the remote operation.
             *
             * @param name Required. The name of the TensorboardRun resource. Format: `projects/{project}/locations/{location}/
             *        tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}`
             * @return the request
             */
            public Get get(java.lang.String name) throws java.io.IOException {
              Get result = new Get(name);
              initialize(result);
              return result;
            }

            public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1TensorboardRun> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+$");

              /**
               * Gets a TensorboardRun.
               *
               * Create a request for the method "runs.get".
               *
               * This request holds the parameters needed by the the aiplatform server.  After setting any
               * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
               * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The name of the TensorboardRun resource. Format: `projects/{project}/locations/{location}/
             *        tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}`
               * @since 1.13
               */
              protected Get(java.lang.String name) {
                super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1TensorboardRun.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public Get set$Xgafv(java.lang.String $Xgafv) {
                return (Get) super.set$Xgafv($Xgafv);
              }

              @Override
              public Get setAccessToken(java.lang.String accessToken) {
                return (Get) super.setAccessToken(accessToken);
              }

              @Override
              public Get setAlt(java.lang.String alt) {
                return (Get) super.setAlt(alt);
              }

              @Override
              public Get setCallback(java.lang.String callback) {
                return (Get) super.setCallback(callback);
              }

              @Override
              public Get setFields(java.lang.String fields) {
                return (Get) super.setFields(fields);
              }

              @Override
              public Get setKey(java.lang.String key) {
                return (Get) super.setKey(key);
              }

              @Override
              public Get setOauthToken(java.lang.String oauthToken) {
                return (Get) super.setOauthToken(oauthToken);
              }

              @Override
              public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Get) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Get setQuotaUser(java.lang.String quotaUser) {
                return (Get) super.setQuotaUser(quotaUser);
              }

              @Override
              public Get setUploadType(java.lang.String uploadType) {
                return (Get) super.setUploadType(uploadType);
              }

              @Override
              public Get setUploadProtocol(java.lang.String uploadProtocol) {
                return (Get) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The name of the TensorboardRun resource. Format: `projects/{project}/loca
               * tions/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}`
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The name of the TensorboardRun resource. Format: `projects/{project}/locations/{location}
             /tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}`
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Required. The name of the TensorboardRun resource. Format: `projects/{project}/loca
               * tions/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}`
               */
              public Get setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Get set(String parameterName, Object value) {
                return (Get) super.set(parameterName, value);
              }
            }
            /**
             * Lists TensorboardRuns in a Location.
             *
             * Create a request for the method "runs.list".
             *
             * This request holds the parameters needed by the aiplatform server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The resource name of the TensorboardExperiment to list TensorboardRuns. Format:
             *        `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experimen
             *        t}`
             * @return the request
             */
            public List list(java.lang.String parent) throws java.io.IOException {
              List result = new List(parent);
              initialize(result);
              return result;
            }

            public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListTensorboardRunsResponse> {

              private static final String REST_PATH = "v1/{+parent}/runs";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+$");

              /**
               * Lists TensorboardRuns in a Location.
               *
               * Create a request for the method "runs.list".
               *
               * This request holds the parameters needed by the the aiplatform server.  After setting any
               * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
               * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. The resource name of the TensorboardExperiment to list TensorboardRuns. Format:
             *        `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experimen
             *        t}`
               * @since 1.13
               */
              protected List(java.lang.String parent) {
                super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListTensorboardRunsResponse.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public List set$Xgafv(java.lang.String $Xgafv) {
                return (List) super.set$Xgafv($Xgafv);
              }

              @Override
              public List setAccessToken(java.lang.String accessToken) {
                return (List) super.setAccessToken(accessToken);
              }

              @Override
              public List setAlt(java.lang.String alt) {
                return (List) super.setAlt(alt);
              }

              @Override
              public List setCallback(java.lang.String callback) {
                return (List) super.setCallback(callback);
              }

              @Override
              public List setFields(java.lang.String fields) {
                return (List) super.setFields(fields);
              }

              @Override
              public List setKey(java.lang.String key) {
                return (List) super.setKey(key);
              }

              @Override
              public List setOauthToken(java.lang.String oauthToken) {
                return (List) super.setOauthToken(oauthToken);
              }

              @Override
              public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (List) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public List setQuotaUser(java.lang.String quotaUser) {
                return (List) super.setQuotaUser(quotaUser);
              }

              @Override
              public List setUploadType(java.lang.String uploadType) {
                return (List) super.setUploadType(uploadType);
              }

              @Override
              public List setUploadProtocol(java.lang.String uploadProtocol) {
                return (List) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The resource name of the TensorboardExperiment to list TensorboardRuns.
               * Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experim
               * ents/{experiment}`
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The resource name of the TensorboardExperiment to list TensorboardRuns. Format:
             `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}`
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. The resource name of the TensorboardExperiment to list TensorboardRuns.
               * Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experim
               * ents/{experiment}`
               */
              public List setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /** Lists the TensorboardRuns that match the filter expression. */
              @com.google.api.client.util.Key
              private java.lang.String filter;

              /** Lists the TensorboardRuns that match the filter expression.
               */
              public java.lang.String getFilter() {
                return filter;
              }

              /** Lists the TensorboardRuns that match the filter expression. */
              public List setFilter(java.lang.String filter) {
                this.filter = filter;
                return this;
              }

              /** Field to use to sort the list. */
              @com.google.api.client.util.Key
              private java.lang.String orderBy;

              /** Field to use to sort the list.
               */
              public java.lang.String getOrderBy() {
                return orderBy;
              }

              /** Field to use to sort the list. */
              public List setOrderBy(java.lang.String orderBy) {
                this.orderBy = orderBy;
                return this;
              }

              /**
               * The maximum number of TensorboardRuns to return. The service may return fewer than
               * this value. If unspecified, at most 50 TensorboardRuns are returned. The maximum
               * value is 1000; values above 1000 are coerced to 1000.
               */
              @com.google.api.client.util.Key
              private java.lang.Integer pageSize;

              /** The maximum number of TensorboardRuns to return. The service may return fewer than this value. If
             unspecified, at most 50 TensorboardRuns are returned. The maximum value is 1000; values above 1000
             are coerced to 1000.
               */
              public java.lang.Integer getPageSize() {
                return pageSize;
              }

              /**
               * The maximum number of TensorboardRuns to return. The service may return fewer than
               * this value. If unspecified, at most 50 TensorboardRuns are returned. The maximum
               * value is 1000; values above 1000 are coerced to 1000.
               */
              public List setPageSize(java.lang.Integer pageSize) {
                this.pageSize = pageSize;
                return this;
              }

              /**
               * A page token, received from a previous TensorboardService.ListTensorboardRuns call.
               * Provide this to retrieve the subsequent page. When paginating, all other parameters
               * provided to TensorboardService.ListTensorboardRuns must match the call that
               * provided the page token.
               */
              @com.google.api.client.util.Key
              private java.lang.String pageToken;

              /** A page token, received from a previous TensorboardService.ListTensorboardRuns call. Provide this to
             retrieve the subsequent page. When paginating, all other parameters provided to
             TensorboardService.ListTensorboardRuns must match the call that provided the page token.
               */
              public java.lang.String getPageToken() {
                return pageToken;
              }

              /**
               * A page token, received from a previous TensorboardService.ListTensorboardRuns call.
               * Provide this to retrieve the subsequent page. When paginating, all other parameters
               * provided to TensorboardService.ListTensorboardRuns must match the call that
               * provided the page token.
               */
              public List setPageToken(java.lang.String pageToken) {
                this.pageToken = pageToken;
                return this;
              }

              /** Mask specifying which fields to read. */
              @com.google.api.client.util.Key
              private String readMask;

              /** Mask specifying which fields to read.
               */
              public String getReadMask() {
                return readMask;
              }

              /** Mask specifying which fields to read. */
              public List setReadMask(String readMask) {
                this.readMask = readMask;
                return this;
              }

              @Override
              public List set(String parameterName, Object value) {
                return (List) super.set(parameterName, value);
              }
            }
            /**
             * Updates a TensorboardRun.
             *
             * Create a request for the method "runs.patch".
             *
             * This request holds the parameters needed by the aiplatform server.  After setting any optional
             * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             *
             * @param name Output only. Name of the TensorboardRun. Format: `projects/{project}/locations/{location}/tensorboar
             *        ds/{tensorboard}/experiments/{experiment}/runs/{run}`
             * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1TensorboardRun}
             * @return the request
             */
            public Patch patch(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1TensorboardRun content) throws java.io.IOException {
              Patch result = new Patch(name, content);
              initialize(result);
              return result;
            }

            public class Patch extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1TensorboardRun> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+$");

              /**
               * Updates a TensorboardRun.
               *
               * Create a request for the method "runs.patch".
               *
               * This request holds the parameters needed by the the aiplatform server.  After setting any
               * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
               * <p> {@link
               * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Output only. Name of the TensorboardRun. Format: `projects/{project}/locations/{location}/tensorboar
             *        ds/{tensorboard}/experiments/{experiment}/runs/{run}`
               * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1TensorboardRun}
               * @since 1.13
               */
              protected Patch(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1TensorboardRun content) {
                super(Aiplatform.this, "PATCH", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1TensorboardRun.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+$");
                }
              }

              @Override
              public Patch set$Xgafv(java.lang.String $Xgafv) {
                return (Patch) super.set$Xgafv($Xgafv);
              }

              @Override
              public Patch setAccessToken(java.lang.String accessToken) {
                return (Patch) super.setAccessToken(accessToken);
              }

              @Override
              public Patch setAlt(java.lang.String alt) {
                return (Patch) super.setAlt(alt);
              }

              @Override
              public Patch setCallback(java.lang.String callback) {
                return (Patch) super.setCallback(callback);
              }

              @Override
              public Patch setFields(java.lang.String fields) {
                return (Patch) super.setFields(fields);
              }

              @Override
              public Patch setKey(java.lang.String key) {
                return (Patch) super.setKey(key);
              }

              @Override
              public Patch setOauthToken(java.lang.String oauthToken) {
                return (Patch) super.setOauthToken(oauthToken);
              }

              @Override
              public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Patch) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Patch setQuotaUser(java.lang.String quotaUser) {
                return (Patch) super.setQuotaUser(quotaUser);
              }

              @Override
              public Patch setUploadType(java.lang.String uploadType) {
                return (Patch) super.setUploadType(uploadType);
              }

              @Override
              public Patch setUploadProtocol(java.lang.String uploadProtocol) {
                return (Patch) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Output only. Name of the TensorboardRun. Format: `projects/{project}/locations/{loc
               * ation}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}`
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Output only. Name of the TensorboardRun. Format: `projects/{project}/locations/{location}/tensorboa
             rds/{tensorboard}/experiments/{experiment}/runs/{run}`
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Output only. Name of the TensorboardRun. Format: `projects/{project}/locations/{loc
               * ation}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}`
               */
              public Patch setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+$");
                }
                this.name = name;
                return this;
              }

              /**
               * Required. Field mask is used to specify the fields to be overwritten in the
               * TensorboardRun resource by the update. The fields specified in the update_mask are
               * relative to the resource, not the full request. A field is overwritten if it's in
               * the mask. If the user does not provide a mask then all fields are overwritten if
               * new values are specified.
               */
              @com.google.api.client.util.Key
              private String updateMask;

              /** Required. Field mask is used to specify the fields to be overwritten in the TensorboardRun resource
             by the update. The fields specified in the update_mask are relative to the resource, not the full
             request. A field is overwritten if it's in the mask. If the user does not provide a mask then all
             fields are overwritten if new values are specified.
               */
              public String getUpdateMask() {
                return updateMask;
              }

              /**
               * Required. Field mask is used to specify the fields to be overwritten in the
               * TensorboardRun resource by the update. The fields specified in the update_mask are
               * relative to the resource, not the full request. A field is overwritten if it's in
               * the mask. If the user does not provide a mask then all fields are overwritten if
               * new values are specified.
               */
              public Patch setUpdateMask(String updateMask) {
                this.updateMask = updateMask;
                return this;
              }

              @Override
              public Patch set(String parameterName, Object value) {
                return (Patch) super.set(parameterName, value);
              }
            }
            /**
             * Write time series data points into multiple TensorboardTimeSeries under a TensorboardRun. If any
             * data fail to be ingested, an error is returned.
             *
             * Create a request for the method "runs.write".
             *
             * This request holds the parameters needed by the aiplatform server.  After setting any optional
             * parameters, call the {@link Write#execute()} method to invoke the remote operation.
             *
             * @param tensorboardRun Required. The resource name of the TensorboardRun to write data to. Format: `projects/{project}/loca
             *        tions/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}`
             * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1WriteTensorboardRunDataRequest}
             * @return the request
             */
            public Write write(java.lang.String tensorboardRun, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1WriteTensorboardRunDataRequest content) throws java.io.IOException {
              Write result = new Write(tensorboardRun, content);
              initialize(result);
              return result;
            }

            public class Write extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1WriteTensorboardRunDataResponse> {

              private static final String REST_PATH = "v1/{+tensorboardRun}:write";

              private final java.util.regex.Pattern TENSORBOARD_RUN_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+$");

              /**
               * Write time series data points into multiple TensorboardTimeSeries under a TensorboardRun. If
               * any data fail to be ingested, an error is returned.
               *
               * Create a request for the method "runs.write".
               *
               * This request holds the parameters needed by the the aiplatform server.  After setting any
               * optional parameters, call the {@link Write#execute()} method to invoke the remote operation.
               * <p> {@link
               * Write#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param tensorboardRun Required. The resource name of the TensorboardRun to write data to. Format: `projects/{project}/loca
             *        tions/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}`
               * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1WriteTensorboardRunDataRequest}
               * @since 1.13
               */
              protected Write(java.lang.String tensorboardRun, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1WriteTensorboardRunDataRequest content) {
                super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1WriteTensorboardRunDataResponse.class);
                this.tensorboardRun = com.google.api.client.util.Preconditions.checkNotNull(tensorboardRun, "Required parameter tensorboardRun must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(TENSORBOARD_RUN_PATTERN.matcher(tensorboardRun).matches(),
                      "Parameter tensorboardRun must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+$");
                }
              }

              @Override
              public Write set$Xgafv(java.lang.String $Xgafv) {
                return (Write) super.set$Xgafv($Xgafv);
              }

              @Override
              public Write setAccessToken(java.lang.String accessToken) {
                return (Write) super.setAccessToken(accessToken);
              }

              @Override
              public Write setAlt(java.lang.String alt) {
                return (Write) super.setAlt(alt);
              }

              @Override
              public Write setCallback(java.lang.String callback) {
                return (Write) super.setCallback(callback);
              }

              @Override
              public Write setFields(java.lang.String fields) {
                return (Write) super.setFields(fields);
              }

              @Override
              public Write setKey(java.lang.String key) {
                return (Write) super.setKey(key);
              }

              @Override
              public Write setOauthToken(java.lang.String oauthToken) {
                return (Write) super.setOauthToken(oauthToken);
              }

              @Override
              public Write setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Write) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Write setQuotaUser(java.lang.String quotaUser) {
                return (Write) super.setQuotaUser(quotaUser);
              }

              @Override
              public Write setUploadType(java.lang.String uploadType) {
                return (Write) super.setUploadType(uploadType);
              }

              @Override
              public Write setUploadProtocol(java.lang.String uploadProtocol) {
                return (Write) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The resource name of the TensorboardRun to write data to. Format: `projec
               * ts/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experimen
               * t}/runs/{run}`
               */
              @com.google.api.client.util.Key
              private java.lang.String tensorboardRun;

              /** Required. The resource name of the TensorboardRun to write data to. Format: `projects/{project}/loc
             ations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}`
               */
              public java.lang.String getTensorboardRun() {
                return tensorboardRun;
              }

              /**
               * Required. The resource name of the TensorboardRun to write data to. Format: `projec
               * ts/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experimen
               * t}/runs/{run}`
               */
              public Write setTensorboardRun(java.lang.String tensorboardRun) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(TENSORBOARD_RUN_PATTERN.matcher(tensorboardRun).matches(),
                      "Parameter tensorboardRun must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+$");
                }
                this.tensorboardRun = tensorboardRun;
                return this;
              }

              @Override
              public Write set(String parameterName, Object value) {
                return (Write) super.set(parameterName, value);
              }
            }

            /**
             * An accessor for creating requests from the Operations collection.
             *
             * <p>The typical use is:</p>
             * <pre>
             *   {@code Aiplatform aiplatform = new Aiplatform(...);}
             *   {@code Aiplatform.Operations.List request = aiplatform.operations().list(parameters ...)}
             * </pre>
             *
             * @return the resource collection
             */
            public Operations operations() {
              return new Operations();
            }

            /**
             * The "operations" collection of methods.
             */
            public class Operations {

              /**
               * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
               * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
               * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
               * methods to check whether the cancellation succeeded or whether the operation completed despite
               * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
               * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
               * `Code.CANCELLED`.
               *
               * Create a request for the method "operations.cancel".
               *
               * This request holds the parameters needed by the aiplatform server.  After setting any optional
               * parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
               *
               * @param name The name of the operation resource to be cancelled.
               * @return the request
               */
              public Cancel cancel(java.lang.String name) throws java.io.IOException {
                Cancel result = new Cancel(name);
                initialize(result);
                return result;
              }

              public class Cancel extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

                private static final String REST_PATH = "v1/{+name}:cancel";

                private final java.util.regex.Pattern NAME_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+/operations/[^/]+$");

                /**
                 * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
                 * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
                 * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
                 * methods to check whether the cancellation succeeded or whether the operation completed despite
                 * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
                 * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
                 * `Code.CANCELLED`.
                 *
                 * Create a request for the method "operations.cancel".
                 *
                 * This request holds the parameters needed by the the aiplatform server.  After setting any
                 * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
                 * <p> {@link
                 * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
                 * be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param name The name of the operation resource to be cancelled.
                 * @since 1.13
                 */
                protected Cancel(java.lang.String name) {
                  super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
                  this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+/operations/[^/]+$");
                  }
                }

                @Override
                public Cancel set$Xgafv(java.lang.String $Xgafv) {
                  return (Cancel) super.set$Xgafv($Xgafv);
                }

                @Override
                public Cancel setAccessToken(java.lang.String accessToken) {
                  return (Cancel) super.setAccessToken(accessToken);
                }

                @Override
                public Cancel setAlt(java.lang.String alt) {
                  return (Cancel) super.setAlt(alt);
                }

                @Override
                public Cancel setCallback(java.lang.String callback) {
                  return (Cancel) super.setCallback(callback);
                }

                @Override
                public Cancel setFields(java.lang.String fields) {
                  return (Cancel) super.setFields(fields);
                }

                @Override
                public Cancel setKey(java.lang.String key) {
                  return (Cancel) super.setKey(key);
                }

                @Override
                public Cancel setOauthToken(java.lang.String oauthToken) {
                  return (Cancel) super.setOauthToken(oauthToken);
                }

                @Override
                public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (Cancel) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public Cancel setQuotaUser(java.lang.String quotaUser) {
                  return (Cancel) super.setQuotaUser(quotaUser);
                }

                @Override
                public Cancel setUploadType(java.lang.String uploadType) {
                  return (Cancel) super.setUploadType(uploadType);
                }

                @Override
                public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
                  return (Cancel) super.setUploadProtocol(uploadProtocol);
                }

                /** The name of the operation resource to be cancelled. */
                @com.google.api.client.util.Key
                private java.lang.String name;

                /** The name of the operation resource to be cancelled.
                 */
                public java.lang.String getName() {
                  return name;
                }

                /** The name of the operation resource to be cancelled. */
                public Cancel setName(java.lang.String name) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+/operations/[^/]+$");
                  }
                  this.name = name;
                  return this;
                }

                @Override
                public Cancel set(String parameterName, Object value) {
                  return (Cancel) super.set(parameterName, value);
                }
              }
              /**
               * Deletes a long-running operation. This method indicates that the client is no longer interested
               * in the operation result. It does not cancel the operation. If the server doesn't support this
               * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
               *
               * Create a request for the method "operations.delete".
               *
               * This request holds the parameters needed by the aiplatform server.  After setting any optional
               * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
               *
               * @param name The name of the operation resource to be deleted.
               * @return the request
               */
              public Delete delete(java.lang.String name) throws java.io.IOException {
                Delete result = new Delete(name);
                initialize(result);
                return result;
              }

              public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

                private static final String REST_PATH = "v1/{+name}";

                private final java.util.regex.Pattern NAME_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+/operations/[^/]+$");

                /**
                 * Deletes a long-running operation. This method indicates that the client is no longer interested
                 * in the operation result. It does not cancel the operation. If the server doesn't support this
                 * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
                 *
                 * Create a request for the method "operations.delete".
                 *
                 * This request holds the parameters needed by the the aiplatform server.  After setting any
                 * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
                 * <p> {@link
                 * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
                 * be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param name The name of the operation resource to be deleted.
                 * @since 1.13
                 */
                protected Delete(java.lang.String name) {
                  super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
                  this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+/operations/[^/]+$");
                  }
                }

                @Override
                public Delete set$Xgafv(java.lang.String $Xgafv) {
                  return (Delete) super.set$Xgafv($Xgafv);
                }

                @Override
                public Delete setAccessToken(java.lang.String accessToken) {
                  return (Delete) super.setAccessToken(accessToken);
                }

                @Override
                public Delete setAlt(java.lang.String alt) {
                  return (Delete) super.setAlt(alt);
                }

                @Override
                public Delete setCallback(java.lang.String callback) {
                  return (Delete) super.setCallback(callback);
                }

                @Override
                public Delete setFields(java.lang.String fields) {
                  return (Delete) super.setFields(fields);
                }

                @Override
                public Delete setKey(java.lang.String key) {
                  return (Delete) super.setKey(key);
                }

                @Override
                public Delete setOauthToken(java.lang.String oauthToken) {
                  return (Delete) super.setOauthToken(oauthToken);
                }

                @Override
                public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (Delete) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public Delete setQuotaUser(java.lang.String quotaUser) {
                  return (Delete) super.setQuotaUser(quotaUser);
                }

                @Override
                public Delete setUploadType(java.lang.String uploadType) {
                  return (Delete) super.setUploadType(uploadType);
                }

                @Override
                public Delete setUploadProtocol(java.lang.String uploadProtocol) {
                  return (Delete) super.setUploadProtocol(uploadProtocol);
                }

                /** The name of the operation resource to be deleted. */
                @com.google.api.client.util.Key
                private java.lang.String name;

                /** The name of the operation resource to be deleted.
                 */
                public java.lang.String getName() {
                  return name;
                }

                /** The name of the operation resource to be deleted. */
                public Delete setName(java.lang.String name) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+/operations/[^/]+$");
                  }
                  this.name = name;
                  return this;
                }

                @Override
                public Delete set(String parameterName, Object value) {
                  return (Delete) super.set(parameterName, value);
                }
              }
              /**
               * Gets the latest state of a long-running operation. Clients can use this method to poll the
               * operation result at intervals as recommended by the API service.
               *
               * Create a request for the method "operations.get".
               *
               * This request holds the parameters needed by the aiplatform server.  After setting any optional
               * parameters, call the {@link Get#execute()} method to invoke the remote operation.
               *
               * @param name The name of the operation resource.
               * @return the request
               */
              public Get get(java.lang.String name) throws java.io.IOException {
                Get result = new Get(name);
                initialize(result);
                return result;
              }

              public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

                private static final String REST_PATH = "v1/{+name}";

                private final java.util.regex.Pattern NAME_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+/operations/[^/]+$");

                /**
                 * Gets the latest state of a long-running operation. Clients can use this method to poll the
                 * operation result at intervals as recommended by the API service.
                 *
                 * Create a request for the method "operations.get".
                 *
                 * This request holds the parameters needed by the the aiplatform server.  After setting any
                 * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
                 * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
                 * must be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param name The name of the operation resource.
                 * @since 1.13
                 */
                protected Get(java.lang.String name) {
                  super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
                  this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+/operations/[^/]+$");
                  }
                }

                @Override
                public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                  return super.executeUsingHead();
                }

                @Override
                public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                  return super.buildHttpRequestUsingHead();
                }

                @Override
                public Get set$Xgafv(java.lang.String $Xgafv) {
                  return (Get) super.set$Xgafv($Xgafv);
                }

                @Override
                public Get setAccessToken(java.lang.String accessToken) {
                  return (Get) super.setAccessToken(accessToken);
                }

                @Override
                public Get setAlt(java.lang.String alt) {
                  return (Get) super.setAlt(alt);
                }

                @Override
                public Get setCallback(java.lang.String callback) {
                  return (Get) super.setCallback(callback);
                }

                @Override
                public Get setFields(java.lang.String fields) {
                  return (Get) super.setFields(fields);
                }

                @Override
                public Get setKey(java.lang.String key) {
                  return (Get) super.setKey(key);
                }

                @Override
                public Get setOauthToken(java.lang.String oauthToken) {
                  return (Get) super.setOauthToken(oauthToken);
                }

                @Override
                public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (Get) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public Get setQuotaUser(java.lang.String quotaUser) {
                  return (Get) super.setQuotaUser(quotaUser);
                }

                @Override
                public Get setUploadType(java.lang.String uploadType) {
                  return (Get) super.setUploadType(uploadType);
                }

                @Override
                public Get setUploadProtocol(java.lang.String uploadProtocol) {
                  return (Get) super.setUploadProtocol(uploadProtocol);
                }

                /** The name of the operation resource. */
                @com.google.api.client.util.Key
                private java.lang.String name;

                /** The name of the operation resource.
                 */
                public java.lang.String getName() {
                  return name;
                }

                /** The name of the operation resource. */
                public Get setName(java.lang.String name) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+/operations/[^/]+$");
                  }
                  this.name = name;
                  return this;
                }

                @Override
                public Get set(String parameterName, Object value) {
                  return (Get) super.set(parameterName, value);
                }
              }
              /**
               * Lists operations that match the specified filter in the request. If the server doesn't support
               * this method, it returns `UNIMPLEMENTED`.
               *
               * Create a request for the method "operations.list".
               *
               * This request holds the parameters needed by the aiplatform server.  After setting any optional
               * parameters, call the {@link List#execute()} method to invoke the remote operation.
               *
               * @param name The name of the operation's parent resource.
               * @return the request
               */
              public List list(java.lang.String name) throws java.io.IOException {
                List result = new List(name);
                initialize(result);
                return result;
              }

              public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse> {

                private static final String REST_PATH = "v1/{+name}/operations";

                private final java.util.regex.Pattern NAME_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+$");

                /**
                 * Lists operations that match the specified filter in the request. If the server doesn't support
                 * this method, it returns `UNIMPLEMENTED`.
                 *
                 * Create a request for the method "operations.list".
                 *
                 * This request holds the parameters needed by the the aiplatform server.  After setting any
                 * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
                 * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
                 * must be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param name The name of the operation's parent resource.
                 * @since 1.13
                 */
                protected List(java.lang.String name) {
                  super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse.class);
                  this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+$");
                  }
                }

                @Override
                public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                  return super.executeUsingHead();
                }

                @Override
                public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                  return super.buildHttpRequestUsingHead();
                }

                @Override
                public List set$Xgafv(java.lang.String $Xgafv) {
                  return (List) super.set$Xgafv($Xgafv);
                }

                @Override
                public List setAccessToken(java.lang.String accessToken) {
                  return (List) super.setAccessToken(accessToken);
                }

                @Override
                public List setAlt(java.lang.String alt) {
                  return (List) super.setAlt(alt);
                }

                @Override
                public List setCallback(java.lang.String callback) {
                  return (List) super.setCallback(callback);
                }

                @Override
                public List setFields(java.lang.String fields) {
                  return (List) super.setFields(fields);
                }

                @Override
                public List setKey(java.lang.String key) {
                  return (List) super.setKey(key);
                }

                @Override
                public List setOauthToken(java.lang.String oauthToken) {
                  return (List) super.setOauthToken(oauthToken);
                }

                @Override
                public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (List) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public List setQuotaUser(java.lang.String quotaUser) {
                  return (List) super.setQuotaUser(quotaUser);
                }

                @Override
                public List setUploadType(java.lang.String uploadType) {
                  return (List) super.setUploadType(uploadType);
                }

                @Override
                public List setUploadProtocol(java.lang.String uploadProtocol) {
                  return (List) super.setUploadProtocol(uploadProtocol);
                }

                /** The name of the operation's parent resource. */
                @com.google.api.client.util.Key
                private java.lang.String name;

                /** The name of the operation's parent resource.
                 */
                public java.lang.String getName() {
                  return name;
                }

                /** The name of the operation's parent resource. */
                public List setName(java.lang.String name) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+$");
                  }
                  this.name = name;
                  return this;
                }

                /** The standard list filter. */
                @com.google.api.client.util.Key
                private java.lang.String filter;

                /** The standard list filter.
                 */
                public java.lang.String getFilter() {
                  return filter;
                }

                /** The standard list filter. */
                public List setFilter(java.lang.String filter) {
                  this.filter = filter;
                  return this;
                }

                /** The standard list page size. */
                @com.google.api.client.util.Key
                private java.lang.Integer pageSize;

                /** The standard list page size.
                 */
                public java.lang.Integer getPageSize() {
                  return pageSize;
                }

                /** The standard list page size. */
                public List setPageSize(java.lang.Integer pageSize) {
                  this.pageSize = pageSize;
                  return this;
                }

                /** The standard list page token. */
                @com.google.api.client.util.Key
                private java.lang.String pageToken;

                /** The standard list page token.
                 */
                public java.lang.String getPageToken() {
                  return pageToken;
                }

                /** The standard list page token. */
                public List setPageToken(java.lang.String pageToken) {
                  this.pageToken = pageToken;
                  return this;
                }

                @Override
                public List set(String parameterName, Object value) {
                  return (List) super.set(parameterName, value);
                }
              }
              /**
               * Waits until the specified long-running operation is done or reaches at most a specified timeout,
               * returning the latest state. If the operation is already done, the latest state is immediately
               * returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC
               * timeout is used. If the server does not support this method, it returns
               * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
               * the latest state before the specified timeout (including immediately), meaning even an immediate
               * response is no guarantee that the operation is done.
               *
               * Create a request for the method "operations.wait".
               *
               * This request holds the parameters needed by the aiplatform server.  After setting any optional
               * parameters, call the {@link Wait#execute()} method to invoke the remote operation.
               *
               * @param name The name of the operation resource to wait on.
               * @return the request
               */
              public Wait wait(java.lang.String name) throws java.io.IOException {
                Wait result = new Wait(name);
                initialize(result);
                return result;
              }

              public class Wait extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

                private static final String REST_PATH = "v1/{+name}:wait";

                private final java.util.regex.Pattern NAME_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+/operations/[^/]+$");

                /**
                 * Waits until the specified long-running operation is done or reaches at most a specified
                 * timeout, returning the latest state. If the operation is already done, the latest state is
                 * immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout,
                 * the HTTP/RPC timeout is used. If the server does not support this method, it returns
                 * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
                 * the latest state before the specified timeout (including immediately), meaning even an
                 * immediate response is no guarantee that the operation is done.
                 *
                 * Create a request for the method "operations.wait".
                 *
                 * This request holds the parameters needed by the the aiplatform server.  After setting any
                 * optional parameters, call the {@link Wait#execute()} method to invoke the remote operation. <p>
                 * {@link Wait#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
                 * must be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param name The name of the operation resource to wait on.
                 * @since 1.13
                 */
                protected Wait(java.lang.String name) {
                  super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
                  this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+/operations/[^/]+$");
                  }
                }

                @Override
                public Wait set$Xgafv(java.lang.String $Xgafv) {
                  return (Wait) super.set$Xgafv($Xgafv);
                }

                @Override
                public Wait setAccessToken(java.lang.String accessToken) {
                  return (Wait) super.setAccessToken(accessToken);
                }

                @Override
                public Wait setAlt(java.lang.String alt) {
                  return (Wait) super.setAlt(alt);
                }

                @Override
                public Wait setCallback(java.lang.String callback) {
                  return (Wait) super.setCallback(callback);
                }

                @Override
                public Wait setFields(java.lang.String fields) {
                  return (Wait) super.setFields(fields);
                }

                @Override
                public Wait setKey(java.lang.String key) {
                  return (Wait) super.setKey(key);
                }

                @Override
                public Wait setOauthToken(java.lang.String oauthToken) {
                  return (Wait) super.setOauthToken(oauthToken);
                }

                @Override
                public Wait setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (Wait) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public Wait setQuotaUser(java.lang.String quotaUser) {
                  return (Wait) super.setQuotaUser(quotaUser);
                }

                @Override
                public Wait setUploadType(java.lang.String uploadType) {
                  return (Wait) super.setUploadType(uploadType);
                }

                @Override
                public Wait setUploadProtocol(java.lang.String uploadProtocol) {
                  return (Wait) super.setUploadProtocol(uploadProtocol);
                }

                /** The name of the operation resource to wait on. */
                @com.google.api.client.util.Key
                private java.lang.String name;

                /** The name of the operation resource to wait on.
                 */
                public java.lang.String getName() {
                  return name;
                }

                /** The name of the operation resource to wait on. */
                public Wait setName(java.lang.String name) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+/operations/[^/]+$");
                  }
                  this.name = name;
                  return this;
                }

                /**
                 * The maximum duration to wait before timing out. If left blank, the wait will be
                 * at most the time permitted by the underlying HTTP/RPC protocol. If RPC context
                 * deadline is also specified, the shorter one will be used.
                 */
                @com.google.api.client.util.Key
                private String timeout;

                /** The maximum duration to wait before timing out. If left blank, the wait will be at most the time
               permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the
               shorter one will be used.
                 */
                public String getTimeout() {
                  return timeout;
                }

                /**
                 * The maximum duration to wait before timing out. If left blank, the wait will be
                 * at most the time permitted by the underlying HTTP/RPC protocol. If RPC context
                 * deadline is also specified, the shorter one will be used.
                 */
                public Wait setTimeout(String timeout) {
                  this.timeout = timeout;
                  return this;
                }

                @Override
                public Wait set(String parameterName, Object value) {
                  return (Wait) super.set(parameterName, value);
                }
              }

            }
            /**
             * An accessor for creating requests from the TimeSeries collection.
             *
             * <p>The typical use is:</p>
             * <pre>
             *   {@code Aiplatform aiplatform = new Aiplatform(...);}
             *   {@code Aiplatform.TimeSeries.List request = aiplatform.timeSeries().list(parameters ...)}
             * </pre>
             *
             * @return the resource collection
             */
            public TimeSeries timeSeries() {
              return new TimeSeries();
            }

            /**
             * The "timeSeries" collection of methods.
             */
            public class TimeSeries {

              /**
               * Creates a TensorboardTimeSeries.
               *
               * Create a request for the method "timeSeries.create".
               *
               * This request holds the parameters needed by the aiplatform server.  After setting any optional
               * parameters, call the {@link Create#execute()} method to invoke the remote operation.
               *
               * @param parent Required. The resource name of the TensorboardRun to create the TensorboardTimeSeries in. Format: `p
               *        rojects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}
               *        /runs/{run}`
               * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1TensorboardTimeSeries}
               * @return the request
               */
              public Create create(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1TensorboardTimeSeries content) throws java.io.IOException {
                Create result = new Create(parent, content);
                initialize(result);
                return result;
              }

              public class Create extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1TensorboardTimeSeries> {

                private static final String REST_PATH = "v1/{+parent}/timeSeries";

                private final java.util.regex.Pattern PARENT_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+$");

                /**
                 * Creates a TensorboardTimeSeries.
                 *
                 * Create a request for the method "timeSeries.create".
                 *
                 * This request holds the parameters needed by the the aiplatform server.  After setting any
                 * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
                 * <p> {@link
                 * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
                 * be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param parent Required. The resource name of the TensorboardRun to create the TensorboardTimeSeries in. Format: `p
               *        rojects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}
               *        /runs/{run}`
                 * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1TensorboardTimeSeries}
                 * @since 1.13
                 */
                protected Create(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1TensorboardTimeSeries content) {
                  super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1TensorboardTimeSeries.class);
                  this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                        "Parameter parent must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+$");
                  }
                }

                @Override
                public Create set$Xgafv(java.lang.String $Xgafv) {
                  return (Create) super.set$Xgafv($Xgafv);
                }

                @Override
                public Create setAccessToken(java.lang.String accessToken) {
                  return (Create) super.setAccessToken(accessToken);
                }

                @Override
                public Create setAlt(java.lang.String alt) {
                  return (Create) super.setAlt(alt);
                }

                @Override
                public Create setCallback(java.lang.String callback) {
                  return (Create) super.setCallback(callback);
                }

                @Override
                public Create setFields(java.lang.String fields) {
                  return (Create) super.setFields(fields);
                }

                @Override
                public Create setKey(java.lang.String key) {
                  return (Create) super.setKey(key);
                }

                @Override
                public Create setOauthToken(java.lang.String oauthToken) {
                  return (Create) super.setOauthToken(oauthToken);
                }

                @Override
                public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (Create) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public Create setQuotaUser(java.lang.String quotaUser) {
                  return (Create) super.setQuotaUser(quotaUser);
                }

                @Override
                public Create setUploadType(java.lang.String uploadType) {
                  return (Create) super.setUploadType(uploadType);
                }

                @Override
                public Create setUploadProtocol(java.lang.String uploadProtocol) {
                  return (Create) super.setUploadProtocol(uploadProtocol);
                }

                /**
                 * Required. The resource name of the TensorboardRun to create the
                 * TensorboardTimeSeries in. Format: `projects/{project}/locations/{location}/tensor
                 * boards/{tensorboard}/experiments/{experiment}/runs/{run}`
                 */
                @com.google.api.client.util.Key
                private java.lang.String parent;

                /** Required. The resource name of the TensorboardRun to create the TensorboardTimeSeries in. Format: `
               projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{r
               un}`
                 */
                public java.lang.String getParent() {
                  return parent;
                }

                /**
                 * Required. The resource name of the TensorboardRun to create the
                 * TensorboardTimeSeries in. Format: `projects/{project}/locations/{location}/tensor
                 * boards/{tensorboard}/experiments/{experiment}/runs/{run}`
                 */
                public Create setParent(java.lang.String parent) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                        "Parameter parent must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+$");
                  }
                  this.parent = parent;
                  return this;
                }

                /**
                 * Optional. The user specified unique ID to use for the TensorboardTimeSeries,
                 * which becomes the final component of the TensorboardTimeSeries's resource name.
                 * This value should match "a-z0-9{0, 127}"
                 */
                @com.google.api.client.util.Key
                private java.lang.String tensorboardTimeSeriesId;

                /** Optional. The user specified unique ID to use for the TensorboardTimeSeries, which becomes the
               final component of the TensorboardTimeSeries's resource name. This value should match "a-z0-9{0,
               127}"
                 */
                public java.lang.String getTensorboardTimeSeriesId() {
                  return tensorboardTimeSeriesId;
                }

                /**
                 * Optional. The user specified unique ID to use for the TensorboardTimeSeries,
                 * which becomes the final component of the TensorboardTimeSeries's resource name.
                 * This value should match "a-z0-9{0, 127}"
                 */
                public Create setTensorboardTimeSeriesId(java.lang.String tensorboardTimeSeriesId) {
                  this.tensorboardTimeSeriesId = tensorboardTimeSeriesId;
                  return this;
                }

                @Override
                public Create set(String parameterName, Object value) {
                  return (Create) super.set(parameterName, value);
                }
              }
              /**
               * Deletes a TensorboardTimeSeries.
               *
               * Create a request for the method "timeSeries.delete".
               *
               * This request holds the parameters needed by the aiplatform server.  After setting any optional
               * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
               *
               * @param name Required. The name of the TensorboardTimeSeries to be deleted. Format: `projects/{project}/locations
               *        /{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}/timeSeries/{tim
               *        e_series}`
               * @return the request
               */
              public Delete delete(java.lang.String name) throws java.io.IOException {
                Delete result = new Delete(name);
                initialize(result);
                return result;
              }

              public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

                private static final String REST_PATH = "v1/{+name}";

                private final java.util.regex.Pattern NAME_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+/timeSeries/[^/]+$");

                /**
                 * Deletes a TensorboardTimeSeries.
                 *
                 * Create a request for the method "timeSeries.delete".
                 *
                 * This request holds the parameters needed by the the aiplatform server.  After setting any
                 * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
                 * <p> {@link
                 * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
                 * be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param name Required. The name of the TensorboardTimeSeries to be deleted. Format: `projects/{project}/locations
               *        /{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}/timeSeries/{tim
               *        e_series}`
                 * @since 1.13
                 */
                protected Delete(java.lang.String name) {
                  super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
                  this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+/timeSeries/[^/]+$");
                  }
                }

                @Override
                public Delete set$Xgafv(java.lang.String $Xgafv) {
                  return (Delete) super.set$Xgafv($Xgafv);
                }

                @Override
                public Delete setAccessToken(java.lang.String accessToken) {
                  return (Delete) super.setAccessToken(accessToken);
                }

                @Override
                public Delete setAlt(java.lang.String alt) {
                  return (Delete) super.setAlt(alt);
                }

                @Override
                public Delete setCallback(java.lang.String callback) {
                  return (Delete) super.setCallback(callback);
                }

                @Override
                public Delete setFields(java.lang.String fields) {
                  return (Delete) super.setFields(fields);
                }

                @Override
                public Delete setKey(java.lang.String key) {
                  return (Delete) super.setKey(key);
                }

                @Override
                public Delete setOauthToken(java.lang.String oauthToken) {
                  return (Delete) super.setOauthToken(oauthToken);
                }

                @Override
                public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (Delete) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public Delete setQuotaUser(java.lang.String quotaUser) {
                  return (Delete) super.setQuotaUser(quotaUser);
                }

                @Override
                public Delete setUploadType(java.lang.String uploadType) {
                  return (Delete) super.setUploadType(uploadType);
                }

                @Override
                public Delete setUploadProtocol(java.lang.String uploadProtocol) {
                  return (Delete) super.setUploadProtocol(uploadProtocol);
                }

                /**
                 * Required. The name of the TensorboardTimeSeries to be deleted. Format: `projects/
                 * {project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment
                 * }/runs/{run}/timeSeries/{time_series}`
                 */
                @com.google.api.client.util.Key
                private java.lang.String name;

                /** Required. The name of the TensorboardTimeSeries to be deleted. Format: `projects/{project}/location
               s/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}/timeSeries/{time_series
               }`
                 */
                public java.lang.String getName() {
                  return name;
                }

                /**
                 * Required. The name of the TensorboardTimeSeries to be deleted. Format: `projects/
                 * {project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment
                 * }/runs/{run}/timeSeries/{time_series}`
                 */
                public Delete setName(java.lang.String name) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+/timeSeries/[^/]+$");
                  }
                  this.name = name;
                  return this;
                }

                @Override
                public Delete set(String parameterName, Object value) {
                  return (Delete) super.set(parameterName, value);
                }
              }
              /**
               * Exports a TensorboardTimeSeries' data. Data is returned in paginated responses.
               *
               * Create a request for the method "timeSeries.exportTensorboardTimeSeries".
               *
               * This request holds the parameters needed by the aiplatform server.  After setting any optional
               * parameters, call the {@link ExportTensorboardTimeSeries#execute()} method to invoke the remote
               * operation.
               *
               * @param tensorboardTimeSeries Required. The resource name of the TensorboardTimeSeries to export data from. Format: `projects/{pro
               *        ject}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}/
               *        timeSeries/{time_series}`
               * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ExportTensorboardTimeSeriesDataRequest}
               * @return the request
               */
              public ExportTensorboardTimeSeries exportTensorboardTimeSeries(java.lang.String tensorboardTimeSeries, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ExportTensorboardTimeSeriesDataRequest content) throws java.io.IOException {
                ExportTensorboardTimeSeries result = new ExportTensorboardTimeSeries(tensorboardTimeSeries, content);
                initialize(result);
                return result;
              }

              public class ExportTensorboardTimeSeries extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ExportTensorboardTimeSeriesDataResponse> {

                private static final String REST_PATH = "v1/{+tensorboardTimeSeries}:exportTensorboardTimeSeries";

                private final java.util.regex.Pattern TENSORBOARD_TIME_SERIES_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+/timeSeries/[^/]+$");

                /**
                 * Exports a TensorboardTimeSeries' data. Data is returned in paginated responses.
                 *
                 * Create a request for the method "timeSeries.exportTensorboardTimeSeries".
                 *
                 * This request holds the parameters needed by the the aiplatform server.  After setting any
                 * optional parameters, call the {@link ExportTensorboardTimeSeries#execute()} method to invoke
                 * the remote operation. <p> {@link ExportTensorboardTimeSeries#initialize(com.google.api.client.g
                 * oogleapis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
                 * immediately after invoking the constructor. </p>
                 *
                 * @param tensorboardTimeSeries Required. The resource name of the TensorboardTimeSeries to export data from. Format: `projects/{pro
               *        ject}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}/
               *        timeSeries/{time_series}`
                 * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ExportTensorboardTimeSeriesDataRequest}
                 * @since 1.13
                 */
                protected ExportTensorboardTimeSeries(java.lang.String tensorboardTimeSeries, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ExportTensorboardTimeSeriesDataRequest content) {
                  super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ExportTensorboardTimeSeriesDataResponse.class);
                  this.tensorboardTimeSeries = com.google.api.client.util.Preconditions.checkNotNull(tensorboardTimeSeries, "Required parameter tensorboardTimeSeries must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(TENSORBOARD_TIME_SERIES_PATTERN.matcher(tensorboardTimeSeries).matches(),
                        "Parameter tensorboardTimeSeries must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+/timeSeries/[^/]+$");
                  }
                }

                @Override
                public ExportTensorboardTimeSeries set$Xgafv(java.lang.String $Xgafv) {
                  return (ExportTensorboardTimeSeries) super.set$Xgafv($Xgafv);
                }

                @Override
                public ExportTensorboardTimeSeries setAccessToken(java.lang.String accessToken) {
                  return (ExportTensorboardTimeSeries) super.setAccessToken(accessToken);
                }

                @Override
                public ExportTensorboardTimeSeries setAlt(java.lang.String alt) {
                  return (ExportTensorboardTimeSeries) super.setAlt(alt);
                }

                @Override
                public ExportTensorboardTimeSeries setCallback(java.lang.String callback) {
                  return (ExportTensorboardTimeSeries) super.setCallback(callback);
                }

                @Override
                public ExportTensorboardTimeSeries setFields(java.lang.String fields) {
                  return (ExportTensorboardTimeSeries) super.setFields(fields);
                }

                @Override
                public ExportTensorboardTimeSeries setKey(java.lang.String key) {
                  return (ExportTensorboardTimeSeries) super.setKey(key);
                }

                @Override
                public ExportTensorboardTimeSeries setOauthToken(java.lang.String oauthToken) {
                  return (ExportTensorboardTimeSeries) super.setOauthToken(oauthToken);
                }

                @Override
                public ExportTensorboardTimeSeries setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (ExportTensorboardTimeSeries) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public ExportTensorboardTimeSeries setQuotaUser(java.lang.String quotaUser) {
                  return (ExportTensorboardTimeSeries) super.setQuotaUser(quotaUser);
                }

                @Override
                public ExportTensorboardTimeSeries setUploadType(java.lang.String uploadType) {
                  return (ExportTensorboardTimeSeries) super.setUploadType(uploadType);
                }

                @Override
                public ExportTensorboardTimeSeries setUploadProtocol(java.lang.String uploadProtocol) {
                  return (ExportTensorboardTimeSeries) super.setUploadProtocol(uploadProtocol);
                }

                /**
                 * Required. The resource name of the TensorboardTimeSeries to export data from.
                 * Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/exper
                 * iments/{experiment}/runs/{run}/timeSeries/{time_series}`
                 */
                @com.google.api.client.util.Key
                private java.lang.String tensorboardTimeSeries;

                /** Required. The resource name of the TensorboardTimeSeries to export data from. Format: `projects/{pr
               oject}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}/timeSeri
               es/{time_series}`
                 */
                public java.lang.String getTensorboardTimeSeries() {
                  return tensorboardTimeSeries;
                }

                /**
                 * Required. The resource name of the TensorboardTimeSeries to export data from.
                 * Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/exper
                 * iments/{experiment}/runs/{run}/timeSeries/{time_series}`
                 */
                public ExportTensorboardTimeSeries setTensorboardTimeSeries(java.lang.String tensorboardTimeSeries) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(TENSORBOARD_TIME_SERIES_PATTERN.matcher(tensorboardTimeSeries).matches(),
                        "Parameter tensorboardTimeSeries must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+/timeSeries/[^/]+$");
                  }
                  this.tensorboardTimeSeries = tensorboardTimeSeries;
                  return this;
                }

                @Override
                public ExportTensorboardTimeSeries set(String parameterName, Object value) {
                  return (ExportTensorboardTimeSeries) super.set(parameterName, value);
                }
              }
              /**
               * Gets a TensorboardTimeSeries.
               *
               * Create a request for the method "timeSeries.get".
               *
               * This request holds the parameters needed by the aiplatform server.  After setting any optional
               * parameters, call the {@link Get#execute()} method to invoke the remote operation.
               *
               * @param name Required. The name of the TensorboardTimeSeries resource. Format: `projects/{project}/locations/{loc
               *        ation}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}/timeSeries/{time_ser
               *        ies}`
               * @return the request
               */
              public Get get(java.lang.String name) throws java.io.IOException {
                Get result = new Get(name);
                initialize(result);
                return result;
              }

              public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1TensorboardTimeSeries> {

                private static final String REST_PATH = "v1/{+name}";

                private final java.util.regex.Pattern NAME_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+/timeSeries/[^/]+$");

                /**
                 * Gets a TensorboardTimeSeries.
                 *
                 * Create a request for the method "timeSeries.get".
                 *
                 * This request holds the parameters needed by the the aiplatform server.  After setting any
                 * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
                 * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
                 * must be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param name Required. The name of the TensorboardTimeSeries resource. Format: `projects/{project}/locations/{loc
               *        ation}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}/timeSeries/{time_ser
               *        ies}`
                 * @since 1.13
                 */
                protected Get(java.lang.String name) {
                  super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1TensorboardTimeSeries.class);
                  this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+/timeSeries/[^/]+$");
                  }
                }

                @Override
                public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                  return super.executeUsingHead();
                }

                @Override
                public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                  return super.buildHttpRequestUsingHead();
                }

                @Override
                public Get set$Xgafv(java.lang.String $Xgafv) {
                  return (Get) super.set$Xgafv($Xgafv);
                }

                @Override
                public Get setAccessToken(java.lang.String accessToken) {
                  return (Get) super.setAccessToken(accessToken);
                }

                @Override
                public Get setAlt(java.lang.String alt) {
                  return (Get) super.setAlt(alt);
                }

                @Override
                public Get setCallback(java.lang.String callback) {
                  return (Get) super.setCallback(callback);
                }

                @Override
                public Get setFields(java.lang.String fields) {
                  return (Get) super.setFields(fields);
                }

                @Override
                public Get setKey(java.lang.String key) {
                  return (Get) super.setKey(key);
                }

                @Override
                public Get setOauthToken(java.lang.String oauthToken) {
                  return (Get) super.setOauthToken(oauthToken);
                }

                @Override
                public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (Get) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public Get setQuotaUser(java.lang.String quotaUser) {
                  return (Get) super.setQuotaUser(quotaUser);
                }

                @Override
                public Get setUploadType(java.lang.String uploadType) {
                  return (Get) super.setUploadType(uploadType);
                }

                @Override
                public Get setUploadProtocol(java.lang.String uploadProtocol) {
                  return (Get) super.setUploadProtocol(uploadProtocol);
                }

                /**
                 * Required. The name of the TensorboardTimeSeries resource. Format: `projects/{proj
                 * ect}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/run
                 * s/{run}/timeSeries/{time_series}`
                 */
                @com.google.api.client.util.Key
                private java.lang.String name;

                /** Required. The name of the TensorboardTimeSeries resource. Format: `projects/{project}/locations/{lo
               cation}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}/timeSeries/{time_series}`
                 */
                public java.lang.String getName() {
                  return name;
                }

                /**
                 * Required. The name of the TensorboardTimeSeries resource. Format: `projects/{proj
                 * ect}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/run
                 * s/{run}/timeSeries/{time_series}`
                 */
                public Get setName(java.lang.String name) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+/timeSeries/[^/]+$");
                  }
                  this.name = name;
                  return this;
                }

                @Override
                public Get set(String parameterName, Object value) {
                  return (Get) super.set(parameterName, value);
                }
              }
              /**
               * Lists TensorboardTimeSeries in a Location.
               *
               * Create a request for the method "timeSeries.list".
               *
               * This request holds the parameters needed by the aiplatform server.  After setting any optional
               * parameters, call the {@link List#execute()} method to invoke the remote operation.
               *
               * @param parent Required. The resource name of the TensorboardRun to list TensorboardTimeSeries. Format: `projects/{
               *        project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{ru
               *        n}`
               * @return the request
               */
              public List list(java.lang.String parent) throws java.io.IOException {
                List result = new List(parent);
                initialize(result);
                return result;
              }

              public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListTensorboardTimeSeriesResponse> {

                private static final String REST_PATH = "v1/{+parent}/timeSeries";

                private final java.util.regex.Pattern PARENT_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+$");

                /**
                 * Lists TensorboardTimeSeries in a Location.
                 *
                 * Create a request for the method "timeSeries.list".
                 *
                 * This request holds the parameters needed by the the aiplatform server.  After setting any
                 * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
                 * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
                 * must be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param parent Required. The resource name of the TensorboardRun to list TensorboardTimeSeries. Format: `projects/{
               *        project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{ru
               *        n}`
                 * @since 1.13
                 */
                protected List(java.lang.String parent) {
                  super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListTensorboardTimeSeriesResponse.class);
                  this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                        "Parameter parent must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+$");
                  }
                }

                @Override
                public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                  return super.executeUsingHead();
                }

                @Override
                public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                  return super.buildHttpRequestUsingHead();
                }

                @Override
                public List set$Xgafv(java.lang.String $Xgafv) {
                  return (List) super.set$Xgafv($Xgafv);
                }

                @Override
                public List setAccessToken(java.lang.String accessToken) {
                  return (List) super.setAccessToken(accessToken);
                }

                @Override
                public List setAlt(java.lang.String alt) {
                  return (List) super.setAlt(alt);
                }

                @Override
                public List setCallback(java.lang.String callback) {
                  return (List) super.setCallback(callback);
                }

                @Override
                public List setFields(java.lang.String fields) {
                  return (List) super.setFields(fields);
                }

                @Override
                public List setKey(java.lang.String key) {
                  return (List) super.setKey(key);
                }

                @Override
                public List setOauthToken(java.lang.String oauthToken) {
                  return (List) super.setOauthToken(oauthToken);
                }

                @Override
                public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (List) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public List setQuotaUser(java.lang.String quotaUser) {
                  return (List) super.setQuotaUser(quotaUser);
                }

                @Override
                public List setUploadType(java.lang.String uploadType) {
                  return (List) super.setUploadType(uploadType);
                }

                @Override
                public List setUploadProtocol(java.lang.String uploadProtocol) {
                  return (List) super.setUploadProtocol(uploadProtocol);
                }

                /**
                 * Required. The resource name of the TensorboardRun to list TensorboardTimeSeries.
                 * Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/exper
                 * iments/{experiment}/runs/{run}`
                 */
                @com.google.api.client.util.Key
                private java.lang.String parent;

                /** Required. The resource name of the TensorboardRun to list TensorboardTimeSeries. Format: `projects/
               {project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}`
                 */
                public java.lang.String getParent() {
                  return parent;
                }

                /**
                 * Required. The resource name of the TensorboardRun to list TensorboardTimeSeries.
                 * Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/exper
                 * iments/{experiment}/runs/{run}`
                 */
                public List setParent(java.lang.String parent) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                        "Parameter parent must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+$");
                  }
                  this.parent = parent;
                  return this;
                }

                /** Lists the TensorboardTimeSeries that match the filter expression. */
                @com.google.api.client.util.Key
                private java.lang.String filter;

                /** Lists the TensorboardTimeSeries that match the filter expression.
                 */
                public java.lang.String getFilter() {
                  return filter;
                }

                /** Lists the TensorboardTimeSeries that match the filter expression. */
                public List setFilter(java.lang.String filter) {
                  this.filter = filter;
                  return this;
                }

                /** Field to use to sort the list. */
                @com.google.api.client.util.Key
                private java.lang.String orderBy;

                /** Field to use to sort the list.
                 */
                public java.lang.String getOrderBy() {
                  return orderBy;
                }

                /** Field to use to sort the list. */
                public List setOrderBy(java.lang.String orderBy) {
                  this.orderBy = orderBy;
                  return this;
                }

                /**
                 * The maximum number of TensorboardTimeSeries to return. The service may return
                 * fewer than this value. If unspecified, at most 50 TensorboardTimeSeries are
                 * returned. The maximum value is 1000; values above 1000 are coerced to 1000.
                 */
                @com.google.api.client.util.Key
                private java.lang.Integer pageSize;

                /** The maximum number of TensorboardTimeSeries to return. The service may return fewer than this
               value. If unspecified, at most 50 TensorboardTimeSeries are returned. The maximum value is 1000;
               values above 1000 are coerced to 1000.
                 */
                public java.lang.Integer getPageSize() {
                  return pageSize;
                }

                /**
                 * The maximum number of TensorboardTimeSeries to return. The service may return
                 * fewer than this value. If unspecified, at most 50 TensorboardTimeSeries are
                 * returned. The maximum value is 1000; values above 1000 are coerced to 1000.
                 */
                public List setPageSize(java.lang.Integer pageSize) {
                  this.pageSize = pageSize;
                  return this;
                }

                /**
                 * A page token, received from a previous
                 * TensorboardService.ListTensorboardTimeSeries call. Provide this to retrieve the
                 * subsequent page. When paginating, all other parameters provided to
                 * TensorboardService.ListTensorboardTimeSeries must match the call that provided
                 * the page token.
                 */
                @com.google.api.client.util.Key
                private java.lang.String pageToken;

                /** A page token, received from a previous TensorboardService.ListTensorboardTimeSeries call. Provide
               this to retrieve the subsequent page. When paginating, all other parameters provided to
               TensorboardService.ListTensorboardTimeSeries must match the call that provided the page token.
                 */
                public java.lang.String getPageToken() {
                  return pageToken;
                }

                /**
                 * A page token, received from a previous
                 * TensorboardService.ListTensorboardTimeSeries call. Provide this to retrieve the
                 * subsequent page. When paginating, all other parameters provided to
                 * TensorboardService.ListTensorboardTimeSeries must match the call that provided
                 * the page token.
                 */
                public List setPageToken(java.lang.String pageToken) {
                  this.pageToken = pageToken;
                  return this;
                }

                /** Mask specifying which fields to read. */
                @com.google.api.client.util.Key
                private String readMask;

                /** Mask specifying which fields to read.
                 */
                public String getReadMask() {
                  return readMask;
                }

                /** Mask specifying which fields to read. */
                public List setReadMask(String readMask) {
                  this.readMask = readMask;
                  return this;
                }

                @Override
                public List set(String parameterName, Object value) {
                  return (List) super.set(parameterName, value);
                }
              }
              /**
               * Updates a TensorboardTimeSeries.
               *
               * Create a request for the method "timeSeries.patch".
               *
               * This request holds the parameters needed by the aiplatform server.  After setting any optional
               * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
               *
               * @param name Output only. Name of the TensorboardTimeSeries.
               * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1TensorboardTimeSeries}
               * @return the request
               */
              public Patch patch(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1TensorboardTimeSeries content) throws java.io.IOException {
                Patch result = new Patch(name, content);
                initialize(result);
                return result;
              }

              public class Patch extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1TensorboardTimeSeries> {

                private static final String REST_PATH = "v1/{+name}";

                private final java.util.regex.Pattern NAME_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+/timeSeries/[^/]+$");

                /**
                 * Updates a TensorboardTimeSeries.
                 *
                 * Create a request for the method "timeSeries.patch".
                 *
                 * This request holds the parameters needed by the the aiplatform server.  After setting any
                 * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
                 * <p> {@link
                 * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
                 * be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param name Output only. Name of the TensorboardTimeSeries.
                 * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1TensorboardTimeSeries}
                 * @since 1.13
                 */
                protected Patch(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1TensorboardTimeSeries content) {
                  super(Aiplatform.this, "PATCH", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1TensorboardTimeSeries.class);
                  this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+/timeSeries/[^/]+$");
                  }
                }

                @Override
                public Patch set$Xgafv(java.lang.String $Xgafv) {
                  return (Patch) super.set$Xgafv($Xgafv);
                }

                @Override
                public Patch setAccessToken(java.lang.String accessToken) {
                  return (Patch) super.setAccessToken(accessToken);
                }

                @Override
                public Patch setAlt(java.lang.String alt) {
                  return (Patch) super.setAlt(alt);
                }

                @Override
                public Patch setCallback(java.lang.String callback) {
                  return (Patch) super.setCallback(callback);
                }

                @Override
                public Patch setFields(java.lang.String fields) {
                  return (Patch) super.setFields(fields);
                }

                @Override
                public Patch setKey(java.lang.String key) {
                  return (Patch) super.setKey(key);
                }

                @Override
                public Patch setOauthToken(java.lang.String oauthToken) {
                  return (Patch) super.setOauthToken(oauthToken);
                }

                @Override
                public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (Patch) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public Patch setQuotaUser(java.lang.String quotaUser) {
                  return (Patch) super.setQuotaUser(quotaUser);
                }

                @Override
                public Patch setUploadType(java.lang.String uploadType) {
                  return (Patch) super.setUploadType(uploadType);
                }

                @Override
                public Patch setUploadProtocol(java.lang.String uploadProtocol) {
                  return (Patch) super.setUploadProtocol(uploadProtocol);
                }

                /** Output only. Name of the TensorboardTimeSeries. */
                @com.google.api.client.util.Key
                private java.lang.String name;

                /** Output only. Name of the TensorboardTimeSeries.
                 */
                public java.lang.String getName() {
                  return name;
                }

                /** Output only. Name of the TensorboardTimeSeries. */
                public Patch setName(java.lang.String name) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+/timeSeries/[^/]+$");
                  }
                  this.name = name;
                  return this;
                }

                /**
                 * Required. Field mask is used to specify the fields to be overwritten in the
                 * TensorboardTimeSeries resource by the update. The fields specified in the
                 * update_mask are relative to the resource, not the full request. A field is
                 * overwritten if it's in the mask. If the user does not provide a mask then all
                 * fields are overwritten if new values are specified.
                 */
                @com.google.api.client.util.Key
                private String updateMask;

                /** Required. Field mask is used to specify the fields to be overwritten in the TensorboardTimeSeries
               resource by the update. The fields specified in the update_mask are relative to the resource, not
               the full request. A field is overwritten if it's in the mask. If the user does not provide a mask
               then all fields are overwritten if new values are specified.
                 */
                public String getUpdateMask() {
                  return updateMask;
                }

                /**
                 * Required. Field mask is used to specify the fields to be overwritten in the
                 * TensorboardTimeSeries resource by the update. The fields specified in the
                 * update_mask are relative to the resource, not the full request. A field is
                 * overwritten if it's in the mask. If the user does not provide a mask then all
                 * fields are overwritten if new values are specified.
                 */
                public Patch setUpdateMask(String updateMask) {
                  this.updateMask = updateMask;
                  return this;
                }

                @Override
                public Patch set(String parameterName, Object value) {
                  return (Patch) super.set(parameterName, value);
                }
              }
              /**
               * Reads a TensorboardTimeSeries' data. By default, if the number of data points stored is less than
               * 1000, all data is returned. Otherwise, 1000 data points is randomly selected from this time
               * series and returned. This value can be changed by changing max_data_points, which can't be
               * greater than 10k.
               *
               * Create a request for the method "timeSeries.read".
               *
               * This request holds the parameters needed by the aiplatform server.  After setting any optional
               * parameters, call the {@link Read#execute()} method to invoke the remote operation.
               *
               * @param tensorboardTimeSeries Required. The resource name of the TensorboardTimeSeries to read data from. Format: `projects/{proje
               *        ct}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}/ti
               *        meSeries/{time_series}`
               * @return the request
               */
              public Read read(java.lang.String tensorboardTimeSeries) throws java.io.IOException {
                Read result = new Read(tensorboardTimeSeries);
                initialize(result);
                return result;
              }

              public class Read extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ReadTensorboardTimeSeriesDataResponse> {

                private static final String REST_PATH = "v1/{+tensorboardTimeSeries}:read";

                private final java.util.regex.Pattern TENSORBOARD_TIME_SERIES_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+/timeSeries/[^/]+$");

                /**
                 * Reads a TensorboardTimeSeries' data. By default, if the number of data points stored is less
                 * than 1000, all data is returned. Otherwise, 1000 data points is randomly selected from this
                 * time series and returned. This value can be changed by changing max_data_points, which can't be
                 * greater than 10k.
                 *
                 * Create a request for the method "timeSeries.read".
                 *
                 * This request holds the parameters needed by the the aiplatform server.  After setting any
                 * optional parameters, call the {@link Read#execute()} method to invoke the remote operation. <p>
                 * {@link Read#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
                 * must be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param tensorboardTimeSeries Required. The resource name of the TensorboardTimeSeries to read data from. Format: `projects/{proje
               *        ct}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}/ti
               *        meSeries/{time_series}`
                 * @since 1.13
                 */
                protected Read(java.lang.String tensorboardTimeSeries) {
                  super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ReadTensorboardTimeSeriesDataResponse.class);
                  this.tensorboardTimeSeries = com.google.api.client.util.Preconditions.checkNotNull(tensorboardTimeSeries, "Required parameter tensorboardTimeSeries must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(TENSORBOARD_TIME_SERIES_PATTERN.matcher(tensorboardTimeSeries).matches(),
                        "Parameter tensorboardTimeSeries must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+/timeSeries/[^/]+$");
                  }
                }

                @Override
                public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                  return super.executeUsingHead();
                }

                @Override
                public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                  return super.buildHttpRequestUsingHead();
                }

                @Override
                public Read set$Xgafv(java.lang.String $Xgafv) {
                  return (Read) super.set$Xgafv($Xgafv);
                }

                @Override
                public Read setAccessToken(java.lang.String accessToken) {
                  return (Read) super.setAccessToken(accessToken);
                }

                @Override
                public Read setAlt(java.lang.String alt) {
                  return (Read) super.setAlt(alt);
                }

                @Override
                public Read setCallback(java.lang.String callback) {
                  return (Read) super.setCallback(callback);
                }

                @Override
                public Read setFields(java.lang.String fields) {
                  return (Read) super.setFields(fields);
                }

                @Override
                public Read setKey(java.lang.String key) {
                  return (Read) super.setKey(key);
                }

                @Override
                public Read setOauthToken(java.lang.String oauthToken) {
                  return (Read) super.setOauthToken(oauthToken);
                }

                @Override
                public Read setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (Read) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public Read setQuotaUser(java.lang.String quotaUser) {
                  return (Read) super.setQuotaUser(quotaUser);
                }

                @Override
                public Read setUploadType(java.lang.String uploadType) {
                  return (Read) super.setUploadType(uploadType);
                }

                @Override
                public Read setUploadProtocol(java.lang.String uploadProtocol) {
                  return (Read) super.setUploadProtocol(uploadProtocol);
                }

                /**
                 * Required. The resource name of the TensorboardTimeSeries to read data from.
                 * Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/exper
                 * iments/{experiment}/runs/{run}/timeSeries/{time_series}`
                 */
                @com.google.api.client.util.Key
                private java.lang.String tensorboardTimeSeries;

                /** Required. The resource name of the TensorboardTimeSeries to read data from. Format: `projects/{proj
               ect}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}/timeSeries
               /{time_series}`
                 */
                public java.lang.String getTensorboardTimeSeries() {
                  return tensorboardTimeSeries;
                }

                /**
                 * Required. The resource name of the TensorboardTimeSeries to read data from.
                 * Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/exper
                 * iments/{experiment}/runs/{run}/timeSeries/{time_series}`
                 */
                public Read setTensorboardTimeSeries(java.lang.String tensorboardTimeSeries) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(TENSORBOARD_TIME_SERIES_PATTERN.matcher(tensorboardTimeSeries).matches(),
                        "Parameter tensorboardTimeSeries must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+/timeSeries/[^/]+$");
                  }
                  this.tensorboardTimeSeries = tensorboardTimeSeries;
                  return this;
                }

                /** Reads the TensorboardTimeSeries' data that match the filter expression. */
                @com.google.api.client.util.Key
                private java.lang.String filter;

                /** Reads the TensorboardTimeSeries' data that match the filter expression.
                 */
                public java.lang.String getFilter() {
                  return filter;
                }

                /** Reads the TensorboardTimeSeries' data that match the filter expression. */
                public Read setFilter(java.lang.String filter) {
                  this.filter = filter;
                  return this;
                }

                /**
                 * The maximum number of TensorboardTimeSeries' data to return. This value should be
                 * a positive integer. This value can be set to -1 to return all data.
                 */
                @com.google.api.client.util.Key
                private java.lang.Integer maxDataPoints;

                /** The maximum number of TensorboardTimeSeries' data to return. This value should be a positive
               integer. This value can be set to -1 to return all data.
                 */
                public java.lang.Integer getMaxDataPoints() {
                  return maxDataPoints;
                }

                /**
                 * The maximum number of TensorboardTimeSeries' data to return. This value should be
                 * a positive integer. This value can be set to -1 to return all data.
                 */
                public Read setMaxDataPoints(java.lang.Integer maxDataPoints) {
                  this.maxDataPoints = maxDataPoints;
                  return this;
                }

                @Override
                public Read set(String parameterName, Object value) {
                  return (Read) super.set(parameterName, value);
                }
              }
              /**
               * Gets bytes of TensorboardBlobs. This is to allow reading blob data stored in consumer project's
               * Cloud Storage bucket without users having to obtain Cloud Storage access permission.
               *
               * Create a request for the method "timeSeries.readBlobData".
               *
               * This request holds the parameters needed by the aiplatform server.  After setting any optional
               * parameters, call the {@link ReadBlobData#execute()} method to invoke the remote operation.
               *
               * @param timeSeries Required. The resource name of the TensorboardTimeSeries to list Blobs. Format: `projects/{project}/
               *        locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}/timeSe
               *        ries/{time_series}`
               * @return the request
               */
              public ReadBlobData readBlobData(java.lang.String timeSeries) throws java.io.IOException {
                ReadBlobData result = new ReadBlobData(timeSeries);
                initialize(result);
                return result;
              }

              public class ReadBlobData extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ReadTensorboardBlobDataResponse> {

                private static final String REST_PATH = "v1/{+timeSeries}:readBlobData";

                private final java.util.regex.Pattern TIME_SERIES_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+/timeSeries/[^/]+$");

                /**
                 * Gets bytes of TensorboardBlobs. This is to allow reading blob data stored in consumer project's
                 * Cloud Storage bucket without users having to obtain Cloud Storage access permission.
                 *
                 * Create a request for the method "timeSeries.readBlobData".
                 *
                 * This request holds the parameters needed by the the aiplatform server.  After setting any
                 * optional parameters, call the {@link ReadBlobData#execute()} method to invoke the remote
                 * operation. <p> {@link
                 * ReadBlobData#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
                 * must be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param timeSeries Required. The resource name of the TensorboardTimeSeries to list Blobs. Format: `projects/{project}/
               *        locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}/timeSe
               *        ries/{time_series}`
                 * @since 1.13
                 */
                protected ReadBlobData(java.lang.String timeSeries) {
                  super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ReadTensorboardBlobDataResponse.class);
                  this.timeSeries = com.google.api.client.util.Preconditions.checkNotNull(timeSeries, "Required parameter timeSeries must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(TIME_SERIES_PATTERN.matcher(timeSeries).matches(),
                        "Parameter timeSeries must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+/timeSeries/[^/]+$");
                  }
                }

                @Override
                public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                  return super.executeUsingHead();
                }

                @Override
                public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                  return super.buildHttpRequestUsingHead();
                }

                @Override
                public ReadBlobData set$Xgafv(java.lang.String $Xgafv) {
                  return (ReadBlobData) super.set$Xgafv($Xgafv);
                }

                @Override
                public ReadBlobData setAccessToken(java.lang.String accessToken) {
                  return (ReadBlobData) super.setAccessToken(accessToken);
                }

                @Override
                public ReadBlobData setAlt(java.lang.String alt) {
                  return (ReadBlobData) super.setAlt(alt);
                }

                @Override
                public ReadBlobData setCallback(java.lang.String callback) {
                  return (ReadBlobData) super.setCallback(callback);
                }

                @Override
                public ReadBlobData setFields(java.lang.String fields) {
                  return (ReadBlobData) super.setFields(fields);
                }

                @Override
                public ReadBlobData setKey(java.lang.String key) {
                  return (ReadBlobData) super.setKey(key);
                }

                @Override
                public ReadBlobData setOauthToken(java.lang.String oauthToken) {
                  return (ReadBlobData) super.setOauthToken(oauthToken);
                }

                @Override
                public ReadBlobData setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (ReadBlobData) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public ReadBlobData setQuotaUser(java.lang.String quotaUser) {
                  return (ReadBlobData) super.setQuotaUser(quotaUser);
                }

                @Override
                public ReadBlobData setUploadType(java.lang.String uploadType) {
                  return (ReadBlobData) super.setUploadType(uploadType);
                }

                @Override
                public ReadBlobData setUploadProtocol(java.lang.String uploadProtocol) {
                  return (ReadBlobData) super.setUploadProtocol(uploadProtocol);
                }

                /**
                 * Required. The resource name of the TensorboardTimeSeries to list Blobs. Format: `
                 * projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{e
                 * xperiment}/runs/{run}/timeSeries/{time_series}`
                 */
                @com.google.api.client.util.Key
                private java.lang.String timeSeries;

                /** Required. The resource name of the TensorboardTimeSeries to list Blobs. Format: `projects/{project}
               /locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}/timeSeries/{ti
               me_series}`
                 */
                public java.lang.String getTimeSeries() {
                  return timeSeries;
                }

                /**
                 * Required. The resource name of the TensorboardTimeSeries to list Blobs. Format: `
                 * projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{e
                 * xperiment}/runs/{run}/timeSeries/{time_series}`
                 */
                public ReadBlobData setTimeSeries(java.lang.String timeSeries) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(TIME_SERIES_PATTERN.matcher(timeSeries).matches(),
                        "Parameter timeSeries must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+/timeSeries/[^/]+$");
                  }
                  this.timeSeries = timeSeries;
                  return this;
                }

                /** IDs of the blobs to read. */
                @com.google.api.client.util.Key
                private java.util.List<java.lang.String> blobIds;

                /** IDs of the blobs to read.
                 */
                public java.util.List<java.lang.String> getBlobIds() {
                  return blobIds;
                }

                /** IDs of the blobs to read. */
                public ReadBlobData setBlobIds(java.util.List<java.lang.String> blobIds) {
                  this.blobIds = blobIds;
                  return this;
                }

                @Override
                public ReadBlobData set(String parameterName, Object value) {
                  return (ReadBlobData) super.set(parameterName, value);
                }
              }

              /**
               * An accessor for creating requests from the Operations collection.
               *
               * <p>The typical use is:</p>
               * <pre>
               *   {@code Aiplatform aiplatform = new Aiplatform(...);}
               *   {@code Aiplatform.Operations.List request = aiplatform.operations().list(parameters ...)}
               * </pre>
               *
               * @return the resource collection
               */
              public Operations operations() {
                return new Operations();
              }

              /**
               * The "operations" collection of methods.
               */
              public class Operations {

                /**
                 * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
                 * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
                 * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
                 * methods to check whether the cancellation succeeded or whether the operation completed despite
                 * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
                 * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
                 * `Code.CANCELLED`.
                 *
                 * Create a request for the method "operations.cancel".
                 *
                 * This request holds the parameters needed by the aiplatform server.  After setting any optional
                 * parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
                 *
                 * @param name The name of the operation resource to be cancelled.
                 * @return the request
                 */
                public Cancel cancel(java.lang.String name) throws java.io.IOException {
                  Cancel result = new Cancel(name);
                  initialize(result);
                  return result;
                }

                public class Cancel extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

                  private static final String REST_PATH = "v1/{+name}:cancel";

                  private final java.util.regex.Pattern NAME_PATTERN =
                      java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+/timeSeries/[^/]+/operations/[^/]+$");

                  /**
                   * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
                   * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
                   * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
                   * methods to check whether the cancellation succeeded or whether the operation completed despite
                   * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
                   * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
                   * `Code.CANCELLED`.
                   *
                   * Create a request for the method "operations.cancel".
                   *
                   * This request holds the parameters needed by the the aiplatform server.  After setting any
                   * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
                   * <p> {@link
                   * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
                   * be called to initialize this instance immediately after invoking the constructor. </p>
                   *
                   * @param name The name of the operation resource to be cancelled.
                   * @since 1.13
                   */
                  protected Cancel(java.lang.String name) {
                    super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
                    this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                    if (!getSuppressPatternChecks()) {
                      com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                          "Parameter name must conform to the pattern " +
                          "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+/timeSeries/[^/]+/operations/[^/]+$");
                    }
                  }

                  @Override
                  public Cancel set$Xgafv(java.lang.String $Xgafv) {
                    return (Cancel) super.set$Xgafv($Xgafv);
                  }

                  @Override
                  public Cancel setAccessToken(java.lang.String accessToken) {
                    return (Cancel) super.setAccessToken(accessToken);
                  }

                  @Override
                  public Cancel setAlt(java.lang.String alt) {
                    return (Cancel) super.setAlt(alt);
                  }

                  @Override
                  public Cancel setCallback(java.lang.String callback) {
                    return (Cancel) super.setCallback(callback);
                  }

                  @Override
                  public Cancel setFields(java.lang.String fields) {
                    return (Cancel) super.setFields(fields);
                  }

                  @Override
                  public Cancel setKey(java.lang.String key) {
                    return (Cancel) super.setKey(key);
                  }

                  @Override
                  public Cancel setOauthToken(java.lang.String oauthToken) {
                    return (Cancel) super.setOauthToken(oauthToken);
                  }

                  @Override
                  public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
                    return (Cancel) super.setPrettyPrint(prettyPrint);
                  }

                  @Override
                  public Cancel setQuotaUser(java.lang.String quotaUser) {
                    return (Cancel) super.setQuotaUser(quotaUser);
                  }

                  @Override
                  public Cancel setUploadType(java.lang.String uploadType) {
                    return (Cancel) super.setUploadType(uploadType);
                  }

                  @Override
                  public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
                    return (Cancel) super.setUploadProtocol(uploadProtocol);
                  }

                  /** The name of the operation resource to be cancelled. */
                  @com.google.api.client.util.Key
                  private java.lang.String name;

                  /** The name of the operation resource to be cancelled.
                   */
                  public java.lang.String getName() {
                    return name;
                  }

                  /** The name of the operation resource to be cancelled. */
                  public Cancel setName(java.lang.String name) {
                    if (!getSuppressPatternChecks()) {
                      com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                          "Parameter name must conform to the pattern " +
                          "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+/timeSeries/[^/]+/operations/[^/]+$");
                    }
                    this.name = name;
                    return this;
                  }

                  @Override
                  public Cancel set(String parameterName, Object value) {
                    return (Cancel) super.set(parameterName, value);
                  }
                }
                /**
                 * Deletes a long-running operation. This method indicates that the client is no longer interested
                 * in the operation result. It does not cancel the operation. If the server doesn't support this
                 * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
                 *
                 * Create a request for the method "operations.delete".
                 *
                 * This request holds the parameters needed by the aiplatform server.  After setting any optional
                 * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
                 *
                 * @param name The name of the operation resource to be deleted.
                 * @return the request
                 */
                public Delete delete(java.lang.String name) throws java.io.IOException {
                  Delete result = new Delete(name);
                  initialize(result);
                  return result;
                }

                public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

                  private static final String REST_PATH = "v1/{+name}";

                  private final java.util.regex.Pattern NAME_PATTERN =
                      java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+/timeSeries/[^/]+/operations/[^/]+$");

                  /**
                   * Deletes a long-running operation. This method indicates that the client is no longer interested
                   * in the operation result. It does not cancel the operation. If the server doesn't support this
                   * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
                   *
                   * Create a request for the method "operations.delete".
                   *
                   * This request holds the parameters needed by the the aiplatform server.  After setting any
                   * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
                   * <p> {@link
                   * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
                   * be called to initialize this instance immediately after invoking the constructor. </p>
                   *
                   * @param name The name of the operation resource to be deleted.
                   * @since 1.13
                   */
                  protected Delete(java.lang.String name) {
                    super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
                    this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                    if (!getSuppressPatternChecks()) {
                      com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                          "Parameter name must conform to the pattern " +
                          "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+/timeSeries/[^/]+/operations/[^/]+$");
                    }
                  }

                  @Override
                  public Delete set$Xgafv(java.lang.String $Xgafv) {
                    return (Delete) super.set$Xgafv($Xgafv);
                  }

                  @Override
                  public Delete setAccessToken(java.lang.String accessToken) {
                    return (Delete) super.setAccessToken(accessToken);
                  }

                  @Override
                  public Delete setAlt(java.lang.String alt) {
                    return (Delete) super.setAlt(alt);
                  }

                  @Override
                  public Delete setCallback(java.lang.String callback) {
                    return (Delete) super.setCallback(callback);
                  }

                  @Override
                  public Delete setFields(java.lang.String fields) {
                    return (Delete) super.setFields(fields);
                  }

                  @Override
                  public Delete setKey(java.lang.String key) {
                    return (Delete) super.setKey(key);
                  }

                  @Override
                  public Delete setOauthToken(java.lang.String oauthToken) {
                    return (Delete) super.setOauthToken(oauthToken);
                  }

                  @Override
                  public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
                    return (Delete) super.setPrettyPrint(prettyPrint);
                  }

                  @Override
                  public Delete setQuotaUser(java.lang.String quotaUser) {
                    return (Delete) super.setQuotaUser(quotaUser);
                  }

                  @Override
                  public Delete setUploadType(java.lang.String uploadType) {
                    return (Delete) super.setUploadType(uploadType);
                  }

                  @Override
                  public Delete setUploadProtocol(java.lang.String uploadProtocol) {
                    return (Delete) super.setUploadProtocol(uploadProtocol);
                  }

                  /** The name of the operation resource to be deleted. */
                  @com.google.api.client.util.Key
                  private java.lang.String name;

                  /** The name of the operation resource to be deleted.
                   */
                  public java.lang.String getName() {
                    return name;
                  }

                  /** The name of the operation resource to be deleted. */
                  public Delete setName(java.lang.String name) {
                    if (!getSuppressPatternChecks()) {
                      com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                          "Parameter name must conform to the pattern " +
                          "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+/timeSeries/[^/]+/operations/[^/]+$");
                    }
                    this.name = name;
                    return this;
                  }

                  @Override
                  public Delete set(String parameterName, Object value) {
                    return (Delete) super.set(parameterName, value);
                  }
                }
                /**
                 * Gets the latest state of a long-running operation. Clients can use this method to poll the
                 * operation result at intervals as recommended by the API service.
                 *
                 * Create a request for the method "operations.get".
                 *
                 * This request holds the parameters needed by the aiplatform server.  After setting any optional
                 * parameters, call the {@link Get#execute()} method to invoke the remote operation.
                 *
                 * @param name The name of the operation resource.
                 * @return the request
                 */
                public Get get(java.lang.String name) throws java.io.IOException {
                  Get result = new Get(name);
                  initialize(result);
                  return result;
                }

                public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

                  private static final String REST_PATH = "v1/{+name}";

                  private final java.util.regex.Pattern NAME_PATTERN =
                      java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+/timeSeries/[^/]+/operations/[^/]+$");

                  /**
                   * Gets the latest state of a long-running operation. Clients can use this method to poll the
                   * operation result at intervals as recommended by the API service.
                   *
                   * Create a request for the method "operations.get".
                   *
                   * This request holds the parameters needed by the the aiplatform server.  After setting any
                   * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
                   * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
                   * must be called to initialize this instance immediately after invoking the constructor. </p>
                   *
                   * @param name The name of the operation resource.
                   * @since 1.13
                   */
                  protected Get(java.lang.String name) {
                    super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
                    this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                    if (!getSuppressPatternChecks()) {
                      com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                          "Parameter name must conform to the pattern " +
                          "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+/timeSeries/[^/]+/operations/[^/]+$");
                    }
                  }

                  @Override
                  public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                    return super.executeUsingHead();
                  }

                  @Override
                  public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                    return super.buildHttpRequestUsingHead();
                  }

                  @Override
                  public Get set$Xgafv(java.lang.String $Xgafv) {
                    return (Get) super.set$Xgafv($Xgafv);
                  }

                  @Override
                  public Get setAccessToken(java.lang.String accessToken) {
                    return (Get) super.setAccessToken(accessToken);
                  }

                  @Override
                  public Get setAlt(java.lang.String alt) {
                    return (Get) super.setAlt(alt);
                  }

                  @Override
                  public Get setCallback(java.lang.String callback) {
                    return (Get) super.setCallback(callback);
                  }

                  @Override
                  public Get setFields(java.lang.String fields) {
                    return (Get) super.setFields(fields);
                  }

                  @Override
                  public Get setKey(java.lang.String key) {
                    return (Get) super.setKey(key);
                  }

                  @Override
                  public Get setOauthToken(java.lang.String oauthToken) {
                    return (Get) super.setOauthToken(oauthToken);
                  }

                  @Override
                  public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                    return (Get) super.setPrettyPrint(prettyPrint);
                  }

                  @Override
                  public Get setQuotaUser(java.lang.String quotaUser) {
                    return (Get) super.setQuotaUser(quotaUser);
                  }

                  @Override
                  public Get setUploadType(java.lang.String uploadType) {
                    return (Get) super.setUploadType(uploadType);
                  }

                  @Override
                  public Get setUploadProtocol(java.lang.String uploadProtocol) {
                    return (Get) super.setUploadProtocol(uploadProtocol);
                  }

                  /** The name of the operation resource. */
                  @com.google.api.client.util.Key
                  private java.lang.String name;

                  /** The name of the operation resource.
                   */
                  public java.lang.String getName() {
                    return name;
                  }

                  /** The name of the operation resource. */
                  public Get setName(java.lang.String name) {
                    if (!getSuppressPatternChecks()) {
                      com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                          "Parameter name must conform to the pattern " +
                          "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+/timeSeries/[^/]+/operations/[^/]+$");
                    }
                    this.name = name;
                    return this;
                  }

                  @Override
                  public Get set(String parameterName, Object value) {
                    return (Get) super.set(parameterName, value);
                  }
                }
                /**
                 * Lists operations that match the specified filter in the request. If the server doesn't support
                 * this method, it returns `UNIMPLEMENTED`.
                 *
                 * Create a request for the method "operations.list".
                 *
                 * This request holds the parameters needed by the aiplatform server.  After setting any optional
                 * parameters, call the {@link List#execute()} method to invoke the remote operation.
                 *
                 * @param name The name of the operation's parent resource.
                 * @return the request
                 */
                public List list(java.lang.String name) throws java.io.IOException {
                  List result = new List(name);
                  initialize(result);
                  return result;
                }

                public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse> {

                  private static final String REST_PATH = "v1/{+name}/operations";

                  private final java.util.regex.Pattern NAME_PATTERN =
                      java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+/timeSeries/[^/]+$");

                  /**
                   * Lists operations that match the specified filter in the request. If the server doesn't support
                   * this method, it returns `UNIMPLEMENTED`.
                   *
                   * Create a request for the method "operations.list".
                   *
                   * This request holds the parameters needed by the the aiplatform server.  After setting any
                   * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
                   * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
                   * must be called to initialize this instance immediately after invoking the constructor. </p>
                   *
                   * @param name The name of the operation's parent resource.
                   * @since 1.13
                   */
                  protected List(java.lang.String name) {
                    super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse.class);
                    this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                    if (!getSuppressPatternChecks()) {
                      com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                          "Parameter name must conform to the pattern " +
                          "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+/timeSeries/[^/]+$");
                    }
                  }

                  @Override
                  public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                    return super.executeUsingHead();
                  }

                  @Override
                  public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                    return super.buildHttpRequestUsingHead();
                  }

                  @Override
                  public List set$Xgafv(java.lang.String $Xgafv) {
                    return (List) super.set$Xgafv($Xgafv);
                  }

                  @Override
                  public List setAccessToken(java.lang.String accessToken) {
                    return (List) super.setAccessToken(accessToken);
                  }

                  @Override
                  public List setAlt(java.lang.String alt) {
                    return (List) super.setAlt(alt);
                  }

                  @Override
                  public List setCallback(java.lang.String callback) {
                    return (List) super.setCallback(callback);
                  }

                  @Override
                  public List setFields(java.lang.String fields) {
                    return (List) super.setFields(fields);
                  }

                  @Override
                  public List setKey(java.lang.String key) {
                    return (List) super.setKey(key);
                  }

                  @Override
                  public List setOauthToken(java.lang.String oauthToken) {
                    return (List) super.setOauthToken(oauthToken);
                  }

                  @Override
                  public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                    return (List) super.setPrettyPrint(prettyPrint);
                  }

                  @Override
                  public List setQuotaUser(java.lang.String quotaUser) {
                    return (List) super.setQuotaUser(quotaUser);
                  }

                  @Override
                  public List setUploadType(java.lang.String uploadType) {
                    return (List) super.setUploadType(uploadType);
                  }

                  @Override
                  public List setUploadProtocol(java.lang.String uploadProtocol) {
                    return (List) super.setUploadProtocol(uploadProtocol);
                  }

                  /** The name of the operation's parent resource. */
                  @com.google.api.client.util.Key
                  private java.lang.String name;

                  /** The name of the operation's parent resource.
                   */
                  public java.lang.String getName() {
                    return name;
                  }

                  /** The name of the operation's parent resource. */
                  public List setName(java.lang.String name) {
                    if (!getSuppressPatternChecks()) {
                      com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                          "Parameter name must conform to the pattern " +
                          "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+/timeSeries/[^/]+$");
                    }
                    this.name = name;
                    return this;
                  }

                  /** The standard list filter. */
                  @com.google.api.client.util.Key
                  private java.lang.String filter;

                  /** The standard list filter.
                   */
                  public java.lang.String getFilter() {
                    return filter;
                  }

                  /** The standard list filter. */
                  public List setFilter(java.lang.String filter) {
                    this.filter = filter;
                    return this;
                  }

                  /** The standard list page size. */
                  @com.google.api.client.util.Key
                  private java.lang.Integer pageSize;

                  /** The standard list page size.
                   */
                  public java.lang.Integer getPageSize() {
                    return pageSize;
                  }

                  /** The standard list page size. */
                  public List setPageSize(java.lang.Integer pageSize) {
                    this.pageSize = pageSize;
                    return this;
                  }

                  /** The standard list page token. */
                  @com.google.api.client.util.Key
                  private java.lang.String pageToken;

                  /** The standard list page token.
                   */
                  public java.lang.String getPageToken() {
                    return pageToken;
                  }

                  /** The standard list page token. */
                  public List setPageToken(java.lang.String pageToken) {
                    this.pageToken = pageToken;
                    return this;
                  }

                  @Override
                  public List set(String parameterName, Object value) {
                    return (List) super.set(parameterName, value);
                  }
                }
                /**
                 * Waits until the specified long-running operation is done or reaches at most a specified timeout,
                 * returning the latest state. If the operation is already done, the latest state is immediately
                 * returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC
                 * timeout is used. If the server does not support this method, it returns
                 * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
                 * the latest state before the specified timeout (including immediately), meaning even an immediate
                 * response is no guarantee that the operation is done.
                 *
                 * Create a request for the method "operations.wait".
                 *
                 * This request holds the parameters needed by the aiplatform server.  After setting any optional
                 * parameters, call the {@link Wait#execute()} method to invoke the remote operation.
                 *
                 * @param name The name of the operation resource to wait on.
                 * @return the request
                 */
                public Wait wait(java.lang.String name) throws java.io.IOException {
                  Wait result = new Wait(name);
                  initialize(result);
                  return result;
                }

                public class Wait extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

                  private static final String REST_PATH = "v1/{+name}:wait";

                  private final java.util.regex.Pattern NAME_PATTERN =
                      java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+/timeSeries/[^/]+/operations/[^/]+$");

                  /**
                   * Waits until the specified long-running operation is done or reaches at most a specified
                   * timeout, returning the latest state. If the operation is already done, the latest state is
                   * immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout,
                   * the HTTP/RPC timeout is used. If the server does not support this method, it returns
                   * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
                   * the latest state before the specified timeout (including immediately), meaning even an
                   * immediate response is no guarantee that the operation is done.
                   *
                   * Create a request for the method "operations.wait".
                   *
                   * This request holds the parameters needed by the the aiplatform server.  After setting any
                   * optional parameters, call the {@link Wait#execute()} method to invoke the remote operation. <p>
                   * {@link Wait#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
                   * must be called to initialize this instance immediately after invoking the constructor. </p>
                   *
                   * @param name The name of the operation resource to wait on.
                   * @since 1.13
                   */
                  protected Wait(java.lang.String name) {
                    super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
                    this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                    if (!getSuppressPatternChecks()) {
                      com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                          "Parameter name must conform to the pattern " +
                          "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+/timeSeries/[^/]+/operations/[^/]+$");
                    }
                  }

                  @Override
                  public Wait set$Xgafv(java.lang.String $Xgafv) {
                    return (Wait) super.set$Xgafv($Xgafv);
                  }

                  @Override
                  public Wait setAccessToken(java.lang.String accessToken) {
                    return (Wait) super.setAccessToken(accessToken);
                  }

                  @Override
                  public Wait setAlt(java.lang.String alt) {
                    return (Wait) super.setAlt(alt);
                  }

                  @Override
                  public Wait setCallback(java.lang.String callback) {
                    return (Wait) super.setCallback(callback);
                  }

                  @Override
                  public Wait setFields(java.lang.String fields) {
                    return (Wait) super.setFields(fields);
                  }

                  @Override
                  public Wait setKey(java.lang.String key) {
                    return (Wait) super.setKey(key);
                  }

                  @Override
                  public Wait setOauthToken(java.lang.String oauthToken) {
                    return (Wait) super.setOauthToken(oauthToken);
                  }

                  @Override
                  public Wait setPrettyPrint(java.lang.Boolean prettyPrint) {
                    return (Wait) super.setPrettyPrint(prettyPrint);
                  }

                  @Override
                  public Wait setQuotaUser(java.lang.String quotaUser) {
                    return (Wait) super.setQuotaUser(quotaUser);
                  }

                  @Override
                  public Wait setUploadType(java.lang.String uploadType) {
                    return (Wait) super.setUploadType(uploadType);
                  }

                  @Override
                  public Wait setUploadProtocol(java.lang.String uploadProtocol) {
                    return (Wait) super.setUploadProtocol(uploadProtocol);
                  }

                  /** The name of the operation resource to wait on. */
                  @com.google.api.client.util.Key
                  private java.lang.String name;

                  /** The name of the operation resource to wait on.
                   */
                  public java.lang.String getName() {
                    return name;
                  }

                  /** The name of the operation resource to wait on. */
                  public Wait setName(java.lang.String name) {
                    if (!getSuppressPatternChecks()) {
                      com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                          "Parameter name must conform to the pattern " +
                          "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+/timeSeries/[^/]+/operations/[^/]+$");
                    }
                    this.name = name;
                    return this;
                  }

                  /**
                   * The maximum duration to wait before timing out. If left blank, the wait will be
                   * at most the time permitted by the underlying HTTP/RPC protocol. If RPC context
                   * deadline is also specified, the shorter one will be used.
                   */
                  @com.google.api.client.util.Key
                  private String timeout;

                  /** The maximum duration to wait before timing out. If left blank, the wait will be at most the time
                 permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the
                 shorter one will be used.
                   */
                  public String getTimeout() {
                    return timeout;
                  }

                  /**
                   * The maximum duration to wait before timing out. If left blank, the wait will be
                   * at most the time permitted by the underlying HTTP/RPC protocol. If RPC context
                   * deadline is also specified, the shorter one will be used.
                   */
                  public Wait setTimeout(String timeout) {
                    this.timeout = timeout;
                    return this;
                  }

                  @Override
                  public Wait set(String parameterName, Object value) {
                    return (Wait) super.set(parameterName, value);
                  }
                }

              }
            }
          }
        }
        /**
         * An accessor for creating requests from the Operations collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Aiplatform aiplatform = new Aiplatform(...);}
         *   {@code Aiplatform.Operations.List request = aiplatform.operations().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Operations operations() {
          return new Operations();
        }

        /**
         * The "operations" collection of methods.
         */
        public class Operations {

          /**
           * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
           * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
           * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
           * methods to check whether the cancellation succeeded or whether the operation completed despite
           * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
           * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
           * `Code.CANCELLED`.
           *
           * Create a request for the method "operations.cancel".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource to be cancelled.
           * @return the request
           */
          public Cancel cancel(java.lang.String name) throws java.io.IOException {
            Cancel result = new Cancel(name);
            initialize(result);
            return result;
          }

          public class Cancel extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

            private static final String REST_PATH = "v1/{+name}:cancel";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/operations/[^/]+$");

            /**
             * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
             * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
             * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
             * methods to check whether the cancellation succeeded or whether the operation completed despite
             * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
             * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
             * `Code.CANCELLED`.
             *
             * Create a request for the method "operations.cancel".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
             * <p> {@link
             * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource to be cancelled.
             * @since 1.13
             */
            protected Cancel(java.lang.String name) {
              super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public Cancel set$Xgafv(java.lang.String $Xgafv) {
              return (Cancel) super.set$Xgafv($Xgafv);
            }

            @Override
            public Cancel setAccessToken(java.lang.String accessToken) {
              return (Cancel) super.setAccessToken(accessToken);
            }

            @Override
            public Cancel setAlt(java.lang.String alt) {
              return (Cancel) super.setAlt(alt);
            }

            @Override
            public Cancel setCallback(java.lang.String callback) {
              return (Cancel) super.setCallback(callback);
            }

            @Override
            public Cancel setFields(java.lang.String fields) {
              return (Cancel) super.setFields(fields);
            }

            @Override
            public Cancel setKey(java.lang.String key) {
              return (Cancel) super.setKey(key);
            }

            @Override
            public Cancel setOauthToken(java.lang.String oauthToken) {
              return (Cancel) super.setOauthToken(oauthToken);
            }

            @Override
            public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Cancel) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Cancel setQuotaUser(java.lang.String quotaUser) {
              return (Cancel) super.setQuotaUser(quotaUser);
            }

            @Override
            public Cancel setUploadType(java.lang.String uploadType) {
              return (Cancel) super.setUploadType(uploadType);
            }

            @Override
            public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
              return (Cancel) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource to be cancelled. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource to be cancelled.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource to be cancelled. */
            public Cancel setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Cancel set(String parameterName, Object value) {
              return (Cancel) super.set(parameterName, value);
            }
          }
          /**
           * Deletes a long-running operation. This method indicates that the client is no longer interested
           * in the operation result. It does not cancel the operation. If the server doesn't support this
           * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.delete".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource to be deleted.
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/operations/[^/]+$");

            /**
             * Deletes a long-running operation. This method indicates that the client is no longer interested
             * in the operation result. It does not cancel the operation. If the server doesn't support this
             * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.delete".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource to be deleted.
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource to be deleted. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource to be deleted.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource to be deleted. */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Gets the latest state of a long-running operation. Clients can use this method to poll the
           * operation result at intervals as recommended by the API service.
           *
           * Create a request for the method "operations.get".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource.
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/operations/[^/]+$");

            /**
             * Gets the latest state of a long-running operation. Clients can use this method to poll the
             * operation result at intervals as recommended by the API service.
             *
             * Create a request for the method "operations.get".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource.
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource. */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Lists operations that match the specified filter in the request. If the server doesn't support
           * this method, it returns `UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.list".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation's parent resource.
           * @return the request
           */
          public List list(java.lang.String name) throws java.io.IOException {
            List result = new List(name);
            initialize(result);
            return result;
          }

          public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse> {

            private static final String REST_PATH = "v1/{+name}/operations";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+$");

            /**
             * Lists operations that match the specified filter in the request. If the server doesn't support
             * this method, it returns `UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.list".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation's parent resource.
             * @since 1.13
             */
            protected List(java.lang.String name) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation's parent resource. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation's parent resource.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation's parent resource. */
            public List setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /** The standard list filter. */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** The standard list filter.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /** The standard list filter. */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /** The standard list page size. */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** The standard list page size.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /** The standard list page size. */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** The standard list page token. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** The standard list page token.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** The standard list page token. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Waits until the specified long-running operation is done or reaches at most a specified timeout,
           * returning the latest state. If the operation is already done, the latest state is immediately
           * returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC
           * timeout is used. If the server does not support this method, it returns
           * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
           * the latest state before the specified timeout (including immediately), meaning even an immediate
           * response is no guarantee that the operation is done.
           *
           * Create a request for the method "operations.wait".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Wait#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource to wait on.
           * @return the request
           */
          public Wait wait(java.lang.String name) throws java.io.IOException {
            Wait result = new Wait(name);
            initialize(result);
            return result;
          }

          public class Wait extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+name}:wait";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/operations/[^/]+$");

            /**
             * Waits until the specified long-running operation is done or reaches at most a specified
             * timeout, returning the latest state. If the operation is already done, the latest state is
             * immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout,
             * the HTTP/RPC timeout is used. If the server does not support this method, it returns
             * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
             * the latest state before the specified timeout (including immediately), meaning even an
             * immediate response is no guarantee that the operation is done.
             *
             * Create a request for the method "operations.wait".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Wait#execute()} method to invoke the remote operation. <p>
             * {@link Wait#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource to wait on.
             * @since 1.13
             */
            protected Wait(java.lang.String name) {
              super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public Wait set$Xgafv(java.lang.String $Xgafv) {
              return (Wait) super.set$Xgafv($Xgafv);
            }

            @Override
            public Wait setAccessToken(java.lang.String accessToken) {
              return (Wait) super.setAccessToken(accessToken);
            }

            @Override
            public Wait setAlt(java.lang.String alt) {
              return (Wait) super.setAlt(alt);
            }

            @Override
            public Wait setCallback(java.lang.String callback) {
              return (Wait) super.setCallback(callback);
            }

            @Override
            public Wait setFields(java.lang.String fields) {
              return (Wait) super.setFields(fields);
            }

            @Override
            public Wait setKey(java.lang.String key) {
              return (Wait) super.setKey(key);
            }

            @Override
            public Wait setOauthToken(java.lang.String oauthToken) {
              return (Wait) super.setOauthToken(oauthToken);
            }

            @Override
            public Wait setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Wait) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Wait setQuotaUser(java.lang.String quotaUser) {
              return (Wait) super.setQuotaUser(quotaUser);
            }

            @Override
            public Wait setUploadType(java.lang.String uploadType) {
              return (Wait) super.setUploadType(uploadType);
            }

            @Override
            public Wait setUploadProtocol(java.lang.String uploadProtocol) {
              return (Wait) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource to wait on. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource to wait on.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource to wait on. */
            public Wait setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * The maximum duration to wait before timing out. If left blank, the wait will be at
             * most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline
             * is also specified, the shorter one will be used.
             */
            @com.google.api.client.util.Key
            private String timeout;

            /** The maximum duration to wait before timing out. If left blank, the wait will be at most the time
           permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the
           shorter one will be used.
             */
            public String getTimeout() {
              return timeout;
            }

            /**
             * The maximum duration to wait before timing out. If left blank, the wait will be at
             * most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline
             * is also specified, the shorter one will be used.
             */
            public Wait setTimeout(String timeout) {
              this.timeout = timeout;
              return this;
            }

            @Override
            public Wait set(String parameterName, Object value) {
              return (Wait) super.set(parameterName, value);
            }
          }

        }
      }
      /**
       * An accessor for creating requests from the TrainingPipelines collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Aiplatform aiplatform = new Aiplatform(...);}
       *   {@code Aiplatform.TrainingPipelines.List request = aiplatform.trainingPipelines().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public TrainingPipelines trainingPipelines() {
        return new TrainingPipelines();
      }

      /**
       * The "trainingPipelines" collection of methods.
       */
      public class TrainingPipelines {

        /**
         * Cancels a TrainingPipeline. Starts asynchronous cancellation on the TrainingPipeline. The server
         * makes a best effort to cancel the pipeline, but success is not guaranteed. Clients can use
         * PipelineService.GetTrainingPipeline or other methods to check whether the cancellation succeeded
         * or whether the pipeline completed despite cancellation. On successful cancellation, the
         * TrainingPipeline is not deleted; instead it becomes a pipeline with a TrainingPipeline.error
         * value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`, and
         * TrainingPipeline.state is set to `CANCELLED`.
         *
         * Create a request for the method "trainingPipelines.cancel".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the TrainingPipeline to cancel. Format:
         *        `projects/{project}/locations/{location}/trainingPipelines/{training_pipeline}`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CancelTrainingPipelineRequest}
         * @return the request
         */
        public Cancel cancel(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CancelTrainingPipelineRequest content) throws java.io.IOException {
          Cancel result = new Cancel(name, content);
          initialize(result);
          return result;
        }

        public class Cancel extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

          private static final String REST_PATH = "v1/{+name}:cancel";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/trainingPipelines/[^/]+$");

          /**
           * Cancels a TrainingPipeline. Starts asynchronous cancellation on the TrainingPipeline. The
           * server makes a best effort to cancel the pipeline, but success is not guaranteed. Clients can
           * use PipelineService.GetTrainingPipeline or other methods to check whether the cancellation
           * succeeded or whether the pipeline completed despite cancellation. On successful cancellation,
           * the TrainingPipeline is not deleted; instead it becomes a pipeline with a
           * TrainingPipeline.error value with a google.rpc.Status.code of 1, corresponding to
           * `Code.CANCELLED`, and TrainingPipeline.state is set to `CANCELLED`.
           *
           * Create a request for the method "trainingPipelines.cancel".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
           * <p> {@link
           * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the TrainingPipeline to cancel. Format:
         *        `projects/{project}/locations/{location}/trainingPipelines/{training_pipeline}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CancelTrainingPipelineRequest}
           * @since 1.13
           */
          protected Cancel(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CancelTrainingPipelineRequest content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/trainingPipelines/[^/]+$");
            }
          }

          @Override
          public Cancel set$Xgafv(java.lang.String $Xgafv) {
            return (Cancel) super.set$Xgafv($Xgafv);
          }

          @Override
          public Cancel setAccessToken(java.lang.String accessToken) {
            return (Cancel) super.setAccessToken(accessToken);
          }

          @Override
          public Cancel setAlt(java.lang.String alt) {
            return (Cancel) super.setAlt(alt);
          }

          @Override
          public Cancel setCallback(java.lang.String callback) {
            return (Cancel) super.setCallback(callback);
          }

          @Override
          public Cancel setFields(java.lang.String fields) {
            return (Cancel) super.setFields(fields);
          }

          @Override
          public Cancel setKey(java.lang.String key) {
            return (Cancel) super.setKey(key);
          }

          @Override
          public Cancel setOauthToken(java.lang.String oauthToken) {
            return (Cancel) super.setOauthToken(oauthToken);
          }

          @Override
          public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Cancel) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Cancel setQuotaUser(java.lang.String quotaUser) {
            return (Cancel) super.setQuotaUser(quotaUser);
          }

          @Override
          public Cancel setUploadType(java.lang.String uploadType) {
            return (Cancel) super.setUploadType(uploadType);
          }

          @Override
          public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
            return (Cancel) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the TrainingPipeline to cancel. Format:
           * `projects/{project}/locations/{location}/trainingPipelines/{training_pipeline}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the TrainingPipeline to cancel. Format:
         `projects/{project}/locations/{location}/trainingPipelines/{training_pipeline}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the TrainingPipeline to cancel. Format:
           * `projects/{project}/locations/{location}/trainingPipelines/{training_pipeline}`
           */
          public Cancel setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/trainingPipelines/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Cancel set(String parameterName, Object value) {
            return (Cancel) super.set(parameterName, value);
          }
        }
        /**
         * Creates a TrainingPipeline. A created TrainingPipeline right away will be attempted to be run.
         *
         * Create a request for the method "trainingPipelines.create".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The resource name of the Location to create the TrainingPipeline in. Format:
         *        `projects/{project}/locations/{location}`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1TrainingPipeline}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1TrainingPipeline content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1TrainingPipeline> {

          private static final String REST_PATH = "v1/{+parent}/trainingPipelines";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Creates a TrainingPipeline. A created TrainingPipeline right away will be attempted to be run.
           *
           * Create a request for the method "trainingPipelines.create".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The resource name of the Location to create the TrainingPipeline in. Format:
         *        `projects/{project}/locations/{location}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1TrainingPipeline}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1TrainingPipeline content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1TrainingPipeline.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the Location to create the TrainingPipeline in. Format:
           * `projects/{project}/locations/{location}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The resource name of the Location to create the TrainingPipeline in. Format:
         `projects/{project}/locations/{location}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The resource name of the Location to create the TrainingPipeline in. Format:
           * `projects/{project}/locations/{location}`
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a TrainingPipeline.
         *
         * Create a request for the method "trainingPipelines.delete".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the TrainingPipeline resource to be deleted. Format:
         *        `projects/{project}/locations/{location}/trainingPipelines/{training_pipeline}`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/trainingPipelines/[^/]+$");

          /**
           * Deletes a TrainingPipeline.
           *
           * Create a request for the method "trainingPipelines.delete".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the TrainingPipeline resource to be deleted. Format:
         *        `projects/{project}/locations/{location}/trainingPipelines/{training_pipeline}`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/trainingPipelines/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the TrainingPipeline resource to be deleted. Format:
           * `projects/{project}/locations/{location}/trainingPipelines/{training_pipeline}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the TrainingPipeline resource to be deleted. Format:
         `projects/{project}/locations/{location}/trainingPipelines/{training_pipeline}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the TrainingPipeline resource to be deleted. Format:
           * `projects/{project}/locations/{location}/trainingPipelines/{training_pipeline}`
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/trainingPipelines/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets a TrainingPipeline.
         *
         * Create a request for the method "trainingPipelines.get".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the TrainingPipeline resource. Format:
         *        `projects/{project}/locations/{location}/trainingPipelines/{training_pipeline}`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1TrainingPipeline> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/trainingPipelines/[^/]+$");

          /**
           * Gets a TrainingPipeline.
           *
           * Create a request for the method "trainingPipelines.get".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the TrainingPipeline resource. Format:
         *        `projects/{project}/locations/{location}/trainingPipelines/{training_pipeline}`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1TrainingPipeline.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/trainingPipelines/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the TrainingPipeline resource. Format:
           * `projects/{project}/locations/{location}/trainingPipelines/{training_pipeline}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the TrainingPipeline resource. Format:
         `projects/{project}/locations/{location}/trainingPipelines/{training_pipeline}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the TrainingPipeline resource. Format:
           * `projects/{project}/locations/{location}/trainingPipelines/{training_pipeline}`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/trainingPipelines/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists TrainingPipelines in a Location.
         *
         * Create a request for the method "trainingPipelines.list".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The resource name of the Location to list the TrainingPipelines from. Format:
         *        `projects/{project}/locations/{location}`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListTrainingPipelinesResponse> {

          private static final String REST_PATH = "v1/{+parent}/trainingPipelines";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists TrainingPipelines in a Location.
           *
           * Create a request for the method "trainingPipelines.list".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The resource name of the Location to list the TrainingPipelines from. Format:
         *        `projects/{project}/locations/{location}`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListTrainingPipelinesResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the Location to list the TrainingPipelines from. Format:
           * `projects/{project}/locations/{location}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The resource name of the Location to list the TrainingPipelines from. Format:
         `projects/{project}/locations/{location}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The resource name of the Location to list the TrainingPipelines from. Format:
           * `projects/{project}/locations/{location}`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * The standard list filter. Supported fields: * `display_name` supports `=`, `!=`
           * comparisons, and `:` wildcard. * `state` supports `=`, `!=` comparisons. *
           * `training_task_definition` `=`, `!=` comparisons, and `:` wildcard. * `create_time`
           * supports `=`, `!=`,`<`, `<=`,`>`, `>=` comparisons. `create_time` must be in RFC 3339
           * format. * `labels` supports general map functions that is: `labels.key=value` -
           * key:value equality `labels.key:* - key existence Some examples of using the filter are:
           * * `state="PIPELINE_STATE_SUCCEEDED" AND display_name:"my_pipeline_*"` *
           * `state!="PIPELINE_STATE_FAILED" OR display_name="my_pipeline"` * `NOT
           * display_name="my_pipeline"` * `create_time>"2021-05-18T00:00:00Z"` *
           * `training_task_definition:"*automl_text_classification*"`
           */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** The standard list filter. Supported fields: * `display_name` supports `=`, `!=` comparisons, and
         `:` wildcard. * `state` supports `=`, `!=` comparisons. * `training_task_definition` `=`, `!=`
         comparisons, and `:` wildcard. * `create_time` supports `=`, `!=`,`<`, `<=`,`>`, `>=` comparisons.
         `create_time` must be in RFC 3339 format. * `labels` supports general map functions that is:
         `labels.key=value` - key:value equality `labels.key:* - key existence Some examples of using the
         filter are: * `state="PIPELINE_STATE_SUCCEEDED" AND display_name:"my_pipeline_*"` *
         `state!="PIPELINE_STATE_FAILED" OR display_name="my_pipeline"` * `NOT display_name="my_pipeline"` *
         `create_time>"2021-05-18T00:00:00Z"` * `training_task_definition:"*automl_text_classification*"`
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /**
           * The standard list filter. Supported fields: * `display_name` supports `=`, `!=`
           * comparisons, and `:` wildcard. * `state` supports `=`, `!=` comparisons. *
           * `training_task_definition` `=`, `!=` comparisons, and `:` wildcard. * `create_time`
           * supports `=`, `!=`,`<`, `<=`,`>`, `>=` comparisons. `create_time` must be in RFC 3339
           * format. * `labels` supports general map functions that is: `labels.key=value` -
           * key:value equality `labels.key:* - key existence Some examples of using the filter are:
           * * `state="PIPELINE_STATE_SUCCEEDED" AND display_name:"my_pipeline_*"` *
           * `state!="PIPELINE_STATE_FAILED" OR display_name="my_pipeline"` * `NOT
           * display_name="my_pipeline"` * `create_time>"2021-05-18T00:00:00Z"` *
           * `training_task_definition:"*automl_text_classification*"`
           */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /** The standard list page size. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The standard list page size.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** The standard list page size. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * The standard list page token. Typically obtained via
           * ListTrainingPipelinesResponse.next_page_token of the previous
           * PipelineService.ListTrainingPipelines call.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The standard list page token. Typically obtained via ListTrainingPipelinesResponse.next_page_token
         of the previous PipelineService.ListTrainingPipelines call.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * The standard list page token. Typically obtained via
           * ListTrainingPipelinesResponse.next_page_token of the previous
           * PipelineService.ListTrainingPipelines call.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          /** Mask specifying which fields to read. */
          @com.google.api.client.util.Key
          private String readMask;

          /** Mask specifying which fields to read.
           */
          public String getReadMask() {
            return readMask;
          }

          /** Mask specifying which fields to read. */
          public List setReadMask(String readMask) {
            this.readMask = readMask;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the Operations collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Aiplatform aiplatform = new Aiplatform(...);}
         *   {@code Aiplatform.Operations.List request = aiplatform.operations().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Operations operations() {
          return new Operations();
        }

        /**
         * The "operations" collection of methods.
         */
        public class Operations {

          /**
           * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
           * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
           * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
           * methods to check whether the cancellation succeeded or whether the operation completed despite
           * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
           * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
           * `Code.CANCELLED`.
           *
           * Create a request for the method "operations.cancel".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource to be cancelled.
           * @return the request
           */
          public Cancel cancel(java.lang.String name) throws java.io.IOException {
            Cancel result = new Cancel(name);
            initialize(result);
            return result;
          }

          public class Cancel extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

            private static final String REST_PATH = "v1/{+name}:cancel";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/trainingPipelines/[^/]+/operations/[^/]+$");

            /**
             * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
             * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
             * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
             * methods to check whether the cancellation succeeded or whether the operation completed despite
             * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
             * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
             * `Code.CANCELLED`.
             *
             * Create a request for the method "operations.cancel".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
             * <p> {@link
             * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource to be cancelled.
             * @since 1.13
             */
            protected Cancel(java.lang.String name) {
              super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/trainingPipelines/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public Cancel set$Xgafv(java.lang.String $Xgafv) {
              return (Cancel) super.set$Xgafv($Xgafv);
            }

            @Override
            public Cancel setAccessToken(java.lang.String accessToken) {
              return (Cancel) super.setAccessToken(accessToken);
            }

            @Override
            public Cancel setAlt(java.lang.String alt) {
              return (Cancel) super.setAlt(alt);
            }

            @Override
            public Cancel setCallback(java.lang.String callback) {
              return (Cancel) super.setCallback(callback);
            }

            @Override
            public Cancel setFields(java.lang.String fields) {
              return (Cancel) super.setFields(fields);
            }

            @Override
            public Cancel setKey(java.lang.String key) {
              return (Cancel) super.setKey(key);
            }

            @Override
            public Cancel setOauthToken(java.lang.String oauthToken) {
              return (Cancel) super.setOauthToken(oauthToken);
            }

            @Override
            public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Cancel) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Cancel setQuotaUser(java.lang.String quotaUser) {
              return (Cancel) super.setQuotaUser(quotaUser);
            }

            @Override
            public Cancel setUploadType(java.lang.String uploadType) {
              return (Cancel) super.setUploadType(uploadType);
            }

            @Override
            public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
              return (Cancel) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource to be cancelled. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource to be cancelled.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource to be cancelled. */
            public Cancel setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/trainingPipelines/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Cancel set(String parameterName, Object value) {
              return (Cancel) super.set(parameterName, value);
            }
          }
          /**
           * Deletes a long-running operation. This method indicates that the client is no longer interested
           * in the operation result. It does not cancel the operation. If the server doesn't support this
           * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.delete".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource to be deleted.
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/trainingPipelines/[^/]+/operations/[^/]+$");

            /**
             * Deletes a long-running operation. This method indicates that the client is no longer interested
             * in the operation result. It does not cancel the operation. If the server doesn't support this
             * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.delete".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource to be deleted.
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(Aiplatform.this, "DELETE", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/trainingPipelines/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource to be deleted. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource to be deleted.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource to be deleted. */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/trainingPipelines/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Gets the latest state of a long-running operation. Clients can use this method to poll the
           * operation result at intervals as recommended by the API service.
           *
           * Create a request for the method "operations.get".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource.
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/trainingPipelines/[^/]+/operations/[^/]+$");

            /**
             * Gets the latest state of a long-running operation. Clients can use this method to poll the
             * operation result at intervals as recommended by the API service.
             *
             * Create a request for the method "operations.get".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource.
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/trainingPipelines/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource. */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/trainingPipelines/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Lists operations that match the specified filter in the request. If the server doesn't support
           * this method, it returns `UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.list".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation's parent resource.
           * @return the request
           */
          public List list(java.lang.String name) throws java.io.IOException {
            List result = new List(name);
            initialize(result);
            return result;
          }

          public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse> {

            private static final String REST_PATH = "v1/{+name}/operations";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/trainingPipelines/[^/]+$");

            /**
             * Lists operations that match the specified filter in the request. If the server doesn't support
             * this method, it returns `UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.list".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation's parent resource.
             * @since 1.13
             */
            protected List(java.lang.String name) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/trainingPipelines/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation's parent resource. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation's parent resource.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation's parent resource. */
            public List setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/trainingPipelines/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /** The standard list filter. */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** The standard list filter.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /** The standard list filter. */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /** The standard list page size. */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** The standard list page size.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /** The standard list page size. */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** The standard list page token. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** The standard list page token.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** The standard list page token. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Waits until the specified long-running operation is done or reaches at most a specified timeout,
           * returning the latest state. If the operation is already done, the latest state is immediately
           * returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC
           * timeout is used. If the server does not support this method, it returns
           * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
           * the latest state before the specified timeout (including immediately), meaning even an immediate
           * response is no guarantee that the operation is done.
           *
           * Create a request for the method "operations.wait".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Wait#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource to wait on.
           * @return the request
           */
          public Wait wait(java.lang.String name) throws java.io.IOException {
            Wait result = new Wait(name);
            initialize(result);
            return result;
          }

          public class Wait extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+name}:wait";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/trainingPipelines/[^/]+/operations/[^/]+$");

            /**
             * Waits until the specified long-running operation is done or reaches at most a specified
             * timeout, returning the latest state. If the operation is already done, the latest state is
             * immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout,
             * the HTTP/RPC timeout is used. If the server does not support this method, it returns
             * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
             * the latest state before the specified timeout (including immediately), meaning even an
             * immediate response is no guarantee that the operation is done.
             *
             * Create a request for the method "operations.wait".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Wait#execute()} method to invoke the remote operation. <p>
             * {@link Wait#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource to wait on.
             * @since 1.13
             */
            protected Wait(java.lang.String name) {
              super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/trainingPipelines/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public Wait set$Xgafv(java.lang.String $Xgafv) {
              return (Wait) super.set$Xgafv($Xgafv);
            }

            @Override
            public Wait setAccessToken(java.lang.String accessToken) {
              return (Wait) super.setAccessToken(accessToken);
            }

            @Override
            public Wait setAlt(java.lang.String alt) {
              return (Wait) super.setAlt(alt);
            }

            @Override
            public Wait setCallback(java.lang.String callback) {
              return (Wait) super.setCallback(callback);
            }

            @Override
            public Wait setFields(java.lang.String fields) {
              return (Wait) super.setFields(fields);
            }

            @Override
            public Wait setKey(java.lang.String key) {
              return (Wait) super.setKey(key);
            }

            @Override
            public Wait setOauthToken(java.lang.String oauthToken) {
              return (Wait) super.setOauthToken(oauthToken);
            }

            @Override
            public Wait setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Wait) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Wait setQuotaUser(java.lang.String quotaUser) {
              return (Wait) super.setQuotaUser(quotaUser);
            }

            @Override
            public Wait setUploadType(java.lang.String uploadType) {
              return (Wait) super.setUploadType(uploadType);
            }

            @Override
            public Wait setUploadProtocol(java.lang.String uploadProtocol) {
              return (Wait) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource to wait on. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource to wait on.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource to wait on. */
            public Wait setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/trainingPipelines/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * The maximum duration to wait before timing out. If left blank, the wait will be at
             * most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline
             * is also specified, the shorter one will be used.
             */
            @com.google.api.client.util.Key
            private String timeout;

            /** The maximum duration to wait before timing out. If left blank, the wait will be at most the time
           permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the
           shorter one will be used.
             */
            public String getTimeout() {
              return timeout;
            }

            /**
             * The maximum duration to wait before timing out. If left blank, the wait will be at
             * most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline
             * is also specified, the shorter one will be used.
             */
            public Wait setTimeout(String timeout) {
              this.timeout = timeout;
              return this;
            }

            @Override
            public Wait set(String parameterName, Object value) {
              return (Wait) super.set(parameterName, value);
            }
          }

        }
      }
      /**
       * An accessor for creating requests from the TuningJobs collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Aiplatform aiplatform = new Aiplatform(...);}
       *   {@code Aiplatform.TuningJobs.List request = aiplatform.tuningJobs().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public TuningJobs tuningJobs() {
        return new TuningJobs();
      }

      /**
       * The "tuningJobs" collection of methods.
       */
      public class TuningJobs {

        /**
         * Cancels a TuningJob. Starts asynchronous cancellation on the TuningJob. The server makes a best
         * effort to cancel the job, but success is not guaranteed. Clients can use
         * GenAiTuningService.GetTuningJob or other methods to check whether the cancellation succeeded or
         * whether the job completed despite cancellation. On successful cancellation, the TuningJob is not
         * deleted; instead it becomes a job with a TuningJob.error value with a google.rpc.Status.code of
         * 1, corresponding to `Code.CANCELLED`, and TuningJob.state is set to `CANCELLED`.
         *
         * Create a request for the method "tuningJobs.cancel".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the TuningJob to cancel. Format:
         *        `projects/{project}/locations/{location}/tuningJobs/{tuning_job}`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CancelTuningJobRequest}
         * @return the request
         */
        public Cancel cancel(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CancelTuningJobRequest content) throws java.io.IOException {
          Cancel result = new Cancel(name, content);
          initialize(result);
          return result;
        }

        public class Cancel extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

          private static final String REST_PATH = "v1/{+name}:cancel";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/tuningJobs/[^/]+$");

          /**
           * Cancels a TuningJob. Starts asynchronous cancellation on the TuningJob. The server makes a best
           * effort to cancel the job, but success is not guaranteed. Clients can use
           * GenAiTuningService.GetTuningJob or other methods to check whether the cancellation succeeded or
           * whether the job completed despite cancellation. On successful cancellation, the TuningJob is
           * not deleted; instead it becomes a job with a TuningJob.error value with a
           * google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`, and TuningJob.state is set to
           * `CANCELLED`.
           *
           * Create a request for the method "tuningJobs.cancel".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
           * <p> {@link
           * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the TuningJob to cancel. Format:
         *        `projects/{project}/locations/{location}/tuningJobs/{tuning_job}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CancelTuningJobRequest}
           * @since 1.13
           */
          protected Cancel(java.lang.String name, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CancelTuningJobRequest content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/tuningJobs/[^/]+$");
            }
          }

          @Override
          public Cancel set$Xgafv(java.lang.String $Xgafv) {
            return (Cancel) super.set$Xgafv($Xgafv);
          }

          @Override
          public Cancel setAccessToken(java.lang.String accessToken) {
            return (Cancel) super.setAccessToken(accessToken);
          }

          @Override
          public Cancel setAlt(java.lang.String alt) {
            return (Cancel) super.setAlt(alt);
          }

          @Override
          public Cancel setCallback(java.lang.String callback) {
            return (Cancel) super.setCallback(callback);
          }

          @Override
          public Cancel setFields(java.lang.String fields) {
            return (Cancel) super.setFields(fields);
          }

          @Override
          public Cancel setKey(java.lang.String key) {
            return (Cancel) super.setKey(key);
          }

          @Override
          public Cancel setOauthToken(java.lang.String oauthToken) {
            return (Cancel) super.setOauthToken(oauthToken);
          }

          @Override
          public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Cancel) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Cancel setQuotaUser(java.lang.String quotaUser) {
            return (Cancel) super.setQuotaUser(quotaUser);
          }

          @Override
          public Cancel setUploadType(java.lang.String uploadType) {
            return (Cancel) super.setUploadType(uploadType);
          }

          @Override
          public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
            return (Cancel) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the TuningJob to cancel. Format:
           * `projects/{project}/locations/{location}/tuningJobs/{tuning_job}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the TuningJob to cancel. Format:
         `projects/{project}/locations/{location}/tuningJobs/{tuning_job}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the TuningJob to cancel. Format:
           * `projects/{project}/locations/{location}/tuningJobs/{tuning_job}`
           */
          public Cancel setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/tuningJobs/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Cancel set(String parameterName, Object value) {
            return (Cancel) super.set(parameterName, value);
          }
        }
        /**
         * Creates a TuningJob. A created TuningJob right away will be attempted to be run.
         *
         * Create a request for the method "tuningJobs.create".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The resource name of the Location to create the TuningJob in. Format:
         *        `projects/{project}/locations/{location}`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1TuningJob}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1TuningJob content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1TuningJob> {

          private static final String REST_PATH = "v1/{+parent}/tuningJobs";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Creates a TuningJob. A created TuningJob right away will be attempted to be run.
           *
           * Create a request for the method "tuningJobs.create".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The resource name of the Location to create the TuningJob in. Format:
         *        `projects/{project}/locations/{location}`
           * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1TuningJob}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1TuningJob content) {
            super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1TuningJob.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the Location to create the TuningJob in. Format:
           * `projects/{project}/locations/{location}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The resource name of the Location to create the TuningJob in. Format:
         `projects/{project}/locations/{location}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The resource name of the Location to create the TuningJob in. Format:
           * `projects/{project}/locations/{location}`
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Gets a TuningJob.
         *
         * Create a request for the method "tuningJobs.get".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the TuningJob resource. Format:
         *        `projects/{project}/locations/{location}/tuningJobs/{tuning_job}`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1TuningJob> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/tuningJobs/[^/]+$");

          /**
           * Gets a TuningJob.
           *
           * Create a request for the method "tuningJobs.get".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the TuningJob resource. Format:
         *        `projects/{project}/locations/{location}/tuningJobs/{tuning_job}`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1TuningJob.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/tuningJobs/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the TuningJob resource. Format:
           * `projects/{project}/locations/{location}/tuningJobs/{tuning_job}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the TuningJob resource. Format:
         `projects/{project}/locations/{location}/tuningJobs/{tuning_job}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the TuningJob resource. Format:
           * `projects/{project}/locations/{location}/tuningJobs/{tuning_job}`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/tuningJobs/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists TuningJobs in a Location.
         *
         * Create a request for the method "tuningJobs.list".
         *
         * This request holds the parameters needed by the aiplatform server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The resource name of the Location to list the TuningJobs from. Format:
         *        `projects/{project}/locations/{location}`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListTuningJobsResponse> {

          private static final String REST_PATH = "v1/{+parent}/tuningJobs";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists TuningJobs in a Location.
           *
           * Create a request for the method "tuningJobs.list".
           *
           * This request holds the parameters needed by the the aiplatform server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The resource name of the Location to list the TuningJobs from. Format:
         *        `projects/{project}/locations/{location}`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ListTuningJobsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the Location to list the TuningJobs from. Format:
           * `projects/{project}/locations/{location}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The resource name of the Location to list the TuningJobs from. Format:
         `projects/{project}/locations/{location}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The resource name of the Location to list the TuningJobs from. Format:
           * `projects/{project}/locations/{location}`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** Optional. The standard list filter. */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** Optional. The standard list filter.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /** Optional. The standard list filter. */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /** Optional. The standard list page size. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Optional. The standard list page size.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** Optional. The standard list page size. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * Optional. The standard list page token. Typically obtained via
           * ListTuningJob.next_page_token of the previous GenAiTuningService.ListTuningJob][] call.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Optional. The standard list page token. Typically obtained via ListTuningJob.next_page_token of the
         previous GenAiTuningService.ListTuningJob][] call.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * Optional. The standard list page token. Typically obtained via
           * ListTuningJob.next_page_token of the previous GenAiTuningService.ListTuningJob][] call.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the Operations collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Aiplatform aiplatform = new Aiplatform(...);}
         *   {@code Aiplatform.Operations.List request = aiplatform.operations().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Operations operations() {
          return new Operations();
        }

        /**
         * The "operations" collection of methods.
         */
        public class Operations {

          /**
           * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
           * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
           * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
           * methods to check whether the cancellation succeeded or whether the operation completed despite
           * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
           * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
           * `Code.CANCELLED`.
           *
           * Create a request for the method "operations.cancel".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource to be cancelled.
           * @return the request
           */
          public Cancel cancel(java.lang.String name) throws java.io.IOException {
            Cancel result = new Cancel(name);
            initialize(result);
            return result;
          }

          public class Cancel extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty> {

            private static final String REST_PATH = "v1/{+name}:cancel";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/tuningJobs/[^/]+/operations/[^/]+$");

            /**
             * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
             * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
             * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
             * methods to check whether the cancellation succeeded or whether the operation completed despite
             * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
             * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
             * `Code.CANCELLED`.
             *
             * Create a request for the method "operations.cancel".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
             * <p> {@link
             * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource to be cancelled.
             * @since 1.13
             */
            protected Cancel(java.lang.String name) {
              super(Aiplatform.this, "POST", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleProtobufEmpty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/tuningJobs/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public Cancel set$Xgafv(java.lang.String $Xgafv) {
              return (Cancel) super.set$Xgafv($Xgafv);
            }

            @Override
            public Cancel setAccessToken(java.lang.String accessToken) {
              return (Cancel) super.setAccessToken(accessToken);
            }

            @Override
            public Cancel setAlt(java.lang.String alt) {
              return (Cancel) super.setAlt(alt);
            }

            @Override
            public Cancel setCallback(java.lang.String callback) {
              return (Cancel) super.setCallback(callback);
            }

            @Override
            public Cancel setFields(java.lang.String fields) {
              return (Cancel) super.setFields(fields);
            }

            @Override
            public Cancel setKey(java.lang.String key) {
              return (Cancel) super.setKey(key);
            }

            @Override
            public Cancel setOauthToken(java.lang.String oauthToken) {
              return (Cancel) super.setOauthToken(oauthToken);
            }

            @Override
            public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Cancel) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Cancel setQuotaUser(java.lang.String quotaUser) {
              return (Cancel) super.setQuotaUser(quotaUser);
            }

            @Override
            public Cancel setUploadType(java.lang.String uploadType) {
              return (Cancel) super.setUploadType(uploadType);
            }

            @Override
            public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
              return (Cancel) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource to be cancelled. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource to be cancelled.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource to be cancelled. */
            public Cancel setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/tuningJobs/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Cancel set(String parameterName, Object value) {
              return (Cancel) super.set(parameterName, value);
            }
          }
          /**
           * Gets the latest state of a long-running operation. Clients can use this method to poll the
           * operation result at intervals as recommended by the API service.
           *
           * Create a request for the method "operations.get".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource.
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/tuningJobs/[^/]+/operations/[^/]+$");

            /**
             * Gets the latest state of a long-running operation. Clients can use this method to poll the
             * operation result at intervals as recommended by the API service.
             *
             * Create a request for the method "operations.get".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource.
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/tuningJobs/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource. */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/tuningJobs/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Lists operations that match the specified filter in the request. If the server doesn't support
           * this method, it returns `UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.list".
           *
           * This request holds the parameters needed by the aiplatform server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation's parent resource.
           * @return the request
           */
          public List list(java.lang.String name) throws java.io.IOException {
            List result = new List(name);
            initialize(result);
            return result;
          }

          public class List extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse> {

            private static final String REST_PATH = "v1/{+name}/operations";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/tuningJobs/[^/]+$");

            /**
             * Lists operations that match the specified filter in the request. If the server doesn't support
             * this method, it returns `UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.list".
             *
             * This request holds the parameters needed by the the aiplatform server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation's parent resource.
             * @since 1.13
             */
            protected List(java.lang.String name) {
              super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleLongrunningListOperationsResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/tuningJobs/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation's parent resource. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation's parent resource.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation's parent resource. */
            public List setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/tuningJobs/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /** The standard list filter. */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** The standard list filter.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /** The standard list filter. */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /** The standard list page size. */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** The standard list page size.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /** The standard list page size. */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** The standard list page token. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** The standard list page token.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** The standard list page token. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }

        }
      }
    }
  }

  /**
   * An accessor for creating requests from the Publishers collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Aiplatform aiplatform = new Aiplatform(...);}
   *   {@code Aiplatform.Publishers.List request = aiplatform.publishers().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Publishers publishers() {
    return new Publishers();
  }

  /**
   * The "publishers" collection of methods.
   */
  public class Publishers {

    /**
     * An accessor for creating requests from the Models collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Aiplatform aiplatform = new Aiplatform(...);}
     *   {@code Aiplatform.Models.List request = aiplatform.models().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Models models() {
      return new Models();
    }

    /**
     * The "models" collection of methods.
     */
    public class Models {

      /**
       * Return a list of tokens based on the input text.
       *
       * Create a request for the method "models.computeTokens".
       *
       * This request holds the parameters needed by the aiplatform server.  After setting any optional
       * parameters, call the {@link ComputeTokens#execute()} method to invoke the remote operation.
       *
       * @param endpoint Required. The name of the Endpoint requested to get lists of tokens and token ids.
       * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ComputeTokensRequest}
       * @return the request
       */
      public ComputeTokens computeTokens(java.lang.String endpoint, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ComputeTokensRequest content) throws java.io.IOException {
        ComputeTokens result = new ComputeTokens(endpoint, content);
        initialize(result);
        return result;
      }

      public class ComputeTokens extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ComputeTokensResponse> {

        private static final String REST_PATH = "v1/{+endpoint}:computeTokens";

        private final java.util.regex.Pattern ENDPOINT_PATTERN =
            java.util.regex.Pattern.compile("^publishers/[^/]+/models/[^/]+$");

        /**
         * Return a list of tokens based on the input text.
         *
         * Create a request for the method "models.computeTokens".
         *
         * This request holds the parameters needed by the the aiplatform server.  After setting any
         * optional parameters, call the {@link ComputeTokens#execute()} method to invoke the remote
         * operation. <p> {@link ComputeTokens#initialize(com.google.api.client.googleapis.services.Abstra
         * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
         * the constructor. </p>
         *
         * @param endpoint Required. The name of the Endpoint requested to get lists of tokens and token ids.
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ComputeTokensRequest}
         * @since 1.13
         */
        protected ComputeTokens(java.lang.String endpoint, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ComputeTokensRequest content) {
          super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1ComputeTokensResponse.class);
          this.endpoint = com.google.api.client.util.Preconditions.checkNotNull(endpoint, "Required parameter endpoint must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(ENDPOINT_PATTERN.matcher(endpoint).matches(),
                "Parameter endpoint must conform to the pattern " +
                "^publishers/[^/]+/models/[^/]+$");
          }
        }

        @Override
        public ComputeTokens set$Xgafv(java.lang.String $Xgafv) {
          return (ComputeTokens) super.set$Xgafv($Xgafv);
        }

        @Override
        public ComputeTokens setAccessToken(java.lang.String accessToken) {
          return (ComputeTokens) super.setAccessToken(accessToken);
        }

        @Override
        public ComputeTokens setAlt(java.lang.String alt) {
          return (ComputeTokens) super.setAlt(alt);
        }

        @Override
        public ComputeTokens setCallback(java.lang.String callback) {
          return (ComputeTokens) super.setCallback(callback);
        }

        @Override
        public ComputeTokens setFields(java.lang.String fields) {
          return (ComputeTokens) super.setFields(fields);
        }

        @Override
        public ComputeTokens setKey(java.lang.String key) {
          return (ComputeTokens) super.setKey(key);
        }

        @Override
        public ComputeTokens setOauthToken(java.lang.String oauthToken) {
          return (ComputeTokens) super.setOauthToken(oauthToken);
        }

        @Override
        public ComputeTokens setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (ComputeTokens) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public ComputeTokens setQuotaUser(java.lang.String quotaUser) {
          return (ComputeTokens) super.setQuotaUser(quotaUser);
        }

        @Override
        public ComputeTokens setUploadType(java.lang.String uploadType) {
          return (ComputeTokens) super.setUploadType(uploadType);
        }

        @Override
        public ComputeTokens setUploadProtocol(java.lang.String uploadProtocol) {
          return (ComputeTokens) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The name of the Endpoint requested to get lists of tokens and token ids. */
        @com.google.api.client.util.Key
        private java.lang.String endpoint;

        /** Required. The name of the Endpoint requested to get lists of tokens and token ids.
         */
        public java.lang.String getEndpoint() {
          return endpoint;
        }

        /** Required. The name of the Endpoint requested to get lists of tokens and token ids. */
        public ComputeTokens setEndpoint(java.lang.String endpoint) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(ENDPOINT_PATTERN.matcher(endpoint).matches(),
                "Parameter endpoint must conform to the pattern " +
                "^publishers/[^/]+/models/[^/]+$");
          }
          this.endpoint = endpoint;
          return this;
        }

        @Override
        public ComputeTokens set(String parameterName, Object value) {
          return (ComputeTokens) super.set(parameterName, value);
        }
      }
      /**
       * Perform a token counting.
       *
       * Create a request for the method "models.countTokens".
       *
       * This request holds the parameters needed by the aiplatform server.  After setting any optional
       * parameters, call the {@link CountTokens#execute()} method to invoke the remote operation.
       *
       * @param endpoint Required. The name of the Endpoint requested to perform token counting. Format:
       *        `projects/{project}/locations/{location}/endpoints/{endpoint}`
       * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CountTokensRequest}
       * @return the request
       */
      public CountTokens countTokens(java.lang.String endpoint, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CountTokensRequest content) throws java.io.IOException {
        CountTokens result = new CountTokens(endpoint, content);
        initialize(result);
        return result;
      }

      public class CountTokens extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CountTokensResponse> {

        private static final String REST_PATH = "v1/{+endpoint}:countTokens";

        private final java.util.regex.Pattern ENDPOINT_PATTERN =
            java.util.regex.Pattern.compile("^publishers/[^/]+/models/[^/]+$");

        /**
         * Perform a token counting.
         *
         * Create a request for the method "models.countTokens".
         *
         * This request holds the parameters needed by the the aiplatform server.  After setting any
         * optional parameters, call the {@link CountTokens#execute()} method to invoke the remote
         * operation. <p> {@link
         * CountTokens#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param endpoint Required. The name of the Endpoint requested to perform token counting. Format:
       *        `projects/{project}/locations/{location}/endpoints/{endpoint}`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CountTokensRequest}
         * @since 1.13
         */
        protected CountTokens(java.lang.String endpoint, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CountTokensRequest content) {
          super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1CountTokensResponse.class);
          this.endpoint = com.google.api.client.util.Preconditions.checkNotNull(endpoint, "Required parameter endpoint must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(ENDPOINT_PATTERN.matcher(endpoint).matches(),
                "Parameter endpoint must conform to the pattern " +
                "^publishers/[^/]+/models/[^/]+$");
          }
        }

        @Override
        public CountTokens set$Xgafv(java.lang.String $Xgafv) {
          return (CountTokens) super.set$Xgafv($Xgafv);
        }

        @Override
        public CountTokens setAccessToken(java.lang.String accessToken) {
          return (CountTokens) super.setAccessToken(accessToken);
        }

        @Override
        public CountTokens setAlt(java.lang.String alt) {
          return (CountTokens) super.setAlt(alt);
        }

        @Override
        public CountTokens setCallback(java.lang.String callback) {
          return (CountTokens) super.setCallback(callback);
        }

        @Override
        public CountTokens setFields(java.lang.String fields) {
          return (CountTokens) super.setFields(fields);
        }

        @Override
        public CountTokens setKey(java.lang.String key) {
          return (CountTokens) super.setKey(key);
        }

        @Override
        public CountTokens setOauthToken(java.lang.String oauthToken) {
          return (CountTokens) super.setOauthToken(oauthToken);
        }

        @Override
        public CountTokens setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (CountTokens) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public CountTokens setQuotaUser(java.lang.String quotaUser) {
          return (CountTokens) super.setQuotaUser(quotaUser);
        }

        @Override
        public CountTokens setUploadType(java.lang.String uploadType) {
          return (CountTokens) super.setUploadType(uploadType);
        }

        @Override
        public CountTokens setUploadProtocol(java.lang.String uploadProtocol) {
          return (CountTokens) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the Endpoint requested to perform token counting. Format:
         * `projects/{project}/locations/{location}/endpoints/{endpoint}`
         */
        @com.google.api.client.util.Key
        private java.lang.String endpoint;

        /** Required. The name of the Endpoint requested to perform token counting. Format:
       `projects/{project}/locations/{location}/endpoints/{endpoint}`
         */
        public java.lang.String getEndpoint() {
          return endpoint;
        }

        /**
         * Required. The name of the Endpoint requested to perform token counting. Format:
         * `projects/{project}/locations/{location}/endpoints/{endpoint}`
         */
        public CountTokens setEndpoint(java.lang.String endpoint) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(ENDPOINT_PATTERN.matcher(endpoint).matches(),
                "Parameter endpoint must conform to the pattern " +
                "^publishers/[^/]+/models/[^/]+$");
          }
          this.endpoint = endpoint;
          return this;
        }

        @Override
        public CountTokens set(String parameterName, Object value) {
          return (CountTokens) super.set(parameterName, value);
        }
      }
      /**
       * Generate content with multimodal inputs.
       *
       * Create a request for the method "models.generateContent".
       *
       * This request holds the parameters needed by the aiplatform server.  After setting any optional
       * parameters, call the {@link GenerateContent#execute()} method to invoke the remote operation.
       *
       * @param model Required. The fully qualified name of the publisher model or tuned model endpoint to use. Publisher
       *        model format: `projects/{project}/locations/{location}/publishers/models` Tuned model
       *        endpoint format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
       * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1GenerateContentRequest}
       * @return the request
       */
      public GenerateContent generateContent(java.lang.String model, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1GenerateContentRequest content) throws java.io.IOException {
        GenerateContent result = new GenerateContent(model, content);
        initialize(result);
        return result;
      }

      public class GenerateContent extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1GenerateContentResponse> {

        private static final String REST_PATH = "v1/{+model}:generateContent";

        private final java.util.regex.Pattern MODEL_PATTERN =
            java.util.regex.Pattern.compile("^publishers/[^/]+/models/[^/]+$");

        /**
         * Generate content with multimodal inputs.
         *
         * Create a request for the method "models.generateContent".
         *
         * This request holds the parameters needed by the the aiplatform server.  After setting any
         * optional parameters, call the {@link GenerateContent#execute()} method to invoke the remote
         * operation. <p> {@link GenerateContent#initialize(com.google.api.client.googleapis.services.Abst
         * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
         * the constructor. </p>
         *
         * @param model Required. The fully qualified name of the publisher model or tuned model endpoint to use. Publisher
       *        model format: `projects/{project}/locations/{location}/publishers/models` Tuned model
       *        endpoint format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1GenerateContentRequest}
         * @since 1.13
         */
        protected GenerateContent(java.lang.String model, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1GenerateContentRequest content) {
          super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1GenerateContentResponse.class);
          this.model = com.google.api.client.util.Preconditions.checkNotNull(model, "Required parameter model must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(MODEL_PATTERN.matcher(model).matches(),
                "Parameter model must conform to the pattern " +
                "^publishers/[^/]+/models/[^/]+$");
          }
        }

        @Override
        public GenerateContent set$Xgafv(java.lang.String $Xgafv) {
          return (GenerateContent) super.set$Xgafv($Xgafv);
        }

        @Override
        public GenerateContent setAccessToken(java.lang.String accessToken) {
          return (GenerateContent) super.setAccessToken(accessToken);
        }

        @Override
        public GenerateContent setAlt(java.lang.String alt) {
          return (GenerateContent) super.setAlt(alt);
        }

        @Override
        public GenerateContent setCallback(java.lang.String callback) {
          return (GenerateContent) super.setCallback(callback);
        }

        @Override
        public GenerateContent setFields(java.lang.String fields) {
          return (GenerateContent) super.setFields(fields);
        }

        @Override
        public GenerateContent setKey(java.lang.String key) {
          return (GenerateContent) super.setKey(key);
        }

        @Override
        public GenerateContent setOauthToken(java.lang.String oauthToken) {
          return (GenerateContent) super.setOauthToken(oauthToken);
        }

        @Override
        public GenerateContent setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (GenerateContent) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public GenerateContent setQuotaUser(java.lang.String quotaUser) {
          return (GenerateContent) super.setQuotaUser(quotaUser);
        }

        @Override
        public GenerateContent setUploadType(java.lang.String uploadType) {
          return (GenerateContent) super.setUploadType(uploadType);
        }

        @Override
        public GenerateContent setUploadProtocol(java.lang.String uploadProtocol) {
          return (GenerateContent) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The fully qualified name of the publisher model or tuned model endpoint to use.
         * Publisher model format: `projects/{project}/locations/{location}/publishers/models` Tuned
         * model endpoint format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
         */
        @com.google.api.client.util.Key
        private java.lang.String model;

        /** Required. The fully qualified name of the publisher model or tuned model endpoint to use. Publisher
       model format: `projects/{project}/locations/{location}/publishers/models` Tuned model endpoint
       format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
         */
        public java.lang.String getModel() {
          return model;
        }

        /**
         * Required. The fully qualified name of the publisher model or tuned model endpoint to use.
         * Publisher model format: `projects/{project}/locations/{location}/publishers/models` Tuned
         * model endpoint format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
         */
        public GenerateContent setModel(java.lang.String model) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(MODEL_PATTERN.matcher(model).matches(),
                "Parameter model must conform to the pattern " +
                "^publishers/[^/]+/models/[^/]+$");
          }
          this.model = model;
          return this;
        }

        @Override
        public GenerateContent set(String parameterName, Object value) {
          return (GenerateContent) super.set(parameterName, value);
        }
      }
      /**
       * Gets a Model Garden publisher model.
       *
       * Create a request for the method "models.get".
       *
       * This request holds the parameters needed by the aiplatform server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the PublisherModel resource. Format:
       *        `publishers/{publisher}/models/{publisher_model}`
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1PublisherModel> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^publishers/[^/]+/models/[^/]+$");

        /**
         * Gets a Model Garden publisher model.
         *
         * Create a request for the method "models.get".
         *
         * This request holds the parameters needed by the the aiplatform server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the PublisherModel resource. Format:
       *        `publishers/{publisher}/models/{publisher_model}`
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Aiplatform.this, "GET", REST_PATH, null, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1PublisherModel.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^publishers/[^/]+/models/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the PublisherModel resource. Format:
         * `publishers/{publisher}/models/{publisher_model}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the PublisherModel resource. Format:
       `publishers/{publisher}/models/{publisher_model}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the PublisherModel resource. Format:
         * `publishers/{publisher}/models/{publisher_model}`
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^publishers/[^/]+/models/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /** Optional. Token used to access Hugging Face gated models. */
        @com.google.api.client.util.Key
        private java.lang.String huggingFaceToken;

        /** Optional. Token used to access Hugging Face gated models.
         */
        public java.lang.String getHuggingFaceToken() {
          return huggingFaceToken;
        }

        /** Optional. Token used to access Hugging Face gated models. */
        public Get setHuggingFaceToken(java.lang.String huggingFaceToken) {
          this.huggingFaceToken = huggingFaceToken;
          return this;
        }

        /** Optional. Boolean indicates whether the requested model is a Hugging Face model. */
        @com.google.api.client.util.Key
        private java.lang.Boolean isHuggingFaceModel;

        /** Optional. Boolean indicates whether the requested model is a Hugging Face model.
         */
        public java.lang.Boolean getIsHuggingFaceModel() {
          return isHuggingFaceModel;
        }

        /** Optional. Boolean indicates whether the requested model is a Hugging Face model. */
        public Get setIsHuggingFaceModel(java.lang.Boolean isHuggingFaceModel) {
          this.isHuggingFaceModel = isHuggingFaceModel;
          return this;
        }

        /**
         * Optional. The IETF BCP-47 language code representing the language in which the publisher
         * model's text information should be written in.
         */
        @com.google.api.client.util.Key
        private java.lang.String languageCode;

        /** Optional. The IETF BCP-47 language code representing the language in which the publisher model's
       text information should be written in.
         */
        public java.lang.String getLanguageCode() {
          return languageCode;
        }

        /**
         * Optional. The IETF BCP-47 language code representing the language in which the publisher
         * model's text information should be written in.
         */
        public Get setLanguageCode(java.lang.String languageCode) {
          this.languageCode = languageCode;
          return this;
        }

        /** Optional. PublisherModel view specifying which fields to read. */
        @com.google.api.client.util.Key
        private java.lang.String view;

        /** Optional. PublisherModel view specifying which fields to read.
         */
        public java.lang.String getView() {
          return view;
        }

        /** Optional. PublisherModel view specifying which fields to read. */
        public Get setView(java.lang.String view) {
          this.view = view;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Generate content with multimodal inputs with streaming support.
       *
       * Create a request for the method "models.streamGenerateContent".
       *
       * This request holds the parameters needed by the aiplatform server.  After setting any optional
       * parameters, call the {@link StreamGenerateContent#execute()} method to invoke the remote
       * operation.
       *
       * @param model Required. The fully qualified name of the publisher model or tuned model endpoint to use. Publisher
       *        model format: `projects/{project}/locations/{location}/publishers/models` Tuned model
       *        endpoint format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
       * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1GenerateContentRequest}
       * @return the request
       */
      public StreamGenerateContent streamGenerateContent(java.lang.String model, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1GenerateContentRequest content) throws java.io.IOException {
        StreamGenerateContent result = new StreamGenerateContent(model, content);
        initialize(result);
        return result;
      }

      public class StreamGenerateContent extends AiplatformRequest<com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1GenerateContentResponse> {

        private static final String REST_PATH = "v1/{+model}:streamGenerateContent";

        private final java.util.regex.Pattern MODEL_PATTERN =
            java.util.regex.Pattern.compile("^publishers/[^/]+/models/[^/]+$");

        /**
         * Generate content with multimodal inputs with streaming support.
         *
         * Create a request for the method "models.streamGenerateContent".
         *
         * This request holds the parameters needed by the the aiplatform server.  After setting any
         * optional parameters, call the {@link StreamGenerateContent#execute()} method to invoke the
         * remote operation. <p> {@link StreamGenerateContent#initialize(com.google.api.client.googleapis.
         * services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
         * after invoking the constructor. </p>
         *
         * @param model Required. The fully qualified name of the publisher model or tuned model endpoint to use. Publisher
       *        model format: `projects/{project}/locations/{location}/publishers/models` Tuned model
       *        endpoint format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
         * @param content the {@link com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1GenerateContentRequest}
         * @since 1.13
         */
        protected StreamGenerateContent(java.lang.String model, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1GenerateContentRequest content) {
          super(Aiplatform.this, "POST", REST_PATH, content, com.google.api.services.aiplatform.v1.model.GoogleCloudAiplatformV1GenerateContentResponse.class);
          this.model = com.google.api.client.util.Preconditions.checkNotNull(model, "Required parameter model must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(MODEL_PATTERN.matcher(model).matches(),
                "Parameter model must conform to the pattern " +
                "^publishers/[^/]+/models/[^/]+$");
          }
        }

        @Override
        public StreamGenerateContent set$Xgafv(java.lang.String $Xgafv) {
          return (StreamGenerateContent) super.set$Xgafv($Xgafv);
        }

        @Override
        public StreamGenerateContent setAccessToken(java.lang.String accessToken) {
          return (StreamGenerateContent) super.setAccessToken(accessToken);
        }

        @Override
        public StreamGenerateContent setAlt(java.lang.String alt) {
          return (StreamGenerateContent) super.setAlt(alt);
        }

        @Override
        public StreamGenerateContent setCallback(java.lang.String callback) {
          return (StreamGenerateContent) super.setCallback(callback);
        }

        @Override
        public StreamGenerateContent setFields(java.lang.String fields) {
          return (StreamGenerateContent) super.setFields(fields);
        }

        @Override
        public StreamGenerateContent setKey(java.lang.String key) {
          return (StreamGenerateContent) super.setKey(key);
        }

        @Override
        public StreamGenerateContent setOauthToken(java.lang.String oauthToken) {
          return (StreamGenerateContent) super.setOauthToken(oauthToken);
        }

        @Override
        public StreamGenerateContent setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (StreamGenerateContent) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public StreamGenerateContent setQuotaUser(java.lang.String quotaUser) {
          return (StreamGenerateContent) super.setQuotaUser(quotaUser);
        }

        @Override
        public StreamGenerateContent setUploadType(java.lang.String uploadType) {
          return (StreamGenerateContent) super.setUploadType(uploadType);
        }

        @Override
        public StreamGenerateContent setUploadProtocol(java.lang.String uploadProtocol) {
          return (StreamGenerateContent) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The fully qualified name of the publisher model or tuned model endpoint to use.
         * Publisher model format: `projects/{project}/locations/{location}/publishers/models` Tuned
         * model endpoint format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
         */
        @com.google.api.client.util.Key
        private java.lang.String model;

        /** Required. The fully qualified name of the publisher model or tuned model endpoint to use. Publisher
       model format: `projects/{project}/locations/{location}/publishers/models` Tuned model endpoint
       format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
         */
        public java.lang.String getModel() {
          return model;
        }

        /**
         * Required. The fully qualified name of the publisher model or tuned model endpoint to use.
         * Publisher model format: `projects/{project}/locations/{location}/publishers/models` Tuned
         * model endpoint format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
         */
        public StreamGenerateContent setModel(java.lang.String model) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(MODEL_PATTERN.matcher(model).matches(),
                "Parameter model must conform to the pattern " +
                "^publishers/[^/]+/models/[^/]+$");
          }
          this.model = model;
          return this;
        }

        @Override
        public StreamGenerateContent set(String parameterName, Object value) {
          return (StreamGenerateContent) super.set(parameterName, value);
        }
      }

    }
  }

  /**
   * Builder for {@link Aiplatform}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    private static String chooseEndpoint(com.google.api.client.http.HttpTransport transport) {
      // If the GOOGLE_API_USE_MTLS_ENDPOINT environment variable value is "always", use mTLS endpoint.
      // If the env variable is "auto", use mTLS endpoint if and only if the transport is mTLS.
      // Use the regular endpoint for all other cases.
      String useMtlsEndpoint = System.getenv("GOOGLE_API_USE_MTLS_ENDPOINT");
      useMtlsEndpoint = useMtlsEndpoint == null ? "auto" : useMtlsEndpoint;
      if ("always".equals(useMtlsEndpoint) || ("auto".equals(useMtlsEndpoint) && transport != null && transport.isMtls())) {
        return DEFAULT_MTLS_ROOT_URL;
      }
      return DEFAULT_ROOT_URL;
    }

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          Builder.chooseEndpoint(transport),
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link Aiplatform}. */
    @Override
    public Aiplatform build() {
      return new Aiplatform(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link AiplatformRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setAiplatformRequestInitializer(
        AiplatformRequestInitializer aiplatformRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(aiplatformRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }

    @Override
    public Builder setUniverseDomain(String universeDomain) {
      return (Builder) super.setUniverseDomain(universeDomain);
    }
  }
}
