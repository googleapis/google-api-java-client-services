/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.clouderrorreporting.v1beta1.model;

/**
 * Contains a set of requested error events.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Stackdriver Error Reporting API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ListEventsResponse extends com.google.api.client.json.GenericJson {

  /**
   * The error events which match the given request.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<ErrorEvent> errorEvents;

  static {
    // hack to force ProGuard to consider ErrorEvent used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(ErrorEvent.class);
  }

  /**
   * If non-empty, more results are available. Pass this token, along with the same query parameters
   * as the first request, to view the next page of results.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String nextPageToken;

  /**
   * The timestamp specifies the start time to which the request was restricted.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String timeRangeBegin;

  /**
   * The error events which match the given request.
   * @return value or {@code null} for none
   */
  public java.util.List<ErrorEvent> getErrorEvents() {
    return errorEvents;
  }

  /**
   * The error events which match the given request.
   * @param errorEvents errorEvents or {@code null} for none
   */
  public ListEventsResponse setErrorEvents(java.util.List<ErrorEvent> errorEvents) {
    this.errorEvents = errorEvents;
    return this;
  }

  /**
   * If non-empty, more results are available. Pass this token, along with the same query parameters
   * as the first request, to view the next page of results.
   * @return value or {@code null} for none
   */
  public java.lang.String getNextPageToken() {
    return nextPageToken;
  }

  /**
   * If non-empty, more results are available. Pass this token, along with the same query parameters
   * as the first request, to view the next page of results.
   * @param nextPageToken nextPageToken or {@code null} for none
   */
  public ListEventsResponse setNextPageToken(java.lang.String nextPageToken) {
    this.nextPageToken = nextPageToken;
    return this;
  }

  /**
   * The timestamp specifies the start time to which the request was restricted.
   * @return value or {@code null} for none
   */
  public String getTimeRangeBegin() {
    return timeRangeBegin;
  }

  /**
   * The timestamp specifies the start time to which the request was restricted.
   * @param timeRangeBegin timeRangeBegin or {@code null} for none
   */
  public ListEventsResponse setTimeRangeBegin(String timeRangeBegin) {
    this.timeRangeBegin = timeRangeBegin;
    return this;
  }

  @Override
  public ListEventsResponse set(String fieldName, Object value) {
    return (ListEventsResponse) super.set(fieldName, value);
  }

  @Override
  public ListEventsResponse clone() {
    return (ListEventsResponse) super.clone();
  }

}
