/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.identitytoolkit.v2.model;

/**
 * Configuration for settings related to email privacy and public visibility. Settings in this
 * config protect against email enumeration, but may make some trade-offs in user-friendliness.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Identity Toolkit API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudIdentitytoolkitAdminV2EmailPrivacyConfig extends com.google.api.client.json.GenericJson {

  /**
   * Migrates the project to a state of improved email privacy. For example certain error codes are
   * more generic to avoid giving away information on whether the account exists. In addition, this
   * disables certain features that as a side-effect allow user enumeration. Enabling this toggle
   * disables the fetchSignInMethodsForEmail functionality and changing the user's email to an
   * unverified email. It is recommended to remove dependence on this functionality and enable this
   * toggle to improve user privacy.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean enableImprovedEmailPrivacy;

  /**
   * Migrates the project to a state of improved email privacy. For example certain error codes are
   * more generic to avoid giving away information on whether the account exists. In addition, this
   * disables certain features that as a side-effect allow user enumeration. Enabling this toggle
   * disables the fetchSignInMethodsForEmail functionality and changing the user's email to an
   * unverified email. It is recommended to remove dependence on this functionality and enable this
   * toggle to improve user privacy.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getEnableImprovedEmailPrivacy() {
    return enableImprovedEmailPrivacy;
  }

  /**
   * Migrates the project to a state of improved email privacy. For example certain error codes are
   * more generic to avoid giving away information on whether the account exists. In addition, this
   * disables certain features that as a side-effect allow user enumeration. Enabling this toggle
   * disables the fetchSignInMethodsForEmail functionality and changing the user's email to an
   * unverified email. It is recommended to remove dependence on this functionality and enable this
   * toggle to improve user privacy.
   * @param enableImprovedEmailPrivacy enableImprovedEmailPrivacy or {@code null} for none
   */
  public GoogleCloudIdentitytoolkitAdminV2EmailPrivacyConfig setEnableImprovedEmailPrivacy(java.lang.Boolean enableImprovedEmailPrivacy) {
    this.enableImprovedEmailPrivacy = enableImprovedEmailPrivacy;
    return this;
  }

  @Override
  public GoogleCloudIdentitytoolkitAdminV2EmailPrivacyConfig set(String fieldName, Object value) {
    return (GoogleCloudIdentitytoolkitAdminV2EmailPrivacyConfig) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudIdentitytoolkitAdminV2EmailPrivacyConfig clone() {
    return (GoogleCloudIdentitytoolkitAdminV2EmailPrivacyConfig) super.clone();
  }

}
