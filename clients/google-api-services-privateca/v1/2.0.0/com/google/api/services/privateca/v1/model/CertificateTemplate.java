/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.privateca.v1.model;

/**
 * A CertificateTemplate refers to a managed template for certificate issuance.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Certificate Authority API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class CertificateTemplate extends com.google.api.client.json.GenericJson {

  /**
   * Output only. The time at which this CertificateTemplate was created.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Optional. A human-readable description of scenarios this template is intended for.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * Optional. Describes constraints on identities that may be appear in Certificates issued using
   * this template. If this is omitted, then this template will not add restrictions on a
   * certificate's identity.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private CertificateIdentityConstraints identityConstraints;

  /**
   * Optional. Labels with user-defined metadata.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> labels;

  /**
   * Optional. The maximum lifetime allowed for issued Certificates that use this template. If the
   * issuing CaPool resource's IssuancePolicy specifies a maximum_lifetime the minimum of the two
   * durations will be the maximum lifetime for issued Certificates. Note that if the issuing
   * CertificateAuthority expires before a Certificate's requested maximum_lifetime, the effective
   * lifetime will be explicitly truncated to match it.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String maximumLifetime;

  /**
   * Identifier. The resource name for this CertificateTemplate in the format
   * `projects/locations/certificateTemplates`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Optional. Describes the set of X.509 extensions that may appear in a Certificate issued using
   * this CertificateTemplate. If a certificate request sets extensions that don't appear in the
   * passthrough_extensions, those extensions will be dropped. If the issuing CaPool's
   * IssuancePolicy defines baseline_values that don't appear here, the certificate issuance request
   * will fail. If this is omitted, then this template will not add restrictions on a certificate's
   * X.509 extensions. These constraints do not apply to X.509 extensions set in this
   * CertificateTemplate's predefined_values.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private CertificateExtensionConstraints passthroughExtensions;

  /**
   * Optional. A set of X.509 values that will be applied to all issued certificates that use this
   * template. If the certificate request includes conflicting values for the same properties, they
   * will be overwritten by the values defined here. If the issuing CaPool's IssuancePolicy defines
   * conflicting baseline_values for the same properties, the certificate issuance request will
   * fail.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private X509Parameters predefinedValues;

  /**
   * Output only. The time at which this CertificateTemplate was updated.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Output only. The time at which this CertificateTemplate was created.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. The time at which this CertificateTemplate was created.
   * @param createTime createTime or {@code null} for none
   */
  public CertificateTemplate setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Optional. A human-readable description of scenarios this template is intended for.
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * Optional. A human-readable description of scenarios this template is intended for.
   * @param description description or {@code null} for none
   */
  public CertificateTemplate setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * Optional. Describes constraints on identities that may be appear in Certificates issued using
   * this template. If this is omitted, then this template will not add restrictions on a
   * certificate's identity.
   * @return value or {@code null} for none
   */
  public CertificateIdentityConstraints getIdentityConstraints() {
    return identityConstraints;
  }

  /**
   * Optional. Describes constraints on identities that may be appear in Certificates issued using
   * this template. If this is omitted, then this template will not add restrictions on a
   * certificate's identity.
   * @param identityConstraints identityConstraints or {@code null} for none
   */
  public CertificateTemplate setIdentityConstraints(CertificateIdentityConstraints identityConstraints) {
    this.identityConstraints = identityConstraints;
    return this;
  }

  /**
   * Optional. Labels with user-defined metadata.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getLabels() {
    return labels;
  }

  /**
   * Optional. Labels with user-defined metadata.
   * @param labels labels or {@code null} for none
   */
  public CertificateTemplate setLabels(java.util.Map<String, java.lang.String> labels) {
    this.labels = labels;
    return this;
  }

  /**
   * Optional. The maximum lifetime allowed for issued Certificates that use this template. If the
   * issuing CaPool resource's IssuancePolicy specifies a maximum_lifetime the minimum of the two
   * durations will be the maximum lifetime for issued Certificates. Note that if the issuing
   * CertificateAuthority expires before a Certificate's requested maximum_lifetime, the effective
   * lifetime will be explicitly truncated to match it.
   * @return value or {@code null} for none
   */
  public String getMaximumLifetime() {
    return maximumLifetime;
  }

  /**
   * Optional. The maximum lifetime allowed for issued Certificates that use this template. If the
   * issuing CaPool resource's IssuancePolicy specifies a maximum_lifetime the minimum of the two
   * durations will be the maximum lifetime for issued Certificates. Note that if the issuing
   * CertificateAuthority expires before a Certificate's requested maximum_lifetime, the effective
   * lifetime will be explicitly truncated to match it.
   * @param maximumLifetime maximumLifetime or {@code null} for none
   */
  public CertificateTemplate setMaximumLifetime(String maximumLifetime) {
    this.maximumLifetime = maximumLifetime;
    return this;
  }

  /**
   * Identifier. The resource name for this CertificateTemplate in the format
   * `projects/locations/certificateTemplates`.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Identifier. The resource name for this CertificateTemplate in the format
   * `projects/locations/certificateTemplates`.
   * @param name name or {@code null} for none
   */
  public CertificateTemplate setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Optional. Describes the set of X.509 extensions that may appear in a Certificate issued using
   * this CertificateTemplate. If a certificate request sets extensions that don't appear in the
   * passthrough_extensions, those extensions will be dropped. If the issuing CaPool's
   * IssuancePolicy defines baseline_values that don't appear here, the certificate issuance request
   * will fail. If this is omitted, then this template will not add restrictions on a certificate's
   * X.509 extensions. These constraints do not apply to X.509 extensions set in this
   * CertificateTemplate's predefined_values.
   * @return value or {@code null} for none
   */
  public CertificateExtensionConstraints getPassthroughExtensions() {
    return passthroughExtensions;
  }

  /**
   * Optional. Describes the set of X.509 extensions that may appear in a Certificate issued using
   * this CertificateTemplate. If a certificate request sets extensions that don't appear in the
   * passthrough_extensions, those extensions will be dropped. If the issuing CaPool's
   * IssuancePolicy defines baseline_values that don't appear here, the certificate issuance request
   * will fail. If this is omitted, then this template will not add restrictions on a certificate's
   * X.509 extensions. These constraints do not apply to X.509 extensions set in this
   * CertificateTemplate's predefined_values.
   * @param passthroughExtensions passthroughExtensions or {@code null} for none
   */
  public CertificateTemplate setPassthroughExtensions(CertificateExtensionConstraints passthroughExtensions) {
    this.passthroughExtensions = passthroughExtensions;
    return this;
  }

  /**
   * Optional. A set of X.509 values that will be applied to all issued certificates that use this
   * template. If the certificate request includes conflicting values for the same properties, they
   * will be overwritten by the values defined here. If the issuing CaPool's IssuancePolicy defines
   * conflicting baseline_values for the same properties, the certificate issuance request will
   * fail.
   * @return value or {@code null} for none
   */
  public X509Parameters getPredefinedValues() {
    return predefinedValues;
  }

  /**
   * Optional. A set of X.509 values that will be applied to all issued certificates that use this
   * template. If the certificate request includes conflicting values for the same properties, they
   * will be overwritten by the values defined here. If the issuing CaPool's IssuancePolicy defines
   * conflicting baseline_values for the same properties, the certificate issuance request will
   * fail.
   * @param predefinedValues predefinedValues or {@code null} for none
   */
  public CertificateTemplate setPredefinedValues(X509Parameters predefinedValues) {
    this.predefinedValues = predefinedValues;
    return this;
  }

  /**
   * Output only. The time at which this CertificateTemplate was updated.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. The time at which this CertificateTemplate was updated.
   * @param updateTime updateTime or {@code null} for none
   */
  public CertificateTemplate setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  @Override
  public CertificateTemplate set(String fieldName, Object value) {
    return (CertificateTemplate) super.set(fieldName, value);
  }

  @Override
  public CertificateTemplate clone() {
    return (CertificateTemplate) super.clone();
  }

}
