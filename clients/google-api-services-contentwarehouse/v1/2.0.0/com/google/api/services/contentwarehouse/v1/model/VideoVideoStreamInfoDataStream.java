/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Data streams refer to additional data separate from audio and video streams For example: camera
 * motion metadata (see http://go/wally-format) Available tags: 4+
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class VideoVideoStreamInfoDataStream extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String codecFourcc;

  /**
   * Codec information
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String codecId;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long streamCodecTag;

  /**
   * Index of the stream in the file
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long streamIndex;

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getCodecFourcc() {
    return codecFourcc;
  }

  /**
   * @param codecFourcc codecFourcc or {@code null} for none
   */
  public VideoVideoStreamInfoDataStream setCodecFourcc(java.lang.String codecFourcc) {
    this.codecFourcc = codecFourcc;
    return this;
  }

  /**
   * Codec information
   * @return value or {@code null} for none
   */
  public java.lang.String getCodecId() {
    return codecId;
  }

  /**
   * Codec information
   * @param codecId codecId or {@code null} for none
   */
  public VideoVideoStreamInfoDataStream setCodecId(java.lang.String codecId) {
    this.codecId = codecId;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Long getStreamCodecTag() {
    return streamCodecTag;
  }

  /**
   * @param streamCodecTag streamCodecTag or {@code null} for none
   */
  public VideoVideoStreamInfoDataStream setStreamCodecTag(java.lang.Long streamCodecTag) {
    this.streamCodecTag = streamCodecTag;
    return this;
  }

  /**
   * Index of the stream in the file
   * @return value or {@code null} for none
   */
  public java.lang.Long getStreamIndex() {
    return streamIndex;
  }

  /**
   * Index of the stream in the file
   * @param streamIndex streamIndex or {@code null} for none
   */
  public VideoVideoStreamInfoDataStream setStreamIndex(java.lang.Long streamIndex) {
    this.streamIndex = streamIndex;
    return this;
  }

  @Override
  public VideoVideoStreamInfoDataStream set(String fieldName, Object value) {
    return (VideoVideoStreamInfoDataStream) super.set(fieldName, value);
  }

  @Override
  public VideoVideoStreamInfoDataStream clone() {
    return (VideoVideoStreamInfoDataStream) super.clone();
  }

}
