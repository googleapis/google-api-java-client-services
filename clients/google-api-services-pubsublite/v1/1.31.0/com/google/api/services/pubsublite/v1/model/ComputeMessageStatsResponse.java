/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.pubsublite.v1.model;

/**
 * Response containing stats for messages in the requested topic and partition.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Pub/Sub Lite API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ComputeMessageStatsResponse extends com.google.api.client.json.GenericJson {

  /**
   * The number of quota bytes accounted to these messages.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long messageBytes;

  /**
   * The count of messages.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long messageCount;

  /**
   * The minimum event timestamp across these messages. For the purposes of this computation, if a
   * message does not have an event time, we use the publish time. The timestamp will be unset if
   * there are no messages.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String minimumEventTime;

  /**
   * The minimum publish timestamp across these messages. Note that publish timestamps within a
   * partition are not guaranteed to be non-decreasing. The timestamp will be unset if there are no
   * messages.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String minimumPublishTime;

  /**
   * The number of quota bytes accounted to these messages.
   * @return value or {@code null} for none
   */
  public java.lang.Long getMessageBytes() {
    return messageBytes;
  }

  /**
   * The number of quota bytes accounted to these messages.
   * @param messageBytes messageBytes or {@code null} for none
   */
  public ComputeMessageStatsResponse setMessageBytes(java.lang.Long messageBytes) {
    this.messageBytes = messageBytes;
    return this;
  }

  /**
   * The count of messages.
   * @return value or {@code null} for none
   */
  public java.lang.Long getMessageCount() {
    return messageCount;
  }

  /**
   * The count of messages.
   * @param messageCount messageCount or {@code null} for none
   */
  public ComputeMessageStatsResponse setMessageCount(java.lang.Long messageCount) {
    this.messageCount = messageCount;
    return this;
  }

  /**
   * The minimum event timestamp across these messages. For the purposes of this computation, if a
   * message does not have an event time, we use the publish time. The timestamp will be unset if
   * there are no messages.
   * @return value or {@code null} for none
   */
  public String getMinimumEventTime() {
    return minimumEventTime;
  }

  /**
   * The minimum event timestamp across these messages. For the purposes of this computation, if a
   * message does not have an event time, we use the publish time. The timestamp will be unset if
   * there are no messages.
   * @param minimumEventTime minimumEventTime or {@code null} for none
   */
  public ComputeMessageStatsResponse setMinimumEventTime(String minimumEventTime) {
    this.minimumEventTime = minimumEventTime;
    return this;
  }

  /**
   * The minimum publish timestamp across these messages. Note that publish timestamps within a
   * partition are not guaranteed to be non-decreasing. The timestamp will be unset if there are no
   * messages.
   * @return value or {@code null} for none
   */
  public String getMinimumPublishTime() {
    return minimumPublishTime;
  }

  /**
   * The minimum publish timestamp across these messages. Note that publish timestamps within a
   * partition are not guaranteed to be non-decreasing. The timestamp will be unset if there are no
   * messages.
   * @param minimumPublishTime minimumPublishTime or {@code null} for none
   */
  public ComputeMessageStatsResponse setMinimumPublishTime(String minimumPublishTime) {
    this.minimumPublishTime = minimumPublishTime;
    return this;
  }

  @Override
  public ComputeMessageStatsResponse set(String fieldName, Object value) {
    return (ComputeMessageStatsResponse) super.set(fieldName, value);
  }

  @Override
  public ComputeMessageStatsResponse clone() {
    return (ComputeMessageStatsResponse) super.clone();
  }

}
