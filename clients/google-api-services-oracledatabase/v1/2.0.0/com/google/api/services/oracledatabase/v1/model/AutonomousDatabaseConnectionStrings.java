/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.oracledatabase.v1.model;

/**
 * The connection string used to connect to the Autonomous Database. https://docs.oracle.com/en-
 * us/iaas/api/#/en/database/20160918/datatypes/AutonomousDatabaseConnectionStrings
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Oracle Database@Google Cloud API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AutonomousDatabaseConnectionStrings extends com.google.api.client.json.GenericJson {

  /**
   * Output only. Returns all connection strings that can be used to connect to the Autonomous
   * Database.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AllConnectionStrings allConnectionStrings;

  /**
   * Output only. The database service provides the least level of resources to each SQL statement,
   * but supports the most number of concurrent SQL statements.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String dedicated;

  /**
   * Output only. The database service provides the highest level of resources to each SQL
   * statement.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String high;

  /**
   * Output only. The database service provides the least level of resources to each SQL statement.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String low;

  /**
   * Output only. The database service provides a lower level of resources to each SQL statement.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String medium;

  /**
   * Output only. A list of connection string profiles to allow clients to group, filter, and select
   * values based on the structured metadata.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<DatabaseConnectionStringProfile> profiles;

  /**
   * Output only. Returns all connection strings that can be used to connect to the Autonomous
   * Database.
   * @return value or {@code null} for none
   */
  public AllConnectionStrings getAllConnectionStrings() {
    return allConnectionStrings;
  }

  /**
   * Output only. Returns all connection strings that can be used to connect to the Autonomous
   * Database.
   * @param allConnectionStrings allConnectionStrings or {@code null} for none
   */
  public AutonomousDatabaseConnectionStrings setAllConnectionStrings(AllConnectionStrings allConnectionStrings) {
    this.allConnectionStrings = allConnectionStrings;
    return this;
  }

  /**
   * Output only. The database service provides the least level of resources to each SQL statement,
   * but supports the most number of concurrent SQL statements.
   * @return value or {@code null} for none
   */
  public java.lang.String getDedicated() {
    return dedicated;
  }

  /**
   * Output only. The database service provides the least level of resources to each SQL statement,
   * but supports the most number of concurrent SQL statements.
   * @param dedicated dedicated or {@code null} for none
   */
  public AutonomousDatabaseConnectionStrings setDedicated(java.lang.String dedicated) {
    this.dedicated = dedicated;
    return this;
  }

  /**
   * Output only. The database service provides the highest level of resources to each SQL
   * statement.
   * @return value or {@code null} for none
   */
  public java.lang.String getHigh() {
    return high;
  }

  /**
   * Output only. The database service provides the highest level of resources to each SQL
   * statement.
   * @param high high or {@code null} for none
   */
  public AutonomousDatabaseConnectionStrings setHigh(java.lang.String high) {
    this.high = high;
    return this;
  }

  /**
   * Output only. The database service provides the least level of resources to each SQL statement.
   * @return value or {@code null} for none
   */
  public java.lang.String getLow() {
    return low;
  }

  /**
   * Output only. The database service provides the least level of resources to each SQL statement.
   * @param low low or {@code null} for none
   */
  public AutonomousDatabaseConnectionStrings setLow(java.lang.String low) {
    this.low = low;
    return this;
  }

  /**
   * Output only. The database service provides a lower level of resources to each SQL statement.
   * @return value or {@code null} for none
   */
  public java.lang.String getMedium() {
    return medium;
  }

  /**
   * Output only. The database service provides a lower level of resources to each SQL statement.
   * @param medium medium or {@code null} for none
   */
  public AutonomousDatabaseConnectionStrings setMedium(java.lang.String medium) {
    this.medium = medium;
    return this;
  }

  /**
   * Output only. A list of connection string profiles to allow clients to group, filter, and select
   * values based on the structured metadata.
   * @return value or {@code null} for none
   */
  public java.util.List<DatabaseConnectionStringProfile> getProfiles() {
    return profiles;
  }

  /**
   * Output only. A list of connection string profiles to allow clients to group, filter, and select
   * values based on the structured metadata.
   * @param profiles profiles or {@code null} for none
   */
  public AutonomousDatabaseConnectionStrings setProfiles(java.util.List<DatabaseConnectionStringProfile> profiles) {
    this.profiles = profiles;
    return this;
  }

  @Override
  public AutonomousDatabaseConnectionStrings set(String fieldName, Object value) {
    return (AutonomousDatabaseConnectionStrings) super.set(fieldName, value);
  }

  @Override
  public AutonomousDatabaseConnectionStrings clone() {
    return (AutonomousDatabaseConnectionStrings) super.clone();
  }

}
