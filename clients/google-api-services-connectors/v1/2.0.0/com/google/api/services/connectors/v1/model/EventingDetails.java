/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.connectors.v1.model;

/**
 * Eventing Details message.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Connectors API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class EventingDetails extends com.google.api.client.json.GenericJson {

  /**
   * Output only. Custom Event Types.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean customEventTypes;

  /**
   * Output only. Description.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * Output only. Link to public documentation.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String documentationLink;

  /**
   * Output only. Cloud storage location of the icon.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String iconLocation;

  /**
   * Output only. Eventing Launch Stage.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String launchStage;

  /**
   * Output only. Name of the Eventing trigger.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Output only. Array of search keywords.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> searchTags;

  /**
   * Output only. Custom Event Types.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getCustomEventTypes() {
    return customEventTypes;
  }

  /**
   * Output only. Custom Event Types.
   * @param customEventTypes customEventTypes or {@code null} for none
   */
  public EventingDetails setCustomEventTypes(java.lang.Boolean customEventTypes) {
    this.customEventTypes = customEventTypes;
    return this;
  }

  /**
   * Output only. Description.
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * Output only. Description.
   * @param description description or {@code null} for none
   */
  public EventingDetails setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * Output only. Link to public documentation.
   * @return value or {@code null} for none
   */
  public java.lang.String getDocumentationLink() {
    return documentationLink;
  }

  /**
   * Output only. Link to public documentation.
   * @param documentationLink documentationLink or {@code null} for none
   */
  public EventingDetails setDocumentationLink(java.lang.String documentationLink) {
    this.documentationLink = documentationLink;
    return this;
  }

  /**
   * Output only. Cloud storage location of the icon.
   * @return value or {@code null} for none
   */
  public java.lang.String getIconLocation() {
    return iconLocation;
  }

  /**
   * Output only. Cloud storage location of the icon.
   * @param iconLocation iconLocation or {@code null} for none
   */
  public EventingDetails setIconLocation(java.lang.String iconLocation) {
    this.iconLocation = iconLocation;
    return this;
  }

  /**
   * Output only. Eventing Launch Stage.
   * @return value or {@code null} for none
   */
  public java.lang.String getLaunchStage() {
    return launchStage;
  }

  /**
   * Output only. Eventing Launch Stage.
   * @param launchStage launchStage or {@code null} for none
   */
  public EventingDetails setLaunchStage(java.lang.String launchStage) {
    this.launchStage = launchStage;
    return this;
  }

  /**
   * Output only. Name of the Eventing trigger.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Output only. Name of the Eventing trigger.
   * @param name name or {@code null} for none
   */
  public EventingDetails setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Output only. Array of search keywords.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getSearchTags() {
    return searchTags;
  }

  /**
   * Output only. Array of search keywords.
   * @param searchTags searchTags or {@code null} for none
   */
  public EventingDetails setSearchTags(java.util.List<java.lang.String> searchTags) {
    this.searchTags = searchTags;
    return this;
  }

  @Override
  public EventingDetails set(String fieldName, Object value) {
    return (EventingDetails) super.set(fieldName, value);
  }

  @Override
  public EventingDetails clone() {
    return (EventingDetails) super.clone();
  }

}
