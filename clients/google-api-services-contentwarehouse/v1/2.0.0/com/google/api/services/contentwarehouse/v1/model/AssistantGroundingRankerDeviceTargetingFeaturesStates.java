/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * The states of the device. They are dynamic and may change based on the current context.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AssistantGroundingRankerDeviceTargetingFeaturesStates extends com.google.api.client.json.GenericJson {

  /**
   * The distance of the device relative to others that hear the user's OKG. Timestamp of when the
   * device was last used. Should correspond to when the AssistantRequestParams (in
   * ASSISTANT_SNAPSHOT corpus) were last written for this device.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String distance;

  /**
   * Indicate whether the device is docked on a base.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean isDocked;

  /**
   * Indicate whether the device is locked.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean isLocked;

  /**
   * Indicate whether the device is tethered to another device.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean isTethered;

  /**
   * The distance of the device relative to others that hear the user's OKG. Timestamp of when the
   * device was last used. Should correspond to when the AssistantRequestParams (in
   * ASSISTANT_SNAPSHOT corpus) were last written for this device.
   * @return value or {@code null} for none
   */
  public java.lang.String getDistance() {
    return distance;
  }

  /**
   * The distance of the device relative to others that hear the user's OKG. Timestamp of when the
   * device was last used. Should correspond to when the AssistantRequestParams (in
   * ASSISTANT_SNAPSHOT corpus) were last written for this device.
   * @param distance distance or {@code null} for none
   */
  public AssistantGroundingRankerDeviceTargetingFeaturesStates setDistance(java.lang.String distance) {
    this.distance = distance;
    return this;
  }

  /**
   * Indicate whether the device is docked on a base.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIsDocked() {
    return isDocked;
  }

  /**
   * Indicate whether the device is docked on a base.
   * @param isDocked isDocked or {@code null} for none
   */
  public AssistantGroundingRankerDeviceTargetingFeaturesStates setIsDocked(java.lang.Boolean isDocked) {
    this.isDocked = isDocked;
    return this;
  }

  /**
   * Indicate whether the device is locked.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIsLocked() {
    return isLocked;
  }

  /**
   * Indicate whether the device is locked.
   * @param isLocked isLocked or {@code null} for none
   */
  public AssistantGroundingRankerDeviceTargetingFeaturesStates setIsLocked(java.lang.Boolean isLocked) {
    this.isLocked = isLocked;
    return this;
  }

  /**
   * Indicate whether the device is tethered to another device.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIsTethered() {
    return isTethered;
  }

  /**
   * Indicate whether the device is tethered to another device.
   * @param isTethered isTethered or {@code null} for none
   */
  public AssistantGroundingRankerDeviceTargetingFeaturesStates setIsTethered(java.lang.Boolean isTethered) {
    this.isTethered = isTethered;
    return this;
  }

  @Override
  public AssistantGroundingRankerDeviceTargetingFeaturesStates set(String fieldName, Object value) {
    return (AssistantGroundingRankerDeviceTargetingFeaturesStates) super.set(fieldName, value);
  }

  @Override
  public AssistantGroundingRankerDeviceTargetingFeaturesStates clone() {
    return (AssistantGroundingRankerDeviceTargetingFeaturesStates) super.clone();
  }

}
