/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.clouddeploy.v1.model;

/**
 * Weekly windows. For example, blocking actions every Saturday and Sunday. Another example would be
 * blocking actions every weekday from 5pm to midnight.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Deploy API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class WeeklyWindow extends com.google.api.client.json.GenericJson {

  /**
   * Optional. Days of week. If left empty, all days of the week will be included.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> daysOfWeek;

  /**
   * Optional. End time (exclusive). Use 24:00 to indicate midnight. If you specify end_time you
   * must also specify start_time. If left empty, this will block for the entire day for the days
   * specified in days_of_week.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private TimeOfDay endTime;

  /**
   * Optional. Start time (inclusive). Use 00:00 for the beginning of the day. If you specify
   * start_time you must also specify end_time. If left empty, this will block for the entire day
   * for the days specified in days_of_week.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private TimeOfDay startTime;

  /**
   * Optional. Days of week. If left empty, all days of the week will be included.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getDaysOfWeek() {
    return daysOfWeek;
  }

  /**
   * Optional. Days of week. If left empty, all days of the week will be included.
   * @param daysOfWeek daysOfWeek or {@code null} for none
   */
  public WeeklyWindow setDaysOfWeek(java.util.List<java.lang.String> daysOfWeek) {
    this.daysOfWeek = daysOfWeek;
    return this;
  }

  /**
   * Optional. End time (exclusive). Use 24:00 to indicate midnight. If you specify end_time you
   * must also specify start_time. If left empty, this will block for the entire day for the days
   * specified in days_of_week.
   * @return value or {@code null} for none
   */
  public TimeOfDay getEndTime() {
    return endTime;
  }

  /**
   * Optional. End time (exclusive). Use 24:00 to indicate midnight. If you specify end_time you
   * must also specify start_time. If left empty, this will block for the entire day for the days
   * specified in days_of_week.
   * @param endTime endTime or {@code null} for none
   */
  public WeeklyWindow setEndTime(TimeOfDay endTime) {
    this.endTime = endTime;
    return this;
  }

  /**
   * Optional. Start time (inclusive). Use 00:00 for the beginning of the day. If you specify
   * start_time you must also specify end_time. If left empty, this will block for the entire day
   * for the days specified in days_of_week.
   * @return value or {@code null} for none
   */
  public TimeOfDay getStartTime() {
    return startTime;
  }

  /**
   * Optional. Start time (inclusive). Use 00:00 for the beginning of the day. If you specify
   * start_time you must also specify end_time. If left empty, this will block for the entire day
   * for the days specified in days_of_week.
   * @param startTime startTime or {@code null} for none
   */
  public WeeklyWindow setStartTime(TimeOfDay startTime) {
    this.startTime = startTime;
    return this;
  }

  @Override
  public WeeklyWindow set(String fieldName, Object value) {
    return (WeeklyWindow) super.set(fieldName, value);
  }

  @Override
  public WeeklyWindow clone() {
    return (WeeklyWindow) super.clone();
  }

}
