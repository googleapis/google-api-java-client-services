/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.realtimebidding.v1.model;

/**
 * RTB Buyer account information.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Real-time Bidding API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Buyer extends com.google.api.client.json.GenericJson {

  /**
   * Output only. The number of creatives that this buyer submitted via the API or bid with in the
   * last 30 days. This is counted against the maximum number of active creatives.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long activeCreativeCount;

  /**
   * Output only. The name of the bidder resource that is responsible for receiving bidding traffic
   * for this account. The bidder name must follow the pattern `bidders/{bidderAccountId}`, where
   * `{bidderAccountId}` is the account ID of the bidder receiving traffic for this buyer.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String bidder;

  /**
   * Output only. A list of billing IDs associated with this account. These IDs appear on: 1. A bid
   * request, to signal which buyers are eligible to bid on a given opportunity, and which
   * pretargeting configurations were matched for each eligible buyer. 2. The bid response, to
   * attribute a winning impression to a specific account for billing, reporting, policy and
   * publisher block enforcement.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> billingIds;

  /**
   * Output only. The diplay name associated with this buyer account, as visible to sellers.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String displayName;

  /**
   * Output only. The maximum number of active creatives that this buyer can have.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long maximumActiveCreativeCount;

  /**
   * Output only. Name of the buyer resource that must follow the pattern `buyers/{buyerAccountId}`,
   * where `{buyerAccountId}` is the account ID of the buyer account whose information is to be
   * received. One can get their account ID on the Authorized Buyers or Open Bidding UI, or by
   * contacting their Google account manager.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Output only. The number of creatives that this buyer submitted via the API or bid with in the
   * last 30 days. This is counted against the maximum number of active creatives.
   * @return value or {@code null} for none
   */
  public java.lang.Long getActiveCreativeCount() {
    return activeCreativeCount;
  }

  /**
   * Output only. The number of creatives that this buyer submitted via the API or bid with in the
   * last 30 days. This is counted against the maximum number of active creatives.
   * @param activeCreativeCount activeCreativeCount or {@code null} for none
   */
  public Buyer setActiveCreativeCount(java.lang.Long activeCreativeCount) {
    this.activeCreativeCount = activeCreativeCount;
    return this;
  }

  /**
   * Output only. The name of the bidder resource that is responsible for receiving bidding traffic
   * for this account. The bidder name must follow the pattern `bidders/{bidderAccountId}`, where
   * `{bidderAccountId}` is the account ID of the bidder receiving traffic for this buyer.
   * @return value or {@code null} for none
   */
  public java.lang.String getBidder() {
    return bidder;
  }

  /**
   * Output only. The name of the bidder resource that is responsible for receiving bidding traffic
   * for this account. The bidder name must follow the pattern `bidders/{bidderAccountId}`, where
   * `{bidderAccountId}` is the account ID of the bidder receiving traffic for this buyer.
   * @param bidder bidder or {@code null} for none
   */
  public Buyer setBidder(java.lang.String bidder) {
    this.bidder = bidder;
    return this;
  }

  /**
   * Output only. A list of billing IDs associated with this account. These IDs appear on: 1. A bid
   * request, to signal which buyers are eligible to bid on a given opportunity, and which
   * pretargeting configurations were matched for each eligible buyer. 2. The bid response, to
   * attribute a winning impression to a specific account for billing, reporting, policy and
   * publisher block enforcement.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getBillingIds() {
    return billingIds;
  }

  /**
   * Output only. A list of billing IDs associated with this account. These IDs appear on: 1. A bid
   * request, to signal which buyers are eligible to bid on a given opportunity, and which
   * pretargeting configurations were matched for each eligible buyer. 2. The bid response, to
   * attribute a winning impression to a specific account for billing, reporting, policy and
   * publisher block enforcement.
   * @param billingIds billingIds or {@code null} for none
   */
  public Buyer setBillingIds(java.util.List<java.lang.String> billingIds) {
    this.billingIds = billingIds;
    return this;
  }

  /**
   * Output only. The diplay name associated with this buyer account, as visible to sellers.
   * @return value or {@code null} for none
   */
  public java.lang.String getDisplayName() {
    return displayName;
  }

  /**
   * Output only. The diplay name associated with this buyer account, as visible to sellers.
   * @param displayName displayName or {@code null} for none
   */
  public Buyer setDisplayName(java.lang.String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Output only. The maximum number of active creatives that this buyer can have.
   * @return value or {@code null} for none
   */
  public java.lang.Long getMaximumActiveCreativeCount() {
    return maximumActiveCreativeCount;
  }

  /**
   * Output only. The maximum number of active creatives that this buyer can have.
   * @param maximumActiveCreativeCount maximumActiveCreativeCount or {@code null} for none
   */
  public Buyer setMaximumActiveCreativeCount(java.lang.Long maximumActiveCreativeCount) {
    this.maximumActiveCreativeCount = maximumActiveCreativeCount;
    return this;
  }

  /**
   * Output only. Name of the buyer resource that must follow the pattern `buyers/{buyerAccountId}`,
   * where `{buyerAccountId}` is the account ID of the buyer account whose information is to be
   * received. One can get their account ID on the Authorized Buyers or Open Bidding UI, or by
   * contacting their Google account manager.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Output only. Name of the buyer resource that must follow the pattern `buyers/{buyerAccountId}`,
   * where `{buyerAccountId}` is the account ID of the buyer account whose information is to be
   * received. One can get their account ID on the Authorized Buyers or Open Bidding UI, or by
   * contacting their Google account manager.
   * @param name name or {@code null} for none
   */
  public Buyer setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  @Override
  public Buyer set(String fieldName, Object value) {
    return (Buyer) super.set(fieldName, value);
  }

  @Override
  public Buyer clone() {
    return (Buyer) super.clone();
  }

}
