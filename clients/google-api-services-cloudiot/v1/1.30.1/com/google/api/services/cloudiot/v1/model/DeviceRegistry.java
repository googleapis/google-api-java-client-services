/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.cloudiot.v1.model;

/**
 * A container for a group of devices.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud IoT API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class DeviceRegistry extends com.google.api.client.json.GenericJson {

  /**
   * The credentials used to verify the device credentials. No more than 10 credentials can be bound
   * to a single registry at a time. The verification process occurs at the time of device creation
   * or update. If this field is empty, no verification is performed. Otherwise, the credentials of
   * a newly created device or added credentials of an updated device should be signed with one of
   * these registry credentials.
   *
   * Note, however, that existing devices will never be affected by modifications to this list of
   * credentials: after a device has been successfully created in a registry, it should be able to
   * connect even if its registry credentials are revoked, deleted, or modified.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<RegistryCredential> credentials;

  /**
   * The configuration for notification of telemetry events received from the device. All telemetry
   * events that were successfully published by the device and acknowledged by Cloud IoT Core are
   * guaranteed to be delivered to Cloud Pub/Sub. If multiple configurations match a message, only
   * the first matching configuration is used. If you try to publish a device telemetry event using
   * MQTT without specifying a Cloud Pub/Sub topic for the device's registry, the connection closes
   * automatically. If you try to do so using an HTTP connection, an error is returned. Up to 10
   * configurations may be provided.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<EventNotificationConfig> eventNotificationConfigs;

  /**
   * The DeviceService (HTTP) configuration for this device registry.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private HttpConfig httpConfig;

  /**
   * The identifier of this device registry. For example, `myRegistry`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String id;

  /**
   * **Beta Feature**
   *
   * The default logging verbosity for activity from devices in this registry. The verbosity level
   * can be overridden by Device.log_level.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String logLevel;

  /**
   * The MQTT configuration for this device registry.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private MqttConfig mqttConfig;

  /**
   * The resource path name. For example, `projects/example-project/locations/us-central1/registries
   * /my-registry`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * The configuration for notification of new states received from the device. State updates are
   * guaranteed to be stored in the state history, but notifications to Cloud Pub/Sub are not
   * guaranteed. For example, if permissions are misconfigured or the specified topic doesn't exist,
   * no notification will be published but the state will still be stored in Cloud IoT Core.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private StateNotificationConfig stateNotificationConfig;

  /**
   * The credentials used to verify the device credentials. No more than 10 credentials can be bound
   * to a single registry at a time. The verification process occurs at the time of device creation
   * or update. If this field is empty, no verification is performed. Otherwise, the credentials of
   * a newly created device or added credentials of an updated device should be signed with one of
   * these registry credentials.
   *
   * Note, however, that existing devices will never be affected by modifications to this list of
   * credentials: after a device has been successfully created in a registry, it should be able to
   * connect even if its registry credentials are revoked, deleted, or modified.
   * @return value or {@code null} for none
   */
  public java.util.List<RegistryCredential> getCredentials() {
    return credentials;
  }

  /**
   * The credentials used to verify the device credentials. No more than 10 credentials can be bound
   * to a single registry at a time. The verification process occurs at the time of device creation
   * or update. If this field is empty, no verification is performed. Otherwise, the credentials of
   * a newly created device or added credentials of an updated device should be signed with one of
   * these registry credentials.
   *
   * Note, however, that existing devices will never be affected by modifications to this list of
   * credentials: after a device has been successfully created in a registry, it should be able to
   * connect even if its registry credentials are revoked, deleted, or modified.
   * @param credentials credentials or {@code null} for none
   */
  public DeviceRegistry setCredentials(java.util.List<RegistryCredential> credentials) {
    this.credentials = credentials;
    return this;
  }

  /**
   * The configuration for notification of telemetry events received from the device. All telemetry
   * events that were successfully published by the device and acknowledged by Cloud IoT Core are
   * guaranteed to be delivered to Cloud Pub/Sub. If multiple configurations match a message, only
   * the first matching configuration is used. If you try to publish a device telemetry event using
   * MQTT without specifying a Cloud Pub/Sub topic for the device's registry, the connection closes
   * automatically. If you try to do so using an HTTP connection, an error is returned. Up to 10
   * configurations may be provided.
   * @return value or {@code null} for none
   */
  public java.util.List<EventNotificationConfig> getEventNotificationConfigs() {
    return eventNotificationConfigs;
  }

  /**
   * The configuration for notification of telemetry events received from the device. All telemetry
   * events that were successfully published by the device and acknowledged by Cloud IoT Core are
   * guaranteed to be delivered to Cloud Pub/Sub. If multiple configurations match a message, only
   * the first matching configuration is used. If you try to publish a device telemetry event using
   * MQTT without specifying a Cloud Pub/Sub topic for the device's registry, the connection closes
   * automatically. If you try to do so using an HTTP connection, an error is returned. Up to 10
   * configurations may be provided.
   * @param eventNotificationConfigs eventNotificationConfigs or {@code null} for none
   */
  public DeviceRegistry setEventNotificationConfigs(java.util.List<EventNotificationConfig> eventNotificationConfigs) {
    this.eventNotificationConfigs = eventNotificationConfigs;
    return this;
  }

  /**
   * The DeviceService (HTTP) configuration for this device registry.
   * @return value or {@code null} for none
   */
  public HttpConfig getHttpConfig() {
    return httpConfig;
  }

  /**
   * The DeviceService (HTTP) configuration for this device registry.
   * @param httpConfig httpConfig or {@code null} for none
   */
  public DeviceRegistry setHttpConfig(HttpConfig httpConfig) {
    this.httpConfig = httpConfig;
    return this;
  }

  /**
   * The identifier of this device registry. For example, `myRegistry`.
   * @return value or {@code null} for none
   */
  public java.lang.String getId() {
    return id;
  }

  /**
   * The identifier of this device registry. For example, `myRegistry`.
   * @param id id or {@code null} for none
   */
  public DeviceRegistry setId(java.lang.String id) {
    this.id = id;
    return this;
  }

  /**
   * **Beta Feature**
   *
   * The default logging verbosity for activity from devices in this registry. The verbosity level
   * can be overridden by Device.log_level.
   * @return value or {@code null} for none
   */
  public java.lang.String getLogLevel() {
    return logLevel;
  }

  /**
   * **Beta Feature**
   *
   * The default logging verbosity for activity from devices in this registry. The verbosity level
   * can be overridden by Device.log_level.
   * @param logLevel logLevel or {@code null} for none
   */
  public DeviceRegistry setLogLevel(java.lang.String logLevel) {
    this.logLevel = logLevel;
    return this;
  }

  /**
   * The MQTT configuration for this device registry.
   * @return value or {@code null} for none
   */
  public MqttConfig getMqttConfig() {
    return mqttConfig;
  }

  /**
   * The MQTT configuration for this device registry.
   * @param mqttConfig mqttConfig or {@code null} for none
   */
  public DeviceRegistry setMqttConfig(MqttConfig mqttConfig) {
    this.mqttConfig = mqttConfig;
    return this;
  }

  /**
   * The resource path name. For example, `projects/example-project/locations/us-central1/registries
   * /my-registry`.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * The resource path name. For example, `projects/example-project/locations/us-central1/registries
   * /my-registry`.
   * @param name name or {@code null} for none
   */
  public DeviceRegistry setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * The configuration for notification of new states received from the device. State updates are
   * guaranteed to be stored in the state history, but notifications to Cloud Pub/Sub are not
   * guaranteed. For example, if permissions are misconfigured or the specified topic doesn't exist,
   * no notification will be published but the state will still be stored in Cloud IoT Core.
   * @return value or {@code null} for none
   */
  public StateNotificationConfig getStateNotificationConfig() {
    return stateNotificationConfig;
  }

  /**
   * The configuration for notification of new states received from the device. State updates are
   * guaranteed to be stored in the state history, but notifications to Cloud Pub/Sub are not
   * guaranteed. For example, if permissions are misconfigured or the specified topic doesn't exist,
   * no notification will be published but the state will still be stored in Cloud IoT Core.
   * @param stateNotificationConfig stateNotificationConfig or {@code null} for none
   */
  public DeviceRegistry setStateNotificationConfig(StateNotificationConfig stateNotificationConfig) {
    this.stateNotificationConfig = stateNotificationConfig;
    return this;
  }

  @Override
  public DeviceRegistry set(String fieldName, Object value) {
    return (DeviceRegistry) super.set(fieldName, value);
  }

  @Override
  public DeviceRegistry clone() {
    return (DeviceRegistry) super.clone();
  }

}
