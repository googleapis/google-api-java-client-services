/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Used by the Smarthome Business Rules twiddler to determine whether to replace the top-scoring
 * Smarthome intent with another.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AssistantPfrSmartHomeIntentMetadata extends com.google.api.client.json.GenericJson {

  /**
   * Each DeviceRdMetadata represents one device RD (device slot) in the intent. Note that each
   * device RD could have multiple device groundings inside of it.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<AssistantPfrDeviceRdMetadata> deviceRdMetadata;

  static {
    // hack to force ProGuard to consider AssistantPfrDeviceRdMetadata used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(AssistantPfrDeviceRdMetadata.class);
  }

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String intentName;

  /**
   * When num_constraints == num_constraints_satisfied, indicating all slot matchings are exact
   * match.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean isExactMatch;

  /**
   * When num_grounded_args > 0, indicating there is at least one top-level argument is grounded.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean isGrounded;

  /**
   * Each DeviceRdMetadata represents one device RD (device slot) in the intent. Note that each
   * device RD could have multiple device groundings inside of it.
   * @return value or {@code null} for none
   */
  public java.util.List<AssistantPfrDeviceRdMetadata> getDeviceRdMetadata() {
    return deviceRdMetadata;
  }

  /**
   * Each DeviceRdMetadata represents one device RD (device slot) in the intent. Note that each
   * device RD could have multiple device groundings inside of it.
   * @param deviceRdMetadata deviceRdMetadata or {@code null} for none
   */
  public AssistantPfrSmartHomeIntentMetadata setDeviceRdMetadata(java.util.List<AssistantPfrDeviceRdMetadata> deviceRdMetadata) {
    this.deviceRdMetadata = deviceRdMetadata;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getIntentName() {
    return intentName;
  }

  /**
   * @param intentName intentName or {@code null} for none
   */
  public AssistantPfrSmartHomeIntentMetadata setIntentName(java.lang.String intentName) {
    this.intentName = intentName;
    return this;
  }

  /**
   * When num_constraints == num_constraints_satisfied, indicating all slot matchings are exact
   * match.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIsExactMatch() {
    return isExactMatch;
  }

  /**
   * When num_constraints == num_constraints_satisfied, indicating all slot matchings are exact
   * match.
   * @param isExactMatch isExactMatch or {@code null} for none
   */
  public AssistantPfrSmartHomeIntentMetadata setIsExactMatch(java.lang.Boolean isExactMatch) {
    this.isExactMatch = isExactMatch;
    return this;
  }

  /**
   * When num_grounded_args > 0, indicating there is at least one top-level argument is grounded.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIsGrounded() {
    return isGrounded;
  }

  /**
   * When num_grounded_args > 0, indicating there is at least one top-level argument is grounded.
   * @param isGrounded isGrounded or {@code null} for none
   */
  public AssistantPfrSmartHomeIntentMetadata setIsGrounded(java.lang.Boolean isGrounded) {
    this.isGrounded = isGrounded;
    return this;
  }

  @Override
  public AssistantPfrSmartHomeIntentMetadata set(String fieldName, Object value) {
    return (AssistantPfrSmartHomeIntentMetadata) super.set(fieldName, value);
  }

  @Override
  public AssistantPfrSmartHomeIntentMetadata clone() {
    return (AssistantPfrSmartHomeIntentMetadata) super.clone();
  }

}
