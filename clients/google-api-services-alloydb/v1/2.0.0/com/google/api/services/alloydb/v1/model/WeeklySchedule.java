/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.alloydb.v1.model;

/**
 * A weekly schedule starts a backup at prescribed start times within a day, for the specified days
 * of the week. The weekly schedule message is flexible and can be used to create many types of
 * schedules. For example, to have a daily backup that starts at 22:00, configure the `start_times`
 * field to have one element "22:00" and the `days_of_week` field to have all seven days of the
 * week.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the AlloyDB API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class WeeklySchedule extends com.google.api.client.json.GenericJson {

  /**
   * The days of the week to perform a backup. If this field is left empty, the default of every day
   * of the week is used.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> daysOfWeek;

  /**
   * The times during the day to start a backup. The start times are assumed to be in UTC and to be
   * an exact hour (e.g., 04:00:00). If no start times are provided, a single fixed start time is
   * chosen arbitrarily.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GoogleTypeTimeOfDay> startTimes;

  static {
    // hack to force ProGuard to consider GoogleTypeTimeOfDay used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(GoogleTypeTimeOfDay.class);
  }

  /**
   * The days of the week to perform a backup. If this field is left empty, the default of every day
   * of the week is used.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getDaysOfWeek() {
    return daysOfWeek;
  }

  /**
   * The days of the week to perform a backup. If this field is left empty, the default of every day
   * of the week is used.
   * @param daysOfWeek daysOfWeek or {@code null} for none
   */
  public WeeklySchedule setDaysOfWeek(java.util.List<java.lang.String> daysOfWeek) {
    this.daysOfWeek = daysOfWeek;
    return this;
  }

  /**
   * The times during the day to start a backup. The start times are assumed to be in UTC and to be
   * an exact hour (e.g., 04:00:00). If no start times are provided, a single fixed start time is
   * chosen arbitrarily.
   * @return value or {@code null} for none
   */
  public java.util.List<GoogleTypeTimeOfDay> getStartTimes() {
    return startTimes;
  }

  /**
   * The times during the day to start a backup. The start times are assumed to be in UTC and to be
   * an exact hour (e.g., 04:00:00). If no start times are provided, a single fixed start time is
   * chosen arbitrarily.
   * @param startTimes startTimes or {@code null} for none
   */
  public WeeklySchedule setStartTimes(java.util.List<GoogleTypeTimeOfDay> startTimes) {
    this.startTimes = startTimes;
    return this;
  }

  @Override
  public WeeklySchedule set(String fieldName, Object value) {
    return (WeeklySchedule) super.set(fieldName, value);
  }

  @Override
  public WeeklySchedule clone() {
    return (WeeklySchedule) super.clone();
  }

}
